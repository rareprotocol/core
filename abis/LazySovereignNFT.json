{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "ContractDisabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        }
      ],
      "name": "MetadataLocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        }
      ],
      "name": "MetadataUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "numberOfTokens",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        }
      ],
      "name": "PrepareMint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "metadataUri",
          "type": "string"
        }
      ],
      "name": "TokenURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "deleteToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disableContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyReceiver",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMintConfig",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "numberOfTokens",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "baseURI",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "lockedMetadata",
              "type": "bool"
            }
          ],
          "internalType": "struct LazySovereignNFT.MintConfig",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_creator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_maxTokens",
          "type": "uint256"
        }
      ],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isApprovedMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "mintTo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_numberOfTokens",
          "type": "uint256"
        }
      ],
      "name": "prepareMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_numberOfTokens",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_minter",
          "type": "address"
        }
      ],
      "name": "prepareMintWithMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "setDefaultRoyaltyReceiver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_minter",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isMinter",
          "type": "bool"
        }
      ],
      "name": "setMinterApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "setRoyaltyReceiverForToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenCreator",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        }
      ],
      "name": "updateBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_metadataUri",
          "type": "string"
        }
      ],
      "name": "updateTokenURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6080806040523461001657612a3d908161001c8239f35b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c90816301ffc9a71461194c5750806306fdde03146118a2578063081812fc14611882578063095ea7b3146117125780630de54ba0146116c357806318160ddd146116a357806318e97fd11461149157806323b872dd1461146c5780632a55205a146113da5780633403c4e9146113b15780633a3d146f146113725780633ebc82c51461133057806340c1a0641461130657806342842e0e146112d257806342966c68146112b557806353df5c7c146112535780635edc7c1914610d485780636297c16c14610ccc5780636352211e14610c9b57806370a0823114610c05578063715018a614610ba8578063755edd1714610964578063894ba833146109165780638da5cb5b146108ed578063931688cb1461071d5780639338bb5d1461068457806395d89b411461059f578063a22cb465146104de578063ab69607a146104bf578063b390ac2514610485578063b88d4fde146103fa578063b9fbd25c14610378578063c87b56dd1461033d578063e83157421461031d578063e985e9c5146102cf578063ee070805146102ac578063efc32cd4146102595763f2fde38b146101c557600080fd5b34610255576020366003190112610255576101de611a31565b916101e7611bcd565b6001600160a01b03831615610203578361020084611c25565b80f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b5050346102a857806003193601126102a857610273611a31565b9061027c611bcd565b602435835260fd602052822080546001600160a01b0319166001600160a01b0390921691909117905580f35b5080fd5b5050346102a857816003193601126102a85760209060ff80541690519015158152f35b5050346102a857806003193601126102a85760ff816020936102ef611a31565b6102f7611a62565b6001600160a01b039182168352609c875283832091168252855220549151911615158152f35b5050346102a857816003193601126102a857602090610100549051908152f35b509134610375576020366003190112610375575061035e6103719235612422565b9051918291602083526020830190611a0c565b0390f35b80fd5b503461025557606036600319011261025557803567ffffffffffffffff81116103f6576103d5916103ab91369101611aa7565b91906103b5611a4c565b926103be611bcd565b6103cc60ff805416156123ae565b602435916127ae565b6001600160a01b031682526101026020528120805460ff1916600117905580f35b8380fd5b8382346102a85760803660031901126102a857610415611a31565b9061041e611a62565b916044356064359367ffffffffffffffff851161048157366023860112156104815761045961047c9486602461020098369301359101611b96565b9261046c6104678433611ed6565b611dfd565b610477838383611f9e565b6121cb565b611eb2565b8580fd5b509034610255573660031901126102a857803567ffffffffffffffff811161025557610200916104b791369101611aa7565b6103be611bcd565b5050346102a857816003193601126102a85760209060fc549051908152f35b509034610255576104ee36611a78565b6001600160a01b039091169290919033841461055d5750338452609c60205280842083855260205261052e828286209060ff801983541691151516179055565b5190151581527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b6020606492519162461bcd60e51b8352820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152fd5b5050346102a857816003193601126102a857805190826098546105c181611ce0565b8085529160019180831690811561065c57506001146105ff575b5050506105ed82610371940383611b58565b51918291602083526020830190611a0c565b9450609885527f2237a976fa961f5921fd19f2b03c925c725d77b20ce8f790c19709c03de4d8145b828610610644575050506105ed82602061037195820101946105db565b80546020878701810191909152909501948101610627565b6103719750869350602092506105ed94915060ff191682840152151560051b820101946105db565b8284346103755780600319360112610375578180516106a281611b0a565b82815260606020820152015280516106b981611b0a565b6101055481528151916106d6836106cf81611d1a565b0384611b58565b6020820192835261071060ff6101075416918084019215158352606081519586956020875251602087015251918501526080840190611a0c565b9051151560608301520390f35b508290346102a8576020806003193601126102555767ffffffffffffffff9082358281116108e9576107529036908501611aa7565b93909261075d611bcd565b60ff610107541661089d57841161088a575061010690610786846107818454611ce0565b61234e565b8490601f85116001146107f35750946107e2918486977f1c306e70c05992619e2128ad1ef88df75f36c9476282e59f51401b2abaa42e4e97916107e8575b508560011b906000198760031b1c19161790555b51928392836123fa565b0390a180f35b9050840135886107c4565b90601f1985168387526000805160206129e88339815191529287905b828210610872575050916107e29391867f1c306e70c05992619e2128ad1ef88df75f36c9476282e59f51401b2abaa42e4e98999410610858575b5050600185811b0190556107d8565b850135600019600388901b60f8161c191690558780610849565b80600185968294968a0135815501950193019061080f565b634e487b7160e01b855260419052602484fd5b5060849186519162461bcd60e51b8352820152602160248201527f757064617465426173655552493a3a6d65746164617461206973206c6f636b656044820152601960fa1b6064820152fd5b8480fd5b5050346102a857816003193601126102a85760335490516001600160a01b039091168152602090f35b833461037557806003193601126103755761092f611bcd565b600160ff1960ff54161760ff55337f793bc6423dd0257d64f9d47db72fd4b2162f4541aa41740ba1c5fb5e2cd41bcd8280a280f35b509190346102a8576020928360031936011261025557610982611a31565b9261099160ff805416156123ae565b6033546001600160a01b039190821633148015610b93575b15610b375760fc548260fb541692610104966001885401809855610100548811610af6578651916109d983611b3c565b8483528116958615610ab5575061047c8794939289610a9893610a1a610a1483600052609960205260018060a01b0360406000205416151590565b15612762565b600082815260996020526040902054610a3d906001600160a01b03161515610a14565b898752609a8d528787206001815401905581875260998d52818888209a6001600160601b0360a01b9b818d825416179055887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a46120af565b86825260fe88528282205560fd8752209182541617905551908152f35b6064908a808a519262461bcd60e51b845283015260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152fd5b6064868a808a519262461bcd60e51b845283015260248201527f5f637265617465546f6b656e3a3a6578636565646564206d6178546f6b656e736044820152fd5b835162461bcd60e51b8152808401879052603060248201527f6c617a794d696e743a3a6f6e6c79206f776e6572206f7220617070726f76656460448201526f081b5a5b9d195c8818d85b881b5a5b9d60821b6064820152608490fd5b50338152610102865260ff84822054166109a9565b8334610375578060031936011261037557610bc1611bcd565b603380546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b508290346102a85760203660031901126102a8576001600160a01b03610c29611a31565b16908115610c46576020848085858152609a845220549051908152f35b608490602085519162461bcd60e51b8352820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152fd5b5091346103755760203660031901126103755750610cbb60209235611cba565b90516001600160a01b039091168152f35b503461025557602036600319011261025557803591610cea83611cba565b336001600160a01b0390911603610d05578361020084612256565b906020606492519162461bcd60e51b8352820152601f60248201527f4d75737420626520746865206f776e6572206f662074686520746f6b656e2e006044820152fd5b508290346102a85760803660031901126102a85767ffffffffffffffff9281358481116103f657610d7c9036908401611aa7565b929060243586811161048157610d959036908401611aa7565b610da0979197611a4c565b9387549860ff94858b60081c16159889809a611247575b8015611231575b156111d75760ff19808d1660019081178d559b9c999a998a6111c6575b506001600160a01b038916156111835791610e2e91610e1e898f610e369796600a60fc558254168255606435610100555460081c16610e19816122ee565b6122ee565b610e2733611c25565b3691611b96565b933691611b96565b90610e4a858b5460081c16610e19816122ee565b82518481116111705780610e5f609754611ce0565b94601f958681116110ff575b506020908d8784116001146110805792611075575b5050600019600383901b1c1916908a1b176097555b81519384116110625750610eaa609854611ce0565b828111610fff575b506020918311600114610f73579180610f27959492610eff948b92610f68575b5050600019600383901b1c191690881b176098555b875460081c16610ef6816122ee565b610e19816122ee565b60fb80546001600160a01b0319166001600160a01b038316179055610f22611bcd565b611c25565b610f2f578280f35b825461ff0019168355519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a181808280f35b015190508a80610ed2565b609889528792917f2237a976fa961f5921fd19f2b03c925c725d77b20ce8f790c19709c03de4d81491601f1984168b5b818110610fe7575091610eff95939185610f279998969410610fce575b505050811b01609855610ee7565b015160001960f88460031b161c191690558a8080610fc0565b8284015185558b969094019360209384019301610fa3565b60988a527f2237a976fa961f5921fd19f2b03c925c725d77b20ce8f790c19709c03de4d8148380860160051c82019260208710611059575b0160051c019089905b82811061104e575050610eb2565b8b8155018990611040565b92508192611037565b634e487b7160e01b8a5260419052602489fd5b015190508c80610e80565b91908d9450601f198416609784527f354a83ed9988f79f6038d4c7a7dadbad8af32f4ad6df893e0e5807a1b1944ff9935b8181106110e7575084116110ce575b505050811b01609755610e95565b015160001960f88460031b161c191690558c80806110c0565b8284015185558f9690940193602093840193016110b1565b90915060978d527f354a83ed9988f79f6038d4c7a7dadbad8af32f4ad6df893e0e5807a1b1944ff98680850160051c82019260208610611167575b859493910160051c909101908d908f5b83821061115957505050610e6b565b81558594508e91018f61114a565b9250819261113a565b634e487b7160e01b8b526041825260248bfd5b8a5162461bcd60e51b8152602081870152601e60248201527f63726561746f722063616e6e6f74206265206e756c6c206164647265737300006044820152606490fd5b61ffff1916610101178d558d610ddb565b885162461bcd60e51b8152602081860152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b158015610dbe57506001878d1614610dbe565b506001878d1610610db7565b5050346102a857816003193601126102a8577fb634b0cb94234b05eabb1438717e0e645bfd84788ae1263682242327563cde5e9061128f611bcd565b5160208152806112a160208201611d1a565b0390a1610107805460ff1916600117905580f35b8382346102a85760203660031901126102a8576102009035612256565b5050346102a85761047c610200916112e936611ad5565b919251926112f684611b3c565b86845261046c6104678433611ed6565b5050346102a85760203660031901126102a85760335490516001600160a01b039091168152602090f35b83346103755760203660031901126103755761020061134d611a31565b611355611bcd565b60018060a01b03166001600160601b0360a01b60fb54161760fb55565b5050346102a85760203660031901126102a85760209160ff9082906001600160a01b0361139d611a31565b168152610102855220541690519015158152f35b5050346102a857816003193601126102a85760fb5490516001600160a01b039091168152602090f35b5091346103755781600319360112610375578235815260fd60205281812054602435906001600160a01b03908116801561146057925b60fe60205284812054801561145657925b8381029381850414901517156114435750835192168252606490046020820152f35b634e487b7160e01b815260118652602490fd5b5060fc5492611421565b508060fb541692611410565b83346103755761020061147e36611ad5565b9161148c6104678433611ed6565b611f9e565b508290346102a857826003193601126102a85780359067ffffffffffffffff906024358281116108e9576114c89036908301611aa7565b9290916114d3611bcd565b60ff610107541661165557848652602090610103825287872092851161164257506114fe8254611ce0565b601f81116115ff575b508590601f8511600114611574575095611563918487987f931f495b9a8e5d8e61946ea5d61e021f636cfe213a801f97589c18c152e408bd97989161156957508560011b906000198760031b1c191617905551928392836123fa565b0390a280f35b9050840135896107c4565b90601f1985168388528288209288905b8282106115e7575050916115639391867f931f495b9a8e5d8e61946ea5d61e021f636cfe213a801f97589c18c152e408bd98999a94106115cd575050600185811b0190556107d8565b850135600019600388901b60f8161c191690558880610849565b80600185968294968a01358155019501930190611584565b828752818720601f860160051c810191838710611638575b601f0160051c01905b81811061162d5750611507565b878155600101611620565b9091508190611617565b634e487b7160e01b875260419052602486fd5b608490602088519162461bcd60e51b8352820152602260248201527f757064617465546f6b656e5552493a3a6d65746164617461206973206c6f636b604482015261195960f21b6064820152fd5b5050346102a857816003193601126102a857602090610104549051908152f35b5050346102a857610200906116d736611a78565b91906116e1611bcd565b6116ef60ff805416156123ae565b60018060a01b0316845261010260205283209060ff801983541691151516179055565b503461025557816003193601126102555761172b611a31565b6024359290916001600160a01b039190828061174687611cba565b1694169380851461183557803314908115611816575b50156117ae5750838552609b602052842080546001600160a01b0319168317905561178683611cba565b167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b6020608492519162461bcd60e51b8352820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152fd5b90508652609c60205281862033875260205260ff82872054163861175c565b506020608492519162461bcd60e51b8352820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152fd5b5091346103755760203660031901126103755750610cbb60209235611dbf565b5050346102a857816003193601126102a857805190826097546118c481611ce0565b8085529160019180831690811561065c57506001146118ef575050506105ed82610371940383611b58565b9450609785527f354a83ed9988f79f6038d4c7a7dadbad8af32f4ad6df893e0e5807a1b1944ff95b828610611934575050506105ed82602061037195820101946105db565b80546020878701810191909152909501948101611917565b92505034610255576020366003190112610255573563ffffffff60e01b8116908181036103f65760209350631030681960e21b82149182156119d8575b82156119af575b50811561199f575b5015158152f35b6119a9915061271e565b38611998565b90915063152a902d60e11b1480156119c9575b9038611990565b506119d38161271e565b6119c2565b6301ffc9a760e01b81149250611989565b60005b8381106119fc5750506000910152565b81810151838201526020016119ec565b90602091611a25815180928185528580860191016119e9565b601f01601f1916010190565b600435906001600160a01b0382168203611a4757565b600080fd5b604435906001600160a01b0382168203611a4757565b602435906001600160a01b0382168203611a4757565b6040906003190112611a47576004356001600160a01b0381168103611a4757906024358015158103611a475790565b9181601f84011215611a475782359167ffffffffffffffff8311611a475760208381860195010111611a4757565b6060906003190112611a47576001600160a01b03906004358281168103611a4757916024359081168103611a47579060443590565b6060810190811067ffffffffffffffff821117611b2657604052565b634e487b7160e01b600052604160045260246000fd5b6020810190811067ffffffffffffffff821117611b2657604052565b90601f8019910116810190811067ffffffffffffffff821117611b2657604052565b67ffffffffffffffff8111611b2657601f01601f191660200190565b929192611ba282611b7a565b91611bb06040519384611b58565b829481845281830111611a47578281602093846000960137010152565b6033546001600160a01b03163303611be157565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b603380546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b15611c7557565b60405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606490fd5b6000908152609960205260409020546001600160a01b0316611cdd811515611c6e565b90565b90600182811c92168015611d10575b6020831014611cfa57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611cef565b90600091610106908154611d2d81611ce0565b80835292600191808316908115611d9a5750600114611d4d575b50505050565b90929394506000526000805160206129e8833981519152916000925b848410611d825750506020925001019038808080611d47565b80546020858501810191909152909301928101611d69565b92505050602093945060ff929192191683830152151560051b01019038808080611d47565b600081815260996020526040902054611de2906001600160a01b03161515611c6e565b6000908152609b60205260409020546001600160a01b031690565b15611e0457565b60405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608490fd5b60809060208152603260208201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60608201520190565b15611eb957565b60405162461bcd60e51b815280611ed260048201611e5f565b0390fd5b906001600160a01b038080611eea84611cba565b16931691838314938415611f1d575b508315611f07575b50505090565b611f1391929350611dbf565b1614388080611f01565b909350600052609c60205260406000208260005260205260ff604060002054169238611ef9565b15611f4b57565b60405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608490fd5b90611fc691611fac84611cba565b6001600160a01b0393918416928492909183168414611f44565b1691821561205e5781611fe391611fdc86611cba565b1614611f44565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6000848152609b602052604081206001600160601b0360a01b90818154169055838252609a6020526040822060001981540190558482526040822060018154019055858252609960205284604083209182541617905580a4565b60405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b9192600092909190803b156121c1576120fd946040518092630a85bd0160e11b9485835233600484015287602484015260448301526080606483015281878160209a8b966084830190611a0c565b03926001600160a01b03165af1849181612181575b50612170575050503d600014612168573d61212c81611b7a565b9061213a6040519283611b58565b81528091833d92013e5b805191826121655760405162461bcd60e51b815280611ed260048201611e5f565b01fd5b506060612144565b6001600160e01b0319161492509050565b9091508581813d83116121ba575b6121998183611b58565b810103126108e957516001600160e01b0319811681036108e9579038612112565b503d61218f565b5050915050600190565b9293600093909291803b1561224b579484916122259660405180948193630a85bd0160e11b9788845233600485015260018060a01b0380921660248501526044840152608060648401528260209b8c976084830190611a0c565b0393165af18491816121815750612170575050503d600014612168573d61212c81611b7a565b505050915050600190565b6122636104678233611ed6565b61226c81611cba565b5061227681611cba565b6000828152609b6020908152604080832080546001600160a01b03199081169091556001600160a01b03909416808452609a83528184208054600019019055858452609990925282208054909316909255907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8280a4565b156122f557565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b601f811161235a575050565b60009061010682526000805160206129e8833981519152906020601f850160051c830194106123a4575b601f0160051c01915b82811061239957505050565b81815560010161238d565b9092508290612384565b156123b557565b60405162461bcd60e51b815260206004820152601e60248201527f436f6e7472616374206d757374206e6f742062652064697361626c65642e00006044820152606490fd5b90918060409360208452816020850152848401376000828201840152601f01601f1916010190565b6000908082526101039060209082825260409261244184862054611ce0565b612676575092839281907a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008581811015612669575b50506d04ee2d6d415b85acef81000000008086101561265b575b50662386f26fc100008086101561264c575b506305f5e1008086101561263d575b506127108086101561262e575b50606485101561261e575b600a80951015612614575b600194858401968660216124fa6124e58b611b7a565b9a6124f287519c8d611b58565b808c52611b7a565b8a89019790601f19013689378a0101905b6125e5575b50505051948593826101069081549161252883611ce0565b928981169081156125c4575060011461257d575b50505050600693928261256964173539b7b760d91b93602f60f81b611cdd999652518093868401906119e9565b019182015203601919810184520182611b58565b815292935090916000805160206129e88339815191525b8282106125ae575050840101908281612569611cdd61253c565b8054898301850152889650908301908701612594565b60ff1916858a01525050508015150285010191508281612569611cdd61253c565b600019019082906f181899199a1a9b1b9c1cb0b131b232b360811b8282061a83530490878261250b5750612510565b91600101916124cf565b91936064600291049401916124c4565b600491939504940191386124b9565b600891939504940191386124ac565b6010919395049401913861249d565b84919395049401913861248b565b0494509150813880612471565b908493929352825280832090519283918181549061269382611ce0565b808652926001928084169081156126fa57506001146126bd575b50505050611cdd92500382611b58565b815285812095935091905b8183106126e2575050611cdd9350820101388080806126ad565b855487840185015294850194869450918301916126c8565b9350505050611cdd94925060ff191682840152151560051b820101388080806126ad565b63ffffffff60e01b166380ac58cd60e01b8114908115612751575b8115612743575090565b6301ffc9a760e01b14919050565b635b5e139f60e01b81149150612739565b1561276957565b60405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606490fd5b9291906101005482116129a3576101045461294457604051936127d085611b0a565b8285526127de368383611b96565b60209080828801526040870191600097888452516101055581519067ffffffffffffffff8211612930576101069261281a836107818654611ce0565b81601f841160011461289b57509082917f6f1d651e6e0c8f86bd32a20c22a644d1e34fabf72307ff95d51b9f5892ddba1998999a92612890575b50508160011b916000199060031b1c19161790555b5115156101079060ff8019835416911617905561288b604051928392836123fa565b0390a2565b015190503880612854565b848b5292996000805160206129e883398151915293601f198c1691905b82821061291857505091600193918b7f6f1d651e6e0c8f86bd32a20c22a644d1e34fabf72307ff95d51b9f5892ddba199a9b9c94106128ff575b505050811b019055612869565b015160001960f88460031b161c191690553880806128f2565b806001869782949787015181550196019401906128b8565b634e487b7160e01b89526041600452602489fd5b60405162461bcd60e51b815260206004820152603160248201527f5f707265706172654d696e743a3a63616e206f6e6c792070726570617265206d604482015270696e742077697468203020746f6b656e7360781b6064820152608490fd5b606460405162461bcd60e51b815260206004820152602060248201527f5f707265706172654d696e743a3a6578636565646564206d6178546f6b656e736044820152fdfec9ef9fceea91e87b2c84ea400a44fde78842aae8aa24cd4b502ce5fb4d91e63ba264697066735822122083fb0250c67ec5e0a44bcc829488c3a8af5c1f6a1d23f276998b41c14f58284764736f6c63430008120033",
    "sourceMap": "842:12360:206:-:0;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604081815260048036101561001557600080fd5b600092833560e01c90816301ffc9a71461194c5750806306fdde03146118a2578063081812fc14611882578063095ea7b3146117125780630de54ba0146116c357806318160ddd146116a357806318e97fd11461149157806323b872dd1461146c5780632a55205a146113da5780633403c4e9146113b15780633a3d146f146113725780633ebc82c51461133057806340c1a0641461130657806342842e0e146112d257806342966c68146112b557806353df5c7c146112535780635edc7c1914610d485780636297c16c14610ccc5780636352211e14610c9b57806370a0823114610c05578063715018a614610ba8578063755edd1714610964578063894ba833146109165780638da5cb5b146108ed578063931688cb1461071d5780639338bb5d1461068457806395d89b411461059f578063a22cb465146104de578063ab69607a146104bf578063b390ac2514610485578063b88d4fde146103fa578063b9fbd25c14610378578063c87b56dd1461033d578063e83157421461031d578063e985e9c5146102cf578063ee070805146102ac578063efc32cd4146102595763f2fde38b146101c557600080fd5b34610255576020366003190112610255576101de611a31565b916101e7611bcd565b6001600160a01b03831615610203578361020084611c25565b80f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b5050346102a857806003193601126102a857610273611a31565b9061027c611bcd565b602435835260fd602052822080546001600160a01b0319166001600160a01b0390921691909117905580f35b5080fd5b5050346102a857816003193601126102a85760209060ff80541690519015158152f35b5050346102a857806003193601126102a85760ff816020936102ef611a31565b6102f7611a62565b6001600160a01b039182168352609c875283832091168252855220549151911615158152f35b5050346102a857816003193601126102a857602090610100549051908152f35b509134610375576020366003190112610375575061035e6103719235612422565b9051918291602083526020830190611a0c565b0390f35b80fd5b503461025557606036600319011261025557803567ffffffffffffffff81116103f6576103d5916103ab91369101611aa7565b91906103b5611a4c565b926103be611bcd565b6103cc60ff805416156123ae565b602435916127ae565b6001600160a01b031682526101026020528120805460ff1916600117905580f35b8380fd5b8382346102a85760803660031901126102a857610415611a31565b9061041e611a62565b916044356064359367ffffffffffffffff851161048157366023860112156104815761045961047c9486602461020098369301359101611b96565b9261046c6104678433611ed6565b611dfd565b610477838383611f9e565b6121cb565b611eb2565b8580fd5b509034610255573660031901126102a857803567ffffffffffffffff811161025557610200916104b791369101611aa7565b6103be611bcd565b5050346102a857816003193601126102a85760209060fc549051908152f35b509034610255576104ee36611a78565b6001600160a01b039091169290919033841461055d5750338452609c60205280842083855260205261052e828286209060ff801983541691151516179055565b5190151581527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b6020606492519162461bcd60e51b8352820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152fd5b5050346102a857816003193601126102a857805190826098546105c181611ce0565b8085529160019180831690811561065c57506001146105ff575b5050506105ed82610371940383611b58565b51918291602083526020830190611a0c565b9450609885527f2237a976fa961f5921fd19f2b03c925c725d77b20ce8f790c19709c03de4d8145b828610610644575050506105ed82602061037195820101946105db565b80546020878701810191909152909501948101610627565b6103719750869350602092506105ed94915060ff191682840152151560051b820101946105db565b8284346103755780600319360112610375578180516106a281611b0a565b82815260606020820152015280516106b981611b0a565b6101055481528151916106d6836106cf81611d1a565b0384611b58565b6020820192835261071060ff6101075416918084019215158352606081519586956020875251602087015251918501526080840190611a0c565b9051151560608301520390f35b508290346102a8576020806003193601126102555767ffffffffffffffff9082358281116108e9576107529036908501611aa7565b93909261075d611bcd565b60ff610107541661089d57841161088a575061010690610786846107818454611ce0565b61234e565b8490601f85116001146107f35750946107e2918486977f1c306e70c05992619e2128ad1ef88df75f36c9476282e59f51401b2abaa42e4e97916107e8575b508560011b906000198760031b1c19161790555b51928392836123fa565b0390a180f35b9050840135886107c4565b90601f1985168387526000805160206129e88339815191529287905b828210610872575050916107e29391867f1c306e70c05992619e2128ad1ef88df75f36c9476282e59f51401b2abaa42e4e98999410610858575b5050600185811b0190556107d8565b850135600019600388901b60f8161c191690558780610849565b80600185968294968a0135815501950193019061080f565b634e487b7160e01b855260419052602484fd5b5060849186519162461bcd60e51b8352820152602160248201527f757064617465426173655552493a3a6d65746164617461206973206c6f636b656044820152601960fa1b6064820152fd5b8480fd5b5050346102a857816003193601126102a85760335490516001600160a01b039091168152602090f35b833461037557806003193601126103755761092f611bcd565b600160ff1960ff54161760ff55337f793bc6423dd0257d64f9d47db72fd4b2162f4541aa41740ba1c5fb5e2cd41bcd8280a280f35b509190346102a8576020928360031936011261025557610982611a31565b9261099160ff805416156123ae565b6033546001600160a01b039190821633148015610b93575b15610b375760fc548260fb541692610104966001885401809855610100548811610af6578651916109d983611b3c565b8483528116958615610ab5575061047c8794939289610a9893610a1a610a1483600052609960205260018060a01b0360406000205416151590565b15612762565b600082815260996020526040902054610a3d906001600160a01b03161515610a14565b898752609a8d528787206001815401905581875260998d52818888209a6001600160601b0360a01b9b818d825416179055887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a46120af565b86825260fe88528282205560fd8752209182541617905551908152f35b6064908a808a519262461bcd60e51b845283015260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152fd5b6064868a808a519262461bcd60e51b845283015260248201527f5f637265617465546f6b656e3a3a6578636565646564206d6178546f6b656e736044820152fd5b835162461bcd60e51b8152808401879052603060248201527f6c617a794d696e743a3a6f6e6c79206f776e6572206f7220617070726f76656460448201526f081b5a5b9d195c8818d85b881b5a5b9d60821b6064820152608490fd5b50338152610102865260ff84822054166109a9565b8334610375578060031936011261037557610bc1611bcd565b603380546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b508290346102a85760203660031901126102a8576001600160a01b03610c29611a31565b16908115610c46576020848085858152609a845220549051908152f35b608490602085519162461bcd60e51b8352820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152fd5b5091346103755760203660031901126103755750610cbb60209235611cba565b90516001600160a01b039091168152f35b503461025557602036600319011261025557803591610cea83611cba565b336001600160a01b0390911603610d05578361020084612256565b906020606492519162461bcd60e51b8352820152601f60248201527f4d75737420626520746865206f776e6572206f662074686520746f6b656e2e006044820152fd5b508290346102a85760803660031901126102a85767ffffffffffffffff9281358481116103f657610d7c9036908401611aa7565b929060243586811161048157610d959036908401611aa7565b610da0979197611a4c565b9387549860ff94858b60081c16159889809a611247575b8015611231575b156111d75760ff19808d1660019081178d559b9c999a998a6111c6575b506001600160a01b038916156111835791610e2e91610e1e898f610e369796600a60fc558254168255606435610100555460081c16610e19816122ee565b6122ee565b610e2733611c25565b3691611b96565b933691611b96565b90610e4a858b5460081c16610e19816122ee565b82518481116111705780610e5f609754611ce0565b94601f958681116110ff575b506020908d8784116001146110805792611075575b5050600019600383901b1c1916908a1b176097555b81519384116110625750610eaa609854611ce0565b828111610fff575b506020918311600114610f73579180610f27959492610eff948b92610f68575b5050600019600383901b1c191690881b176098555b875460081c16610ef6816122ee565b610e19816122ee565b60fb80546001600160a01b0319166001600160a01b038316179055610f22611bcd565b611c25565b610f2f578280f35b825461ff0019168355519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a181808280f35b015190508a80610ed2565b609889528792917f2237a976fa961f5921fd19f2b03c925c725d77b20ce8f790c19709c03de4d81491601f1984168b5b818110610fe7575091610eff95939185610f279998969410610fce575b505050811b01609855610ee7565b015160001960f88460031b161c191690558a8080610fc0565b8284015185558b969094019360209384019301610fa3565b60988a527f2237a976fa961f5921fd19f2b03c925c725d77b20ce8f790c19709c03de4d8148380860160051c82019260208710611059575b0160051c019089905b82811061104e575050610eb2565b8b8155018990611040565b92508192611037565b634e487b7160e01b8a5260419052602489fd5b015190508c80610e80565b91908d9450601f198416609784527f354a83ed9988f79f6038d4c7a7dadbad8af32f4ad6df893e0e5807a1b1944ff9935b8181106110e7575084116110ce575b505050811b01609755610e95565b015160001960f88460031b161c191690558c80806110c0565b8284015185558f9690940193602093840193016110b1565b90915060978d527f354a83ed9988f79f6038d4c7a7dadbad8af32f4ad6df893e0e5807a1b1944ff98680850160051c82019260208610611167575b859493910160051c909101908d908f5b83821061115957505050610e6b565b81558594508e91018f61114a565b9250819261113a565b634e487b7160e01b8b526041825260248bfd5b8a5162461bcd60e51b8152602081870152601e60248201527f63726561746f722063616e6e6f74206265206e756c6c206164647265737300006044820152606490fd5b61ffff1916610101178d558d610ddb565b885162461bcd60e51b8152602081860152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b158015610dbe57506001878d1614610dbe565b506001878d1610610db7565b5050346102a857816003193601126102a8577fb634b0cb94234b05eabb1438717e0e645bfd84788ae1263682242327563cde5e9061128f611bcd565b5160208152806112a160208201611d1a565b0390a1610107805460ff1916600117905580f35b8382346102a85760203660031901126102a8576102009035612256565b5050346102a85761047c610200916112e936611ad5565b919251926112f684611b3c565b86845261046c6104678433611ed6565b5050346102a85760203660031901126102a85760335490516001600160a01b039091168152602090f35b83346103755760203660031901126103755761020061134d611a31565b611355611bcd565b60018060a01b03166001600160601b0360a01b60fb54161760fb55565b5050346102a85760203660031901126102a85760209160ff9082906001600160a01b0361139d611a31565b168152610102855220541690519015158152f35b5050346102a857816003193601126102a85760fb5490516001600160a01b039091168152602090f35b5091346103755781600319360112610375578235815260fd60205281812054602435906001600160a01b03908116801561146057925b60fe60205284812054801561145657925b8381029381850414901517156114435750835192168252606490046020820152f35b634e487b7160e01b815260118652602490fd5b5060fc5492611421565b508060fb541692611410565b83346103755761020061147e36611ad5565b9161148c6104678433611ed6565b611f9e565b508290346102a857826003193601126102a85780359067ffffffffffffffff906024358281116108e9576114c89036908301611aa7565b9290916114d3611bcd565b60ff610107541661165557848652602090610103825287872092851161164257506114fe8254611ce0565b601f81116115ff575b508590601f8511600114611574575095611563918487987f931f495b9a8e5d8e61946ea5d61e021f636cfe213a801f97589c18c152e408bd97989161156957508560011b906000198760031b1c191617905551928392836123fa565b0390a280f35b9050840135896107c4565b90601f1985168388528288209288905b8282106115e7575050916115639391867f931f495b9a8e5d8e61946ea5d61e021f636cfe213a801f97589c18c152e408bd98999a94106115cd575050600185811b0190556107d8565b850135600019600388901b60f8161c191690558880610849565b80600185968294968a01358155019501930190611584565b828752818720601f860160051c810191838710611638575b601f0160051c01905b81811061162d5750611507565b878155600101611620565b9091508190611617565b634e487b7160e01b875260419052602486fd5b608490602088519162461bcd60e51b8352820152602260248201527f757064617465546f6b656e5552493a3a6d65746164617461206973206c6f636b604482015261195960f21b6064820152fd5b5050346102a857816003193601126102a857602090610104549051908152f35b5050346102a857610200906116d736611a78565b91906116e1611bcd565b6116ef60ff805416156123ae565b60018060a01b0316845261010260205283209060ff801983541691151516179055565b503461025557816003193601126102555761172b611a31565b6024359290916001600160a01b039190828061174687611cba565b1694169380851461183557803314908115611816575b50156117ae5750838552609b602052842080546001600160a01b0319168317905561178683611cba565b167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b6020608492519162461bcd60e51b8352820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152fd5b90508652609c60205281862033875260205260ff82872054163861175c565b506020608492519162461bcd60e51b8352820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152fd5b5091346103755760203660031901126103755750610cbb60209235611dbf565b5050346102a857816003193601126102a857805190826097546118c481611ce0565b8085529160019180831690811561065c57506001146118ef575050506105ed82610371940383611b58565b9450609785527f354a83ed9988f79f6038d4c7a7dadbad8af32f4ad6df893e0e5807a1b1944ff95b828610611934575050506105ed82602061037195820101946105db565b80546020878701810191909152909501948101611917565b92505034610255576020366003190112610255573563ffffffff60e01b8116908181036103f65760209350631030681960e21b82149182156119d8575b82156119af575b50811561199f575b5015158152f35b6119a9915061271e565b38611998565b90915063152a902d60e11b1480156119c9575b9038611990565b506119d38161271e565b6119c2565b6301ffc9a760e01b81149250611989565b60005b8381106119fc5750506000910152565b81810151838201526020016119ec565b90602091611a25815180928185528580860191016119e9565b601f01601f1916010190565b600435906001600160a01b0382168203611a4757565b600080fd5b604435906001600160a01b0382168203611a4757565b602435906001600160a01b0382168203611a4757565b6040906003190112611a47576004356001600160a01b0381168103611a4757906024358015158103611a475790565b9181601f84011215611a475782359167ffffffffffffffff8311611a475760208381860195010111611a4757565b6060906003190112611a47576001600160a01b03906004358281168103611a4757916024359081168103611a47579060443590565b6060810190811067ffffffffffffffff821117611b2657604052565b634e487b7160e01b600052604160045260246000fd5b6020810190811067ffffffffffffffff821117611b2657604052565b90601f8019910116810190811067ffffffffffffffff821117611b2657604052565b67ffffffffffffffff8111611b2657601f01601f191660200190565b929192611ba282611b7a565b91611bb06040519384611b58565b829481845281830111611a47578281602093846000960137010152565b6033546001600160a01b03163303611be157565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b603380546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b15611c7557565b60405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606490fd5b6000908152609960205260409020546001600160a01b0316611cdd811515611c6e565b90565b90600182811c92168015611d10575b6020831014611cfa57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611cef565b90600091610106908154611d2d81611ce0565b80835292600191808316908115611d9a5750600114611d4d575b50505050565b90929394506000526000805160206129e8833981519152916000925b848410611d825750506020925001019038808080611d47565b80546020858501810191909152909301928101611d69565b92505050602093945060ff929192191683830152151560051b01019038808080611d47565b600081815260996020526040902054611de2906001600160a01b03161515611c6e565b6000908152609b60205260409020546001600160a01b031690565b15611e0457565b60405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608490fd5b60809060208152603260208201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60608201520190565b15611eb957565b60405162461bcd60e51b815280611ed260048201611e5f565b0390fd5b906001600160a01b038080611eea84611cba565b16931691838314938415611f1d575b508315611f07575b50505090565b611f1391929350611dbf565b1614388080611f01565b909350600052609c60205260406000208260005260205260ff604060002054169238611ef9565b15611f4b57565b60405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608490fd5b90611fc691611fac84611cba565b6001600160a01b0393918416928492909183168414611f44565b1691821561205e5781611fe391611fdc86611cba565b1614611f44565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6000848152609b602052604081206001600160601b0360a01b90818154169055838252609a6020526040822060001981540190558482526040822060018154019055858252609960205284604083209182541617905580a4565b60405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b9192600092909190803b156121c1576120fd946040518092630a85bd0160e11b9485835233600484015287602484015260448301526080606483015281878160209a8b966084830190611a0c565b03926001600160a01b03165af1849181612181575b50612170575050503d600014612168573d61212c81611b7a565b9061213a6040519283611b58565b81528091833d92013e5b805191826121655760405162461bcd60e51b815280611ed260048201611e5f565b01fd5b506060612144565b6001600160e01b0319161492509050565b9091508581813d83116121ba575b6121998183611b58565b810103126108e957516001600160e01b0319811681036108e9579038612112565b503d61218f565b5050915050600190565b9293600093909291803b1561224b579484916122259660405180948193630a85bd0160e11b9788845233600485015260018060a01b0380921660248501526044840152608060648401528260209b8c976084830190611a0c565b0393165af18491816121815750612170575050503d600014612168573d61212c81611b7a565b505050915050600190565b6122636104678233611ed6565b61226c81611cba565b5061227681611cba565b6000828152609b6020908152604080832080546001600160a01b03199081169091556001600160a01b03909416808452609a83528184208054600019019055858452609990925282208054909316909255907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8280a4565b156122f557565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b601f811161235a575050565b60009061010682526000805160206129e8833981519152906020601f850160051c830194106123a4575b601f0160051c01915b82811061239957505050565b81815560010161238d565b9092508290612384565b156123b557565b60405162461bcd60e51b815260206004820152601e60248201527f436f6e7472616374206d757374206e6f742062652064697361626c65642e00006044820152606490fd5b90918060409360208452816020850152848401376000828201840152601f01601f1916010190565b6000908082526101039060209082825260409261244184862054611ce0565b612676575092839281907a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008581811015612669575b50506d04ee2d6d415b85acef81000000008086101561265b575b50662386f26fc100008086101561264c575b506305f5e1008086101561263d575b506127108086101561262e575b50606485101561261e575b600a80951015612614575b600194858401968660216124fa6124e58b611b7a565b9a6124f287519c8d611b58565b808c52611b7a565b8a89019790601f19013689378a0101905b6125e5575b50505051948593826101069081549161252883611ce0565b928981169081156125c4575060011461257d575b50505050600693928261256964173539b7b760d91b93602f60f81b611cdd999652518093868401906119e9565b019182015203601919810184520182611b58565b815292935090916000805160206129e88339815191525b8282106125ae575050840101908281612569611cdd61253c565b8054898301850152889650908301908701612594565b60ff1916858a01525050508015150285010191508281612569611cdd61253c565b600019019082906f181899199a1a9b1b9c1cb0b131b232b360811b8282061a83530490878261250b5750612510565b91600101916124cf565b91936064600291049401916124c4565b600491939504940191386124b9565b600891939504940191386124ac565b6010919395049401913861249d565b84919395049401913861248b565b0494509150813880612471565b908493929352825280832090519283918181549061269382611ce0565b808652926001928084169081156126fa57506001146126bd575b50505050611cdd92500382611b58565b815285812095935091905b8183106126e2575050611cdd9350820101388080806126ad565b855487840185015294850194869450918301916126c8565b9350505050611cdd94925060ff191682840152151560051b820101388080806126ad565b63ffffffff60e01b166380ac58cd60e01b8114908115612751575b8115612743575090565b6301ffc9a760e01b14919050565b635b5e139f60e01b81149150612739565b1561276957565b60405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606490fd5b9291906101005482116129a3576101045461294457604051936127d085611b0a565b8285526127de368383611b96565b60209080828801526040870191600097888452516101055581519067ffffffffffffffff8211612930576101069261281a836107818654611ce0565b81601f841160011461289b57509082917f6f1d651e6e0c8f86bd32a20c22a644d1e34fabf72307ff95d51b9f5892ddba1998999a92612890575b50508160011b916000199060031b1c19161790555b5115156101079060ff8019835416911617905561288b604051928392836123fa565b0390a2565b015190503880612854565b848b5292996000805160206129e883398151915293601f198c1691905b82821061291857505091600193918b7f6f1d651e6e0c8f86bd32a20c22a644d1e34fabf72307ff95d51b9f5892ddba199a9b9c94106128ff575b505050811b019055612869565b015160001960f88460031b161c191690553880806128f2565b806001869782949787015181550196019401906128b8565b634e487b7160e01b89526041600452602489fd5b60405162461bcd60e51b815260206004820152603160248201527f5f707265706172654d696e743a3a63616e206f6e6c792070726570617265206d604482015270696e742077697468203020746f6b656e7360781b6064820152608490fd5b606460405162461bcd60e51b815260206004820152602060248201527f5f707265706172654d696e743a3a6578636565646564206d6178546f6b656e736044820152fdfec9ef9fceea91e87b2c84ea400a44fde78842aae8aa24cd4b502ce5fb4d91e63ba264697066735822122083fb0250c67ec5e0a44bcc829488c3a8af5c1f6a1d23f276998b41c14f58284764736f6c63430008120033",
    "sourceMap": "842:12360:206:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;842:12360:206;;;;;;:::i;:::-;1303:62:39;;;:::i;:::-;-1:-1:-1;;;;;842:12360:206;;2402:22:39;842:12360:206;;2496:8:39;;;;:::i;:::-;842:12360:206;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;842:12360:206;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1303:62:39;;;:::i;:::-;842:12360:206;;;;7807:16;842:12360;;;;;;-1:-1:-1;;;;;;842:12360:206;-1:-1:-1;;;;;842:12360:206;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1780:20;842:12360;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;842:12360:206;;;;;4980:18:58;842:12360:206;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1858:24;842:12360;;;;;;;;;;;;;;;-1:-1:-1;;842:12360:206;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;842:12360:206;;;;;;;;;;;6019:15;842:12360;;;;;;;:::i;:::-;;;;;:::i;:::-;1303:62:39;;;:::i;:::-;4495:52:206;4504:8;842:12360;;;4503:9;4495:52;:::i;:::-;842:12360;;6019:15;;:::i;:::-;-1:-1:-1;;;;;842:12360:206;;;6045:15;842:12360;;;;;;-1:-1:-1;;842:12360:206;;;;;;;;;;;;;;;;;;;-1:-1:-1;;842:12360:206;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;6956:47:58;842:12360:206;;;6948:110:58;842:12360:206;;;;;;;;:::i;:::-;929:10:65;5783:99:58;5791:41;929:10:65;;5791:41:58;:::i;:::-;5783:99;:::i;:::-;6930:7;;;;;:::i;:::-;6956:47;:::i;:::-;6948:110;:::i;842:12360:206:-;;;;;;;;;;;-1:-1:-1;;842:12360:206;;;;;;;;;;;5488:15;842:12360;;;;;;;:::i;:::-;1303:62:39;;:::i;842:12360:206:-;;;;;;;;;;;;;;;;2453:24:214;842:12360:206;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;842:12360:206;;;;;;;929:10:65;13528:17:58;;842:12360:206;;929:10:65;;842:12360:206;;13585:18:58;842:12360:206;;;;;;;;;;13585:46:58;842:12360:206;;;;;;;;;;;;;;;;;;;13585:46:58;842:12360:206;;;;;;13646:41:58;842:12360:206;929:10:65;13646:41:58;;842:12360:206;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3182:7:58;842:12360:206;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;3182:7:58;842:12360:206;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;9923:10;842:12360;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1303:62:39;;;;;:::i;:::-;842:12360:206;8048:25;842:12360;;;;;;;;8143:18;;842:12360;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;8187:25;842:12360;;;;8187:25;842:12360;;;;;;;;;;;;;;;;;;;;;;;8187:25;;;;;:::i;:::-;;;;842:12360;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;842:12360:206;;;;;;;;;;;;8187:25;842:12360;;;8187:25;842:12360;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;842:12360:206;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;842:12360:206;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;842:12360:206;;;;;;;;;;;;;;;;;;;;;;;1513:6:39;842:12360:206;;;-1:-1:-1;;;;;842:12360:206;;;;;;;;;;;;;;;;;;;;;1303:62:39;;:::i;:::-;7165:4:206;842:12360;;;;;;;;7201:10;7184:28;;;;842:12360;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4495:52;4504:8;842:12360;;;4503:9;4495:52;:::i;:::-;1513:6:39;842:12360:206;-1:-1:-1;;;;;842:12360:206;;;;6391:10;:21;:52;;;;842:12360;;;;2453:24:214;842:12360:206;;2332:22:214;842:12360:206;;12147:14;;842:12360;;;;;;;;12254:9;842:12360;12243:20;;842:12360;;;;;;;;:::i;:::-;;;;;;9487:16:58;;;842:12360:206;;9559:16:58;8950:53;9559:16;;;;;8929:150;9559:16;9550:58;9559:16;;-1:-1:-1;842:12360:206;7266:7:58;842:12360:206;;;;;;;;-1:-1:-1;842:12360:206;;;7680:31:58;;7592:126;;9559:16;9558:17;9550:58;:::i;:::-;-1:-1:-1;842:12360:206;;;7266:7:58;842:12360:206;;;;;;9754:58:58;;-1:-1:-1;;;;;842:12360:206;7680:31:58;;9763:16;7592:126;9754:58;842:12360:206;;;10154:9:58;842:12360:206;;;;;;;;;;;;;;10193:7:58;842:12360:206;;;;;;;-1:-1:-1;;;;;842:12360:206;;;;;;;;;;;10230:33:58;;;;;8950:53;:::i;8929:150::-;842:12360:206;;;1794:18:214;842:12360:206;;;;;;1639:16:214;842:12360:206;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;842:12360:206;;;;;;;;;;;;;;;;;;-1:-1:-1;;;842:12360:206;;;;;;;6391:52;:10;;842:12360;;6416:15;842:12360;;4504:8;842:12360;;;;;6391:52;;842:12360;;;;;;;;;;;;;1303:62:39;;:::i;:::-;2758:6;842:12360:206;;-1:-1:-1;;;;;;842:12360:206;;;;;;;-1:-1:-1;;;;;842:12360:206;2806:40:39;842:12360:206;;2806:40:39;842:12360:206;;;;;;;;;;;-1:-1:-1;;842:12360:206;;;;-1:-1:-1;;;;;842:12360:206;;:::i;:::-;;2489:19:58;;;842:12360:206;;;;;;;;;2571:9:58;842:12360:206;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;842:12360:206;;;;;;;;;;;;;-1:-1:-1;;842:12360:206;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;842:12360:206;;;;;;;;;;;;;-1:-1:-1;;842:12360:206;;;;;;6897:17;;;;:::i;:::-;6918:10;-1:-1:-1;;;;;842:12360:206;;;6897:31;842:12360;;7000:8;;;;:::i;842:12360::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;842:12360:206;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;3301:14:45;3347:34;;;;;;842:12360:206;3346:108:45;;;;842:12360:206;;;;-1:-1:-1;;842:12360:206;;;;;;;;;;;;;;;3562:65:45;;842:12360:206;-1:-1:-1;;;;;;842:12360:206;;3821:22;842:12360;;;;;5366:69:45;842:12360:206;;;;;3917:2;2197:38:214;842:12360:206;;;;;;;;3956:22;842:12360;;;;;5366:69:45;;;:::i;:::-;;:::i;:::-;1195:12:39;929:10:65;1195:12:39;:::i;:::-;842:12360:206;;;:::i;:::-;;;;;:::i;:::-;;5366:69:45;842:12360:206;;;;;;5366:69:45;;;:::i;:::-;842:12360:206;;;;;;;;;1873:13:58;842:12360:206;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;842:12360:206;;;;;;;;;;;1873:13:58;842:12360:206;;;;;;;;;;;1896:17:58;842:12360:206;;:::i;:::-;;;;;;;;;;;;;;;;;;2496:8:39;842:12360:206;;;5366:69:45;842:12360:206;;;;;;-1:-1:-1;;;;842:12360:206;;;;;;;;;;;1896:17:58;842:12360:206;;;;;;;5366:69:45;;;:::i;:::-;;;;:::i;:::-;1492:34:214;842:12360:206;;-1:-1:-1;;;;;;842:12360:206;-1:-1:-1;;;;;842:12360:206;;;;;1303:62:39;;:::i;:::-;2496:8;:::i;:::-;3647:99:45;;842:12360:206;;;3647:99:45;842:12360:206;;-1:-1:-1;;842:12360:206;;;;;;;3721:14:45;;842:12360:206;;3721:14:45;3647:99;;842:12360:206;;;;;;;-1:-1:-1;842:12360:206;;;;;1896:17:58;842:12360:206;;;;;;;-1:-1:-1;;842:12360:206;;;;;;;;;;;5366:69:45;842:12360:206;;;;2496:8:39;842:12360:206;;;;;;;;;;;;;;1896:17:58;842:12360:206;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1896:17:58;842:12360:206;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;842:12360:206;;;;;;;;;;;;-1:-1:-1;842:12360:206;;;;;;;;;;;;;;1873:13:58;842:12360:206;;;;;;;;;;;;-1:-1:-1;842:12360:206;;;;;;;;;1873:13:58;842:12360:206;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1873:13:58;842:12360:206;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;842:12360:206;;;;;;;;;;;;;;-1:-1:-1;;;842:12360:206;;;;;;;;;;;-1:-1:-1;;;842:12360:206;;;;;;;;;;;;;;;;;;;;3562:65:45;-1:-1:-1;;842:12360:206;;;;;3562:65:45;;;842:12360:206;;;-1:-1:-1;;;842:12360:206;;;;;;;;;;;;;;;;;-1:-1:-1;;;842:12360:206;;;;;;;3346:108:45;3426:4;;1713:19:63;:23;3387:66:45;;3346:108;3387:66;842:12360:206;;;;;3436:17:45;3346:108;;3347:34;842:12360:206;;;;;3365:16:45;3347:34;;842:12360:206;;;;;;;;;;;;;;8808:34;1303:62:39;;;:::i;:::-;842:12360:206;;;;;;;;;;:::i;:::-;8808:34;;;8852:25;842:12360;;-1:-1:-1;;842:12360:206;8823:18;842:12360;;;;;;;;;;;;;-1:-1:-1;;842:12360:206;;;;;;;;:::i;:::-;;;;;;6956:47:58;6948:110;842:12360:206;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;5783:99:58;5791:41;929:10:65;;5791:41:58;:::i;842:12360:206:-;;;;;;;;-1:-1:-1;;842:12360:206;;;;1513:6:39;842:12360:206;;;-1:-1:-1;;;;;842:12360:206;;;;;;;;;;;;;;;-1:-1:-1;;842:12360:206;;;;7474:9;842:12360;;:::i;:::-;1303:62:39;;:::i;:::-;842:12360:206;;;;;;-1:-1:-1;;;;;842:12360:206;;1492:34:214;842:12360:206;;;1492:34:214;842:12360:206;1418:115:214;842:12360:206;;;;;;;;-1:-1:-1;;842:12360:206;;;;;;;;;;-1:-1:-1;;;;;842:12360:206;;:::i;:::-;;;;9370:15;842:12360;;;;;;;;;;;;;;;;;;;;;;;;;;;2332:22:214;842:12360:206;;;-1:-1:-1;;;;;842:12360:206;;;;;;;;;;;;;;;;;;;;;;;;;;1049:16:214;842:12360:206;;;;;;;;;-1:-1:-1;;;;;842:12360:206;;;1049:40:214;;842:12360:206;;1049:118:214;;1238:18;842:12360:206;;;;;;1238:33:214;;;;:131;;842:12360:206;;;;;;;;;;;;;;-1:-1:-1;842:12360:206;;;;;;1401:3:214;842:12360:206;;;;;;;;-1:-1:-1;;;842:12360:206;;;;;;;;1238:131:214;842:12360:206;1345:24:214;842:12360:206;1238:131:214;;;1049:118;842:12360:206;;1145:22:214;842:12360:206;;1049:118:214;;;842:12360:206;;;;;5365:7:58;842:12360:206;;;:::i;:::-;929:10:65;5235:99:58;5243:41;929:10:65;;5243:41:58;:::i;5235:99::-;5365:7;:::i;842:12360:206:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1303:62:39;;;;;:::i;:::-;842:12360:206;8478:25;842:12360;;;;;;;;;8574:10;842:12360;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8624:39;842:12360;;;;8624:39;842:12360;;;;;;;;;;;;;;;;;;;;;;8624:39;;;;;:::i;:::-;;;;842:12360;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8624:39;842:12360;;;8624:39;842:12360;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;842:12360:206;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;842:12360:206;;;;;-1:-1:-1;;;842:12360:206;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;842:12360:206;;;;;;;;;;;;;;;;;;;;;10869:14;842:12360;;;;;;;;;;;;;5050:36;842:12360;;;;:::i;:::-;1303:62:39;;;;:::i;:::-;4495:52:206;4504:8;842:12360;;;4503:9;4495:52;:::i;:::-;842:12360;;;;;;;;5050:15;842:12360;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;842:12360:206;;;;4025:34:58;842:12360:206;4025:34:58;:::i;:::-;842:12360:206;;;4077:11:58;;;;842:12360:206;;929:10:65;;4158:21:58;:62;;;;;842:12360:206;;;;;-1:-1:-1;842:12360:206;;;13173:15:58;842:12360:206;;;;;;-1:-1:-1;;;;;;842:12360:206;;;;;13226:34:58;842:12360:206;13226:34:58;:::i;:::-;842:12360:206;13217:57:58;;;;842:12360:206;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4158:62:58;842:12360:206;;;;4980:18:58;842:12360:206;;;;;929:10:65;842:12360:206;;;;;;;;;;4158:62:58;;;842:12360:206;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;842:12360:206;;;;;;;;;;;;;-1:-1:-1;;842:12360:206;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3018:5:58;842:12360:206;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;3018:5:58;842:12360:206;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;842:12360:206;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;11203:46:206;;;:110;;;;842:12360;11203:175;;;;842:12360;11203:239;;;;;842:12360;;;;;;;11203:239;11394:48;;;;:::i;:::-;11203:239;;;:175;2028:26:214;;-1:-1:-1;;;;2013:41:214;:93;;;;11203:175:206;;;;;2013:93:214;2070:36;;;;:::i;:::-;2013:93;;11203:110:206;-1:-1:-1;;;1168:51:69;;;-1:-1:-1;11203:110:206;;842:12360;;;;;;;;-1:-1:-1;;842:12360:206;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;842:12360:206;;;;:::o;:::-;;;;-1:-1:-1;;;;;842:12360:206;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;842:12360:206;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;842:12360:206;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;842:12360:206;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;;;;;842:12360:206;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;842:12360:206;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;842:12360:206;;;;;;:::o;1599:130:39:-;1513:6;842:12360:206;-1:-1:-1;;;;;842:12360:206;929:10:65;1662:23:39;842:12360:206;;1599:130:39:o;842:12360:206:-;;;;;;;;;;;;;;;;;;;;;;;;;2666:187:39;2758:6;842:12360:206;;-1:-1:-1;;;;;842:12360:206;;;-1:-1:-1;;;;;;842:12360:206;;;;;;;;;;2806:40:39;-1:-1:-1;;2806:40:39;2666:187::o;842:12360:206:-;;;;:::o;:::-;;;-1:-1:-1;;;842:12360:206;;;;;;;;;;;;;;;;;;;;2651:219:58;-1:-1:-1;842:12360:206;;;7266:7:58;842:12360:206;;;;;;-1:-1:-1;;;;;842:12360:206;2785:56:58;2793:19;;;2785:56;:::i;:::-;2651:219;:::o;842:12360:206:-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;8823:18;842:12360;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;842:12360:206;-1:-1:-1;;;;;;;;;;;842:12360:206;-1:-1:-1;842:12360:206;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4407:167:58;-1:-1:-1;842:12360:206;;;7266:7:58;842:12360:206;;;;;;13851:53:58;;-1:-1:-1;;;;;842:12360:206;7680:31:58;;13851:53;:::i;:::-;-1:-1:-1;842:12360:206;;;4543:15:58;842:12360:206;;;;;;-1:-1:-1;;;;;842:12360:206;;4407:167:58:o;842:12360:206:-;;;;:::o;:::-;;;-1:-1:-1;;;842:12360:206;;;;;;;;;;;;;;;;;-1:-1:-1;;;842:12360:206;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;842:12360:206;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;842:12360:206;;;;;;;;:::i;:::-;;;;7876:272:58;;-1:-1:-1;;;;;842:12360:206;;8001:34:58;7876:272;8001:34;:::i;:::-;842:12360:206;;;8053:16:58;;;;:52;;;;;7876:272;8053:87;;;;;7876:272;8045:96;;;7876:272;:::o;8053:87::-;8109:20;;;;;;:::i;:::-;842:12360:206;8109:31:58;8053:87;;;;;:52;842:12360:206;;;-1:-1:-1;842:12360:206;4980:18:58;842:12360:206;;;-1:-1:-1;842:12360:206;;-1:-1:-1;842:12360:206;;;;;-1:-1:-1;842:12360:206;;;8053:52:58;;;;842:12360:206;;;;:::o;:::-;;;-1:-1:-1;;;842:12360:206;;;;;;;;;;;;;;;;;-1:-1:-1;;;842:12360:206;;;;;;;11762:1225:58;;11851:92;11762:1225;11859:34;;;:::i;:::-;-1:-1:-1;;;;;842:12360:206;;;;;;;;;;;11859:42:58;;11851:92;:::i;:::-;842:12360:206;11961:16:58;;;842:12360:206;;12171:34:58;12163:92;12171:34;;;;:::i;:::-;842:12360:206;12171:42:58;12163:92;:::i;:::-;12901:27;11975:1;842:12360:206;;;12324:15:58;842:12360:206;;;;;-1:-1:-1;;;;;842:12360:206;;;;;;;;;;;;12792:9:58;842:12360:206;;;;;;;;;;;;;;;;;;;;;;;;;;;12864:7:58;842:12360:206;;;;;;;;;;;;;12901:27:58;;11762:1225::o;842:12360:206:-;;;-1:-1:-1;;;842:12360:206;;;;;;;;;;;;;;;;;-1:-1:-1;;;842:12360:206;;;;;;;14463:853:58;;;842:12360:206;;14463:853:58;;;1713:19:63;;:23;:19;;842:12360:206;;;;;;;;;14667:82:58;;;;929:10:65;14667:82:58;;;842:12360:206;;;;;;;;;;;;;;;14667:82:58;;;;842:12360:206;;;;;;;;:::i;:::-;14667:82:58;;-1:-1:-1;;;;;842:12360:206;14667:82:58;;;;;;;14628:682;-1:-1:-1;14663:595:58;;14877:381;;;842:12360:206;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;14927:18:58;;;842:12360:206;;-1:-1:-1;;;14969:60:58;;842:12360:206;14969:60:58;14667:82;14969:60;;;:::i;14923:321::-;15131:95;;842:12360:206;;;;;14663:595:58;-1:-1:-1;;;;;;842:12360:206;14799:62:58;;-1:-1:-1;842:12360:206;-1:-1:-1;14792:69:58:o;14667:82::-;;;;;;;;;;;;;;;;;:::i;:::-;;;842:12360:206;;;;;-1:-1:-1;;;;;;842:12360:206;;;;;;14667:82:58;;;;;;;;;14628:682;15288:11;;;;;15295:4;15288:11;:::o;14463:853::-;;;842:12360:206;;14463:853:58;;;1713:19:63;;:23;:19;;842:12360:206;;;;;;;;;;;;;;14667:82:58;;;;929:10:65;14667:82:58;;;842:12360:206;;;;;;;;;;;;;;;;;;;;;;14667:82:58;;842:12360:206;;;;;;;;:::i;:::-;14667:82:58;842:12360:206;;14667:82:58;;;;;;;-1:-1:-1;14663:595:58;;14877:381;;;842:12360:206;;;;;;;;;:::i;14628:682:58:-;15288:11;;;;;;15295:4;15288:11;:::o;803:238:61:-;911:99;919:41;929:10:65;;919:41:61;:::i;911:99::-;10729:34:58;;;:::i;:::-;;10935;;;:::i;:::-;11007:31;842:12360:206;;;11014:15:58;842:12360:206;;;;;;;;;;-1:-1:-1;;;;;;842:12360:206;;;;;;-1:-1:-1;;;;;842:12360:206;;;;;;11254:9:58;842:12360:206;;;;;;;-1:-1:-1;;842:12360:206;;;;;;11302:7:58;842:12360:206;;;;;;;;;;;;;11007:31:58;11334:36;11007:31;;11334:36;803:238:61:o;842:12360:206:-;;;;:::o;:::-;;;-1:-1:-1;;;842:12360:206;;;;;;;;;;;;;;;;;-1:-1:-1;;;842:12360:206;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;842:12360:206;8143:18;842:12360;;-1:-1:-1;;;;;;;;;;;842:12360:206;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;842:12360:206;;;;;;;;:::o;:::-;;;-1:-1:-1;;;842:12360:206;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;842:12360:206;;;;:::o;10218:451::-;-1:-1:-1;842:12360:206;;;;10341:10;842:12360;;;;;;;;;;;;;;:::i;:::-;10331:96;;-1:-1:-1;10582:19:206;;;602:28:68;;10287:8:71;10582:19:206;10278:17:71;;;;10274:103;;10218:451:206;10403:8:71;;;10394:17;;;;10390:103;;10218:451:206;10519:8:71;;10510:17;;;;10506:103;;10218:451:206;10635:7:71;;10626:16;;;;10622:100;;10218:451:206;10748:7:71;;10739:16;;;;10735:100;;10218:451:206;10852:16:71;10861:7;10852:16;;;10848:100;;10218:451:206;10974:7:71;10965:16;;;;10961:66;;10218:451:206;633:1:68;842:12360:206;;;;;;775:76:68;842:12360:206;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;-1:-1:-1;;842:12360:206;;;;775:76:68;;;864:280;633:1;;;864:280;842:12360:206;;;;;;;;10517:18;842:12360;;;;;;;:::i;:::-;;;;;;633:1:68;;;;842:12360:206;;;;;;;;;;10479:169;842:12360;;;;-1:-1:-1;;;842:12360:206;-1:-1:-1;;;10479:169:206;842:12360;;;;;;;;;;;:::i;:::-;;;;;;10479:169;;;;;;;;;;:::i;842:12360::-;;;;;-1:-1:-1;842:12360:206;;-1:-1:-1;;;;;;;;;;;842:12360:206;;;;;;-1:-1:-1;;842:12360:206;;;;;;;10479:169;842:12360;;;;;;;;;;;;;-1:-1:-1;842:12360:206;;;;;;;;;-1:-1:-1;;842:12360:206;10479:169;;;842:12360;-1:-1:-1;;;842:12360:206;;;;;;;;-1:-1:-1;842:12360:206;;;10479:169;842:12360;;864:280:68;-1:-1:-1;;842:12360:206;;;;-1:-1:-1;;;969:93:68;;;;842:12360:206;969:93:68;842:12360:206;1112:10:68;;;864:280;1108:21;1124:5;;;10961:66:71;842:12360:206;11011:1:71;842:12360:206;10961:66:71;;;10848:100;842:12360:206;;10861:7:71;10932:1;842:12360:206;;;;10848:100:71;;;10735;10819:1;842:12360:206;;;;;;10735:100:71;;;;10622;10706:1;842:12360:206;;;;;;10622:100:71;;;;10506:103;10592:2;842:12360:206;;;;;;10506:103:71;;;;10390;842:12360:206;;;;;;;10390:103:71;;;;10274;842:12360:206;;-1:-1:-1;842:12360:206;-1:-1:-1;842:12360:206;10274:103:71;;;;10331:96:206;842:12360;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;842:12360:206;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;842:12360:206;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1987:344:58;842:12360:206;;;;2161:36:58;;;2146:51;;:126;;;;;1987:344;2146:178;;;;2127:197;1987:344;:::o;2146:178::-;-1:-1:-1;;;1168:51:69;;1987:344:58;-1:-1:-1;1987:344:58:o;2146:126::-;-1:-1:-1;;;2213:59:58;;;-1:-1:-1;2146:126:58;;842:12360:206;;;;:::o;:::-;;;-1:-1:-1;;;842:12360:206;;;;;;;;;;;;;;;;;;;;12717:483;;;;12871:9;842:12360;12852:28;;842:12360;;12969:14;842:12360;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;13096:44;;;;;;842:12360;;13096:44;;-1:-1:-1;;842:12360:206;;;;;13083:57;842:12360;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;13155:38;842:12360;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13155:38;842:12360;;13155:38;;;;;:::i;:::-;;;;12717:483::o;842:12360::-;;;;-1:-1:-1;842:12360:206;;;;;;;;;;-1:-1:-1;;;;;;;;;;;842:12360:206;-1:-1:-1;;842:12360:206;;;;;;;;;;;;;;;;;13155:38;842:12360;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;842:12360:206;;;;;;;;;;;-1:-1:-1;;;842:12360:206;;;;;;;;;;;;;;;;;-1:-1:-1;;;842:12360:206;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "deleteToken(uint256)": "6297c16c",
    "disableContract()": "894ba833",
    "disabled()": "ee070805",
    "getApproved(uint256)": "081812fc",
    "getDefaultRoyaltyPercentage()": "ab69607a",
    "getDefaultRoyaltyReceiver()": "3403c4e9",
    "getMintConfig()": "9338bb5d",
    "init(string,string,address,uint256)": "5edc7c19",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isApprovedMinter(address)": "3a3d146f",
    "lockBaseURI()": "53df5c7c",
    "maxTokens()": "e8315742",
    "mintTo(address)": "755edd17",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "prepareMint(string,uint256)": "b390ac25",
    "prepareMintWithMinter(string,uint256,address)": "b9fbd25c",
    "renounceOwnership()": "715018a6",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setDefaultRoyaltyReceiver(address)": "3ebc82c5",
    "setMinterApproval(address,bool)": "0de54ba0",
    "setRoyaltyReceiverForToken(address,uint256)": "efc32cd4",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenCreator(uint256)": "40c1a064",
    "tokenURI(uint256)": "c87b56dd",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "updateBaseURI(string)": "931688cb",
    "updateTokenURI(uint256,string)": "18e97fd1"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ContractDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"name\":\"MetadataLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"name\":\"MetadataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"numberOfTokens\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"name\":\"PrepareMint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataUri\",\"type\":\"string\"}],\"name\":\"TokenURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"deleteToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMintConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"numberOfTokens\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"lockedMetadata\",\"type\":\"bool\"}],\"internalType\":\"struct LazySovereignNFT.MintConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxTokens\",\"type\":\"uint256\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isApprovedMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"mintTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_numberOfTokens\",\"type\":\"uint256\"}],\"name\":\"prepareMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_numberOfTokens\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_minter\",\"type\":\"address\"}],\"name\":\"prepareMintWithMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"setDefaultRoyaltyReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_minter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isMinter\",\"type\":\"bool\"}],\"name\":\"setMinterApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"setRoyaltyReceiverForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenCreator\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"}],\"name\":\"updateBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_metadataUri\",\"type\":\"string\"}],\"name\":\"updateTokenURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract implements an ERC721 compliant NFT (Non-Fungible Token) with lazy minting.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"deleteToken(uint256)\":{\"details\":\"Delete a token with the given ID.\",\"params\":{\"_tokenId\":\"The ID of the token to delete.\"}},\"disableContract()\":{\"details\":\"Disable the contract, preventing further minting.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getMintConfig()\":{\"details\":\"Get the current minting configuration.\",\"returns\":{\"_0\":\"mintConfig the mint config.\"}},\"init(string,string,address,uint256)\":{\"details\":\"Contract initialization function.\",\"params\":{\"_creator\":\"The address of the contract creator.\",\"_maxTokens\":\"The maximum number of tokens that can be minted.\",\"_name\":\"The name of the NFT contract.\",\"_symbol\":\"The symbol of the NFT contract.\"}},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"isApprovedMinter(address)\":{\"details\":\"Checks if the supplied address is approved for minting\",\"params\":{\"_address\":\"The address of the minter.\"},\"returns\":{\"_0\":\"bool, whether the address is approved for minting.\"}},\"lockBaseURI()\":{\"details\":\"Lock the metadata to prevent  further updates.\"},\"mintTo(address)\":{\"details\":\"Mint a new token to the specified receiver.\",\"params\":{\"_receiver\":\"The address of the token receiver.\"},\"returns\":{\"_0\":\"uint256 Token Id of the new token.\"}},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"prepareMint(string,uint256)\":{\"details\":\"Prepare a minting batch with a specified base URI and number of tokens.\",\"params\":{\"_baseURI\":\"The base URI for token metadata.\",\"_numberOfTokens\":\"The number of tokens to prepare for minting.\"}},\"prepareMintWithMinter(string,uint256,address)\":{\"details\":\"Prepare a minting batch with a specified base URI and number of tokens, and assign a minter address.\",\"params\":{\"_baseURI\":\"The base URI for token metadata.\",\"_minter\":\"The address of the minter.\",\"_numberOfTokens\":\"The number of tokens to prepare for minting.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"royaltyInfo(uint256,uint256)\":{\"params\":{\"_salePrice\":\"- the sale price of the NFT asset specified by _tokenId\",\"_tokenId\":\"- the NFT asset queried for royalty information\"},\"returns\":{\"receiver\":\"- address of who should be sent the royalty payment\",\"royaltyAmount\":\"- the royalty payment amount for _salePrice\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"setDefaultRoyaltyReceiver(address)\":{\"details\":\"Set the default royalty receiver address.\",\"params\":{\"_receiver\":\"The address of the default royalty receiver.\"}},\"setMinterApproval(address,bool)\":{\"details\":\"Set a minter for the contract\",\"params\":{\"_isMinter\":\"bool of whether the address is a minter.\",\"_minter\":\"address of the minter.\"}},\"setRoyaltyReceiverForToken(address,uint256)\":{\"details\":\"Set a specific royalty receiver address for a token.\",\"params\":{\"_receiver\":\"The address of the royalty receiver.\",\"_tokenId\":\"The ID of the token.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenCreator(uint256)\":{\"details\":\"Get the address of the token creator for a given token ID.\",\"params\":{\"_tokenId\":\"The ID of the token.\"},\"returns\":{\"_0\":\"address of the token creator.\"}},\"tokenURI(uint256)\":{\"details\":\"Get the token URI for a specific token. If a token has a set URI, it will return that, otherwise it will return the token URI computed from the base URI.\",\"params\":{\"_tokenId\":\"The ID of the token.\"},\"returns\":{\"_0\":\"The token's URI.\"}},\"totalSupply()\":{\"details\":\"Get the total supply of tokens in existence.\",\"returns\":{\"_0\":\"The total supply of tokens.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateBaseURI(string)\":{\"details\":\"Update the base URI.\",\"params\":{\"_baseURI\":\"The new base URI.\"}},\"updateTokenURI(uint256,string)\":{\"details\":\"Update the token metadata URI.\",\"params\":{\"_metadataUri\":\"The new metadata URI.\"}}},\"title\":\"LazySovereignNFT\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/token/ERC721/sovereign/lazy/LazySovereignNFT.sol\":\"LazySovereignNFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/buffer/=lib/buffer/\",\":@ensdomains/ens-contracts/=lib/ens-contracts/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/contracts/\",\":@uniswap/v3-core/contracts/=lib/v3-core/contracts/\",\":@uniswap/v3-periphery/=lib/v3-periphery/contracts/\",\":arachnid/solidity-stringutils/=lib/solidity-stringutils/\",\":ds-test/=lib/ds-test/src/\",\":ensdomains/ens-contracts/=lib/ensdomains/ens-contracts/contracts/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":rareprotocol/assets/=lib/assets/src/\",\":rareprotocol/aux/=src/\",\":royalty-guard/=lib/royalty-guard/src/royalty-guard/\",\":royalty-registry-solidity/=lib/royalty-registry-solidity/contracts/\",\":royalty-registry/=lib/royalty-registry-solidity/contracts/\",\":solmate/=lib/solmate/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol\":{\"keccak256\":\"0x09fa60c34ff9b067e5ad3af7719d490a12e0ca39132df6f870746eb0d32308ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acebbc807a56154030015434db278d821bca9a5316fbc3626b3f51f14403819a\",\"dweb:/ipfs/QmPacbrj1Hqzrw6b657EXuyMAazLFh1VAo9c66ZJNmfhR3\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol\":{\"keccak256\":\"0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a\",\"dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0xbe63437e37e32162d5d11ea8f11a44378c092b4bcbb05b51a813fe4bf33297d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68a514febde6ffd8afe3cb5b40815d10c0a926063237d5d167cbaa90239f75ae\",\"dweb:/ipfs/QmVBvYeR6oGBw7K7vu5FMotr8josejtaGwugM68VTZacww\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/ERC721BurnableUpgradeable.sol\":{\"keccak256\":\"0x03006ed332e7aab87b6aacc771da96e3854bfe1624e1741ede27392dd3df41cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5643a3638a33c80a62f301509e055921b35c29d755e5e0885190ad7da6f21219\",\"dweb:/ipfs/QmXoQr1v7uTh9gnuQX7ybmXrmDckt41PrHaTArTt22f9Fu\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/IERC721MetadataUpgradeable.sol\":{\"keccak256\":\"0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ffbd627e6958983d288801acdedbf3491ee0ebf1a430338bce47c96481ce9e3\",\"dweb:/ipfs/QmUM1vpmNgBV34sYf946SthDJNGhwwqjoRggmj4TUUQmdB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0xb1561a6950b1aaa504c8f81b7d46bccfa77ccd10de3eb865cf34b1acd5ad505e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a56cb91629dacd161be24908fbf94315f3f45dd6fee8dad82b27af853cbc4ee\",\"dweb:/ipfs/QmNfEzdf4NTpxyhzWKAmeDwwSpJ6ZjNizK3GXw3TEuTTgn\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]},\"src/token/ERC721/sovereign/lazy/LazySovereignNFT.sol\":{\"keccak256\":\"0xf6f378b63a2f4573d0240ef48176d0310fc1a98f49d069caf582883071905635\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6bfd19f9e7d322ea32fb42e59e5eee7690c2b68f906d0ae3d8356b6fbd24366e\",\"dweb:/ipfs/QmWcgM2eAPxkfakEs91eoj9bsGkPSpNpsv814pJH9nCPGa\"]},\"src/token/extensions/ERC2981Upgradeable.sol\":{\"keccak256\":\"0x62c64c84a127c5a388397fa20c990b8c0dbd22a1fa1b7176f55c8aae3238383d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e540b90c23c363b1d5fb122286c7c583a44c8b907f2764ddf0f2c0e7793b5465\",\"dweb:/ipfs/QmPn163efSqFyhWHC4qFmeJXgMMbEmoENa6gRZjM4wedhA\"]},\"src/token/extensions/IERC2981.sol\":{\"keccak256\":\"0x2435b55e1011401b85ed792513721df4fe905013926fa7385f502aa3e97cdffd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056bca27c266998358654b0a64b4286a9b66c1b4db464f70a679d44de0f3fa4b\",\"dweb:/ipfs/QmW7zACzmmzoHKdrRQVRKh6eNiGuMjKZrZbvndNW819Z1w\"]},\"src/token/extensions/ITokenCreator.sol\":{\"keccak256\":\"0xebb99f216573c38f201c0cd99bbe98cce87a04acc129b37b487e66ec148de5f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b101c0be9c38496d0bee068af7ca3519d3879c35315d6336e2dbc9a36ab1ae42\",\"dweb:/ipfs/QmZQuVdfHHw1FuX4tc867KedVdnJDJ8Kth9BPKUiuajBoF\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.18+commit.87f61d96"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ContractDisabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "baseURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MetadataLocked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "baseURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MetadataUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "numberOfTokens",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "baseURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PrepareMint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "metadataUri",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokenURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deleteToken"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "disableContract"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "disabled",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyPercentage",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyReceiver",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getMintConfig",
          "outputs": [
            {
              "internalType": "struct LazySovereignNFT.MintConfig",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "numberOfTokens",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "baseURI",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "lockedMetadata",
                  "type": "bool"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_creator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_maxTokens",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "init"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_address",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedMinter",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "lockBaseURI"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxTokens",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintTo",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_baseURI",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "_numberOfTokens",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "prepareMint"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_baseURI",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "_numberOfTokens",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_minter",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "prepareMintWithMinter"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultRoyaltyReceiver"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_minter",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_isMinter",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMinterApproval"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyReceiverForToken"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenCreator",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_baseURI",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateBaseURI"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_metadataUri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateTokenURI"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "See {IERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "burn(uint256)": {
            "details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
          },
          "deleteToken(uint256)": {
            "details": "Delete a token with the given ID.",
            "params": {
              "_tokenId": "The ID of the token to delete."
            }
          },
          "disableContract()": {
            "details": "Disable the contract, preventing further minting."
          },
          "getApproved(uint256)": {
            "details": "See {IERC721-getApproved}."
          },
          "getMintConfig()": {
            "details": "Get the current minting configuration.",
            "returns": {
              "_0": "mintConfig the mint config."
            }
          },
          "init(string,string,address,uint256)": {
            "details": "Contract initialization function.",
            "params": {
              "_creator": "The address of the contract creator.",
              "_maxTokens": "The maximum number of tokens that can be minted.",
              "_name": "The name of the NFT contract.",
              "_symbol": "The symbol of the NFT contract."
            }
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "isApprovedMinter(address)": {
            "details": "Checks if the supplied address is approved for minting",
            "params": {
              "_address": "The address of the minter."
            },
            "returns": {
              "_0": "bool, whether the address is approved for minting."
            }
          },
          "lockBaseURI()": {
            "details": "Lock the metadata to prevent  further updates."
          },
          "mintTo(address)": {
            "details": "Mint a new token to the specified receiver.",
            "params": {
              "_receiver": "The address of the token receiver."
            },
            "returns": {
              "_0": "uint256 Token Id of the new token."
            }
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "prepareMint(string,uint256)": {
            "details": "Prepare a minting batch with a specified base URI and number of tokens.",
            "params": {
              "_baseURI": "The base URI for token metadata.",
              "_numberOfTokens": "The number of tokens to prepare for minting."
            }
          },
          "prepareMintWithMinter(string,uint256,address)": {
            "details": "Prepare a minting batch with a specified base URI and number of tokens, and assign a minter address.",
            "params": {
              "_baseURI": "The base URI for token metadata.",
              "_minter": "The address of the minter.",
              "_numberOfTokens": "The number of tokens to prepare for minting."
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "royaltyInfo(uint256,uint256)": {
            "params": {
              "_salePrice": "- the sale price of the NFT asset specified by _tokenId",
              "_tokenId": "- the NFT asset queried for royalty information"
            },
            "returns": {
              "receiver": "- address of who should be sent the royalty payment",
              "royaltyAmount": "- the royalty payment amount for _salePrice"
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC721-setApprovalForAll}."
          },
          "setDefaultRoyaltyReceiver(address)": {
            "details": "Set the default royalty receiver address.",
            "params": {
              "_receiver": "The address of the default royalty receiver."
            }
          },
          "setMinterApproval(address,bool)": {
            "details": "Set a minter for the contract",
            "params": {
              "_isMinter": "bool of whether the address is a minter.",
              "_minter": "address of the minter."
            }
          },
          "setRoyaltyReceiverForToken(address,uint256)": {
            "details": "Set a specific royalty receiver address for a token.",
            "params": {
              "_receiver": "The address of the royalty receiver.",
              "_tokenId": "The ID of the token."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          },
          "tokenCreator(uint256)": {
            "details": "Get the address of the token creator for a given token ID.",
            "params": {
              "_tokenId": "The ID of the token."
            },
            "returns": {
              "_0": "address of the token creator."
            }
          },
          "tokenURI(uint256)": {
            "details": "Get the token URI for a specific token. If a token has a set URI, it will return that, otherwise it will return the token URI computed from the base URI.",
            "params": {
              "_tokenId": "The ID of the token."
            },
            "returns": {
              "_0": "The token's URI."
            }
          },
          "totalSupply()": {
            "details": "Get the total supply of tokens in existence.",
            "returns": {
              "_0": "The total supply of tokens."
            }
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC721-transferFrom}."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "updateBaseURI(string)": {
            "details": "Update the base URI.",
            "params": {
              "_baseURI": "The new base URI."
            }
          },
          "updateTokenURI(uint256,string)": {
            "details": "Update the token metadata URI.",
            "params": {
              "_metadataUri": "The new metadata URI."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ensdomains/buffer/=lib/buffer/",
        "@ensdomains/ens-contracts/=lib/ens-contracts/contracts/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@uniswap/v3-core/=lib/v3-core/contracts/",
        "@uniswap/v3-core/contracts/=lib/v3-core/contracts/",
        "@uniswap/v3-periphery/=lib/v3-periphery/contracts/",
        "arachnid/solidity-stringutils/=lib/solidity-stringutils/",
        "ds-test/=lib/ds-test/src/",
        "ensdomains/ens-contracts/=lib/ensdomains/ens-contracts/contracts/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        "rareprotocol/assets/=lib/assets/src/",
        "rareprotocol/aux/=src/",
        "royalty-guard/=lib/royalty-guard/src/royalty-guard/",
        "royalty-registry-solidity/=lib/royalty-registry-solidity/contracts/",
        "royalty-registry/=lib/royalty-registry-solidity/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/token/ERC721/sovereign/lazy/LazySovereignNFT.sol": "LazySovereignNFT"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98",
        "urls": [
          "bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8",
          "dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol": {
        "keccak256": "0x09fa60c34ff9b067e5ad3af7719d490a12e0ca39132df6f870746eb0d32308ad",
        "urls": [
          "bzz-raw://acebbc807a56154030015434db278d821bca9a5316fbc3626b3f51f14403819a",
          "dweb:/ipfs/QmPacbrj1Hqzrw6b657EXuyMAazLFh1VAo9c66ZJNmfhR3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol": {
        "keccak256": "0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5",
        "urls": [
          "bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a",
          "dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721Upgradeable.sol": {
        "keccak256": "0xbe63437e37e32162d5d11ea8f11a44378c092b4bcbb05b51a813fe4bf33297d4",
        "urls": [
          "bzz-raw://68a514febde6ffd8afe3cb5b40815d10c0a926063237d5d167cbaa90239f75ae",
          "dweb:/ipfs/QmVBvYeR6oGBw7K7vu5FMotr8josejtaGwugM68VTZacww"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/ERC721BurnableUpgradeable.sol": {
        "keccak256": "0x03006ed332e7aab87b6aacc771da96e3854bfe1624e1741ede27392dd3df41cf",
        "urls": [
          "bzz-raw://5643a3638a33c80a62f301509e055921b35c29d755e5e0885190ad7da6f21219",
          "dweb:/ipfs/QmXoQr1v7uTh9gnuQX7ybmXrmDckt41PrHaTArTt22f9Fu"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/IERC721MetadataUpgradeable.sol": {
        "keccak256": "0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70",
        "urls": [
          "bzz-raw://4ffbd627e6958983d288801acdedbf3491ee0ebf1a430338bce47c96481ce9e3",
          "dweb:/ipfs/QmUM1vpmNgBV34sYf946SthDJNGhwwqjoRggmj4TUUQmdB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/CountersUpgradeable.sol": {
        "keccak256": "0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d",
        "urls": [
          "bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912",
          "dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb",
        "urls": [
          "bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a",
          "dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
        "urls": [
          "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
          "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol": {
        "keccak256": "0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e",
        "urls": [
          "bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91",
          "dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeMathUpgradeable.sol": {
        "keccak256": "0xb1561a6950b1aaa504c8f81b7d46bccfa77ccd10de3eb865cf34b1acd5ad505e",
        "urls": [
          "bzz-raw://9a56cb91629dacd161be24908fbf94315f3f45dd6fee8dad82b27af853cbc4ee",
          "dweb:/ipfs/QmNfEzdf4NTpxyhzWKAmeDwwSpJ6ZjNizK3GXw3TEuTTgn"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SignedMathUpgradeable.sol": {
        "keccak256": "0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a",
        "urls": [
          "bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4",
          "dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z"
        ],
        "license": "MIT"
      },
      "src/token/ERC721/sovereign/lazy/LazySovereignNFT.sol": {
        "keccak256": "0xf6f378b63a2f4573d0240ef48176d0310fc1a98f49d069caf582883071905635",
        "urls": [
          "bzz-raw://6bfd19f9e7d322ea32fb42e59e5eee7690c2b68f906d0ae3d8356b6fbd24366e",
          "dweb:/ipfs/QmWcgM2eAPxkfakEs91eoj9bsGkPSpNpsv814pJH9nCPGa"
        ],
        "license": "MIT"
      },
      "src/token/extensions/ERC2981Upgradeable.sol": {
        "keccak256": "0x62c64c84a127c5a388397fa20c990b8c0dbd22a1fa1b7176f55c8aae3238383d",
        "urls": [
          "bzz-raw://e540b90c23c363b1d5fb122286c7c583a44c8b907f2764ddf0f2c0e7793b5465",
          "dweb:/ipfs/QmPn163efSqFyhWHC4qFmeJXgMMbEmoENa6gRZjM4wedhA"
        ],
        "license": "MIT"
      },
      "src/token/extensions/IERC2981.sol": {
        "keccak256": "0x2435b55e1011401b85ed792513721df4fe905013926fa7385f502aa3e97cdffd",
        "urls": [
          "bzz-raw://056bca27c266998358654b0a64b4286a9b66c1b4db464f70a679d44de0f3fa4b",
          "dweb:/ipfs/QmW7zACzmmzoHKdrRQVRKh6eNiGuMjKZrZbvndNW819Z1w"
        ],
        "license": "MIT"
      },
      "src/token/extensions/ITokenCreator.sol": {
        "keccak256": "0xebb99f216573c38f201c0cd99bbe98cce87a04acc129b37b487e66ec148de5f6",
        "urls": [
          "bzz-raw://b101c0be9c38496d0bee068af7ca3519d3879c35315d6336e2dbc9a36ab1ae42",
          "dweb:/ipfs/QmZQuVdfHHw1FuX4tc867KedVdnJDJ8Kth9BPKUiuajBoF"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/token/ERC721/sovereign/lazy/LazySovereignNFT.sol",
    "id": 87893,
    "exportedSymbols": {
      "AddressUpgradeable": [
        35328
      ],
      "ContextUpgradeable": [
        35526
      ],
      "CountersUpgradeable": [
        35600
      ],
      "ERC165Upgradeable": [
        35983
      ],
      "ERC2981Upgradeable": [
        89287
      ],
      "ERC721BurnableUpgradeable": [
        34971
      ],
      "ERC721Upgradeable": [
        34787
      ],
      "IERC165Upgradeable": [
        35995
      ],
      "IERC2981": [
        89303
      ],
      "IERC721MetadataUpgradeable": [
        34998
      ],
      "IERC721ReceiverUpgradeable": [
        34805
      ],
      "IERC721Upgradeable": [
        34921
      ],
      "ITokenCreator": [
        89313
      ],
      "Initializable": [
        31709
      ],
      "LazySovereignNFT": [
        87892
      ],
      "MathUpgradeable": [
        36861
      ],
      "OwnableUpgradeable": [
        31172
      ],
      "SafeMathUpgradeable": [
        37173
      ],
      "SignedMathUpgradeable": [
        37278
      ],
      "StringsUpgradeable": [
        35939
      ]
    },
    "nodeType": "SourceUnit",
    "src": "85:13118:206",
    "nodes": [
      {
        "id": 87289,
        "nodeType": "PragmaDirective",
        "src": "85:24:206",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 87290,
        "nodeType": "ImportDirective",
        "src": "111:79:206",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87893,
        "sourceUnit": 34788,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 87291,
        "nodeType": "ImportDirective",
        "src": "191:98:206",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/ERC721BurnableUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/token/ERC721/extensions/ERC721BurnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87893,
        "sourceUnit": 34972,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 87292,
        "nodeType": "ImportDirective",
        "src": "290:86:206",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87893,
        "sourceUnit": 35984,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 87293,
        "nodeType": "ImportDirective",
        "src": "377:74:206",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/access/OwnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87893,
        "sourceUnit": 31173,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 87294,
        "nodeType": "ImportDirective",
        "src": "452:74:206",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/CountersUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/utils/CountersUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87893,
        "sourceUnit": 35601,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 87295,
        "nodeType": "ImportDirective",
        "src": "527:79:206",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeMathUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/utils/math/SafeMathUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87893,
        "sourceUnit": 37174,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 87296,
        "nodeType": "ImportDirective",
        "src": "607:47:206",
        "nodes": [],
        "absolutePath": "src/token/extensions/ITokenCreator.sol",
        "file": "../../../extensions/ITokenCreator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87893,
        "sourceUnit": 89314,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 87297,
        "nodeType": "ImportDirective",
        "src": "655:52:206",
        "nodes": [],
        "absolutePath": "src/token/extensions/ERC2981Upgradeable.sol",
        "file": "../../../extensions/ERC2981Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87893,
        "sourceUnit": 89288,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 87892,
        "nodeType": "ContractDefinition",
        "src": "842:12360:206",
        "nodes": [
          {
            "id": 87313,
            "nodeType": "UsingForDirective",
            "src": "1020:38:206",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 87311,
              "name": "SafeMathUpgradeable",
              "nameLocations": [
                "1026:19:206"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37173,
              "src": "1026:19:206"
            },
            "typeName": {
              "id": 87312,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1050:7:206",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 87316,
            "nodeType": "UsingForDirective",
            "src": "1063:37:206",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 87314,
              "name": "StringsUpgradeable",
              "nameLocations": [
                "1069:18:206"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35939,
              "src": "1069:18:206"
            },
            "typeName": {
              "id": 87315,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1092:7:206",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 87320,
            "nodeType": "UsingForDirective",
            "src": "1105:58:206",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 87317,
              "name": "CountersUpgradeable",
              "nameLocations": [
                "1111:19:206"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35600,
              "src": "1111:19:206"
            },
            "typeName": {
              "id": 87319,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 87318,
                "name": "CountersUpgradeable.Counter",
                "nameLocations": [
                  "1135:19:206",
                  "1155:7:206"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 35532,
                "src": "1135:27:206"
              },
              "referencedDeclaration": 35532,
              "src": "1135:27:206",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$35532_storage_ptr",
                "typeString": "struct CountersUpgradeable.Counter"
              }
            }
          },
          {
            "id": 87327,
            "nodeType": "StructDefinition",
            "src": "1348:110:206",
            "nodes": [],
            "canonicalName": "LazySovereignNFT.MintConfig",
            "members": [
              {
                "constant": false,
                "id": 87322,
                "mutability": "mutable",
                "name": "numberOfTokens",
                "nameLocation": "1384:14:206",
                "nodeType": "VariableDeclaration",
                "scope": 87327,
                "src": "1376:22:206",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 87321,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1376:7:206",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 87324,
                "mutability": "mutable",
                "name": "baseURI",
                "nameLocation": "1415:7:206",
                "nodeType": "VariableDeclaration",
                "scope": 87327,
                "src": "1408:14:206",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 87323,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1408:6:206",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 87326,
                "mutability": "mutable",
                "name": "lockedMetadata",
                "nameLocation": "1437:14:206",
                "nodeType": "VariableDeclaration",
                "scope": 87327,
                "src": "1432:19:206",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 87325,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1432:4:206",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "MintConfig",
            "nameLocation": "1355:10:206",
            "scope": 87892,
            "visibility": "public"
          },
          {
            "id": 87329,
            "nodeType": "VariableDeclaration",
            "src": "1780:20:206",
            "nodes": [],
            "constant": false,
            "functionSelector": "ee070805",
            "mutability": "mutable",
            "name": "disabled",
            "nameLocation": "1792:8:206",
            "scope": 87892,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 87328,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1780:4:206",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 87331,
            "nodeType": "VariableDeclaration",
            "src": "1858:24:206",
            "nodes": [],
            "constant": false,
            "functionSelector": "e8315742",
            "mutability": "mutable",
            "name": "maxTokens",
            "nameLocation": "1873:9:206",
            "scope": 87892,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 87330,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1858:7:206",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 87335,
            "nodeType": "VariableDeclaration",
            "src": "2055:50:206",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "tokenApprovals",
            "nameLocation": "2091:14:206",
            "scope": 87892,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 87334,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 87332,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2063:7:206",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2055:27:206",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 87333,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2074:7:206",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 87339,
            "nodeType": "VariableDeclaration",
            "src": "2177:48:206",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "minterAddresses",
            "nameLocation": "2210:15:206",
            "scope": 87892,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 87338,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 87336,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2185:7:206",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2177:24:206",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 87337,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "2196:4:206",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 87343,
            "nodeType": "VariableDeclaration",
            "src": "2271:45:206",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_tokenURIs",
            "nameLocation": "2306:10:206",
            "scope": 87892,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
              "typeString": "mapping(uint256 => string)"
            },
            "typeName": {
              "id": 87342,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 87340,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2279:7:206",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2271:26:206",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                "typeString": "mapping(uint256 => string)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 87341,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "2290:6:206",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 87346,
            "nodeType": "VariableDeclaration",
            "src": "2377:50:206",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "tokenIdCounter",
            "nameLocation": "2413:14:206",
            "scope": 87892,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$35532_storage",
              "typeString": "struct CountersUpgradeable.Counter"
            },
            "typeName": {
              "id": 87345,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 87344,
                "name": "CountersUpgradeable.Counter",
                "nameLocations": [
                  "2377:19:206",
                  "2397:7:206"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 35532,
                "src": "2377:27:206"
              },
              "referencedDeclaration": 35532,
              "src": "2377:27:206",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$35532_storage_ptr",
                "typeString": "struct CountersUpgradeable.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "id": 87349,
            "nodeType": "VariableDeclaration",
            "src": "2472:29:206",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "mintConfig",
            "nameLocation": "2491:10:206",
            "scope": 87892,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_MintConfig_$87327_storage",
              "typeString": "struct LazySovereignNFT.MintConfig"
            },
            "typeName": {
              "id": 87348,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 87347,
                "name": "MintConfig",
                "nameLocations": [
                  "2472:10:206"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 87327,
                "src": "2472:10:206"
              },
              "referencedDeclaration": 87327,
              "src": "2472:10:206",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_MintConfig_$87327_storage_ptr",
                "typeString": "struct LazySovereignNFT.MintConfig"
              }
            },
            "visibility": "private"
          },
          {
            "id": 87353,
            "nodeType": "EventDefinition",
            "src": "2730:45:206",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "793bc6423dd0257d64f9d47db72fd4b2162f4541aa41740ba1c5fb5e2cd41bcd",
            "name": "ContractDisabled",
            "nameLocation": "2736:16:206",
            "parameters": {
              "id": 87352,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87351,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "2769:4:206",
                  "nodeType": "VariableDeclaration",
                  "scope": 87353,
                  "src": "2753:20:206",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87350,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2753:7:206",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2752:22:206"
            }
          },
          {
            "id": 87359,
            "nodeType": "EventDefinition",
            "src": "2821:66:206",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "6f1d651e6e0c8f86bd32a20c22a644d1e34fabf72307ff95d51b9f5892ddba19",
            "name": "PrepareMint",
            "nameLocation": "2827:11:206",
            "parameters": {
              "id": 87358,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87355,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "numberOfTokens",
                  "nameLocation": "2855:14:206",
                  "nodeType": "VariableDeclaration",
                  "scope": 87359,
                  "src": "2839:30:206",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87354,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2839:7:206",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87357,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "baseURI",
                  "nameLocation": "2878:7:206",
                  "nodeType": "VariableDeclaration",
                  "scope": 87359,
                  "src": "2871:14:206",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 87356,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2871:6:206",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2838:48:206"
            }
          },
          {
            "id": 87363,
            "nodeType": "EventDefinition",
            "src": "2931:37:206",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "b634b0cb94234b05eabb1438717e0e645bfd84788ae1263682242327563cde5e",
            "name": "MetadataLocked",
            "nameLocation": "2937:14:206",
            "parameters": {
              "id": 87362,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87361,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "baseURI",
                  "nameLocation": "2959:7:206",
                  "nodeType": "VariableDeclaration",
                  "scope": 87363,
                  "src": "2952:14:206",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 87360,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2952:6:206",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2951:16:206"
            }
          },
          {
            "id": 87367,
            "nodeType": "EventDefinition",
            "src": "3013:38:206",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "1c306e70c05992619e2128ad1ef88df75f36c9476282e59f51401b2abaa42e4e",
            "name": "MetadataUpdated",
            "nameLocation": "3019:15:206",
            "parameters": {
              "id": 87366,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87365,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "baseURI",
                  "nameLocation": "3042:7:206",
                  "nodeType": "VariableDeclaration",
                  "scope": 87367,
                  "src": "3035:14:206",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 87364,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3035:6:206",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3034:16:206"
            }
          },
          {
            "id": 87373,
            "nodeType": "EventDefinition",
            "src": "3097:67:206",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "931f495b9a8e5d8e61946ea5d61e021f636cfe213a801f97589c18c152e408bd",
            "name": "TokenURIUpdated",
            "nameLocation": "3103:15:206",
            "parameters": {
              "id": 87372,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87369,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3135:7:206",
                  "nodeType": "VariableDeclaration",
                  "scope": 87373,
                  "src": "3119:23:206",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87368,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3119:7:206",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87371,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "metadataUri",
                  "nameLocation": "3151:11:206",
                  "nodeType": "VariableDeclaration",
                  "scope": 87373,
                  "src": "3144:18:206",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 87370,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3144:6:206",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3118:45:206"
            }
          },
          {
            "id": 87434,
            "nodeType": "FunctionDefinition",
            "src": "3646:548:206",
            "nodes": [],
            "body": {
              "id": 87433,
              "nodeType": "Block",
              "src": "3803:391:206",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 87393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 87388,
                          "name": "_creator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87380,
                          "src": "3821:8:206",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 87391,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3841:1:206",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 87390,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3833:7:206",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 87389,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3833:7:206",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 87392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3833:10:206",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3821:22:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63726561746f722063616e6e6f74206265206e756c6c2061646472657373",
                        "id": 87394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3845:32:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6b6b5b1211b5e6bbc5108a4538b47b57acfb95986a81d99f9ebc78a6dbfa62ee",
                          "typeString": "literal_string \"creator cannot be null address\""
                        },
                        "value": "creator cannot be null address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6b6b5b1211b5e6bbc5108a4538b47b57acfb95986a81d99f9ebc78a6dbfa62ee",
                          "typeString": "literal_string \"creator cannot be null address\""
                        }
                      ],
                      "id": 87387,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3813:7:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3813:65:206",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87396,
                  "nodeType": "ExpressionStatement",
                  "src": "3813:65:206"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3130",
                        "id": 87398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3917:2:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 87397,
                      "name": "_setDefaultRoyaltyPercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89270,
                      "src": "3888:28:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 87399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3888:32:206",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87400,
                  "nodeType": "ExpressionStatement",
                  "src": "3888:32:206"
                },
                {
                  "expression": {
                    "id": 87403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 87401,
                      "name": "disabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87329,
                      "src": "3930:8:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 87402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3941:5:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3930:16:206",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87404,
                  "nodeType": "ExpressionStatement",
                  "src": "3930:16:206"
                },
                {
                  "expression": {
                    "id": 87407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 87405,
                      "name": "maxTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87331,
                      "src": "3956:9:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 87406,
                      "name": "_maxTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87382,
                      "src": "3968:10:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3956:22:206",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 87408,
                  "nodeType": "ExpressionStatement",
                  "src": "3956:22:206"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 87409,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31067,
                      "src": "3989:14:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 87410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3989:16:206",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87411,
                  "nodeType": "ExpressionStatement",
                  "src": "3989:16:206"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87413,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87376,
                        "src": "4029:5:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 87414,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87378,
                        "src": "4036:7:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 87412,
                      "name": "__ERC721_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33900,
                      "src": "4015:13:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 87415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4015:29:206",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87416,
                  "nodeType": "ExpressionStatement",
                  "src": "4015:29:206"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 87417,
                      "name": "__ERC165_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35954,
                      "src": "4054:13:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 87418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4054:15:206",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87419,
                  "nodeType": "ExpressionStatement",
                  "src": "4054:15:206"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 87420,
                      "name": "__ERC2981__init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89153,
                      "src": "4079:15:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 87421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4079:17:206",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87422,
                  "nodeType": "ExpressionStatement",
                  "src": "4079:17:206"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87424,
                        "name": "_creator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87380,
                        "src": "4134:8:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 87423,
                      "name": "_setDefaultRoyaltyReceiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89211,
                      "src": "4107:26:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 87425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4107:36:206",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87426,
                  "nodeType": "ExpressionStatement",
                  "src": "4107:36:206"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87430,
                        "name": "_creator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87380,
                        "src": "4178:8:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 87427,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "4154:5:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_LazySovereignNFT_$87892_$",
                          "typeString": "type(contract super LazySovereignNFT)"
                        }
                      },
                      "id": 87429,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4160:17:206",
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31146,
                      "src": "4154:23:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 87431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4154:33:206",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87432,
                  "nodeType": "ExpressionStatement",
                  "src": "4154:33:206"
                }
              ]
            },
            "documentation": {
              "id": 87374,
              "nodeType": "StructuredDocumentation",
              "src": "3346:295:206",
              "text": " @dev Contract initialization function.\n @param _name The name of the NFT contract.\n @param _symbol The symbol of the NFT contract.\n @param _creator The address of the contract creator.\n @param _maxTokens The maximum number of tokens that can be minted."
            },
            "functionSelector": "5edc7c19",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 87385,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 87384,
                  "name": "initializer",
                  "nameLocations": [
                    "3791:11:206"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31611,
                  "src": "3791:11:206"
                },
                "nodeType": "ModifierInvocation",
                "src": "3791:11:206"
              }
            ],
            "name": "init",
            "nameLocation": "3655:4:206",
            "parameters": {
              "id": 87383,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87376,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "3685:5:206",
                  "nodeType": "VariableDeclaration",
                  "scope": 87434,
                  "src": "3669:21:206",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 87375,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3669:6:206",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87378,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "3716:7:206",
                  "nodeType": "VariableDeclaration",
                  "scope": 87434,
                  "src": "3700:23:206",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 87377,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3700:6:206",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87380,
                  "mutability": "mutable",
                  "name": "_creator",
                  "nameLocation": "3741:8:206",
                  "nodeType": "VariableDeclaration",
                  "scope": 87434,
                  "src": "3733:16:206",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87379,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3733:7:206",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87382,
                  "mutability": "mutable",
                  "name": "_maxTokens",
                  "nameLocation": "3767:10:206",
                  "nodeType": "VariableDeclaration",
                  "scope": 87434,
                  "src": "3759:18:206",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87381,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3759:7:206",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3659:124:206"
            },
            "returnParameters": {
              "id": 87386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3803:0:206"
            },
            "scope": 87892,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87445,
            "nodeType": "ModifierDefinition",
            "src": "4460:105:206",
            "nodes": [],
            "body": {
              "id": 87444,
              "nodeType": "Block",
              "src": "4485:80:206",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4503:9:206",
                        "subExpression": {
                          "id": 87438,
                          "name": "disabled",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87329,
                          "src": "4504:8:206",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e7472616374206d757374206e6f742062652064697361626c65642e",
                        "id": 87440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4514:32:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7b71ca1c3bd528156808cb7a73ab2c5a516c90c9e4e66cd32f11bb4e07aeb5ad",
                          "typeString": "literal_string \"Contract must not be disabled.\""
                        },
                        "value": "Contract must not be disabled."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7b71ca1c3bd528156808cb7a73ab2c5a516c90c9e4e66cd32f11bb4e07aeb5ad",
                          "typeString": "literal_string \"Contract must not be disabled.\""
                        }
                      ],
                      "id": 87437,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4495:7:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4495:52:206",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87442,
                  "nodeType": "ExpressionStatement",
                  "src": "4495:52:206"
                },
                {
                  "id": 87443,
                  "nodeType": "PlaceholderStatement",
                  "src": "4557:1:206"
                }
              ]
            },
            "documentation": {
              "id": 87435,
              "nodeType": "StructuredDocumentation",
              "src": "4381:74:206",
              "text": " @dev Modifier to check if the contract is not disabled."
            },
            "name": "ifNotDisabled",
            "nameLocation": "4469:13:206",
            "parameters": {
              "id": 87436,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4482:2:206"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 87464,
            "nodeType": "FunctionDefinition",
            "src": "4927:166:206",
            "nodes": [],
            "body": {
              "id": 87463,
              "nodeType": "Block",
              "src": "5040:53:206",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 87461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 87457,
                        "name": "minterAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87339,
                        "src": "5050:15:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 87459,
                      "indexExpression": {
                        "id": 87458,
                        "name": "_minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87448,
                        "src": "5066:7:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5050:24:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 87460,
                      "name": "_isMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87450,
                      "src": "5077:9:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5050:36:206",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87462,
                  "nodeType": "ExpressionStatement",
                  "src": "5050:36:206"
                }
              ]
            },
            "documentation": {
              "id": 87446,
              "nodeType": "StructuredDocumentation",
              "src": "4759:163:206",
              "text": " @dev Set a minter for the contract\n @param _minter address of the minter.\n @param _isMinter bool of whether the address is a minter."
            },
            "functionSelector": "0de54ba0",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 87453,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 87452,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "5016:9:206"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31086,
                  "src": "5016:9:206"
                },
                "nodeType": "ModifierInvocation",
                "src": "5016:9:206"
              },
              {
                "id": 87455,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 87454,
                  "name": "ifNotDisabled",
                  "nameLocations": [
                    "5026:13:206"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 87445,
                  "src": "5026:13:206"
                },
                "nodeType": "ModifierInvocation",
                "src": "5026:13:206"
              }
            ],
            "name": "setMinterApproval",
            "nameLocation": "4936:17:206",
            "parameters": {
              "id": 87451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87448,
                  "mutability": "mutable",
                  "name": "_minter",
                  "nameLocation": "4971:7:206",
                  "nodeType": "VariableDeclaration",
                  "scope": 87464,
                  "src": "4963:15:206",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87447,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4963:7:206",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87450,
                  "mutability": "mutable",
                  "name": "_isMinter",
                  "nameLocation": "4993:9:206",
                  "nodeType": "VariableDeclaration",
                  "scope": 87464,
                  "src": "4988:14:206",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 87449,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4988:4:206",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4953:55:206"
            },
            "returnParameters": {
              "id": 87456,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5040:0:206"
            },
            "scope": 87892,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87482,
            "nodeType": "FunctionDefinition",
            "src": "5330:181:206",
            "nodes": [],
            "body": {
              "id": 87481,
              "nodeType": "Block",
              "src": "5455:56:206",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87477,
                        "name": "_baseURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87467,
                        "src": "5478:8:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 87478,
                        "name": "_numberOfTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87469,
                        "src": "5488:15:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 87476,
                      "name": "_prepareMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87891,
                      "src": "5465:12:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_calldata_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string calldata,uint256)"
                      }
                    },
                    "id": 87479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5465:39:206",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87480,
                  "nodeType": "ExpressionStatement",
                  "src": "5465:39:206"
                }
              ]
            },
            "documentation": {
              "id": 87465,
              "nodeType": "StructuredDocumentation",
              "src": "5099:226:206",
              "text": " @dev Prepare a minting batch with a specified base URI and number of tokens.\n @param _baseURI The base URI for token metadata.\n @param _numberOfTokens The number of tokens to prepare for minting."
            },
            "functionSelector": "b390ac25",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 87472,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 87471,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "5431:9:206"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31086,
                  "src": "5431:9:206"
                },
                "nodeType": "ModifierInvocation",
                "src": "5431:9:206"
              },
              {
                "id": 87474,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 87473,
                  "name": "ifNotDisabled",
                  "nameLocations": [
                    "5441:13:206"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 87445,
                  "src": "5441:13:206"
                },
                "nodeType": "ModifierInvocation",
                "src": "5441:13:206"
              }
            ],
            "name": "prepareMint",
            "nameLocation": "5339:11:206",
            "parameters": {
              "id": 87470,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87467,
                  "mutability": "mutable",
                  "name": "_baseURI",
                  "nameLocation": "5376:8:206",
                  "nodeType": "VariableDeclaration",
                  "scope": 87482,
                  "src": "5360:24:206",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 87466,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5360:6:206",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87469,
                  "mutability": "mutable",
                  "name": "_numberOfTokens",
                  "nameLocation": "5402:15:206",
                  "nodeType": "VariableDeclaration",
                  "scope": 87482,
                  "src": "5394:23:206",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87468,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5394:7:206",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5350:73:206"
            },
            "returnParameters": {
              "id": 87475,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5455:0:206"
            },
            "scope": 87892,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87508,
            "nodeType": "FunctionDefinition",
            "src": "5826:257:206",
            "nodes": [],
            "body": {
              "id": 87507,
              "nodeType": "Block",
              "src": "5986:97:206",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87497,
                        "name": "_baseURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87485,
                        "src": "6009:8:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 87498,
                        "name": "_numberOfTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87487,
                        "src": "6019:15:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 87496,
                      "name": "_prepareMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87891,
                      "src": "5996:12:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_calldata_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string calldata,uint256)"
                      }
                    },
                    "id": 87499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5996:39:206",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87500,
                  "nodeType": "ExpressionStatement",
                  "src": "5996:39:206"
                },
                {
                  "expression": {
                    "id": 87505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 87501,
                        "name": "minterAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87339,
                        "src": "6045:15:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 87503,
                      "indexExpression": {
                        "id": 87502,
                        "name": "_minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87489,
                        "src": "6061:7:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6045:24:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 87504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6072:4:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6045:31:206",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87506,
                  "nodeType": "ExpressionStatement",
                  "src": "6045:31:206"
                }
              ]
            },
            "documentation": {
              "id": 87483,
              "nodeType": "StructuredDocumentation",
              "src": "5517:304:206",
              "text": " @dev Prepare a minting batch with a specified base URI and number of tokens, and assign a minter address.\n @param _baseURI The base URI for token metadata.\n @param _numberOfTokens The number of tokens to prepare for minting.\n @param _minter The address of the minter."
            },
            "functionSelector": "b9fbd25c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 87492,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 87491,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "5962:9:206"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31086,
                  "src": "5962:9:206"
                },
                "nodeType": "ModifierInvocation",
                "src": "5962:9:206"
              },
              {
                "id": 87494,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 87493,
                  "name": "ifNotDisabled",
                  "nameLocations": [
                    "5972:13:206"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 87445,
                  "src": "5972:13:206"
                },
                "nodeType": "ModifierInvocation",
                "src": "5972:13:206"
              }
            ],
            "name": "prepareMintWithMinter",
            "nameLocation": "5835:21:206",
            "parameters": {
              "id": 87490,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87485,
                  "mutability": "mutable",
                  "name": "_baseURI",
                  "nameLocation": "5882:8:206",
                  "nodeType": "VariableDeclaration",
                  "scope": 87508,
                  "src": "5866:24:206",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 87484,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5866:6:206",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87487,
                  "mutability": "mutable",
                  "name": "_numberOfTokens",
                  "nameLocation": "5908:15:206",
                  "nodeType": "VariableDeclaration",
                  "scope": 87508,
                  "src": "5900:23:206",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87486,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5900:7:206",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87489,
                  "mutability": "mutable",
                  "name": "_minter",
                  "nameLocation": "5941:7:206",
                  "nodeType": "VariableDeclaration",
                  "scope": 87508,
                  "src": "5933:15:206",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87488,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5933:7:206",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5856:98:206"
            },
            "returnParameters": {
              "id": 87495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5986:0:206"
            },
            "scope": 87892,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87541,
            "nodeType": "FunctionDefinition",
            "src": "6270:428:206",
            "nodes": [],
            "body": {
              "id": 87540,
              "nodeType": "Block",
              "src": "6360:338:206",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 87528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 87523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 87519,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6391:3:206",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 87520,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6395:6:206",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6391:10:206",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 87521,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31095,
                              "src": "6405:5:206",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 87522,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6405:7:206",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6391:21:206",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 87524,
                            "name": "minterAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87339,
                            "src": "6416:15:206",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 87527,
                          "indexExpression": {
                            "expression": {
                              "id": 87525,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6432:3:206",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 87526,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6436:6:206",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6432:10:206",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6416:27:206",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6391:52:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6c617a794d696e743a3a6f6e6c79206f776e6572206f7220617070726f766564206d696e7465722063616e206d696e74",
                        "id": 87529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6457:50:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_154b6b63a911da25ac18acc635a749cf602b944b6188d913be9072c29e435a47",
                          "typeString": "literal_string \"lazyMint::only owner or approved minter can mint\""
                        },
                        "value": "lazyMint::only owner or approved minter can mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_154b6b63a911da25ac18acc635a749cf602b944b6188d913be9072c29e435a47",
                          "typeString": "literal_string \"lazyMint::only owner or approved minter can mint\""
                        }
                      ],
                      "id": 87518,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6370:7:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6370:147:206",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87531,
                  "nodeType": "ExpressionStatement",
                  "src": "6370:147:206"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87533,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87511,
                        "src": "6576:9:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 87534,
                          "name": "getDefaultRoyaltyPercentage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89286,
                          "src": "6603:27:206",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 87535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6603:29:206",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 87536,
                          "name": "getDefaultRoyaltyReceiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89278,
                          "src": "6650:25:206",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 87537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6650:27:206",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 87532,
                      "name": "_createToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87853,
                      "src": "6546:12:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256,address) returns (uint256)"
                      }
                    },
                    "id": 87538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6546:145:206",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 87517,
                  "id": 87539,
                  "nodeType": "Return",
                  "src": "6527:164:206"
                }
              ]
            },
            "documentation": {
              "id": 87509,
              "nodeType": "StructuredDocumentation",
              "src": "6089:176:206",
              "text": " @dev Mint a new token to the specified receiver.\n @param _receiver The address of the token receiver.\n @return uint256 Token Id of the new token."
            },
            "functionSelector": "755edd17",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 87514,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 87513,
                  "name": "ifNotDisabled",
                  "nameLocations": [
                    "6328:13:206"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 87445,
                  "src": "6328:13:206"
                },
                "nodeType": "ModifierInvocation",
                "src": "6328:13:206"
              }
            ],
            "name": "mintTo",
            "nameLocation": "6279:6:206",
            "parameters": {
              "id": 87512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87511,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "6303:9:206",
                  "nodeType": "VariableDeclaration",
                  "scope": 87541,
                  "src": "6295:17:206",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87510,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6295:7:206",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6285:33:206"
            },
            "returnParameters": {
              "id": 87517,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87516,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87541,
                  "src": "6351:7:206",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87515,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6351:7:206",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6350:9:206"
            },
            "scope": 87892,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87562,
            "nodeType": "FunctionDefinition",
            "src": "6820:196:206",
            "nodes": [],
            "body": {
              "id": 87561,
              "nodeType": "Block",
              "src": "6866:150:206",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 87553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 87549,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87544,
                              "src": "6905:8:206",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 87548,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34001,
                            "src": "6897:7:206",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 87550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6897:17:206",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 87551,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6918:3:206",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 87552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6922:6:206",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6918:10:206",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6897:31:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d75737420626520746865206f776e6572206f662074686520746f6b656e2e",
                        "id": 87554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6942:33:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_53b82fbec1ffee6cd23478fb42d47a3c9d94588d16a7244f1dfbe7e93dd41efb",
                          "typeString": "literal_string \"Must be the owner of the token.\""
                        },
                        "value": "Must be the owner of the token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_53b82fbec1ffee6cd23478fb42d47a3c9d94588d16a7244f1dfbe7e93dd41efb",
                          "typeString": "literal_string \"Must be the owner of the token.\""
                        }
                      ],
                      "id": 87547,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6876:7:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6876:109:206",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87556,
                  "nodeType": "ExpressionStatement",
                  "src": "6876:109:206"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87558,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87544,
                        "src": "7000:8:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 87557,
                      "name": "burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34965,
                      "src": "6995:4:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 87559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6995:14:206",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87560,
                  "nodeType": "ExpressionStatement",
                  "src": "6995:14:206"
                }
              ]
            },
            "documentation": {
              "id": 87542,
              "nodeType": "StructuredDocumentation",
              "src": "6704:111:206",
              "text": " @dev Delete a token with the given ID.\n @param _tokenId The ID of the token to delete."
            },
            "functionSelector": "6297c16c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deleteToken",
            "nameLocation": "6829:11:206",
            "parameters": {
              "id": 87545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87544,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "6849:8:206",
                  "nodeType": "VariableDeclaration",
                  "scope": 87562,
                  "src": "6841:16:206",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87543,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6841:7:206",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6840:18:206"
            },
            "returnParameters": {
              "id": 87546,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6866:0:206"
            },
            "scope": 87892,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87578,
            "nodeType": "FunctionDefinition",
            "src": "7100:119:206",
            "nodes": [],
            "body": {
              "id": 87577,
              "nodeType": "Block",
              "src": "7144:75:206",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 87570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 87568,
                      "name": "disabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87329,
                      "src": "7154:8:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 87569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7165:4:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "7154:15:206",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87571,
                  "nodeType": "ExpressionStatement",
                  "src": "7154:15:206"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 87573,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7201:3:206",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 87574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7205:6:206",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7201:10:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 87572,
                      "name": "ContractDisabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87353,
                      "src": "7184:16:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 87575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7184:28:206",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87576,
                  "nodeType": "EmitStatement",
                  "src": "7179:33:206"
                }
              ]
            },
            "documentation": {
              "id": 87563,
              "nodeType": "StructuredDocumentation",
              "src": "7022:73:206",
              "text": " @dev Disable the contract, preventing further minting."
            },
            "functionSelector": "894ba833",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 87566,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 87565,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "7134:9:206"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31086,
                  "src": "7134:9:206"
                },
                "nodeType": "ModifierInvocation",
                "src": "7134:9:206"
              }
            ],
            "name": "disableContract",
            "nameLocation": "7109:15:206",
            "parameters": {
              "id": 87564,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7124:2:206"
            },
            "returnParameters": {
              "id": 87567,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7144:0:206"
            },
            "scope": 87892,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87591,
            "nodeType": "FunctionDefinition",
            "src": "7364:127:206",
            "nodes": [],
            "body": {
              "id": 87590,
              "nodeType": "Block",
              "src": "7437:54:206",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87587,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87581,
                        "src": "7474:9:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 87586,
                      "name": "_setDefaultRoyaltyReceiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89211,
                      "src": "7447:26:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 87588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7447:37:206",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87589,
                  "nodeType": "ExpressionStatement",
                  "src": "7447:37:206"
                }
              ]
            },
            "documentation": {
              "id": 87579,
              "nodeType": "StructuredDocumentation",
              "src": "7225:134:206",
              "text": " @dev Set the default royalty receiver address.\n @param _receiver The address of the default royalty receiver."
            },
            "functionSelector": "3ebc82c5",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 87584,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 87583,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "7427:9:206"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31086,
                  "src": "7427:9:206"
                },
                "nodeType": "ModifierInvocation",
                "src": "7427:9:206"
              }
            ],
            "name": "setDefaultRoyaltyReceiver",
            "nameLocation": "7373:25:206",
            "parameters": {
              "id": 87582,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87581,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "7407:9:206",
                  "nodeType": "VariableDeclaration",
                  "scope": 87591,
                  "src": "7399:17:206",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87580,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7399:7:206",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7398:19:206"
            },
            "returnParameters": {
              "id": 87585,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7437:0:206"
            },
            "scope": 87892,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87608,
            "nodeType": "FunctionDefinition",
            "src": "7683:169:206",
            "nodes": [],
            "body": {
              "id": 87607,
              "nodeType": "Block",
              "src": "7797:55:206",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 87605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 87601,
                        "name": "royaltyReceivers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89136,
                        "src": "7807:16:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 87603,
                      "indexExpression": {
                        "id": 87602,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87596,
                        "src": "7824:8:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7807:26:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 87604,
                      "name": "_receiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87594,
                      "src": "7836:9:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7807:38:206",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 87606,
                  "nodeType": "ExpressionStatement",
                  "src": "7807:38:206"
                }
              ]
            },
            "documentation": {
              "id": 87592,
              "nodeType": "StructuredDocumentation",
              "src": "7497:181:206",
              "text": " @dev Set a specific royalty receiver address for a token.\n @param _receiver The address of the royalty receiver.\n @param _tokenId The ID of the token."
            },
            "functionSelector": "efc32cd4",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 87599,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 87598,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "7787:9:206"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31086,
                  "src": "7787:9:206"
                },
                "nodeType": "ModifierInvocation",
                "src": "7787:9:206"
              }
            ],
            "name": "setRoyaltyReceiverForToken",
            "nameLocation": "7692:26:206",
            "parameters": {
              "id": 87597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87594,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "7736:9:206",
                  "nodeType": "VariableDeclaration",
                  "scope": 87608,
                  "src": "7728:17:206",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87593,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7728:7:206",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87596,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "7763:8:206",
                  "nodeType": "VariableDeclaration",
                  "scope": 87608,
                  "src": "7755:16:206",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87595,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7755:7:206",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7718:59:206"
            },
            "returnParameters": {
              "id": 87600,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7797:0:206"
            },
            "scope": 87892,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87634,
            "nodeType": "FunctionDefinition",
            "src": "7948:271:206",
            "nodes": [],
            "body": {
              "id": 87633,
              "nodeType": "Block",
              "src": "8016:203:206",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8047:26:206",
                        "subExpression": {
                          "expression": {
                            "id": 87617,
                            "name": "mintConfig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87349,
                            "src": "8048:10:206",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MintConfig_$87327_storage",
                              "typeString": "struct LazySovereignNFT.MintConfig storage ref"
                            }
                          },
                          "id": 87618,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8059:14:206",
                          "memberName": "lockedMetadata",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 87326,
                          "src": "8048:25:206",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "757064617465426173655552493a3a6d65746164617461206973206c6f636b6564",
                        "id": 87620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8087:35:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6e879a4eb0b95d57c5322495d59f06e56373f394de36bd10c977c1387a356c74",
                          "typeString": "literal_string \"updateBaseURI::metadata is locked\""
                        },
                        "value": "updateBaseURI::metadata is locked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6e879a4eb0b95d57c5322495d59f06e56373f394de36bd10c977c1387a356c74",
                          "typeString": "literal_string \"updateBaseURI::metadata is locked\""
                        }
                      ],
                      "id": 87616,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8026:7:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8026:106:206",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87622,
                  "nodeType": "ExpressionStatement",
                  "src": "8026:106:206"
                },
                {
                  "expression": {
                    "id": 87627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 87623,
                        "name": "mintConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87349,
                        "src": "8143:10:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MintConfig_$87327_storage",
                          "typeString": "struct LazySovereignNFT.MintConfig storage ref"
                        }
                      },
                      "id": 87625,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8154:7:206",
                      "memberName": "baseURI",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87324,
                      "src": "8143:18:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 87626,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87611,
                      "src": "8164:8:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "8143:29:206",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 87628,
                  "nodeType": "ExpressionStatement",
                  "src": "8143:29:206"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 87630,
                        "name": "_baseURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87611,
                        "src": "8203:8:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 87629,
                      "name": "MetadataUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87367,
                      "src": "8187:15:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 87631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8187:25:206",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87632,
                  "nodeType": "EmitStatement",
                  "src": "8182:30:206"
                }
              ]
            },
            "documentation": {
              "id": 87609,
              "nodeType": "StructuredDocumentation",
              "src": "7858:85:206",
              "text": " @dev Update the base URI.\n @param _baseURI The new base URI."
            },
            "functionSelector": "931688cb",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 87614,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 87613,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "8006:9:206"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31086,
                  "src": "8006:9:206"
                },
                "nodeType": "ModifierInvocation",
                "src": "8006:9:206"
              }
            ],
            "name": "updateBaseURI",
            "nameLocation": "7957:13:206",
            "parameters": {
              "id": 87612,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87611,
                  "mutability": "mutable",
                  "name": "_baseURI",
                  "nameLocation": "7987:8:206",
                  "nodeType": "VariableDeclaration",
                  "scope": 87634,
                  "src": "7971:24:206",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 87610,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7971:6:206",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7970:26:206"
            },
            "returnParameters": {
              "id": 87615,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8016:0:206"
            },
            "scope": 87892,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87663,
            "nodeType": "FunctionDefinition",
            "src": "8333:337:206",
            "nodes": [],
            "body": {
              "id": 87662,
              "nodeType": "Block",
              "src": "8446:224:206",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8477:26:206",
                        "subExpression": {
                          "expression": {
                            "id": 87645,
                            "name": "mintConfig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87349,
                            "src": "8478:10:206",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_MintConfig_$87327_storage",
                              "typeString": "struct LazySovereignNFT.MintConfig storage ref"
                            }
                          },
                          "id": 87646,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8489:14:206",
                          "memberName": "lockedMetadata",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 87326,
                          "src": "8478:25:206",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "757064617465546f6b656e5552493a3a6d65746164617461206973206c6f636b6564",
                        "id": 87648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8517:36:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_309aad6c395b322362dd0157420176890079368edc62032597fd50c21d9a4b5a",
                          "typeString": "literal_string \"updateTokenURI::metadata is locked\""
                        },
                        "value": "updateTokenURI::metadata is locked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_309aad6c395b322362dd0157420176890079368edc62032597fd50c21d9a4b5a",
                          "typeString": "literal_string \"updateTokenURI::metadata is locked\""
                        }
                      ],
                      "id": 87644,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8456:7:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8456:107:206",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87650,
                  "nodeType": "ExpressionStatement",
                  "src": "8456:107:206"
                },
                {
                  "expression": {
                    "id": 87655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 87651,
                        "name": "_tokenURIs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87343,
                        "src": "8574:10:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
                      "id": 87653,
                      "indexExpression": {
                        "id": 87652,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87637,
                        "src": "8585:8:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8574:20:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 87654,
                      "name": "_metadataUri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87639,
                      "src": "8597:12:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "8574:35:206",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 87656,
                  "nodeType": "ExpressionStatement",
                  "src": "8574:35:206"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 87658,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87637,
                        "src": "8640:8:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 87659,
                        "name": "_metadataUri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87639,
                        "src": "8650:12:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 87657,
                      "name": "TokenURIUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87373,
                      "src": "8624:15:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 87660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8624:39:206",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87661,
                  "nodeType": "EmitStatement",
                  "src": "8619:44:206"
                }
              ]
            },
            "documentation": {
              "id": 87635,
              "nodeType": "StructuredDocumentation",
              "src": "8225:103:206",
              "text": " @dev Update the token metadata URI.\n @param _metadataUri The new metadata URI."
            },
            "functionSelector": "18e97fd1",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 87642,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 87641,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "8436:9:206"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31086,
                  "src": "8436:9:206"
                },
                "nodeType": "ModifierInvocation",
                "src": "8436:9:206"
              }
            ],
            "name": "updateTokenURI",
            "nameLocation": "8342:14:206",
            "parameters": {
              "id": 87640,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87637,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "8374:8:206",
                  "nodeType": "VariableDeclaration",
                  "scope": 87663,
                  "src": "8366:16:206",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87636,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8366:7:206",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87639,
                  "mutability": "mutable",
                  "name": "_metadataUri",
                  "nameLocation": "8408:12:206",
                  "nodeType": "VariableDeclaration",
                  "scope": 87663,
                  "src": "8392:28:206",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 87638,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8392:6:206",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8356:70:206"
            },
            "returnParameters": {
              "id": 87643,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8446:0:206"
            },
            "scope": 87892,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87681,
            "nodeType": "FunctionDefinition",
            "src": "8751:140:206",
            "nodes": [],
            "body": {
              "id": 87680,
              "nodeType": "Block",
              "src": "8793:98:206",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 87670,
                          "name": "mintConfig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87349,
                          "src": "8823:10:206",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_MintConfig_$87327_storage",
                            "typeString": "struct LazySovereignNFT.MintConfig storage ref"
                          }
                        },
                        "id": 87671,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8834:7:206",
                        "memberName": "baseURI",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 87324,
                        "src": "8823:18:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "id": 87669,
                      "name": "MetadataLocked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87363,
                      "src": "8808:14:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 87672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8808:34:206",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87673,
                  "nodeType": "EmitStatement",
                  "src": "8803:39:206"
                },
                {
                  "expression": {
                    "id": 87678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 87674,
                        "name": "mintConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87349,
                        "src": "8852:10:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MintConfig_$87327_storage",
                          "typeString": "struct LazySovereignNFT.MintConfig storage ref"
                        }
                      },
                      "id": 87676,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8863:14:206",
                      "memberName": "lockedMetadata",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87326,
                      "src": "8852:25:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 87677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8880:4:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "8852:32:206",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87679,
                  "nodeType": "ExpressionStatement",
                  "src": "8852:32:206"
                }
              ]
            },
            "documentation": {
              "id": 87664,
              "nodeType": "StructuredDocumentation",
              "src": "8676:70:206",
              "text": " @dev Lock the metadata to prevent  further updates."
            },
            "functionSelector": "53df5c7c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 87667,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 87666,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "8783:9:206"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31086,
                  "src": "8783:9:206"
                },
                "nodeType": "ModifierInvocation",
                "src": "8783:9:206"
              }
            ],
            "name": "lockBaseURI",
            "nameLocation": "8760:11:206",
            "parameters": {
              "id": 87665,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8771:2:206"
            },
            "returnParameters": {
              "id": 87668,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8793:0:206"
            },
            "scope": 87892,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87694,
            "nodeType": "FunctionDefinition",
            "src": "9282:120:206",
            "nodes": [],
            "body": {
              "id": 87693,
              "nodeType": "Block",
              "src": "9353:49:206",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 87689,
                      "name": "minterAddresses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87339,
                      "src": "9370:15:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 87691,
                    "indexExpression": {
                      "id": 87690,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87684,
                      "src": "9386:8:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9370:25:206",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 87688,
                  "id": 87692,
                  "nodeType": "Return",
                  "src": "9363:32:206"
                }
              ]
            },
            "documentation": {
              "id": 87682,
              "nodeType": "StructuredDocumentation",
              "src": "9083:194:206",
              "text": " @dev Checks if the supplied address is approved for minting\n @param _address The address of the minter.\n @return bool, whether the address is approved for minting."
            },
            "functionSelector": "3a3d146f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedMinter",
            "nameLocation": "9291:16:206",
            "parameters": {
              "id": 87685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87684,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "9316:8:206",
                  "nodeType": "VariableDeclaration",
                  "scope": 87694,
                  "src": "9308:16:206",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87683,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9308:7:206",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9307:18:206"
            },
            "returnParameters": {
              "id": 87688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87687,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87694,
                  "src": "9347:4:206",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 87686,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9347:4:206",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9346:6:206"
            },
            "scope": 87892,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87710,
            "nodeType": "FunctionDefinition",
            "src": "9584:141:206",
            "nodes": [],
            "body": {
              "id": 87709,
              "nodeType": "Block",
              "src": "9685:40:206",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 87705,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31095,
                          "src": "9710:5:206",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 87706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9710:7:206",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 87704,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "9702:8:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 87703,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9702:8:206",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 87707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9702:16:206",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 87702,
                  "id": 87708,
                  "nodeType": "Return",
                  "src": "9695:23:206"
                }
              ]
            },
            "baseFunctions": [
              89312
            ],
            "documentation": {
              "id": 87695,
              "nodeType": "StructuredDocumentation",
              "src": "9408:171:206",
              "text": " @dev Get the address of the token creator for a given token ID.\n @param _tokenId The ID of the token.\n @return address of the token creator."
            },
            "functionSelector": "40c1a064",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenCreator",
            "nameLocation": "9593:12:206",
            "overrides": {
              "id": 87699,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9650:8:206"
            },
            "parameters": {
              "id": 87698,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87697,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "9623:8:206",
                  "nodeType": "VariableDeclaration",
                  "scope": 87710,
                  "src": "9615:16:206",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87696,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9615:7:206",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9605:32:206"
            },
            "returnParameters": {
              "id": 87702,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87701,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87710,
                  "src": "9668:15:206",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 87700,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9668:15:206",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9667:17:206"
            },
            "scope": 87892,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87720,
            "nodeType": "FunctionDefinition",
            "src": "9841:99:206",
            "nodes": [],
            "body": {
              "id": 87719,
              "nodeType": "Block",
              "src": "9906:34:206",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 87717,
                    "name": "mintConfig",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 87349,
                    "src": "9923:10:206",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MintConfig_$87327_storage",
                      "typeString": "struct LazySovereignNFT.MintConfig storage ref"
                    }
                  },
                  "functionReturnParameters": 87716,
                  "id": 87718,
                  "nodeType": "Return",
                  "src": "9916:17:206"
                }
              ]
            },
            "documentation": {
              "id": 87711,
              "nodeType": "StructuredDocumentation",
              "src": "9731:105:206",
              "text": " @dev Get the current minting configuration.\n @return mintConfig the mint config."
            },
            "functionSelector": "9338bb5d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMintConfig",
            "nameLocation": "9850:13:206",
            "parameters": {
              "id": 87712,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9863:2:206"
            },
            "returnParameters": {
              "id": 87716,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87715,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87720,
                  "src": "9887:17:206",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MintConfig_$87327_memory_ptr",
                    "typeString": "struct LazySovereignNFT.MintConfig"
                  },
                  "typeName": {
                    "id": 87714,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 87713,
                      "name": "MintConfig",
                      "nameLocations": [
                        "9887:10:206"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 87327,
                      "src": "9887:10:206"
                    },
                    "referencedDeclaration": 87327,
                    "src": "9887:10:206",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MintConfig_$87327_storage_ptr",
                      "typeString": "struct LazySovereignNFT.MintConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9886:19:206"
            },
            "scope": 87892,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87759,
            "nodeType": "FunctionDefinition",
            "src": "10218:451:206",
            "nodes": [],
            "body": {
              "id": 87758,
              "nodeType": "Block",
              "src": "10321:348:206",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 87737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 87731,
                              "name": "_tokenURIs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87343,
                              "src": "10341:10:206",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 87733,
                            "indexExpression": {
                              "id": 87732,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87723,
                              "src": "10352:8:206",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10341:20:206",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "id": 87730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10335:5:206",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 87729,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "10335:5:206",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10335:27:206",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes storage pointer"
                        }
                      },
                      "id": 87735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10363:6:206",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "10335:34:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 87736,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10372:1:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10335:38:206",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87743,
                  "nodeType": "IfStatement",
                  "src": "10331:96:206",
                  "trueBody": {
                    "id": 87742,
                    "nodeType": "Block",
                    "src": "10375:52:206",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 87738,
                            "name": "_tokenURIs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87343,
                            "src": "10396:10:206",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                              "typeString": "mapping(uint256 => string storage ref)"
                            }
                          },
                          "id": 87740,
                          "indexExpression": {
                            "id": 87739,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87723,
                            "src": "10407:8:206",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10396:20:206",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 87728,
                        "id": 87741,
                        "nodeType": "Return",
                        "src": "10389:27:206"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 87748,
                              "name": "mintConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87349,
                              "src": "10517:10:206",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_MintConfig_$87327_storage",
                                "typeString": "struct LazySovereignNFT.MintConfig storage ref"
                              }
                            },
                            "id": 87749,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10528:7:206",
                            "memberName": "baseURI",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 87324,
                            "src": "10517:18:206",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          {
                            "hexValue": "2f",
                            "id": 87750,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10557:3:206",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527",
                              "typeString": "literal_string \"/\""
                            },
                            "value": "/"
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 87751,
                                "name": "_tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87723,
                                "src": "10582:8:206",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 87752,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10591:8:206",
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 35769,
                              "src": "10582:17:206",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 87753,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10582:19:206",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "2e6a736f6e",
                            "id": 87754,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10623:7:206",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                              "typeString": "literal_string \".json\""
                            },
                            "value": ".json"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_fba9715e477e68952d3f1df7a185b3708aadad50ec10cc793973864023868527",
                              "typeString": "literal_string \"/\""
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                              "typeString": "literal_string \".json\""
                            }
                          ],
                          "expression": {
                            "id": 87746,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "10479:3:206",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 87747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "10483:12:206",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "10479:16:206",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 87755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10479:169:206",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 87745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "10455:6:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 87744,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "10455:6:206",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 87756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10455:207:206",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 87728,
                  "id": 87757,
                  "nodeType": "Return",
                  "src": "10436:226:206"
                }
              ]
            },
            "baseFunctions": [
              34060
            ],
            "documentation": {
              "id": 87721,
              "nodeType": "StructuredDocumentation",
              "src": "9946:267:206",
              "text": " @dev Get the token URI for a specific token. If a token has a set URI,\n it will return that, otherwise it will return the token URI computed from\n the base URI.\n @param _tokenId The ID of the token.\n @return The token's URI."
            },
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "10227:8:206",
            "overrides": {
              "id": 87725,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10288:8:206"
            },
            "parameters": {
              "id": 87724,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87723,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "10253:8:206",
                  "nodeType": "VariableDeclaration",
                  "scope": 87759,
                  "src": "10245:16:206",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87722,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10245:7:206",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10235:32:206"
            },
            "returnParameters": {
              "id": 87728,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87727,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87759,
                  "src": "10306:13:206",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 87726,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10306:6:206",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10305:15:206"
            },
            "scope": 87892,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 87770,
            "nodeType": "FunctionDefinition",
            "src": "10791:109:206",
            "nodes": [],
            "body": {
              "id": 87769,
              "nodeType": "Block",
              "src": "10852:48:206",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87765,
                        "name": "tokenIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87346,
                        "src": "10869:14:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$35532_storage",
                          "typeString": "struct CountersUpgradeable.Counter storage ref"
                        }
                      },
                      "id": 87766,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10884:7:206",
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35544,
                      "src": "10869:22:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$35532_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$35532_storage_ptr_$",
                        "typeString": "function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 87767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10869:24:206",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 87764,
                  "id": 87768,
                  "nodeType": "Return",
                  "src": "10862:31:206"
                }
              ]
            },
            "documentation": {
              "id": 87760,
              "nodeType": "StructuredDocumentation",
              "src": "10675:111:206",
              "text": " @dev Get the total supply of tokens in existence.\n @return The total supply of tokens."
            },
            "functionSelector": "18160ddd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "10800:11:206",
            "parameters": {
              "id": 87761,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10811:2:206"
            },
            "returnParameters": {
              "id": 87764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87763,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87770,
                  "src": "10843:7:206",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87762,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10843:7:206",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10842:9:206"
            },
            "scope": 87892,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 87805,
            "nodeType": "FunctionDefinition",
            "src": "10967:482:206",
            "nodes": [],
            "body": {
              "id": 87804,
              "nodeType": "Block",
              "src": "11174:275:206",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 87802,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 87797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 87792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 87787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 87782,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87773,
                            "src": "11203:11:206",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 87784,
                                  "name": "ITokenCreator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 89313,
                                  "src": "11223:13:206",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ITokenCreator_$89313_$",
                                    "typeString": "type(contract ITokenCreator)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_contract$_ITokenCreator_$89313_$",
                                    "typeString": "type(contract ITokenCreator)"
                                  }
                                ],
                                "id": 87783,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "11218:4:206",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 87785,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11218:19:206",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_contract$_ITokenCreator_$89313",
                                "typeString": "type(contract ITokenCreator)"
                              }
                            },
                            "id": 87786,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "11238:11:206",
                            "memberName": "interfaceId",
                            "nodeType": "MemberAccess",
                            "src": "11218:31:206",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "11203:46:206",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 87790,
                              "name": "interfaceId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87773,
                              "src": "11301:11:206",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "expression": {
                              "id": 87788,
                              "name": "ERC165Upgradeable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35983,
                              "src": "11265:17:206",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC165Upgradeable_$35983_$",
                                "typeString": "type(contract ERC165Upgradeable)"
                              }
                            },
                            "id": 87789,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11283:17:206",
                            "memberName": "supportsInterface",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35977,
                            "src": "11265:35:206",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                              "typeString": "function (bytes4) view returns (bool)"
                            }
                          },
                          "id": 87791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11265:48:206",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "11203:110:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 87795,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87773,
                            "src": "11366:11:206",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "id": 87793,
                            "name": "ERC2981Upgradeable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89287,
                            "src": "11329:18:206",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC2981Upgradeable_$89287_$",
                              "typeString": "type(contract ERC2981Upgradeable)"
                            }
                          },
                          "id": 87794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11348:17:206",
                          "memberName": "supportsInterface",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 89260,
                          "src": "11329:36:206",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                            "typeString": "function (bytes4) view returns (bool)"
                          }
                        },
                        "id": 87796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11329:49:206",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "11203:175:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 87800,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87773,
                          "src": "11430:11:206",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 87798,
                          "name": "ERC721Upgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34787,
                          "src": "11394:17:206",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC721Upgradeable_$34787_$",
                            "typeString": "type(contract ERC721Upgradeable)"
                          }
                        },
                        "id": 87799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11412:17:206",
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33949,
                        "src": "11394:35:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 87801,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11394:48:206",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "11203:239:206",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 87781,
                  "id": 87803,
                  "nodeType": "Return",
                  "src": "11184:258:206"
                }
              ]
            },
            "baseFunctions": [
              33949,
              35977,
              89260
            ],
            "documentation": {
              "id": 87771,
              "nodeType": "StructuredDocumentation",
              "src": "10906:56:206",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "10976:17:206",
            "overrides": {
              "id": 87778,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 87775,
                  "name": "ERC165Upgradeable",
                  "nameLocations": [
                    "11089:17:206"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 35983,
                  "src": "11089:17:206"
                },
                {
                  "id": 87776,
                  "name": "ERC2981Upgradeable",
                  "nameLocations": [
                    "11108:18:206"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 89287,
                  "src": "11108:18:206"
                },
                {
                  "id": 87777,
                  "name": "ERC721Upgradeable",
                  "nameLocations": [
                    "11128:17:206"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 34787,
                  "src": "11128:17:206"
                }
              ],
              "src": "11080:66:206"
            },
            "parameters": {
              "id": 87774,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87773,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "11010:11:206",
                  "nodeType": "VariableDeclaration",
                  "scope": 87805,
                  "src": "11003:18:206",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 87772,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "11003:6:206",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10993:34:206"
            },
            "returnParameters": {
              "id": 87781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87780,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87805,
                  "src": "11164:4:206",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 87779,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11164:4:206",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11163:6:206"
            },
            "scope": 87892,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 87853,
            "nodeType": "FunctionDefinition",
            "src": "11991:489:206",
            "nodes": [],
            "body": {
              "id": 87852,
              "nodeType": "Block",
              "src": "12137:343:206",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87817,
                        "name": "tokenIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87346,
                        "src": "12147:14:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$35532_storage",
                          "typeString": "struct CountersUpgradeable.Counter storage ref"
                        }
                      },
                      "id": 87819,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12162:9:206",
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35558,
                      "src": "12147:24:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$35532_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$35532_storage_ptr_$",
                        "typeString": "function (struct CountersUpgradeable.Counter storage pointer)"
                      }
                    },
                    "id": 87820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12147:26:206",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87821,
                  "nodeType": "ExpressionStatement",
                  "src": "12147:26:206"
                },
                {
                  "assignments": [
                    87823
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87823,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "12191:7:206",
                      "nodeType": "VariableDeclaration",
                      "scope": 87852,
                      "src": "12183:15:206",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 87822,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12183:7:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87827,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87824,
                        "name": "tokenIdCounter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87346,
                        "src": "12201:14:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$35532_storage",
                          "typeString": "struct CountersUpgradeable.Counter storage ref"
                        }
                      },
                      "id": 87825,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12216:7:206",
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 35544,
                      "src": "12201:22:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$35532_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$35532_storage_ptr_$",
                        "typeString": "function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 87826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12201:24:206",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12183:42:206"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 87829,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87823,
                          "src": "12243:7:206",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 87830,
                          "name": "maxTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87331,
                          "src": "12254:9:206",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12243:20:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5f637265617465546f6b656e3a3a6578636565646564206d6178546f6b656e73",
                        "id": 87832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12265:34:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae513c3d0861568782d381366f15b3d100b9bded3d0e0c001fa9100049752646",
                          "typeString": "literal_string \"_createToken::exceeded maxTokens\""
                        },
                        "value": "_createToken::exceeded maxTokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae513c3d0861568782d381366f15b3d100b9bded3d0e0c001fa9100049752646",
                          "typeString": "literal_string \"_createToken::exceeded maxTokens\""
                        }
                      ],
                      "id": 87828,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12235:7:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12235:65:206",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87834,
                  "nodeType": "ExpressionStatement",
                  "src": "12235:65:206"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87836,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87808,
                        "src": "12320:3:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87837,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87823,
                        "src": "12325:7:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 87835,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        34350,
                        34379
                      ],
                      "referencedDeclaration": 34350,
                      "src": "12310:9:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 87838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12310:23:206",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87839,
                  "nodeType": "ExpressionStatement",
                  "src": "12310:23:206"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87841,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87823,
                        "src": "12365:7:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 87842,
                        "name": "_royaltyPercentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87810,
                        "src": "12374:18:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 87840,
                      "name": "_setRoyaltyPercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89239,
                      "src": "12343:21:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 87843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12343:50:206",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87844,
                  "nodeType": "ExpressionStatement",
                  "src": "12343:50:206"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87846,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87823,
                        "src": "12423:7:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 87847,
                        "name": "_royaltyReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87812,
                        "src": "12432:16:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 87845,
                      "name": "_setRoyaltyReceiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89225,
                      "src": "12403:19:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 87848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12403:46:206",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87849,
                  "nodeType": "ExpressionStatement",
                  "src": "12403:46:206"
                },
                {
                  "expression": {
                    "id": 87850,
                    "name": "tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 87823,
                    "src": "12466:7:206",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 87816,
                  "id": 87851,
                  "nodeType": "Return",
                  "src": "12459:14:206"
                }
              ]
            },
            "documentation": {
              "id": 87806,
              "nodeType": "StructuredDocumentation",
              "src": "11645:341:206",
              "text": " @dev Create a new token and assign it to the specified recipient.\n @param _to The address of the token recipient.\n @param _royaltyPercentage The royalty percentage for the token.\n @param _royaltyReceiver The address of the royalty receiver for the token.\n @return The ID of the newly created token."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createToken",
            "nameLocation": "12000:12:206",
            "parameters": {
              "id": 87813,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87808,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "12030:3:206",
                  "nodeType": "VariableDeclaration",
                  "scope": 87853,
                  "src": "12022:11:206",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87807,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12022:7:206",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87810,
                  "mutability": "mutable",
                  "name": "_royaltyPercentage",
                  "nameLocation": "12051:18:206",
                  "nodeType": "VariableDeclaration",
                  "scope": 87853,
                  "src": "12043:26:206",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87809,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12043:7:206",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87812,
                  "mutability": "mutable",
                  "name": "_royaltyReceiver",
                  "nameLocation": "12087:16:206",
                  "nodeType": "VariableDeclaration",
                  "scope": 87853,
                  "src": "12079:24:206",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87811,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12079:7:206",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12012:97:206"
            },
            "returnParameters": {
              "id": 87816,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87815,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87853,
                  "src": "12128:7:206",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87814,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12128:7:206",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12127:9:206"
            },
            "scope": 87892,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 87891,
            "nodeType": "FunctionDefinition",
            "src": "12717:483:206",
            "nodes": [],
            "body": {
              "id": 87890,
              "nodeType": "Block",
              "src": "12821:379:206",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 87862,
                          "name": "_numberOfTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87858,
                          "src": "12852:15:206",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 87863,
                          "name": "maxTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87331,
                          "src": "12871:9:206",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12852:28:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5f707265706172654d696e743a3a6578636565646564206d6178546f6b656e73",
                        "id": 87865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12894:34:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3d107e18dd5449cb3e3ae144663c6fa6de59970e6308c0c4681861dd40af824b",
                          "typeString": "literal_string \"_prepareMint::exceeded maxTokens\""
                        },
                        "value": "_prepareMint::exceeded maxTokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3d107e18dd5449cb3e3ae144663c6fa6de59970e6308c0c4681861dd40af824b",
                          "typeString": "literal_string \"_prepareMint::exceeded maxTokens\""
                        }
                      ],
                      "id": 87861,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12831:7:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12831:107:206",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87867,
                  "nodeType": "ExpressionStatement",
                  "src": "12831:107:206"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 87869,
                              "name": "tokenIdCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87346,
                              "src": "12969:14:206",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Counter_$35532_storage",
                                "typeString": "struct CountersUpgradeable.Counter storage ref"
                              }
                            },
                            "id": 87870,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12984:7:206",
                            "memberName": "current",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 35544,
                            "src": "12969:22:206",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$35532_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$35532_storage_ptr_$",
                              "typeString": "function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"
                            }
                          },
                          "id": 87871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12969:24:206",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 87872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12997:1:206",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "12969:29:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5f707265706172654d696e743a3a63616e206f6e6c792070726570617265206d696e742077697468203020746f6b656e73",
                        "id": 87874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13012:51:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_26580127c261cca94c6d9b75057d7537b3fcd5f42cadbc34dde7cfb94906c733",
                          "typeString": "literal_string \"_prepareMint::can only prepare mint with 0 tokens\""
                        },
                        "value": "_prepareMint::can only prepare mint with 0 tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_26580127c261cca94c6d9b75057d7537b3fcd5f42cadbc34dde7cfb94906c733",
                          "typeString": "literal_string \"_prepareMint::can only prepare mint with 0 tokens\""
                        }
                      ],
                      "id": 87868,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12948:7:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12948:125:206",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87876,
                  "nodeType": "ExpressionStatement",
                  "src": "12948:125:206"
                },
                {
                  "expression": {
                    "id": 87883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 87877,
                      "name": "mintConfig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87349,
                      "src": "13083:10:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MintConfig_$87327_storage",
                        "typeString": "struct LazySovereignNFT.MintConfig storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 87879,
                          "name": "_numberOfTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87858,
                          "src": "13107:15:206",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 87880,
                          "name": "_baseURI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87856,
                          "src": "13124:8:206",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 87881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13134:5:206",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 87878,
                        "name": "MintConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87327,
                        "src": "13096:10:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_MintConfig_$87327_storage_ptr_$",
                          "typeString": "type(struct LazySovereignNFT.MintConfig storage pointer)"
                        }
                      },
                      "id": 87882,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13096:44:206",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_MintConfig_$87327_memory_ptr",
                        "typeString": "struct LazySovereignNFT.MintConfig memory"
                      }
                    },
                    "src": "13083:57:206",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MintConfig_$87327_storage",
                      "typeString": "struct LazySovereignNFT.MintConfig storage ref"
                    }
                  },
                  "id": 87884,
                  "nodeType": "ExpressionStatement",
                  "src": "13083:57:206"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 87886,
                        "name": "_numberOfTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87858,
                        "src": "13167:15:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 87887,
                        "name": "_baseURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87856,
                        "src": "13184:8:206",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 87885,
                      "name": "PrepareMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87359,
                      "src": "13155:11:206",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 87888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13155:38:206",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87889,
                  "nodeType": "EmitStatement",
                  "src": "13150:43:206"
                }
              ]
            },
            "documentation": {
              "id": 87854,
              "nodeType": "StructuredDocumentation",
              "src": "12486:226:206",
              "text": " @dev Prepare a minting batch with a specified base URI and number of tokens.\n @param _baseURI The base URI for token metadata.\n @param _numberOfTokens The number of tokens to prepare for minting."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_prepareMint",
            "nameLocation": "12726:12:206",
            "parameters": {
              "id": 87859,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87856,
                  "mutability": "mutable",
                  "name": "_baseURI",
                  "nameLocation": "12764:8:206",
                  "nodeType": "VariableDeclaration",
                  "scope": 87891,
                  "src": "12748:24:206",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 87855,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "12748:6:206",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87858,
                  "mutability": "mutable",
                  "name": "_numberOfTokens",
                  "nameLocation": "12790:15:206",
                  "nodeType": "VariableDeclaration",
                  "scope": 87891,
                  "src": "12782:23:206",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87857,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12782:7:206",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12738:73:206"
            },
            "returnParameters": {
              "id": 87860,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12821:0:206"
            },
            "scope": 87892,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 87299,
              "name": "OwnableUpgradeable",
              "nameLocations": [
                "875:18:206"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31172,
              "src": "875:18:206"
            },
            "id": 87300,
            "nodeType": "InheritanceSpecifier",
            "src": "875:18:206"
          },
          {
            "baseName": {
              "id": 87301,
              "name": "ERC165Upgradeable",
              "nameLocations": [
                "899:17:206"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 35983,
              "src": "899:17:206"
            },
            "id": 87302,
            "nodeType": "InheritanceSpecifier",
            "src": "899:17:206"
          },
          {
            "baseName": {
              "id": 87303,
              "name": "ERC721Upgradeable",
              "nameLocations": [
                "922:17:206"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34787,
              "src": "922:17:206"
            },
            "id": 87304,
            "nodeType": "InheritanceSpecifier",
            "src": "922:17:206"
          },
          {
            "baseName": {
              "id": 87305,
              "name": "ITokenCreator",
              "nameLocations": [
                "945:13:206"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 89313,
              "src": "945:13:206"
            },
            "id": 87306,
            "nodeType": "InheritanceSpecifier",
            "src": "945:13:206"
          },
          {
            "baseName": {
              "id": 87307,
              "name": "ERC721BurnableUpgradeable",
              "nameLocations": [
                "964:25:206"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34971,
              "src": "964:25:206"
            },
            "id": 87308,
            "nodeType": "InheritanceSpecifier",
            "src": "964:25:206"
          },
          {
            "baseName": {
              "id": 87309,
              "name": "ERC2981Upgradeable",
              "nameLocations": [
                "995:18:206"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 89287,
              "src": "995:18:206"
            },
            "id": 87310,
            "nodeType": "InheritanceSpecifier",
            "src": "995:18:206"
          }
        ],
        "canonicalName": "LazySovereignNFT",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 87298,
          "nodeType": "StructuredDocumentation",
          "src": "709:131:206",
          "text": " @title LazySovereignNFT\n @dev This contract implements an ERC721 compliant NFT (Non-Fungible Token) with lazy minting."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          87892,
          89287,
          34971,
          89313,
          34787,
          34998,
          34921,
          35983,
          35995,
          31172,
          35526,
          31709,
          89303
        ],
        "name": "LazySovereignNFT",
        "nameLocation": "851:16:206",
        "scope": 87893,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 206
}