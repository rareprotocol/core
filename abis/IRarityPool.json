{
  "abi": [
    {
      "inputs": [],
      "name": "CannotAddZeroRewards",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CannotClaimCurrentRound",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ClaimingTooManyRounds",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ClaimingZeroRounds",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientStakedRare",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientSyntheticRare",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RewardAlreadyClaimed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Unauthorized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroAddressUnsupported",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_donor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_round",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_totalAmountAdded",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_newRoundRewardAmount",
          "type": "uint256"
        }
      ],
      "name": "AddRewards",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_msgSender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_claimer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountToStaker",
          "type": "uint256"
        }
      ],
      "name": "RewardClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountStaking",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_totalAmountStaked",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountSRareReceived",
          "type": "uint256"
        }
      ],
      "name": "Stake",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_lastSnapshotTimestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_currentSnapshotTimestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_round",
          "type": "uint256"
        }
      ],
      "name": "StakingSnapshot",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_staker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountUnstaking",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_totalAmountStaked",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountRareBurned",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountSRareSold",
          "type": "uint256"
        }
      ],
      "name": "Unstake",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_donor",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "addRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint120",
          "name": "_totalSRare",
          "type": "uint120"
        },
        {
          "internalType": "uint120",
          "name": "_stakedAmount",
          "type": "uint120"
        }
      ],
      "name": "calculatePurchaseReturn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_totalSRareByUser",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalRareStakedByUser",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_unstakeAmount",
          "type": "uint256"
        }
      ],
      "name": "calculateSaleReturn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "_numRounds",
          "type": "uint8"
        }
      ],
      "name": "claimRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllStakers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllTimeRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getAmountStakedByUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_numRounds",
          "type": "uint256"
        }
      ],
      "name": "getClaimableRewardsForUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCreationTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentRound",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "_rounds",
          "type": "uint256[]"
        }
      ],
      "name": "getHistoricalRewardsForUserForRounds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastSnapshotTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_round",
          "type": "uint256"
        }
      ],
      "name": "getRoundRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStakingRegistry",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSumOfAllClaimed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTargetBeingStakedOn",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userStakedTo",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_stakingRegistry",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_creator",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint120",
          "name": "_amount",
          "type": "uint120"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "takeSnapshot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "unstake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addRewards(address,uint256)": "a9fc507b",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "calculatePurchaseReturn(uint120,uint120)": "d775a4c7",
    "calculateSaleReturn(uint256,uint256,uint256)": "74293bf8",
    "claimRewards(address,uint8)": "b5fc2f85",
    "getAllStakers()": "6e4f88c8",
    "getAllTimeRewards()": "94616420",
    "getAmountStakedByUser(address)": "399d99ec",
    "getClaimableRewardsForUser(address,uint256)": "636f5b27",
    "getCreationTime()": "e6519a35",
    "getCurrentRound()": "a32bf597",
    "getHistoricalRewardsForUserForRounds(address,uint256[])": "cae06944",
    "getLastSnapshotTimestamp()": "7c27ff86",
    "getRoundRewards(uint256)": "91e2057e",
    "getStakingRegistry()": "61347782",
    "getSumOfAllClaimed()": "3b1c612e",
    "getTargetBeingStakedOn()": "3b248c76",
    "initialize(address,address,address)": "c0c53b8b",
    "name()": "06fdde03",
    "stake(uint120)": "9ca92dec",
    "symbol()": "95d89b41",
    "takeSnapshot()": "b3d3d37e",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "unstake(uint256)": "2e17de78"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CannotAddZeroRewards\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotClaimCurrentRound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ClaimingTooManyRounds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ClaimingZeroRounds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientStakedRare\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientSyntheticRare\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RewardAlreadyClaimed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddressUnsupported\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_donor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_round\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_totalAmountAdded\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newRoundRewardAmount\",\"type\":\"uint256\"}],\"name\":\"AddRewards\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_msgSender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountToStaker\",\"type\":\"uint256\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountStaking\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_totalAmountStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountSRareReceived\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_lastSnapshotTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_currentSnapshotTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_round\",\"type\":\"uint256\"}],\"name\":\"StakingSnapshot\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountUnstaking\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_totalAmountStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountRareBurned\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountSRareSold\",\"type\":\"uint256\"}],\"name\":\"Unstake\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_donor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"addRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint120\",\"name\":\"_totalSRare\",\"type\":\"uint120\"},{\"internalType\":\"uint120\",\"name\":\"_stakedAmount\",\"type\":\"uint120\"}],\"name\":\"calculatePurchaseReturn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalSRareByUser\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalRareStakedByUser\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_unstakeAmount\",\"type\":\"uint256\"}],\"name\":\"calculateSaleReturn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_numRounds\",\"type\":\"uint8\"}],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllStakers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllTimeRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getAmountStakedByUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_numRounds\",\"type\":\"uint256\"}],\"name\":\"getClaimableRewardsForUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCreationTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_rounds\",\"type\":\"uint256[]\"}],\"name\":\"getHistoricalRewardsForUserForRounds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastSnapshotTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_round\",\"type\":\"uint256\"}],\"name\":\"getRoundRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakingRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSumOfAllClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTargetBeingStakedOn\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userStakedTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakingRegistry\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint120\",\"name\":\"_amount\",\"type\":\"uint120\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeSnapshot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"koloz, charlescrain\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"addRewards(address,uint256)\":{\"params\":{\"_amount\":\"Amount of $RARE being staked.\",\"_donor\":\"Address of the account donating the $RARE.\"}},\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"calculatePurchaseReturn(uint120,uint120)\":{\"params\":{\"_stakedAmount\":\"Amount of RARE being staked.\",\"_totalSRare\":\"Current supply of sRare.\"},\"returns\":{\"_0\":\"uint256 Amount of synthetic tokens one would get for staking {_stakedAmount} given a totalSupply of {_totalSRare}.\"}},\"calculateSaleReturn(uint256,uint256,uint256)\":{\"params\":{\"_totalRareStakedByUser\":\"Total Amount of RARE staked by the given user.\",\"_totalSRareByUser\":\"Current balance of sRARE held by the given user.\",\"_unstakeAmount\":\"Amount of sRare being traded in.\"},\"returns\":{\"_0\":\"uint256 Amount of $RARE tokens one would get for unstaking {_unstakeAmount} given {_totalSRareByUser} and {_totalRareStakedByUser}.\"}},\"claimRewards(address,uint8)\":{\"params\":{\"_numRounds\":\"uint256 number of rounds to claim since last claim.\",\"_user\":\"Address of user to claim on behalf of.\"}},\"getAllStakers()\":{\"returns\":{\"_0\":\"list of addresses of all the users who are being staked on.\"}},\"getAllTimeRewards()\":{\"returns\":{\"_0\":\"uint256 Amount of $RARE tokens allocated as rewards.\"}},\"getAmountStakedByUser(address)\":{\"params\":{\"_user\":\"Address of staker.\"},\"returns\":{\"_0\":\"uint256 Amount of $RARE staked.\"}},\"getClaimableRewardsForUser(address,uint256)\":{\"params\":{\"_numRounds\":\"Address of the user to get rewards.\",\"_user\":\"Address of the user to get rewards.\"},\"returns\":{\"_0\":\"uint256 Amount of $RARE tokens rewarded.\"}},\"getCreationTime()\":{\"returns\":{\"_0\":\"uint256 unix creation time of the contract.\"}},\"getCurrentRound()\":{\"returns\":{\"_0\":\"uint256 Claim round id.\"}},\"getHistoricalRewardsForUserForRounds(address,uint256[])\":{\"params\":{\"_rounds\":\"List of uint256 round ids to look up the rewards.\",\"_user\":\"Address of the user to get rewards.\"},\"returns\":{\"_0\":\"uint256 Amount of $RARE tokens rewarded.\"}},\"getLastSnapshotTimestamp()\":{\"returns\":{\"_0\":\"uint256 unix time of the most recent snapshot.\"}},\"getRoundRewards(uint256)\":{\"returns\":{\"_0\":\"uint256 Amount of $RARE tokens allocated as rewards for round.\"}},\"getStakingRegistry()\":{\"returns\":{\"_0\":\"address of the staking registry.\"}},\"getSumOfAllClaimed()\":{\"returns\":{\"_0\":\"uint256 amount of rewards claimed.\"}},\"getTargetBeingStakedOn()\":{\"returns\":{\"_0\":\"Address of target being staked on;\"}},\"name()\":{\"returns\":{\"_0\":\"Name of the synthetic asset.\"}},\"stake(uint120)\":{\"params\":{\"_amount\":\"Amount of $RARE being staked.\"}},\"symbol()\":{\"returns\":{\"_0\":\"Symbol of the synthetic asset.\"}},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"unstake(uint256)\":{\"params\":{\"_amount\":\"Amount of synthetic tokens to unstake.\"}}},\"title\":\"IRarityPool\",\"version\":1},\"userdoc\":{\"errors\":{\"CannotAddZeroRewards()\":[{\"notice\":\"Error emitted via {addRewards} if adding 0 rewards.\"}],\"CannotClaimCurrentRound()\":[{\"notice\":\"Error emitted via {claimRewardsForRounds} if claiming current round.\"}],\"ClaimingTooManyRounds()\":[{\"notice\":\"Error emitted via {claimRewardsForRounds} if too many rounds are supplied.\"}],\"ClaimingZeroRounds()\":[{\"notice\":\"Error emitted via {claimRewardsForRounds} if claiming no rounds.\"}],\"InsufficientStakedRare()\":[{\"notice\":\"Error emitted via {unstake} when the sale return proves greater than the amount staked. This should be impossible.\"}],\"InsufficientSyntheticRare()\":[{\"notice\":\"Error emitted via {unstake} when unstaking more synthetic tokens than is in their balance.\"}],\"RewardAlreadyClaimed()\":[{\"notice\":\"Error emitted via {claimRewardsForRounds} if sender has already claimed their reward one of the supplied rounds.\"}],\"Unauthorized()\":[{\"notice\":\"Error emitted when user doesnt meet the criteria for call.\"}],\"ZeroAddressUnsupported()\":[{\"notice\":\"Emitted when Zero address provided where it is not allowed.\"}]},\"kind\":\"user\",\"methods\":{\"addRewards(address,uint256)\":{\"notice\":\"Allocates rewards for the current round with the given amount.\"},\"calculatePurchaseReturn(uint120,uint120)\":{\"notice\":\"Calculates the number of sRare yielded from staking.\"},\"calculateSaleReturn(uint256,uint256,uint256)\":{\"notice\":\"Calculates the number of rare yielded from unstaking.\"},\"claimRewards(address,uint8)\":{\"notice\":\"Claim rewards for the _user for the number of rounds supplied since last claim. Rewards are proportional to the synthetic tokens held during the snapshot associated with each round. Throws if user has already claimed the latest round. Throws if current round is being claimed.\"},\"getAllStakers()\":{\"notice\":\"Retrieves a list of all the users that have staked.\"},\"getAllTimeRewards()\":{\"notice\":\"Total rewards snapshotted since con.\"},\"getAmountStakedByUser(address)\":{\"notice\":\"Query total amount of $RARE a user has staked on this contract.\"},\"getClaimableRewardsForUser(address,uint256)\":{\"notice\":\"Query the available rewards for claim of the supplied user address for the number of rounds supplied. \"},\"getCreationTime()\":{\"notice\":\"Get the unix creation time of the staking contract.\"},\"getCurrentRound()\":{\"notice\":\"Query current round. The current round is accumulating rewards.\"},\"getHistoricalRewardsForUserForRounds(address,uint256[])\":{\"notice\":\"Query rewards for the supplied user address for the round supplied rounds. Does not omit rewards for rounds that have already been claimed. Allows for easier historical lookups.\"},\"getLastSnapshotTimestamp()\":{\"notice\":\"Get the unix time of the most recent snapshot.\"},\"getRoundRewards(uint256)\":{\"notice\":\"Total rewards available for the supplied round.\"},\"getStakingRegistry()\":{\"notice\":\"Return the staking registry of the pool\"},\"getSumOfAllClaimed()\":{\"notice\":\"Total amount of Rewards claimed.\"},\"getTargetBeingStakedOn()\":{\"notice\":\"Query the target being staked on by this contract.\"},\"name()\":{\"notice\":\"Name of the synthetic asset.\"},\"stake(uint120)\":{\"notice\":\"Stake $RARE tokens to the target associated with the contract and receive synthetic tokens in return.\"},\"symbol()\":{\"notice\":\"Symbol of the synthetic asset.\"},\"takeSnapshot()\":{\"notice\":\"Snapshots the rewards for the current round. Anyone can call this.\"},\"unstake(uint256)\":{\"notice\":\"Unstake by returning synthetic tokens and receiving previously staked $RARE in return.\"}},\"notice\":\"The Rare Staking Pool ERC20 (Rarity Pool) interface containing all functions, events, etc.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/staking/token/IRarityPool.sol\":\"IRarityPool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/buffer/=lib/buffer/\",\":@ensdomains/ens-contracts/=lib/ens-contracts/contracts/\",\":@manifoldxyz/libraries-solidity/=lib/royalty-registry-solidity/lib/libraries-solidity/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/royalty-registry-solidity/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/royalty-registry-solidity/lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/contracts/\",\":@uniswap/v3-core/contracts/=lib/v3-core/contracts/\",\":@uniswap/v3-periphery/=lib/v3-periphery/contracts/\",\":arachnid/solidity-stringutils/=lib/solidity-stringutils/\",\":assets/=lib/assets/\",\":aux/=lib/aux/\",\":buffer/=lib/buffer/contracts/\",\":create2-helpers/=lib/royalty-registry-solidity/lib/create2-helpers/\",\":create2-scripts/=lib/royalty-registry-solidity/lib/create2-helpers/script/\",\":ds-test/=lib/ds-test/src/\",\":ens-contracts/=lib/ens-contracts/contracts/\",\":ensdomains/ens-contracts/=lib/ensdomains/ens-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":libraries-solidity/=lib/royalty-registry-solidity/lib/libraries-solidity/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":rareprotocol/assets/=lib/assets/src/\",\":rareprotocol/aux/=lib/aux/src/\",\":royalty-guard/=lib/aux/lib/royalty-guard/src/\",\":royalty-registry-solidity/=lib/royalty-registry-solidity/contracts/\",\":royalty-registry/=lib/royalty-registry-solidity/contracts/\",\":solidity-stringutils/=lib/solidity-stringutils/\",\":solmate/=lib/solmate/src/\",\":v3-core/=lib/v3-core/\",\":v3-periphery/=lib/v3-periphery/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC20Upgradeable.sol\":{\"keccak256\":\"0xe73087c5001a37cf7186b3709377c7ceb01a0d38fb908723d1464cea66b4958c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b835a1929ca2c7c978085e58f08f48855df8a82ef6a426ac71393cf032ea0fc5\",\"dweb:/ipfs/QmUMXRN9g8u9wm63wc7PMaSs7oG2nqnM1VVvktaWkvF68v\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"src/staking/token/IRarityPool.sol\":{\"keccak256\":\"0xbca53296236645c22ab0431532786033fd1e0cb916344345ea90a285870c3573\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f4e3874401d3a752840f8141d4f013c3e49e7c5f1ca7eccf901012c5af5d217\",\"dweb:/ipfs/QmQeYiPNGgDJw3dwtTyKy6PJqquZFaPS68zYEPixeCJvPz\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.18+commit.87f61d96"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "CannotAddZeroRewards"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CannotClaimCurrentRound"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ClaimingTooManyRounds"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ClaimingZeroRounds"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientStakedRare"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientSyntheticRare"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RewardAlreadyClaimed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Unauthorized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroAddressUnsupported"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_donor",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_round",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_totalAmountAdded",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_newRoundRewardAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AddRewards",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_msgSender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_claimer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_amountToStaker",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_amountStaking",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_totalAmountStaked",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_amountSRareReceived",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Stake",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_lastSnapshotTimestamp",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_currentSnapshotTimestamp",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_round",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StakingSnapshot",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_staker",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_amountUnstaking",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_totalAmountStaked",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_amountRareBurned",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_amountSRareSold",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unstake",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_donor",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addRewards"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint120",
              "name": "_totalSRare",
              "type": "uint120"
            },
            {
              "internalType": "uint120",
              "name": "_stakedAmount",
              "type": "uint120"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "calculatePurchaseReturn",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_totalSRareByUser",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_totalRareStakedByUser",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_unstakeAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "calculateSaleReturn",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "_numRounds",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimRewards"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllStakers",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllTimeRewards",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAmountStakedByUser",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_numRounds",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getClaimableRewardsForUser",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCreationTime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurrentRound",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "_rounds",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getHistoricalRewardsForUserForRounds",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getLastSnapshotTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_round",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoundRewards",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakingRegistry",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getSumOfAllClaimed",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTargetBeingStakedOn",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_userStakedTo",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_stakingRegistry",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_creator",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint120",
              "name": "_amount",
              "type": "uint120"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stake"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "takeSnapshot"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unstake"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addRewards(address,uint256)": {
            "params": {
              "_amount": "Amount of $RARE being staked.",
              "_donor": "Address of the account donating the $RARE."
            }
          },
          "allowance(address,address)": {
            "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
          },
          "approve(address,uint256)": {
            "details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
          },
          "balanceOf(address)": {
            "details": "Returns the amount of tokens owned by `account`."
          },
          "calculatePurchaseReturn(uint120,uint120)": {
            "params": {
              "_stakedAmount": "Amount of RARE being staked.",
              "_totalSRare": "Current supply of sRare."
            },
            "returns": {
              "_0": "uint256 Amount of synthetic tokens one would get for staking {_stakedAmount} given a totalSupply of {_totalSRare}."
            }
          },
          "calculateSaleReturn(uint256,uint256,uint256)": {
            "params": {
              "_totalRareStakedByUser": "Total Amount of RARE staked by the given user.",
              "_totalSRareByUser": "Current balance of sRARE held by the given user.",
              "_unstakeAmount": "Amount of sRare being traded in."
            },
            "returns": {
              "_0": "uint256 Amount of $RARE tokens one would get for unstaking {_unstakeAmount} given {_totalSRareByUser} and {_totalRareStakedByUser}."
            }
          },
          "claimRewards(address,uint8)": {
            "params": {
              "_numRounds": "uint256 number of rounds to claim since last claim.",
              "_user": "Address of user to claim on behalf of."
            }
          },
          "getAllStakers()": {
            "returns": {
              "_0": "list of addresses of all the users who are being staked on."
            }
          },
          "getAllTimeRewards()": {
            "returns": {
              "_0": "uint256 Amount of $RARE tokens allocated as rewards."
            }
          },
          "getAmountStakedByUser(address)": {
            "params": {
              "_user": "Address of staker."
            },
            "returns": {
              "_0": "uint256 Amount of $RARE staked."
            }
          },
          "getClaimableRewardsForUser(address,uint256)": {
            "params": {
              "_numRounds": "Address of the user to get rewards.",
              "_user": "Address of the user to get rewards."
            },
            "returns": {
              "_0": "uint256 Amount of $RARE tokens rewarded."
            }
          },
          "getCreationTime()": {
            "returns": {
              "_0": "uint256 unix creation time of the contract."
            }
          },
          "getCurrentRound()": {
            "returns": {
              "_0": "uint256 Claim round id."
            }
          },
          "getHistoricalRewardsForUserForRounds(address,uint256[])": {
            "params": {
              "_rounds": "List of uint256 round ids to look up the rewards.",
              "_user": "Address of the user to get rewards."
            },
            "returns": {
              "_0": "uint256 Amount of $RARE tokens rewarded."
            }
          },
          "getLastSnapshotTimestamp()": {
            "returns": {
              "_0": "uint256 unix time of the most recent snapshot."
            }
          },
          "getRoundRewards(uint256)": {
            "returns": {
              "_0": "uint256 Amount of $RARE tokens allocated as rewards for round."
            }
          },
          "getStakingRegistry()": {
            "returns": {
              "_0": "address of the staking registry."
            }
          },
          "getSumOfAllClaimed()": {
            "returns": {
              "_0": "uint256 amount of rewards claimed."
            }
          },
          "getTargetBeingStakedOn()": {
            "returns": {
              "_0": "Address of target being staked on;"
            }
          },
          "name()": {
            "returns": {
              "_0": "Name of the synthetic asset."
            }
          },
          "stake(uint120)": {
            "params": {
              "_amount": "Amount of $RARE being staked."
            }
          },
          "symbol()": {
            "returns": {
              "_0": "Symbol of the synthetic asset."
            }
          },
          "totalSupply()": {
            "details": "Returns the amount of tokens in existence."
          },
          "transfer(address,uint256)": {
            "details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
          },
          "transferFrom(address,address,uint256)": {
            "details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
          },
          "unstake(uint256)": {
            "params": {
              "_amount": "Amount of synthetic tokens to unstake."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addRewards(address,uint256)": {
            "notice": "Allocates rewards for the current round with the given amount."
          },
          "calculatePurchaseReturn(uint120,uint120)": {
            "notice": "Calculates the number of sRare yielded from staking."
          },
          "calculateSaleReturn(uint256,uint256,uint256)": {
            "notice": "Calculates the number of rare yielded from unstaking."
          },
          "claimRewards(address,uint8)": {
            "notice": "Claim rewards for the _user for the number of rounds supplied since last claim. Rewards are proportional to the synthetic tokens held during the snapshot associated with each round. Throws if user has already claimed the latest round. Throws if current round is being claimed."
          },
          "getAllStakers()": {
            "notice": "Retrieves a list of all the users that have staked."
          },
          "getAllTimeRewards()": {
            "notice": "Total rewards snapshotted since con."
          },
          "getAmountStakedByUser(address)": {
            "notice": "Query total amount of $RARE a user has staked on this contract."
          },
          "getClaimableRewardsForUser(address,uint256)": {
            "notice": "Query the available rewards for claim of the supplied user address for the number of rounds supplied. "
          },
          "getCreationTime()": {
            "notice": "Get the unix creation time of the staking contract."
          },
          "getCurrentRound()": {
            "notice": "Query current round. The current round is accumulating rewards."
          },
          "getHistoricalRewardsForUserForRounds(address,uint256[])": {
            "notice": "Query rewards for the supplied user address for the round supplied rounds. Does not omit rewards for rounds that have already been claimed. Allows for easier historical lookups."
          },
          "getLastSnapshotTimestamp()": {
            "notice": "Get the unix time of the most recent snapshot."
          },
          "getRoundRewards(uint256)": {
            "notice": "Total rewards available for the supplied round."
          },
          "getStakingRegistry()": {
            "notice": "Return the staking registry of the pool"
          },
          "getSumOfAllClaimed()": {
            "notice": "Total amount of Rewards claimed."
          },
          "getTargetBeingStakedOn()": {
            "notice": "Query the target being staked on by this contract."
          },
          "name()": {
            "notice": "Name of the synthetic asset."
          },
          "stake(uint120)": {
            "notice": "Stake $RARE tokens to the target associated with the contract and receive synthetic tokens in return."
          },
          "symbol()": {
            "notice": "Symbol of the synthetic asset."
          },
          "takeSnapshot()": {
            "notice": "Snapshots the rewards for the current round. Anyone can call this."
          },
          "unstake(uint256)": {
            "notice": "Unstake by returning synthetic tokens and receiving previously staked $RARE in return."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/buffer/=lib/buffer/",
        ":@ensdomains/ens-contracts/=lib/ens-contracts/contracts/",
        ":@manifoldxyz/libraries-solidity/=lib/royalty-registry-solidity/lib/libraries-solidity/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@openzeppelin/contracts-upgradeable/=lib/royalty-registry-solidity/lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/royalty-registry-solidity/lib/openzeppelin-contracts/contracts/",
        ":@uniswap/v3-core/=lib/v3-core/contracts/",
        ":@uniswap/v3-core/contracts/=lib/v3-core/contracts/",
        ":@uniswap/v3-periphery/=lib/v3-periphery/contracts/",
        ":arachnid/solidity-stringutils/=lib/solidity-stringutils/",
        ":assets/=lib/assets/",
        ":aux/=lib/aux/",
        ":buffer/=lib/buffer/contracts/",
        ":create2-helpers/=lib/royalty-registry-solidity/lib/create2-helpers/",
        ":create2-scripts/=lib/royalty-registry-solidity/lib/create2-helpers/script/",
        ":ds-test/=lib/ds-test/src/",
        ":ens-contracts/=lib/ens-contracts/contracts/",
        ":ensdomains/ens-contracts/=lib/ensdomains/ens-contracts/contracts/",
        ":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":libraries-solidity/=lib/royalty-registry-solidity/lib/libraries-solidity/contracts/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":rareprotocol/assets/=lib/assets/src/",
        ":rareprotocol/aux/=lib/aux/src/",
        ":royalty-guard/=lib/aux/lib/royalty-guard/src/",
        ":royalty-registry-solidity/=lib/royalty-registry-solidity/contracts/",
        ":royalty-registry/=lib/royalty-registry-solidity/contracts/",
        ":solidity-stringutils/=lib/solidity-stringutils/",
        ":solmate/=lib/solmate/src/",
        ":v3-core/=lib/v3-core/",
        ":v3-periphery/=lib/v3-periphery/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/staking/token/IRarityPool.sol": "IRarityPool"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC20Upgradeable.sol": {
        "keccak256": "0xe73087c5001a37cf7186b3709377c7ceb01a0d38fb908723d1464cea66b4958c",
        "urls": [
          "bzz-raw://b835a1929ca2c7c978085e58f08f48855df8a82ef6a426ac71393cf032ea0fc5",
          "dweb:/ipfs/QmUMXRN9g8u9wm63wc7PMaSs7oG2nqnM1VVvktaWkvF68v"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f",
        "urls": [
          "bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f",
          "dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco"
        ],
        "license": "MIT"
      },
      "src/staking/token/IRarityPool.sol": {
        "keccak256": "0xbca53296236645c22ab0431532786033fd1e0cb916344345ea90a285870c3573",
        "urls": [
          "bzz-raw://5f4e3874401d3a752840f8141d4f013c3e49e7c5f1ca7eccf901012c5af5d217",
          "dweb:/ipfs/QmQeYiPNGgDJw3dwtTyKy6PJqquZFaPS68zYEPixeCJvPz"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/staking/token/IRarityPool.sol",
    "id": 57924,
    "exportedSymbols": {
      "IERC20Upgradeable": [
        33865
      ],
      "IRarityPool": [
        57923
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:8731:144",
    "nodes": [
      {
        "id": 57679,
        "nodeType": "PragmaDirective",
        "src": "32:23:144",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 57681,
        "nodeType": "ImportDirective",
        "src": "57:102:144",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC20Upgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/interfaces/IERC20Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 57924,
        "sourceUnit": 32443,
        "symbolAliases": [
          {
            "foreign": {
              "id": 57680,
              "name": "IERC20Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 33865,
              "src": "65:17:144",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 57923,
        "nodeType": "ContractDefinition",
        "src": "319:8443:144",
        "nodes": [
          {
            "id": 57692,
            "nodeType": "EventDefinition",
            "src": "562:115:144",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "0aa4d283470c904c551d18bb894d37e17674920f3261a7f854be501e25f421b7",
            "name": "RewardClaimed",
            "nameLocation": "568:13:144",
            "parameters": {
              "id": 57691,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57686,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_msgSender",
                  "nameLocation": "603:10:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 57692,
                  "src": "587:26:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57685,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "587:7:144",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57688,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_claimer",
                  "nameLocation": "635:8:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 57692,
                  "src": "619:24:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57687,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "619:7:144",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57690,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amountToStaker",
                  "nameLocation": "657:15:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 57692,
                  "src": "649:23:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57689,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "649:7:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "581:95:144"
            }
          },
          {
            "id": 57702,
            "nodeType": "EventDefinition",
            "src": "681:139:144",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "f556991011e831bcfac4f406d547e5e32cdd98267efab83935230d5f8d02c446",
            "name": "Stake",
            "nameLocation": "687:5:144",
            "parameters": {
              "id": 57701,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57694,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_staker",
                  "nameLocation": "714:7:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 57702,
                  "src": "698:23:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57693,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "698:7:144",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57696,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amountStaking",
                  "nameLocation": "735:14:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 57702,
                  "src": "727:22:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57695,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "727:7:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57698,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_totalAmountStaked",
                  "nameLocation": "763:18:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 57702,
                  "src": "755:26:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57697,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "755:7:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57700,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amountSRareReceived",
                  "nameLocation": "795:20:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 57702,
                  "src": "787:28:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57699,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "787:7:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "692:127:144"
            }
          },
          {
            "id": 57714,
            "nodeType": "EventDefinition",
            "src": "824:170:144",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "05b744e3e9358bc00ba3cc0c6606a4d6536134dba00b2d2ee4b5de169acd6427",
            "name": "Unstake",
            "nameLocation": "830:7:144",
            "parameters": {
              "id": 57713,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57704,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_staker",
                  "nameLocation": "859:7:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 57714,
                  "src": "843:23:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57703,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "843:7:144",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57706,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amountUnstaking",
                  "nameLocation": "880:16:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 57714,
                  "src": "872:24:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57705,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "872:7:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57708,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_totalAmountStaked",
                  "nameLocation": "910:18:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 57714,
                  "src": "902:26:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57707,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "902:7:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57710,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amountRareBurned",
                  "nameLocation": "942:17:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 57714,
                  "src": "934:25:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57709,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "934:7:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57712,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amountSRareSold",
                  "nameLocation": "973:16:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 57714,
                  "src": "965:24:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57711,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "965:7:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "837:156:144"
            }
          },
          {
            "id": 57722,
            "nodeType": "EventDefinition",
            "src": "998:105:144",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "f93143fb49fc8d2b453d1e417424c14ace8efd210d63494dbaa7998e5affe025",
            "name": "StakingSnapshot",
            "nameLocation": "1004:15:144",
            "parameters": {
              "id": 57721,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57716,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_lastSnapshotTimestamp",
                  "nameLocation": "1028:22:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 57722,
                  "src": "1020:30:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57715,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1020:7:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57718,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_currentSnapshotTimestamp",
                  "nameLocation": "1060:25:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 57722,
                  "src": "1052:33:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57717,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1052:7:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57720,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_round",
                  "nameLocation": "1095:6:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 57722,
                  "src": "1087:14:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57719,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1087:7:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1019:83:144"
            }
          },
          {
            "id": 57734,
            "nodeType": "EventDefinition",
            "src": "1107:164:144",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "8f1f72719a43990ee22667a803313283dbcb7402f1ab7dbf4ab92527e7414aa1",
            "name": "AddRewards",
            "nameLocation": "1113:10:144",
            "parameters": {
              "id": 57733,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57724,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_donor",
                  "nameLocation": "1145:6:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 57734,
                  "src": "1129:22:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57723,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1129:7:144",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57726,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_round",
                  "nameLocation": "1173:6:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 57734,
                  "src": "1157:22:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57725,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1157:7:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57728,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1193:7:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 57734,
                  "src": "1185:15:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57727,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1185:7:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57730,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_totalAmountAdded",
                  "nameLocation": "1214:17:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 57734,
                  "src": "1206:25:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57729,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1206:7:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57732,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_newRoundRewardAmount",
                  "nameLocation": "1245:21:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 57734,
                  "src": "1237:29:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57731,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1237:7:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1123:147:144"
            }
          },
          {
            "id": 57737,
            "nodeType": "ErrorDefinition",
            "src": "1549:21:144",
            "nodes": [],
            "documentation": {
              "id": 57735,
              "nodeType": "StructuredDocumentation",
              "src": "1476:70:144",
              "text": "@notice Error emitted when user doesnt meet the criteria for call."
            },
            "errorSelector": "82b42900",
            "name": "Unauthorized",
            "nameLocation": "1555:12:144",
            "parameters": {
              "id": 57736,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1567:2:144"
            }
          },
          {
            "id": 57740,
            "nodeType": "ErrorDefinition",
            "src": "1701:29:144",
            "nodes": [],
            "documentation": {
              "id": 57738,
              "nodeType": "StructuredDocumentation",
              "src": "1574:124:144",
              "text": "@notice Error emitted via {claimRewardsForRounds} if sender has already claimed their reward one of the supplied rounds."
            },
            "errorSelector": "b3f8c0dc",
            "name": "RewardAlreadyClaimed",
            "nameLocation": "1707:20:144",
            "parameters": {
              "id": 57739,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1727:2:144"
            }
          },
          {
            "id": 57743,
            "nodeType": "ErrorDefinition",
            "src": "1823:30:144",
            "nodes": [],
            "documentation": {
              "id": 57741,
              "nodeType": "StructuredDocumentation",
              "src": "1734:86:144",
              "text": "@notice Error emitted via {claimRewardsForRounds} if too many rounds are supplied."
            },
            "errorSelector": "fcbc706a",
            "name": "ClaimingTooManyRounds",
            "nameLocation": "1829:21:144",
            "parameters": {
              "id": 57742,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1850:2:144"
            }
          },
          {
            "id": 57746,
            "nodeType": "ErrorDefinition",
            "src": "1940:32:144",
            "nodes": [],
            "documentation": {
              "id": 57744,
              "nodeType": "StructuredDocumentation",
              "src": "1857:80:144",
              "text": "@notice Error emitted via {claimRewardsForRounds} if claiming current round."
            },
            "errorSelector": "bbbbe824",
            "name": "CannotClaimCurrentRound",
            "nameLocation": "1946:23:144",
            "parameters": {
              "id": 57745,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1969:2:144"
            }
          },
          {
            "id": 57749,
            "nodeType": "ErrorDefinition",
            "src": "2055:27:144",
            "nodes": [],
            "documentation": {
              "id": 57747,
              "nodeType": "StructuredDocumentation",
              "src": "1976:76:144",
              "text": "@notice Error emitted via {claimRewardsForRounds} if claiming no rounds."
            },
            "errorSelector": "54801204",
            "name": "ClaimingZeroRounds",
            "nameLocation": "2061:18:144",
            "parameters": {
              "id": 57748,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2079:2:144"
            }
          },
          {
            "id": 57752,
            "nodeType": "ErrorDefinition",
            "src": "2191:34:144",
            "nodes": [],
            "documentation": {
              "id": 57750,
              "nodeType": "StructuredDocumentation",
              "src": "2086:102:144",
              "text": "@notice Error emitted via {unstake} when unstaking more synthetic tokens than is in their balance."
            },
            "errorSelector": "2d292826",
            "name": "InsufficientSyntheticRare",
            "nameLocation": "2197:25:144",
            "parameters": {
              "id": 57751,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2222:2:144"
            }
          },
          {
            "id": 57755,
            "nodeType": "ErrorDefinition",
            "src": "2358:31:144",
            "nodes": [],
            "documentation": {
              "id": 57753,
              "nodeType": "StructuredDocumentation",
              "src": "2229:126:144",
              "text": "@notice Error emitted via {unstake} when the sale return proves greater than the amount staked. This should be impossible."
            },
            "errorSelector": "4d83a5dc",
            "name": "InsufficientStakedRare",
            "nameLocation": "2364:22:144",
            "parameters": {
              "id": 57754,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2386:2:144"
            }
          },
          {
            "id": 57758,
            "nodeType": "ErrorDefinition",
            "src": "2459:29:144",
            "nodes": [],
            "documentation": {
              "id": 57756,
              "nodeType": "StructuredDocumentation",
              "src": "2393:63:144",
              "text": "@notice Error emitted via {addRewards} if adding 0 rewards."
            },
            "errorSelector": "db1985f8",
            "name": "CannotAddZeroRewards",
            "nameLocation": "2465:20:144",
            "parameters": {
              "id": 57757,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2485:2:144"
            }
          },
          {
            "id": 57761,
            "nodeType": "ErrorDefinition",
            "src": "2566:31:144",
            "nodes": [],
            "documentation": {
              "id": 57759,
              "nodeType": "StructuredDocumentation",
              "src": "2492:71:144",
              "text": "@notice Emitted when Zero address provided where it is not allowed."
            },
            "errorSelector": "78279125",
            "name": "ZeroAddressUnsupported",
            "nameLocation": "2572:22:144",
            "parameters": {
              "id": 57760,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2594:2:144"
            }
          },
          {
            "id": 57770,
            "nodeType": "FunctionDefinition",
            "src": "2801:112:144",
            "nodes": [],
            "functionSelector": "c0c53b8b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "2810:10:144",
            "parameters": {
              "id": 57768,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57763,
                  "mutability": "mutable",
                  "name": "_userStakedTo",
                  "nameLocation": "2834:13:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 57770,
                  "src": "2826:21:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57762,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2826:7:144",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57765,
                  "mutability": "mutable",
                  "name": "_stakingRegistry",
                  "nameLocation": "2861:16:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 57770,
                  "src": "2853:24:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57764,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2853:7:144",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57767,
                  "mutability": "mutable",
                  "name": "_creator",
                  "nameLocation": "2891:8:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 57770,
                  "src": "2883:16:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57766,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2883:7:144",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2820:83:144"
            },
            "returnParameters": {
              "id": 57769,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2912:0:144"
            },
            "scope": 57923,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57778,
            "nodeType": "FunctionDefinition",
            "src": "3318:62:144",
            "nodes": [],
            "documentation": {
              "id": 57771,
              "nodeType": "StructuredDocumentation",
              "src": "3127:188:144",
              "text": "@notice Allocates rewards for the current round with the given amount.\n @param _donor Address of the account donating the $RARE.\n @param _amount Amount of $RARE being staked."
            },
            "functionSelector": "a9fc507b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addRewards",
            "nameLocation": "3327:10:144",
            "parameters": {
              "id": 57776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57773,
                  "mutability": "mutable",
                  "name": "_donor",
                  "nameLocation": "3346:6:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 57778,
                  "src": "3338:14:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57772,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3338:7:144",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57775,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3362:7:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 57778,
                  "src": "3354:15:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57774,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3354:7:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3337:33:144"
            },
            "returnParameters": {
              "id": 57777,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3379:0:144"
            },
            "scope": 57923,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57782,
            "nodeType": "FunctionDefinition",
            "src": "3465:33:144",
            "nodes": [],
            "documentation": {
              "id": 57779,
              "nodeType": "StructuredDocumentation",
              "src": "3384:78:144",
              "text": "@notice Snapshots the rewards for the current round. Anyone can call this."
            },
            "functionSelector": "b3d3d37e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "takeSnapshot",
            "nameLocation": "3474:12:144",
            "parameters": {
              "id": 57780,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3486:2:144"
            },
            "returnParameters": {
              "id": 57781,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3497:0:144"
            },
            "scope": 57923,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57788,
            "nodeType": "FunctionDefinition",
            "src": "3669:41:144",
            "nodes": [],
            "documentation": {
              "id": 57783,
              "nodeType": "StructuredDocumentation",
              "src": "3502:164:144",
              "text": "@notice Stake $RARE tokens to the target associated with the contract and receive synthetic tokens in return.\n @param _amount Amount of $RARE being staked."
            },
            "functionSelector": "9ca92dec",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "stake",
            "nameLocation": "3678:5:144",
            "parameters": {
              "id": 57786,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57785,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3692:7:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 57788,
                  "src": "3684:15:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint120",
                    "typeString": "uint120"
                  },
                  "typeName": {
                    "id": 57784,
                    "name": "uint120",
                    "nodeType": "ElementaryTypeName",
                    "src": "3684:7:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint120",
                      "typeString": "uint120"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3683:17:144"
            },
            "returnParameters": {
              "id": 57787,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3709:0:144"
            },
            "scope": 57923,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57794,
            "nodeType": "FunctionDefinition",
            "src": "3875:43:144",
            "nodes": [],
            "documentation": {
              "id": 57789,
              "nodeType": "StructuredDocumentation",
              "src": "3714:158:144",
              "text": "@notice Unstake by returning synthetic tokens and receiving previously staked $RARE in return.\n @param _amount Amount of synthetic tokens to unstake."
            },
            "functionSelector": "2e17de78",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "unstake",
            "nameLocation": "3884:7:144",
            "parameters": {
              "id": 57792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57791,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3900:7:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 57794,
                  "src": "3892:15:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57790,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3892:7:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3891:17:144"
            },
            "returnParameters": {
              "id": 57793,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3917:0:144"
            },
            "scope": 57923,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57802,
            "nodeType": "FunctionDefinition",
            "src": "4347:64:144",
            "nodes": [],
            "documentation": {
              "id": 57795,
              "nodeType": "StructuredDocumentation",
              "src": "3922:422:144",
              "text": "@notice Claim rewards for the _user for the number of rounds supplied since last claim. Rewards are proportional to the synthetic tokens held during the snapshot associated with each round. Throws if user has already claimed the latest round. Throws if current round is being claimed.\n @param _user Address of user to claim on behalf of.\n @param _numRounds uint256 number of rounds to claim since last claim."
            },
            "functionSelector": "b5fc2f85",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "claimRewards",
            "nameLocation": "4356:12:144",
            "parameters": {
              "id": 57800,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57797,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "4377:5:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 57802,
                  "src": "4369:13:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57796,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4369:7:144",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57799,
                  "mutability": "mutable",
                  "name": "_numRounds",
                  "nameLocation": "4390:10:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 57802,
                  "src": "4384:16:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 57798,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "4384:5:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4368:33:144"
            },
            "returnParameters": {
              "id": 57801,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4410:0:144"
            },
            "scope": 57923,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57810,
            "nodeType": "FunctionDefinition",
            "src": "4786:78:144",
            "nodes": [],
            "documentation": {
              "id": 57803,
              "nodeType": "StructuredDocumentation",
              "src": "4624:159:144",
              "text": "@notice Query total amount of $RARE a user has staked on this contract.\n @param _user Address of staker.\n @return uint256 Amount of $RARE staked."
            },
            "functionSelector": "399d99ec",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAmountStakedByUser",
            "nameLocation": "4795:21:144",
            "parameters": {
              "id": 57806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57805,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "4825:5:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 57810,
                  "src": "4817:13:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57804,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4817:7:144",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4816:15:144"
            },
            "returnParameters": {
              "id": 57809,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57808,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57810,
                  "src": "4855:7:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57807,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4855:7:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4854:9:144"
            },
            "scope": 57923,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57816,
            "nodeType": "FunctionDefinition",
            "src": "4984:59:144",
            "nodes": [],
            "documentation": {
              "id": 57811,
              "nodeType": "StructuredDocumentation",
              "src": "4868:113:144",
              "text": "@notice Query current round. The current round is accumulating rewards.\n @return uint256 Claim round id."
            },
            "functionSelector": "a32bf597",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentRound",
            "nameLocation": "4993:15:144",
            "parameters": {
              "id": 57812,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5008:2:144"
            },
            "returnParameters": {
              "id": 57815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57814,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57816,
                  "src": "5034:7:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57813,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5034:7:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5033:9:144"
            },
            "scope": 57923,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57822,
            "nodeType": "FunctionDefinition",
            "src": "5133:54:144",
            "nodes": [],
            "documentation": {
              "id": 57817,
              "nodeType": "StructuredDocumentation",
              "src": "5047:83:144",
              "text": "@notice Name of the synthetic asset.\n @return Name of the synthetic asset."
            },
            "functionSelector": "06fdde03",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "5142:4:144",
            "parameters": {
              "id": 57818,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5146:2:144"
            },
            "returnParameters": {
              "id": 57821,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57820,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57822,
                  "src": "5172:13:144",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 57819,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5172:6:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5171:15:144"
            },
            "scope": 57923,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57828,
            "nodeType": "FunctionDefinition",
            "src": "5281:56:144",
            "nodes": [],
            "documentation": {
              "id": 57823,
              "nodeType": "StructuredDocumentation",
              "src": "5191:87:144",
              "text": "@notice Symbol of the synthetic asset.\n @return Symbol of the synthetic asset."
            },
            "functionSelector": "95d89b41",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "5290:6:144",
            "parameters": {
              "id": 57824,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5296:2:144"
            },
            "returnParameters": {
              "id": 57827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57826,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57828,
                  "src": "5322:13:144",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 57825,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5322:6:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5321:15:144"
            },
            "scope": 57923,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57834,
            "nodeType": "FunctionDefinition",
            "src": "5455:66:144",
            "nodes": [],
            "documentation": {
              "id": 57829,
              "nodeType": "StructuredDocumentation",
              "src": "5341:111:144",
              "text": "@notice Query the target being staked on by this contract.\n @return Address of target being staked on;"
            },
            "functionSelector": "3b248c76",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTargetBeingStakedOn",
            "nameLocation": "5464:22:144",
            "parameters": {
              "id": 57830,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5486:2:144"
            },
            "returnParameters": {
              "id": 57833,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57832,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57834,
                  "src": "5512:7:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57831,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5512:7:144",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5511:9:144"
            },
            "scope": 57923,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57841,
            "nodeType": "FunctionDefinition",
            "src": "5665:66:144",
            "nodes": [],
            "documentation": {
              "id": 57835,
              "nodeType": "StructuredDocumentation",
              "src": "5525:137:144",
              "text": "@notice Retrieves a list of all the users that have staked.\n @return list of addresses of all the users who are being staked on."
            },
            "functionSelector": "6e4f88c8",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAllStakers",
            "nameLocation": "5674:13:144",
            "parameters": {
              "id": 57836,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5687:2:144"
            },
            "returnParameters": {
              "id": 57840,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57839,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57841,
                  "src": "5713:16:144",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 57837,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5713:7:144",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 57838,
                    "nodeType": "ArrayTypeName",
                    "src": "5713:9:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5712:18:144"
            },
            "scope": 57923,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57849,
            "nodeType": "FunctionDefinition",
            "src": "5874:73:144",
            "nodes": [],
            "documentation": {
              "id": 57842,
              "nodeType": "StructuredDocumentation",
              "src": "5735:136:144",
              "text": "@notice Total rewards available for the supplied round.\n @return uint256 Amount of $RARE tokens allocated as rewards for round."
            },
            "functionSelector": "91e2057e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getRoundRewards",
            "nameLocation": "5883:15:144",
            "parameters": {
              "id": 57845,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57844,
                  "mutability": "mutable",
                  "name": "_round",
                  "nameLocation": "5907:6:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 57849,
                  "src": "5899:14:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57843,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5899:7:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5898:16:144"
            },
            "returnParameters": {
              "id": 57848,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57847,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57849,
                  "src": "5938:7:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57846,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5938:7:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5937:9:144"
            },
            "scope": 57923,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57860,
            "nodeType": "FunctionDefinition",
            "src": "6324:131:144",
            "nodes": [],
            "documentation": {
              "id": 57850,
              "nodeType": "StructuredDocumentation",
              "src": "5951:370:144",
              "text": "@notice Query rewards for the supplied user address for the round supplied rounds. Does not omit rewards for rounds that have already been claimed. Allows for easier historical lookups.\n @param _user Address of the user to get rewards.\n @param _rounds List of uint256 round ids to look up the rewards.\n @return uint256 Amount of $RARE tokens rewarded."
            },
            "functionSelector": "cae06944",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getHistoricalRewardsForUserForRounds",
            "nameLocation": "6333:36:144",
            "parameters": {
              "id": 57856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57852,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "6378:5:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 57860,
                  "src": "6370:13:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57851,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6370:7:144",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57855,
                  "mutability": "mutable",
                  "name": "_rounds",
                  "nameLocation": "6402:7:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 57860,
                  "src": "6385:24:144",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 57853,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6385:7:144",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 57854,
                    "nodeType": "ArrayTypeName",
                    "src": "6385:9:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6369:41:144"
            },
            "returnParameters": {
              "id": 57859,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57858,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57860,
                  "src": "6446:7:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57857,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6446:7:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6445:9:144"
            },
            "scope": 57923,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57870,
            "nodeType": "FunctionDefinition",
            "src": "6746:103:144",
            "nodes": [],
            "documentation": {
              "id": 57861,
              "nodeType": "StructuredDocumentation",
              "src": "6459:284:144",
              "text": "@notice Query the available rewards for claim of the supplied user address for the number of rounds supplied. \n @param _user Address of the user to get rewards.\n @param _numRounds Address of the user to get rewards.\n @return uint256 Amount of $RARE tokens rewarded."
            },
            "functionSelector": "636f5b27",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getClaimableRewardsForUser",
            "nameLocation": "6755:26:144",
            "parameters": {
              "id": 57866,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57863,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "6790:5:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 57870,
                  "src": "6782:13:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57862,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6782:7:144",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57865,
                  "mutability": "mutable",
                  "name": "_numRounds",
                  "nameLocation": "6805:10:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 57870,
                  "src": "6797:18:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57864,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6797:7:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6781:35:144"
            },
            "returnParameters": {
              "id": 57869,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57868,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57870,
                  "src": "6840:7:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57867,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6840:7:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6839:9:144"
            },
            "scope": 57923,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57880,
            "nodeType": "FunctionDefinition",
            "src": "7155:109:144",
            "nodes": [],
            "documentation": {
              "id": 57871,
              "nodeType": "StructuredDocumentation",
              "src": "6853:299:144",
              "text": "@notice Calculates the number of sRare yielded from staking.\n @param _totalSRare Current supply of sRare.\n @param _stakedAmount Amount of RARE being staked.\n @return uint256 Amount of synthetic tokens one would get for staking {_stakedAmount} given a totalSupply of {_totalSRare}."
            },
            "functionSelector": "d775a4c7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "calculatePurchaseReturn",
            "nameLocation": "7164:23:144",
            "parameters": {
              "id": 57876,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57873,
                  "mutability": "mutable",
                  "name": "_totalSRare",
                  "nameLocation": "7196:11:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 57880,
                  "src": "7188:19:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint120",
                    "typeString": "uint120"
                  },
                  "typeName": {
                    "id": 57872,
                    "name": "uint120",
                    "nodeType": "ElementaryTypeName",
                    "src": "7188:7:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint120",
                      "typeString": "uint120"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57875,
                  "mutability": "mutable",
                  "name": "_stakedAmount",
                  "nameLocation": "7217:13:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 57880,
                  "src": "7209:21:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint120",
                    "typeString": "uint120"
                  },
                  "typeName": {
                    "id": 57874,
                    "name": "uint120",
                    "nodeType": "ElementaryTypeName",
                    "src": "7209:7:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint120",
                      "typeString": "uint120"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7187:44:144"
            },
            "returnParameters": {
              "id": 57879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57878,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57880,
                  "src": "7255:7:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57877,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7255:7:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7254:9:144"
            },
            "scope": 57923,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57892,
            "nodeType": "FunctionDefinition",
            "src": "7706:160:144",
            "nodes": [],
            "documentation": {
              "id": 57881,
              "nodeType": "StructuredDocumentation",
              "src": "7268:435:144",
              "text": "@notice Calculates the number of rare yielded from unstaking.\n @param _totalSRareByUser Current balance of sRARE held by the given user.\n @param _totalRareStakedByUser Total Amount of RARE staked by the given user.\n @param _unstakeAmount Amount of sRare being traded in.\n @return uint256 Amount of $RARE tokens one would get for unstaking {_unstakeAmount} given {_totalSRareByUser} and {_totalRareStakedByUser}."
            },
            "functionSelector": "74293bf8",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "calculateSaleReturn",
            "nameLocation": "7715:19:144",
            "parameters": {
              "id": 57888,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57883,
                  "mutability": "mutable",
                  "name": "_totalSRareByUser",
                  "nameLocation": "7748:17:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 57892,
                  "src": "7740:25:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57882,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7740:7:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57885,
                  "mutability": "mutable",
                  "name": "_totalRareStakedByUser",
                  "nameLocation": "7779:22:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 57892,
                  "src": "7771:30:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57884,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7771:7:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57887,
                  "mutability": "mutable",
                  "name": "_unstakeAmount",
                  "nameLocation": "7815:14:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 57892,
                  "src": "7807:22:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57886,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7807:7:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7734:99:144"
            },
            "returnParameters": {
              "id": 57891,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57890,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57892,
                  "src": "7857:7:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57889,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7857:7:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7856:9:144"
            },
            "scope": 57923,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57898,
            "nodeType": "FunctionDefinition",
            "src": "7988:61:144",
            "nodes": [],
            "documentation": {
              "id": 57893,
              "nodeType": "StructuredDocumentation",
              "src": "7870:115:144",
              "text": "@notice Total rewards snapshotted since con.\n @return uint256 Amount of $RARE tokens allocated as rewards."
            },
            "functionSelector": "94616420",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAllTimeRewards",
            "nameLocation": "7997:17:144",
            "parameters": {
              "id": 57894,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8014:2:144"
            },
            "returnParameters": {
              "id": 57897,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57896,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57898,
                  "src": "8040:7:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57895,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8040:7:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8039:9:144"
            },
            "scope": 57923,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57904,
            "nodeType": "FunctionDefinition",
            "src": "8177:59:144",
            "nodes": [],
            "documentation": {
              "id": 57899,
              "nodeType": "StructuredDocumentation",
              "src": "8053:121:144",
              "text": "@notice Get the unix creation time of the staking contract.\n @return uint256 unix creation time of the contract."
            },
            "functionSelector": "e6519a35",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getCreationTime",
            "nameLocation": "8186:15:144",
            "parameters": {
              "id": 57900,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8201:2:144"
            },
            "returnParameters": {
              "id": 57903,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57902,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57904,
                  "src": "8227:7:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57901,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8227:7:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8226:9:144"
            },
            "scope": 57923,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57910,
            "nodeType": "FunctionDefinition",
            "src": "8362:68:144",
            "nodes": [],
            "documentation": {
              "id": 57905,
              "nodeType": "StructuredDocumentation",
              "src": "8240:119:144",
              "text": "@notice Get the unix time of the most recent snapshot.\n @return uint256 unix time of the most recent snapshot."
            },
            "functionSelector": "7c27ff86",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getLastSnapshotTimestamp",
            "nameLocation": "8371:24:144",
            "parameters": {
              "id": 57906,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8395:2:144"
            },
            "returnParameters": {
              "id": 57909,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57908,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57910,
                  "src": "8421:7:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57907,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8421:7:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8420:9:144"
            },
            "scope": 57923,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57916,
            "nodeType": "FunctionDefinition",
            "src": "8530:62:144",
            "nodes": [],
            "documentation": {
              "id": 57911,
              "nodeType": "StructuredDocumentation",
              "src": "8434:93:144",
              "text": "@notice Total amount of Rewards claimed.\n @return uint256 amount of rewards claimed."
            },
            "functionSelector": "3b1c612e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getSumOfAllClaimed",
            "nameLocation": "8539:18:144",
            "parameters": {
              "id": 57912,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8557:2:144"
            },
            "returnParameters": {
              "id": 57915,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57914,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57916,
                  "src": "8583:7:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57913,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8583:7:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8582:9:144"
            },
            "scope": 57923,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 57922,
            "nodeType": "FunctionDefinition",
            "src": "8697:62:144",
            "nodes": [],
            "documentation": {
              "id": 57917,
              "nodeType": "StructuredDocumentation",
              "src": "8596:98:144",
              "text": "@notice Return the staking registry of the pool\n @return address of the staking registry."
            },
            "functionSelector": "61347782",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getStakingRegistry",
            "nameLocation": "8706:18:144",
            "parameters": {
              "id": 57918,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8724:2:144"
            },
            "returnParameters": {
              "id": 57921,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57920,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 57922,
                  "src": "8750:7:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57919,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8750:7:144",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8749:9:144"
            },
            "scope": 57923,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 57683,
              "name": "IERC20Upgradeable",
              "nameLocations": [
                "344:17:144"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 33865,
              "src": "344:17:144"
            },
            "id": 57684,
            "nodeType": "InheritanceSpecifier",
            "src": "344:17:144"
          }
        ],
        "canonicalName": "IRarityPool",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 57682,
          "nodeType": "StructuredDocumentation",
          "src": "161:158:144",
          "text": "@author koloz, charlescrain\n @title IRarityPool\n @notice The Rare Staking Pool ERC20 (Rarity Pool) interface containing all functions, events, etc."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          57923,
          33865
        ],
        "name": "IRarityPool",
        "nameLocation": "329:11:144",
        "scope": 57924,
        "usedErrors": [
          57737,
          57740,
          57743,
          57746,
          57749,
          57752,
          57755,
          57758,
          57761
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 144
}