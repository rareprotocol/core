{"abi":[{"type":"function","name":"addRewards","inputs":[{"name":"_donor","type":"address","internalType":"address"},{"name":"_amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"allowance","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"spender","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"approve","inputs":[{"name":"spender","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"balanceOf","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"calculatePurchaseReturn","inputs":[{"name":"_totalSRare","type":"uint120","internalType":"uint120"},{"name":"_stakedAmount","type":"uint120","internalType":"uint120"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"calculateSaleReturn","inputs":[{"name":"_totalSRareByUser","type":"uint256","internalType":"uint256"},{"name":"_totalRareStakedByUser","type":"uint256","internalType":"uint256"},{"name":"_unstakeAmount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"claimRewards","inputs":[{"name":"_user","type":"address","internalType":"address"},{"name":"_numRounds","type":"uint8","internalType":"uint8"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getAllTimeRewards","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getAmountStakedByUser","inputs":[{"name":"_user","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getClaimableRewardsForUser","inputs":[{"name":"_user","type":"address","internalType":"address"},{"name":"_numRounds","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getCreationTime","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getCurrentRound","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getHistoricalRewardsForUserForRounds","inputs":[{"name":"_user","type":"address","internalType":"address"},{"name":"_rounds","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getLastSnapshotTimestamp","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getRoundRewards","inputs":[{"name":"_round","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getStakingRegistry","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getSumOfAllClaimed","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getTargetBeingStakedOn","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"initialize","inputs":[{"name":"_userStakedTo","type":"address","internalType":"address"},{"name":"_stakingRegistry","type":"address","internalType":"address"},{"name":"_creator","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"stake","inputs":[{"name":"_amount","type":"uint120","internalType":"uint120"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"takeSnapshot","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"transfer","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"transferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"unstake","inputs":[{"name":"_amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"AddRewards","inputs":[{"name":"_donor","type":"address","indexed":true,"internalType":"address"},{"name":"_round","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"_amount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"_totalAmountAdded","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"_newRoundRewardAmount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"spender","type":"address","indexed":true,"internalType":"address"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"RewardClaimed","inputs":[{"name":"_msgSender","type":"address","indexed":true,"internalType":"address"},{"name":"_claimer","type":"address","indexed":true,"internalType":"address"},{"name":"_amountToStaker","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Stake","inputs":[{"name":"_staker","type":"address","indexed":true,"internalType":"address"},{"name":"_amountStaking","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"_totalAmountStaked","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"_amountSRareReceived","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"StakingSnapshot","inputs":[{"name":"_lastSnapshotTimestamp","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"_currentSnapshotTimestamp","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"_round","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Transfer","inputs":[{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Unstake","inputs":[{"name":"_staker","type":"address","indexed":true,"internalType":"address"},{"name":"_amountUnstaking","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"_totalAmountStaked","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"_amountRareBurned","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"_amountSRareSold","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"error","name":"CannotAddZeroRewards","inputs":[]},{"type":"error","name":"CannotClaimCurrentRound","inputs":[]},{"type":"error","name":"ClaimingTooManyRounds","inputs":[]},{"type":"error","name":"ClaimingZeroRounds","inputs":[]},{"type":"error","name":"InsufficientStakedRare","inputs":[]},{"type":"error","name":"InsufficientSyntheticRare","inputs":[]},{"type":"error","name":"RewardAlreadyClaimed","inputs":[]},{"type":"error","name":"Unauthorized","inputs":[]},{"type":"error","name":"ZeroAddressUnsupported","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"addRewards(address,uint256)":"a9fc507b","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","calculatePurchaseReturn(uint120,uint120)":"d775a4c7","calculateSaleReturn(uint256,uint256,uint256)":"74293bf8","claimRewards(address,uint8)":"b5fc2f85","getAllTimeRewards()":"94616420","getAmountStakedByUser(address)":"399d99ec","getClaimableRewardsForUser(address,uint256)":"636f5b27","getCreationTime()":"e6519a35","getCurrentRound()":"a32bf597","getHistoricalRewardsForUserForRounds(address,uint256[])":"cae06944","getLastSnapshotTimestamp()":"7c27ff86","getRoundRewards(uint256)":"91e2057e","getStakingRegistry()":"61347782","getSumOfAllClaimed()":"3b1c612e","getTargetBeingStakedOn()":"3b248c76","initialize(address,address,address)":"c0c53b8b","name()":"06fdde03","stake(uint120)":"9ca92dec","symbol()":"95d89b41","takeSnapshot()":"b3d3d37e","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","unstake(uint256)":"2e17de78"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CannotAddZeroRewards\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotClaimCurrentRound\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ClaimingTooManyRounds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ClaimingZeroRounds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientStakedRare\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientSyntheticRare\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RewardAlreadyClaimed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddressUnsupported\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_donor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_round\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_totalAmountAdded\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newRoundRewardAmount\",\"type\":\"uint256\"}],\"name\":\"AddRewards\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_msgSender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountToStaker\",\"type\":\"uint256\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountStaking\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_totalAmountStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountSRareReceived\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_lastSnapshotTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_currentSnapshotTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_round\",\"type\":\"uint256\"}],\"name\":\"StakingSnapshot\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountUnstaking\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_totalAmountStaked\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountRareBurned\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountSRareSold\",\"type\":\"uint256\"}],\"name\":\"Unstake\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_donor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"addRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint120\",\"name\":\"_totalSRare\",\"type\":\"uint120\"},{\"internalType\":\"uint120\",\"name\":\"_stakedAmount\",\"type\":\"uint120\"}],\"name\":\"calculatePurchaseReturn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalSRareByUser\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalRareStakedByUser\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_unstakeAmount\",\"type\":\"uint256\"}],\"name\":\"calculateSaleReturn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_numRounds\",\"type\":\"uint8\"}],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllTimeRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getAmountStakedByUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_numRounds\",\"type\":\"uint256\"}],\"name\":\"getClaimableRewardsForUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCreationTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_rounds\",\"type\":\"uint256[]\"}],\"name\":\"getHistoricalRewardsForUserForRounds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastSnapshotTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_round\",\"type\":\"uint256\"}],\"name\":\"getRoundRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakingRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSumOfAllClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTargetBeingStakedOn\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userStakedTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakingRegistry\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint120\",\"name\":\"_amount\",\"type\":\"uint120\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"takeSnapshot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"koloz, charlescrain\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"addRewards(address,uint256)\":{\"params\":{\"_amount\":\"Amount of $RARE being staked.\",\"_donor\":\"Address of the account donating the $RARE.\"}},\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"calculatePurchaseReturn(uint120,uint120)\":{\"params\":{\"_stakedAmount\":\"Amount of RARE being staked.\",\"_totalSRare\":\"Current supply of sRare.\"},\"returns\":{\"_0\":\"uint256 Amount of synthetic tokens one would get for staking {_stakedAmount} given a totalSupply of {_totalSRare}.\"}},\"calculateSaleReturn(uint256,uint256,uint256)\":{\"params\":{\"_totalRareStakedByUser\":\"Total Amount of RARE staked by the given user.\",\"_totalSRareByUser\":\"Current balance of sRARE held by the given user.\",\"_unstakeAmount\":\"Amount of sRare being traded in.\"},\"returns\":{\"_0\":\"uint256 Amount of $RARE tokens one would get for unstaking {_unstakeAmount} given {_totalSRareByUser} and {_totalRareStakedByUser}.\"}},\"claimRewards(address,uint8)\":{\"params\":{\"_numRounds\":\"uint256 number of rounds to claim since last claim.\",\"_user\":\"Address of user to claim on behalf of.\"}},\"getAllTimeRewards()\":{\"returns\":{\"_0\":\"uint256 Amount of $RARE tokens allocated as rewards.\"}},\"getAmountStakedByUser(address)\":{\"params\":{\"_user\":\"Address of staker.\"},\"returns\":{\"_0\":\"uint256 Amount of $RARE staked.\"}},\"getClaimableRewardsForUser(address,uint256)\":{\"params\":{\"_numRounds\":\"Address of the user to get rewards.\",\"_user\":\"Address of the user to get rewards.\"},\"returns\":{\"_0\":\"uint256 Amount of $RARE tokens rewarded.\"}},\"getCreationTime()\":{\"returns\":{\"_0\":\"uint256 unix creation time of the contract.\"}},\"getCurrentRound()\":{\"returns\":{\"_0\":\"uint256 Claim round id.\"}},\"getHistoricalRewardsForUserForRounds(address,uint256[])\":{\"params\":{\"_rounds\":\"List of uint256 round ids to look up the rewards.\",\"_user\":\"Address of the user to get rewards.\"},\"returns\":{\"_0\":\"uint256 Amount of $RARE tokens rewarded.\"}},\"getLastSnapshotTimestamp()\":{\"returns\":{\"_0\":\"uint256 unix time of the most recent snapshot.\"}},\"getRoundRewards(uint256)\":{\"returns\":{\"_0\":\"uint256 Amount of $RARE tokens allocated as rewards for round.\"}},\"getStakingRegistry()\":{\"returns\":{\"_0\":\"address of the staking registry.\"}},\"getSumOfAllClaimed()\":{\"returns\":{\"_0\":\"uint256 amount of rewards claimed.\"}},\"getTargetBeingStakedOn()\":{\"returns\":{\"_0\":\"Address of target being staked on;\"}},\"name()\":{\"returns\":{\"_0\":\"Name of the synthetic asset.\"}},\"stake(uint120)\":{\"params\":{\"_amount\":\"Amount of $RARE being staked.\"}},\"symbol()\":{\"returns\":{\"_0\":\"Symbol of the synthetic asset.\"}},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"unstake(uint256)\":{\"params\":{\"_amount\":\"Amount of synthetic tokens to unstake.\"}}},\"title\":\"IRarityPool\",\"version\":1},\"userdoc\":{\"errors\":{\"CannotAddZeroRewards()\":[{\"notice\":\"Error emitted via {addRewards} if adding 0 rewards.\"}],\"CannotClaimCurrentRound()\":[{\"notice\":\"Error emitted via {claimRewardsForRounds} if claiming current round.\"}],\"ClaimingTooManyRounds()\":[{\"notice\":\"Error emitted via {claimRewardsForRounds} if too many rounds are supplied.\"}],\"ClaimingZeroRounds()\":[{\"notice\":\"Error emitted via {claimRewardsForRounds} if claiming no rounds.\"}],\"InsufficientStakedRare()\":[{\"notice\":\"Error emitted via {unstake} when the sale return proves greater than the amount staked. This should be impossible.\"}],\"InsufficientSyntheticRare()\":[{\"notice\":\"Error emitted via {unstake} when unstaking more synthetic tokens than is in their balance.\"}],\"RewardAlreadyClaimed()\":[{\"notice\":\"Error emitted via {claimRewardsForRounds} if sender has already claimed their reward one of the supplied rounds.\"}],\"Unauthorized()\":[{\"notice\":\"Error emitted when user doesnt meet the criteria for call.\"}],\"ZeroAddressUnsupported()\":[{\"notice\":\"Emitted when Zero address provided where it is not allowed.\"}]},\"kind\":\"user\",\"methods\":{\"addRewards(address,uint256)\":{\"notice\":\"Allocates rewards for the current round with the given amount.\"},\"calculatePurchaseReturn(uint120,uint120)\":{\"notice\":\"Calculates the number of sRare yielded from staking.\"},\"calculateSaleReturn(uint256,uint256,uint256)\":{\"notice\":\"Calculates the number of rare yielded from unstaking.\"},\"claimRewards(address,uint8)\":{\"notice\":\"Claim rewards for the _user for the number of rounds supplied since last claim. Rewards are proportional to the synthetic tokens held during the snapshot associated with each round. Throws if user has already claimed the latest round. Throws if current round is being claimed.\"},\"getAllTimeRewards()\":{\"notice\":\"Total rewards snapshotted since con.\"},\"getAmountStakedByUser(address)\":{\"notice\":\"Query total amount of $RARE a user has staked on this contract.\"},\"getClaimableRewardsForUser(address,uint256)\":{\"notice\":\"Query the available rewards for claim of the supplied user address for the number of rounds supplied. \"},\"getCreationTime()\":{\"notice\":\"Get the unix creation time of the staking contract.\"},\"getCurrentRound()\":{\"notice\":\"Query current round. The current round is accumulating rewards.\"},\"getHistoricalRewardsForUserForRounds(address,uint256[])\":{\"notice\":\"Query rewards for the supplied user address for the round supplied rounds. Does not omit rewards for rounds that have already been claimed. Allows for easier historical lookups.\"},\"getLastSnapshotTimestamp()\":{\"notice\":\"Get the unix time of the most recent snapshot.\"},\"getRoundRewards(uint256)\":{\"notice\":\"Total rewards available for the supplied round.\"},\"getStakingRegistry()\":{\"notice\":\"Return the staking registry of the pool\"},\"getSumOfAllClaimed()\":{\"notice\":\"Total amount of Rewards claimed.\"},\"getTargetBeingStakedOn()\":{\"notice\":\"Query the target being staked on by this contract.\"},\"name()\":{\"notice\":\"Name of the synthetic asset.\"},\"stake(uint120)\":{\"notice\":\"Stake $RARE tokens to the target associated with the contract and receive synthetic tokens in return.\"},\"symbol()\":{\"notice\":\"Symbol of the synthetic asset.\"},\"takeSnapshot()\":{\"notice\":\"Snapshots the rewards for the current round. Anyone can call this.\"},\"unstake(uint256)\":{\"notice\":\"Unstake by returning synthetic tokens and receiving previously staked $RARE in return.\"}},\"notice\":\"The Rare Staking Pool ERC20 (Rarity Pool) interface containing all functions, events, etc.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/staking/token/IRarityPool.sol\":\"IRarityPool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/buffer/=lib/buffer/\",\":@ensdomains/ens-contracts/=lib/ens-contracts/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/contracts/\",\":@uniswap/v3-core/contracts/=lib/v3-core/contracts/\",\":@uniswap/v3-periphery/=lib/v3-periphery/contracts/\",\":arachnid/solidity-stringutils/=lib/solidity-stringutils/\",\":ds-test/=lib/ds-test/src/\",\":ensdomains/ens-contracts/=lib/ensdomains/ens-contracts/contracts/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":rareprotocol/assets/=lib/assets/src/\",\":rareprotocol/aux/=src/\",\":royalty-guard/=lib/royalty-guard/src/royalty-guard/\",\":royalty-registry-solidity/=lib/royalty-registry-solidity/contracts/\",\":royalty-registry/=lib/royalty-registry-solidity/contracts/\",\":solmate/=lib/solmate/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC20Upgradeable.sol\":{\"keccak256\":\"0xe73087c5001a37cf7186b3709377c7ceb01a0d38fb908723d1464cea66b4958c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b835a1929ca2c7c978085e58f08f48855df8a82ef6a426ac71393cf032ea0fc5\",\"dweb:/ipfs/QmUMXRN9g8u9wm63wc7PMaSs7oG2nqnM1VVvktaWkvF68v\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"src/staking/token/IRarityPool.sol\":{\"keccak256\":\"0x8a1c433510ef5db8f4a8b2b298c6618a91e974f1ea6c280967c1d3c710e3794b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ade4d1308318773489621961a1b6e2ed76a0c8ed0686225e75100f73df91f14\",\"dweb:/ipfs/Qma1AxmUyfM8CbRN6MnWW6BVpYE9iByWQygCDvG3RunbqS\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.18+commit.87f61d96"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"CannotAddZeroRewards"},{"inputs":[],"type":"error","name":"CannotClaimCurrentRound"},{"inputs":[],"type":"error","name":"ClaimingTooManyRounds"},{"inputs":[],"type":"error","name":"ClaimingZeroRounds"},{"inputs":[],"type":"error","name":"InsufficientStakedRare"},{"inputs":[],"type":"error","name":"InsufficientSyntheticRare"},{"inputs":[],"type":"error","name":"RewardAlreadyClaimed"},{"inputs":[],"type":"error","name":"Unauthorized"},{"inputs":[],"type":"error","name":"ZeroAddressUnsupported"},{"inputs":[{"internalType":"address","name":"_donor","type":"address","indexed":true},{"internalType":"uint256","name":"_round","type":"uint256","indexed":true},{"internalType":"uint256","name":"_amount","type":"uint256","indexed":false},{"internalType":"uint256","name":"_totalAmountAdded","type":"uint256","indexed":false},{"internalType":"uint256","name":"_newRoundRewardAmount","type":"uint256","indexed":false}],"type":"event","name":"AddRewards","anonymous":false},{"inputs":[{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"address","name":"spender","type":"address","indexed":true},{"internalType":"uint256","name":"value","type":"uint256","indexed":false}],"type":"event","name":"Approval","anonymous":false},{"inputs":[{"internalType":"address","name":"_msgSender","type":"address","indexed":true},{"internalType":"address","name":"_claimer","type":"address","indexed":true},{"internalType":"uint256","name":"_amountToStaker","type":"uint256","indexed":false}],"type":"event","name":"RewardClaimed","anonymous":false},{"inputs":[{"internalType":"address","name":"_staker","type":"address","indexed":true},{"internalType":"uint256","name":"_amountStaking","type":"uint256","indexed":false},{"internalType":"uint256","name":"_totalAmountStaked","type":"uint256","indexed":false},{"internalType":"uint256","name":"_amountSRareReceived","type":"uint256","indexed":false}],"type":"event","name":"Stake","anonymous":false},{"inputs":[{"internalType":"uint256","name":"_lastSnapshotTimestamp","type":"uint256","indexed":false},{"internalType":"uint256","name":"_currentSnapshotTimestamp","type":"uint256","indexed":false},{"internalType":"uint256","name":"_round","type":"uint256","indexed":false}],"type":"event","name":"StakingSnapshot","anonymous":false},{"inputs":[{"internalType":"address","name":"from","type":"address","indexed":true},{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256","name":"value","type":"uint256","indexed":false}],"type":"event","name":"Transfer","anonymous":false},{"inputs":[{"internalType":"address","name":"_staker","type":"address","indexed":true},{"internalType":"uint256","name":"_amountUnstaking","type":"uint256","indexed":false},{"internalType":"uint256","name":"_totalAmountStaked","type":"uint256","indexed":false},{"internalType":"uint256","name":"_amountRareBurned","type":"uint256","indexed":false},{"internalType":"uint256","name":"_amountSRareSold","type":"uint256","indexed":false}],"type":"event","name":"Unstake","anonymous":false},{"inputs":[{"internalType":"address","name":"_donor","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"addRewards"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"stateMutability":"view","type":"function","name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint120","name":"_totalSRare","type":"uint120"},{"internalType":"uint120","name":"_stakedAmount","type":"uint120"}],"stateMutability":"pure","type":"function","name":"calculatePurchaseReturn","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"_totalSRareByUser","type":"uint256"},{"internalType":"uint256","name":"_totalRareStakedByUser","type":"uint256"},{"internalType":"uint256","name":"_unstakeAmount","type":"uint256"}],"stateMutability":"pure","type":"function","name":"calculateSaleReturn","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"uint8","name":"_numRounds","type":"uint8"}],"stateMutability":"nonpayable","type":"function","name":"claimRewards"},{"inputs":[],"stateMutability":"view","type":"function","name":"getAllTimeRewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"stateMutability":"view","type":"function","name":"getAmountStakedByUser","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"uint256","name":"_numRounds","type":"uint256"}],"stateMutability":"view","type":"function","name":"getClaimableRewardsForUser","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getCreationTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getCurrentRound","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"uint256[]","name":"_rounds","type":"uint256[]"}],"stateMutability":"view","type":"function","name":"getHistoricalRewardsForUserForRounds","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getLastSnapshotTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"_round","type":"uint256"}],"stateMutability":"view","type":"function","name":"getRoundRewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getStakingRegistry","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getSumOfAllClaimed","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getTargetBeingStakedOn","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"_userStakedTo","type":"address"},{"internalType":"address","name":"_stakingRegistry","type":"address"},{"internalType":"address","name":"_creator","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"initialize"},{"inputs":[],"stateMutability":"view","type":"function","name":"name","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"uint120","name":"_amount","type":"uint120"}],"stateMutability":"nonpayable","type":"function","name":"stake"},{"inputs":[],"stateMutability":"view","type":"function","name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"takeSnapshot"},{"inputs":[],"stateMutability":"view","type":"function","name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"unstake"}],"devdoc":{"kind":"dev","methods":{"addRewards(address,uint256)":{"params":{"_amount":"Amount of $RARE being staked.","_donor":"Address of the account donating the $RARE."}},"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"calculatePurchaseReturn(uint120,uint120)":{"params":{"_stakedAmount":"Amount of RARE being staked.","_totalSRare":"Current supply of sRare."},"returns":{"_0":"uint256 Amount of synthetic tokens one would get for staking {_stakedAmount} given a totalSupply of {_totalSRare}."}},"calculateSaleReturn(uint256,uint256,uint256)":{"params":{"_totalRareStakedByUser":"Total Amount of RARE staked by the given user.","_totalSRareByUser":"Current balance of sRARE held by the given user.","_unstakeAmount":"Amount of sRare being traded in."},"returns":{"_0":"uint256 Amount of $RARE tokens one would get for unstaking {_unstakeAmount} given {_totalSRareByUser} and {_totalRareStakedByUser}."}},"claimRewards(address,uint8)":{"params":{"_numRounds":"uint256 number of rounds to claim since last claim.","_user":"Address of user to claim on behalf of."}},"getAllTimeRewards()":{"returns":{"_0":"uint256 Amount of $RARE tokens allocated as rewards."}},"getAmountStakedByUser(address)":{"params":{"_user":"Address of staker."},"returns":{"_0":"uint256 Amount of $RARE staked."}},"getClaimableRewardsForUser(address,uint256)":{"params":{"_numRounds":"Address of the user to get rewards.","_user":"Address of the user to get rewards."},"returns":{"_0":"uint256 Amount of $RARE tokens rewarded."}},"getCreationTime()":{"returns":{"_0":"uint256 unix creation time of the contract."}},"getCurrentRound()":{"returns":{"_0":"uint256 Claim round id."}},"getHistoricalRewardsForUserForRounds(address,uint256[])":{"params":{"_rounds":"List of uint256 round ids to look up the rewards.","_user":"Address of the user to get rewards."},"returns":{"_0":"uint256 Amount of $RARE tokens rewarded."}},"getLastSnapshotTimestamp()":{"returns":{"_0":"uint256 unix time of the most recent snapshot."}},"getRoundRewards(uint256)":{"returns":{"_0":"uint256 Amount of $RARE tokens allocated as rewards for round."}},"getStakingRegistry()":{"returns":{"_0":"address of the staking registry."}},"getSumOfAllClaimed()":{"returns":{"_0":"uint256 amount of rewards claimed."}},"getTargetBeingStakedOn()":{"returns":{"_0":"Address of target being staked on;"}},"name()":{"returns":{"_0":"Name of the synthetic asset."}},"stake(uint120)":{"params":{"_amount":"Amount of $RARE being staked."}},"symbol()":{"returns":{"_0":"Symbol of the synthetic asset."}},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"unstake(uint256)":{"params":{"_amount":"Amount of synthetic tokens to unstake."}}},"version":1},"userdoc":{"kind":"user","methods":{"addRewards(address,uint256)":{"notice":"Allocates rewards for the current round with the given amount."},"calculatePurchaseReturn(uint120,uint120)":{"notice":"Calculates the number of sRare yielded from staking."},"calculateSaleReturn(uint256,uint256,uint256)":{"notice":"Calculates the number of rare yielded from unstaking."},"claimRewards(address,uint8)":{"notice":"Claim rewards for the _user for the number of rounds supplied since last claim. Rewards are proportional to the synthetic tokens held during the snapshot associated with each round. Throws if user has already claimed the latest round. Throws if current round is being claimed."},"getAllTimeRewards()":{"notice":"Total rewards snapshotted since con."},"getAmountStakedByUser(address)":{"notice":"Query total amount of $RARE a user has staked on this contract."},"getClaimableRewardsForUser(address,uint256)":{"notice":"Query the available rewards for claim of the supplied user address for the number of rounds supplied. "},"getCreationTime()":{"notice":"Get the unix creation time of the staking contract."},"getCurrentRound()":{"notice":"Query current round. The current round is accumulating rewards."},"getHistoricalRewardsForUserForRounds(address,uint256[])":{"notice":"Query rewards for the supplied user address for the round supplied rounds. Does not omit rewards for rounds that have already been claimed. Allows for easier historical lookups."},"getLastSnapshotTimestamp()":{"notice":"Get the unix time of the most recent snapshot."},"getRoundRewards(uint256)":{"notice":"Total rewards available for the supplied round."},"getStakingRegistry()":{"notice":"Return the staking registry of the pool"},"getSumOfAllClaimed()":{"notice":"Total amount of Rewards claimed."},"getTargetBeingStakedOn()":{"notice":"Query the target being staked on by this contract."},"name()":{"notice":"Name of the synthetic asset."},"stake(uint120)":{"notice":"Stake $RARE tokens to the target associated with the contract and receive synthetic tokens in return."},"symbol()":{"notice":"Symbol of the synthetic asset."},"takeSnapshot()":{"notice":"Snapshots the rewards for the current round. Anyone can call this."},"unstake(uint256)":{"notice":"Unstake by returning synthetic tokens and receiving previously staked $RARE in return."}},"version":1}},"settings":{"remappings":["@ensdomains/buffer/=lib/buffer/","@ensdomains/ens-contracts/=lib/ens-contracts/contracts/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@uniswap/v3-core/=lib/v3-core/contracts/","@uniswap/v3-core/contracts/=lib/v3-core/contracts/","@uniswap/v3-periphery/=lib/v3-periphery/contracts/","arachnid/solidity-stringutils/=lib/solidity-stringutils/","ds-test/=lib/ds-test/src/","ensdomains/ens-contracts/=lib/ensdomains/ens-contracts/contracts/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/","rareprotocol/assets/=lib/assets/src/","rareprotocol/aux/=src/","royalty-guard/=lib/royalty-guard/src/royalty-guard/","royalty-registry-solidity/=lib/royalty-registry-solidity/contracts/","royalty-registry/=lib/royalty-registry-solidity/contracts/","solmate/=lib/solmate/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/staking/token/IRarityPool.sol":"IRarityPool"},"evmVersion":"paris","libraries":{},"viaIR":true},"sources":{"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC20Upgradeable.sol":{"keccak256":"0xe73087c5001a37cf7186b3709377c7ceb01a0d38fb908723d1464cea66b4958c","urls":["bzz-raw://b835a1929ca2c7c978085e58f08f48855df8a82ef6a426ac71393cf032ea0fc5","dweb:/ipfs/QmUMXRN9g8u9wm63wc7PMaSs7oG2nqnM1VVvktaWkvF68v"],"license":"MIT"},"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol":{"keccak256":"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f","urls":["bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f","dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco"],"license":"MIT"},"src/staking/token/IRarityPool.sol":{"keccak256":"0x8a1c433510ef5db8f4a8b2b298c6618a91e974f1ea6c280967c1d3c710e3794b","urls":["bzz-raw://8ade4d1308318773489621961a1b6e2ed76a0c8ed0686225e75100f73df91f14","dweb:/ipfs/Qma1AxmUyfM8CbRN6MnWW6BVpYE9iByWQygCDvG3RunbqS"],"license":"MIT"}},"version":1},"id":186}