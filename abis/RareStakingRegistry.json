{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "InsufficientRareAllowance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidPool",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PercentageBeyondLimit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PeriodLengthBeyondLimit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RenouncingAdmin",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "StakingContractAlreadyExists",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Unauthorized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroAddressUnsupported",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_payee",
          "type": "address"
        }
      ],
      "name": "DefaultPayeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_percentage",
          "type": "uint256"
        }
      ],
      "name": "DeflationaryPercentageUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_percentage",
          "type": "uint256"
        }
      ],
      "name": "DiscountPercentageUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_periodLength",
          "type": "uint256"
        }
      ],
      "name": "PeriodLengthUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_resolver",
          "type": "address"
        }
      ],
      "name": "ResolverUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_percentage",
          "type": "address"
        }
      ],
      "name": "ReverseRegistrarUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_uniswapPool",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "SetSwapPool",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ENS_SETTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STAKING_CONFIG_SETTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STAKING_INFO_SETTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STAKING_STAT_SETTER_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STAKING_STAT_SETTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SWAP_POOL_SETTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_staker",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_stakedOn",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "decreaseAmountStaked",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultPayee",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDeflationaryPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDiscountPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPeriodLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRareAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getRewardAccumulatorAddressForUser",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getStakingAddressForUser",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getStakingInfoForUser",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "stakingAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "rewardAddress",
              "type": "address"
            }
          ],
          "internalType": "struct IRareStakingRegistry.Info",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getSwapPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getTotalAmountStakedByUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getTotalAmountStakedOnUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_stakingAddrs",
          "type": "address[]"
        }
      ],
      "name": "getUsersForStakingAddresses",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getWethAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_staker",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_stakedOn",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "increaseAmountStaked",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_reverseRegistrar",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_resolver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_periodLength",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_deflationaryPercentage",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_discountedPercent",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_rare",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_weth",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_defaultPayee",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_payee",
          "type": "address"
        }
      ],
      "name": "setDefaultPayee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_percentage",
          "type": "uint256"
        }
      ],
      "name": "setDeflationaryPercentage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_percentage",
          "type": "uint256"
        }
      ],
      "name": "setDiscountPercentage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_periodLength",
          "type": "uint256"
        }
      ],
      "name": "setPeriodLength",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_resolver",
          "type": "address"
        }
      ],
      "name": "setResolver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_reverseRegistrar",
          "type": "address"
        }
      ],
      "name": "setReverseRegistrar",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_stakingAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rewardSwapAddress",
          "type": "address"
        }
      ],
      "name": "setStakingAddresses",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_uniswapPool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "setSwapPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transferRareFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a0604052306080523480156200001557600080fd5b506200002062000026565b620000e7565b600054610100900460ff1615620000935760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811614620000e5576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b608051613af36200011f60003960008181610be301528181610c2c01528181611069015281816110a901526111380152613af36000f3fe60806040526004361061025c5760003560e01c806352d1902d11610144578063a4303a45116100b6578063cac7c65c1161007a578063cac7c65c146107d7578063cb8af2b5146107f7578063d547741f14610817578063e286ef3314610837578063f24bd8a614610874578063f7ef8ead146108a157600080fd5b8063a4303a4514610721578063b3428d1514610743578063bb0544a114610763578063c254498714610783578063ca15c873146107b757600080fd5b806381d0606b1161010857806381d0606b1461065c5780638469ddc7146106965780639010d07c146106ac57806391d14854146106cc57806399247be7146106ec578063a217fddf1461070c57600080fd5b806352d1902d146105c5578063557499ba146105da57806366951bc1146105fa57806376a250a71461061c57806381910e331461063c57600080fd5b80632608ff35116101dd57806336568abe116101a157806336568abe146104fb5780633659cfe61461051b5780633d867d951461053b57806346ccbb40146105725780634e543b26146105925780634f1ef286146105b257600080fd5b80632608ff351461041f578063265718b41461043f57806329b4a590146104735780632f2ff15d146104a7578063363227e5146104c757600080fd5b806318ab58ac1161022457806318ab58ac146103625780631c5633d71461038f5780632210d525146103b157806323a7b42a146103d0578063248a9ca3146103ef57600080fd5b806301ffc9a714610261578063039bcf8e1461029657806306c571d5146102e857806310da95e61461032d578063111029b91461034c575b600080fd5b34801561026d57600080fd5b5061028161027c366004613195565b6108b7565b60405190151581526020015b60405180910390f35b3480156102a257600080fd5b506102d06102b13660046131d4565b6001600160a01b03908116600090815261012f60205260409020541690565b6040516001600160a01b03909116815260200161028d565b3480156102f457600080fd5b5061031f6103033660046131d4565b6001600160a01b03166000908152610130602052604090205490565b60405190815260200161028d565b34801561033957600080fd5b50610139546001600160a01b03166102d0565b34801561035857600080fd5b506101385461031f565b34801561036e57600080fd5b5061038261037d3660046131f1565b6108e2565b60405161028d9190613266565b34801561039b57600080fd5b506103af6103aa3660046132b3565b610a42565b005b3480156103bd57600080fd5b50610136546001600160a01b03166102d0565b3480156103dc57600080fd5b50610137546001600160a01b03166102d0565b3480156103fb57600080fd5b5061031f61040a3660046132b3565b60009081526065602052604090206001015490565b34801561042b57600080fd5b506103af61043a3660046132cc565b610ad8565b34801561044b57600080fd5b5061031f7fcfac5101a9a6e666acfba4416612534dd5edcaa6e3fec2fd00fb2e84b0e5e1d781565b34801561047f57600080fd5b5061031f7f1fb53273153c82fe1363373dd3355bec4bce8bdfe349c78a8ad09156481e622181565b3480156104b357600080fd5b506103af6104c236600461330d565b610b6d565b3480156104d357600080fd5b5061031f7f400c5a1da7685ba9f18764e1fcfab4b29512376de39bc16cc5ea8f80b7b6781981565b34801561050757600080fd5b506103af61051636600461330d565b610b97565b34801561052757600080fd5b506103af6105363660046131d4565b610bd9565b34801561054757600080fd5b5061031f6105563660046131d4565b6001600160a01b03166000908152610131602052604090205490565b34801561057e57600080fd5b506103af61058d36600461333d565b610cc1565b34801561059e57600080fd5b506103af6105ad3660046131d4565b610fa3565b6103af6105c03660046133da565b61105f565b3480156105d157600080fd5b5061031f61112b565b3480156105e657600080fd5b506103af6105f53660046131d4565b6111de565b34801561060657600080fd5b5061031f600080516020613a5783398151915281565b34801561062857600080fd5b506103af61063736600461346d565b61129a565b34801561064857600080fd5b506103af6106573660046132cc565b611404565b34801561066857600080fd5b506102d06106773660046131d4565b6001600160a01b03908116600090815261012d60205260409020541690565b3480156106a257600080fd5b506101345461031f565b3480156106b857600080fd5b506102d06106c73660046134b8565b6114e4565b3480156106d857600080fd5b506102816106e736600461330d565b611503565b3480156106f857600080fd5b506103af6107073660046131d4565b61152e565b34801561071857600080fd5b5061031f600081565b34801561072d57600080fd5b5061031f600080516020613a9e83398151915281565b34801561074f57600080fd5b506103af61075e3660046132b3565b6115d8565b34801561076f57600080fd5b506103af61077e3660046134da565b611665565b34801561078f57600080fd5b5061031f7f6b742d59f502efc664ffa5cec8b4f798ca10dc8c5372b7e9f352dc77e490827b81565b3480156107c357600080fd5b5061031f6107d23660046132b3565b61198c565b3480156107e357600080fd5b506103af6107f23660046132cc565b6119a3565b34801561080357600080fd5b506103af6108123660046132b3565b611a2e565b34801561082357600080fd5b506103af61083236600461330d565b611abb565b34801561084357600080fd5b506102d06108523660046131d4565b6001600160a01b03908116600090815261012d60205260409020600101541690565b34801561088057600080fd5b5061089461088f3660046131d4565b611ae0565b60405161028d91906135cb565b3480156108ad57600080fd5b506101355461031f565b60006001600160e01b03198216635a05180f60e01b14806108dc57506108dc82611d94565b92915050565b606060008267ffffffffffffffff8111156108ff576108ff61336b565b604051908082528060200260200182016040528015610928578160200160208202803683370190505b50905060005b83811015610a3a5784848281811061094857610948613635565b905060200201602081019061095d91906131d4565b6001600160a01b0316633b248c766040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156109b6575060408051601f3d908101601f191682019092526109b39181019061364b565b60015b6109f35760008282815181106109ce576109ce613635565b60200260200101906001600160a01b031690816001600160a01b031681525050610a28565b80838381518110610a0657610a06613635565b60200260200101906001600160a01b031690816001600160a01b031681525050505b80610a328161367e565b91505061092e565b509392505050565b6301e13380811115610a67576040516333f2123960e21b815260040160405180910390fd5b610a7f600080516020613a9e83398151915233611503565b610a9b576040516282b42960e81b815260040160405180910390fd5b6101348190556040518181527f439c9ef273bcbea625a0b7b93955ba4d4963bc26fdeaafe7dd6e674779464105906020015b60405180910390a150565b610af0600080516020613a5783398151915233611503565b610b0c576040516282b42960e81b815260040160405180910390fd5b6001600160a01b0383166000908152610130602052604081208054839290610b35908490613697565b90915550506001600160a01b0382166000908152610131602052604081208054839290610b63908490613697565b9091555050505050565b600082815260656020526040902060010154610b8881611dc9565b610b928383611dd3565b505050565b81158015610bad5750610ba98261198c565b6001145b15610bcb57604051630f29d08f60e31b815260040160405180910390fd5b610bd58282611df5565b5050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610c2a5760405162461bcd60e51b8152600401610c21906136aa565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610c73600080516020613a37833981519152546001600160a01b031690565b6001600160a01b031614610c995760405162461bcd60e51b8152600401610c21906136f6565b610ca281611e6f565b60408051600080825260208201909252610cbe91839190611ebd565b50565b806001600160a01b0316826001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2d919061364b565b6001600160a01b031614158015610db75750806001600160a01b0316826001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dab919061364b565b6001600160a01b031614155b15610dd45760405162820f3560e61b815260040160405180910390fd5b6101375460408051630dfe168160e01b815290516001600160a01b0392831692851691630dfe16819160048083019260209291908290030181865afa158015610e21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e45919061364b565b6001600160a01b031614158015610ed45750610137546040805163d21220a760e01b815290516001600160a01b039283169285169163d21220a79160048083019260209291908290030181865afa158015610ea4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec8919061364b565b6001600160a01b031614155b15610ef15760405162820f3560e61b815260040160405180910390fd5b610f1b7f400c5a1da7685ba9f18764e1fcfab4b29512376de39bc16cc5ea8f80b7b6781933611503565b610f37576040516282b42960e81b815260040160405180910390fd5b6001600160a01b03818116600081815261012f602090815260409182902080546001600160a01b031916948716948517905581519384528301919091527f90b58464d7ad372751038449eef244602d2be9c82abdab06596a7677272cd427910160405180910390a15050565b6001600160a01b038116610fca57604051637827912560e01b815260040160405180910390fd5b610ff47f6b742d59f502efc664ffa5cec8b4f798ca10dc8c5372b7e9f352dc77e490827b33611503565b611010576040516282b42960e81b815260040160405180910390fd5b61013380546001600160a01b0319166001600160a01b0383169081179091556040519081527f15cd6d20bba01b3fcb790c73829dd07412cbdf689ef818c96a2505889f3736a290602001610acd565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036110a75760405162461bcd60e51b8152600401610c21906136aa565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166110f0600080516020613a37833981519152546001600160a01b031690565b6001600160a01b0316146111165760405162461bcd60e51b8152600401610c21906136f6565b61111f82611e6f565b610bd582826001611ebd565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146111cb5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610c21565b50600080516020613a3783398151915290565b6001600160a01b03811661120557604051637827912560e01b815260040160405180910390fd5b61122f7f6b742d59f502efc664ffa5cec8b4f798ca10dc8c5372b7e9f352dc77e490827b33611503565b61124b576040516282b42960e81b815260040160405180910390fd5b61013280546001600160a01b0319166001600160a01b0383169081179091556040519081527fd192c0b229b00473ccb6ccfebf6642805bca1dcdf2d9fb4fd102c7dc7ea4ce2390602001610acd565b6112c47fcfac5101a9a6e666acfba4416612534dd5edcaa6e3fec2fd00fb2e84b0e5e1d733611503565b6112e0576040516282b42960e81b815260040160405180910390fd5b6001600160a01b03831661130757604051637827912560e01b815260040160405180910390fd5b6001600160a01b03821661132e57604051637827912560e01b815260040160405180910390fd5b6001600160a01b03811661135557604051637827912560e01b815260040160405180910390fd5b6001600160a01b03838116600090815261012d6020526040902054161561138f576040516333e9f35b60e11b815260040160405180910390fd5b6040805180820182526001600160a01b039384168082529284166020808301918252958516600081815261012d8852848120935184549088166001600160a01b0319918216178555925160019094018054949097169383169390931790955592815261012e9094529092208054909216179055565b61013654604051636eb1769f60e11b81526001600160a01b038581166004830152306024830152909116908290829063dd62ed3e90604401602060405180830381865afa158015611459573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061147d9190613742565b101561149c576040516321a1cc1360e11b815260040160405180910390fd5b33600090815261012e60205260409020546001600160a01b03166114d2576040516282b42960e81b815260040160405180910390fd5b6114de81858585612028565b50505050565b60008281526097602052604081206114fc9083612082565b9392505050565b60009182526065602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6001600160a01b03811661155557604051637827912560e01b815260040160405180910390fd5b61156d600080516020613a9e83398151915233611503565b611589576040516282b42960e81b815260040160405180910390fd5b61013980546001600160a01b0319166001600160a01b0383169081179091556040519081527fa37a7d6d9546ebba206b7200fd6814cc4885bd05277f43db31703508086bac5b90602001610acd565b6127108111156115fb5760405163669a78b160e11b815260040160405180910390fd5b611613600080516020613a9e83398151915233611503565b61162f576040516282b42960e81b815260040160405180910390fd5b6101388190556040518181527f8edc85bde8568f5dc6d7febb4820920db680537ad498b90d003e63d93a3988a190602001610acd565b600054610100900460ff16158080156116855750600054600160ff909116105b8061169f5750303b15801561169f575060005460ff166001145b6117025760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610c21565b6000805460ff191660011790558015611725576000805461ff0019166101001790555b6301e1338087111561174a576040516333f2123960e21b815260040160405180910390fd5b61271086111561176d5760405163669a78b160e11b815260040160405180910390fd5b6127108511156117905760405163669a78b160e11b815260040160405180910390fd5b6001600160a01b038a166117b757604051637827912560e01b815260040160405180910390fd5b6001600160a01b0389166117de57604051637827912560e01b815260040160405180910390fd5b6001600160a01b03881661180557604051637827912560e01b815260040160405180910390fd5b6001600160a01b03841661182c57604051637827912560e01b815260040160405180910390fd5b6001600160a01b03831661185357604051637827912560e01b815260040160405180910390fd5b6001600160a01b03821661187a57604051637827912560e01b815260040160405180910390fd5b61188560008b611dd3565b6118bd600080516020613a578339815191527f1fb53273153c82fe1363373dd3355bec4bce8bdfe349c78a8ad09156481e622161208e565b61013280546001600160a01b03199081166001600160a01b038c811691909117909255610133805482168b8416179055610135889055610134899055610136805482168784161790556101378054821686841617905561013887905561013980549091169184169190911790556119326120d9565b61193a6120d9565b8015611980576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050505050565b60008181526097602052604081206108dc90612146565b6119bb600080516020613a5783398151915233611503565b6119d7576040516282b42960e81b815260040160405180910390fd5b6001600160a01b0383166000908152610130602052604081208054839290611a0090849061375b565b90915550506001600160a01b0382166000908152610131602052604081208054839290610b6390849061375b565b612710811115611a515760405163669a78b160e11b815260040160405180910390fd5b611a69600080516020613a9e83398151915233611503565b611a85576040516282b42960e81b815260040160405180910390fd5b6101358190556040518181527f392bc62c14254761a14ce86ad9820d13103f5f490089391c7ecf162afd5d68f990602001610acd565b600082815260656020526040902060010154611ad681611dc9565b610b928383612150565b611ae861315b565b6101335461013254604051632ffef98760e21b81526001600160a01b038581166004830152600093611bd4939082169263691f3431929091169063bffbe61c90602401602060405180830381865afa158015611b48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b6c9190613742565b6040518263ffffffff1660e01b8152600401611b8a91815260200190565b600060405180830381865afa158015611ba7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611bcf919081019061376e565b612172565b9050611bde61315b565b6001600160a01b03808516600081815261012d60208181526040808420805487169188019190915293909252905260010154166060820152611c1f8261219f565b15611cd957611c50611c49604051806040016040528060018152602001601760f91b815250612172565b8390612278565b50611c8d82611c8760405180604001604052806011815260200170029bcb73a3432ba34b1902920a922903e1607d1b815250612172565b9061229e565b8152611ccd611ca6611bcf611ca18561232e565b612397565b611c876040518060400160405280600681526020016578524152455f60d01b815250612172565b60208201529392505050565b6000611ce48561240a565b90506000611cf8611bcf8360066000612420565b90506000611d0c611bcf8460046023612420565b90506000611d1d611bcf848461229e565b9050611d5581611c8760405180604001604052806011815260200170029bcb73a3432ba34b1902920a922903e1607d1b815250612172565b855260408051808201909152600681526578524152455f60d01b6020820152611d83908290611c8790612172565b602086015250929695505050505050565b60006001600160e01b03198216637965db0b60e01b14806108dc57506301ffc9a760e01b6001600160e01b03198316146108dc565b610cbe8133612511565b611ddd828261256a565b6000828152609760205260409020610b9290826125f0565b6001600160a01b0381163314611e655760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610c21565b610bd58282612150565b611e7a600033611503565b611e96576040516282b42960e81b815260040160405180910390fd5b6001600160a01b038116610cbe57604051637827912560e01b815260040160405180910390fd5b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615611ef057610b9283612605565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611f4a575060408051601f3d908101601f19168201909252611f4791810190613742565b60015b611fad5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610c21565b600080516020613a37833981519152811461201c5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610c21565b50610b928383836126a1565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526114de9085906126c6565b60006114fc838361279b565b600082815260656020526040808220600101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b600054610100900460ff166121445760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610c21565b565b60006108dc825490565b61215a82826127c5565b6000828152609760205260409020610b92908261282c565b60408051808201825260008082526020918201528151808301909252825182529182019181019190915290565b600080601f83602001516121b3919061375b565b83519091506000906121c59083613697565b9050600092505b8082101561227157815160ff1660808110156121f4576121ed600184613697565b925061225e565b60e08160ff16101561220b576121ed600284613697565b60f08160ff161015612222576121ed600384613697565b60f88160ff161015612239576121ed600484613697565b60fc8160ff161015612250576121ed600584613697565b61225b600684613697565b92505b50826122698161367e565b9350506121cc565b5050919050565b6040805180820190915260008082526020820152612297838383612841565b5092915050565b805182516060916000916122b29190613697565b67ffffffffffffffff8111156122ca576122ca61336b565b6040519080825280601f01601f1916602001820160405280156122f4576020820181803683370190505b509050600060208201905061231281866020015187600001516128d7565b8451610a3a906123229083613697565b602086015186516128d7565b60606000826000015167ffffffffffffffff81111561234f5761234f61336b565b6040519080825280601f01601f191660200182016040528015612379576020820181803683370190505b509050600060208201905061229781856020015186600001516128d7565b60608160005b8151811015612297576123cf8282815181106123bb576123bb613635565b01602001516001600160f81b031916612951565b8282815181106123e1576123e1613635565b60200101906001600160f81b031916908160001a905350806124028161367e565b91505061239d565b60606108dc6001600160a01b03831660146129a0565b8251606090849061243185856137e5565b111561243f5761243f61380d565b60008467ffffffffffffffff81111561245a5761245a61336b565b6040519080825280601f01601f191660200182016040528015612484576020820181803683370190505b509050806000855b61249688886137e5565b811015612504578481815181106124af576124af613635565b01602001516001600160f81b03191683836124c98161367e565b9450815181106124db576124db613635565b60200101906001600160f81b031916908160001a905350806124fc8161367e565b91505061248c565b5090979650505050505050565b61251b8282611503565b610bd55761252881612b3c565b612533836020612b4e565b604051602001612544929190613823565b60408051601f198184030181529082905262461bcd60e51b8252610c2191600401613898565b6125748282611503565b610bd55760008281526065602090815260408083206001600160a01b03851684529091529020805460ff191660011790556125ac3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60006114fc836001600160a01b038416612c9b565b6001600160a01b0381163b6126725760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610c21565b600080516020613a3783398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6126aa83612cea565b6000825111806126b75750805b15610b92576114de8383612d2a565b600061271b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612d4f9092919063ffffffff16565b905080516000148061273c57508080602001905181019061273c91906138ab565b610b925760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610c21565b60008260000182815481106127b2576127b2613635565b9060005260206000200154905092915050565b6127cf8282611503565b15610bd55760008281526065602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60006114fc836001600160a01b038416612d66565b604080518082019091526000808252602082015260006128738560000151866020015186600001518760200151612e59565b602080850182905286015190915061288b908261375b565b8551612897919061375b565b8352602085015181036128ad57600085526128ce565b835183516128bb9190613697565b855186906128ca90839061375b565b9052505b50909392505050565b6020811061290f57815183526128ee602084613697565b92506128fb602083613697565b915061290860208261375b565b90506128d7565b600019811561293e57600161292583602061375b565b612931906101006139b1565b61293b919061375b565b90505b9151835183169219169190911790915250565b6000606160f81b6001600160f81b031983161080159061297f5750603d60f91b6001600160f81b0319831611155b1561299c57612993602060f884901c6139bd565b60f81b92915050565b5090565b606060006129af8360026139d6565b6129ba906002613697565b67ffffffffffffffff8111156129d2576129d261336b565b6040519080825280601f01601f1916602001820160405280156129fc576020820181803683370190505b509050600360fc1b81600081518110612a1757612a17613635565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110612a4657612a46613635565b60200101906001600160f81b031916908160001a9053506000612a6a8460026139d6565b612a75906001613697565b90505b6001811115612aed576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110612aa957612aa9613635565b1a60f81b828281518110612abf57612abf613635565b60200101906001600160f81b031916908160001a90535060049490941c93612ae6816139ed565b9050612a78565b5083156114fc5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610c21565b60606108dc6001600160a01b03831660145b60606000612b5d8360026139d6565b612b68906002613697565b67ffffffffffffffff811115612b8057612b8061336b565b6040519080825280601f01601f191660200182016040528015612baa576020820181803683370190505b509050600360fc1b81600081518110612bc557612bc5613635565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110612bf457612bf4613635565b60200101906001600160f81b031916908160001a9053506000612c188460026139d6565b612c23906001613697565b90505b6001811115612aed576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110612c5757612c57613635565b1a60f81b828281518110612c6d57612c6d613635565b60200101906001600160f81b031916908160001a90535060049490941c93612c94816139ed565b9050612c26565b6000818152600183016020526040812054612ce2575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556108dc565b5060006108dc565b612cf381612605565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606114fc8383604051806060016040528060278152602001613a7760279139612f6a565b6060612d5e8484600085612fe2565b949350505050565b60008181526001830160205260408120548015612e4f576000612d8a60018361375b565b8554909150600090612d9e9060019061375b565b9050818114612e03576000866000018281548110612dbe57612dbe613635565b9060005260206000200154905080876000018481548110612de157612de1613635565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080612e1457612e14613a04565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506108dc565b60009150506108dc565b600080858411612f605760208411612f0c5760008415612ea4576001612e8086602061375b565b612e8b9060086139d6565b612e969060026139b1565b612ea0919061375b565b1990505b8351811685612eb38989613697565b612ebd919061375b565b805190935082165b818114612ef757878411612edf5787945050505050612d5e565b83612ee9816139ed565b945050828451169050612ec5565b612f018785613697565b945050505050612d5e565b838320612f19858861375b565b612f239087613697565b91505b858210612f5e57848220808203612f4b57612f418684613697565b9350505050612d5e565b612f5660018461375b565b925050612f26565b505b5092949350505050565b6060600080856001600160a01b031685604051612f879190613a1a565b600060405180830381855af49150503d8060008114612fc2576040519150601f19603f3d011682016040523d82523d6000602084013e612fc7565b606091505b5091509150612fd8868383876130bd565b9695505050505050565b6060824710156130435760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610c21565b600080866001600160a01b0316858760405161305f9190613a1a565b60006040518083038185875af1925050503d806000811461309c576040519150601f19603f3d011682016040523d82523d6000602084013e6130a1565b606091505b50915091506130b2878383876130bd565b979650505050505050565b6060831561312c578251600003613125576001600160a01b0385163b6131255760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610c21565b5081612d5e565b612d5e83838151156131415781518083602001fd5b8060405162461bcd60e51b8152600401610c219190613898565b6040518060800160405280606081526020016060815260200160006001600160a01b0316815260200160006001600160a01b031681525090565b6000602082840312156131a757600080fd5b81356001600160e01b0319811681146114fc57600080fd5b6001600160a01b0381168114610cbe57600080fd5b6000602082840312156131e657600080fd5b81356114fc816131bf565b6000806020838503121561320457600080fd5b823567ffffffffffffffff8082111561321c57600080fd5b818501915085601f83011261323057600080fd5b81358181111561323f57600080fd5b8660208260051b850101111561325457600080fd5b60209290920196919550909350505050565b6020808252825182820181905260009190848201906040850190845b818110156132a75783516001600160a01b031683529284019291840191600101613282565b50909695505050505050565b6000602082840312156132c557600080fd5b5035919050565b6000806000606084860312156132e157600080fd5b83356132ec816131bf565b925060208401356132fc816131bf565b929592945050506040919091013590565b6000806040838503121561332057600080fd5b823591506020830135613332816131bf565b809150509250929050565b6000806040838503121561335057600080fd5b823561335b816131bf565b91506020830135613332816131bf565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156133aa576133aa61336b565b604052919050565b600067ffffffffffffffff8211156133cc576133cc61336b565b50601f01601f191660200190565b600080604083850312156133ed57600080fd5b82356133f8816131bf565b9150602083013567ffffffffffffffff81111561341457600080fd5b8301601f8101851361342557600080fd5b8035613438613433826133b2565b613381565b81815286602083850101111561344d57600080fd5b816020840160208301376000602083830101528093505050509250929050565b60008060006060848603121561348257600080fd5b833561348d816131bf565b9250602084013561349d816131bf565b915060408401356134ad816131bf565b809150509250925092565b600080604083850312156134cb57600080fd5b50508035926020909101359150565b60008060008060008060008060006101208a8c0312156134f957600080fd5b8935613504816131bf565b985060208a0135613514816131bf565b975060408a0135613524816131bf565b965060608a0135955060808a0135945060a08a0135935060c08a0135613549816131bf565b925060e08a0135613559816131bf565b91506101008a013561356a816131bf565b809150509295985092959850929598565b60005b8381101561359657818101518382015260200161357e565b50506000910152565b600081518084526135b781602086016020860161357b565b601f01601f19169290920160200192915050565b6020815260008251608060208401526135e760a084018261359f565b90506020840151601f19848303016040850152613604828261359f565b60408601516001600160a01b0390811660608781019190915290960151909516608090940193909352509192915050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561365d57600080fd5b81516114fc816131bf565b634e487b7160e01b600052601160045260246000fd5b60006001820161369057613690613668565b5060010190565b808201808211156108dc576108dc613668565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b60006020828403121561375457600080fd5b5051919050565b818103818111156108dc576108dc613668565b60006020828403121561378057600080fd5b815167ffffffffffffffff81111561379757600080fd5b8201601f810184136137a857600080fd5b80516137b6613433826133b2565b8181528560208385010111156137cb57600080fd5b6137dc82602083016020860161357b565b95945050505050565b808201828112600083128015821682158216171561380557613805613668565b505092915050565b634e487b7160e01b600052600160045260246000fd5b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161385b81601785016020880161357b565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161388c81602884016020880161357b565b01602801949350505050565b6020815260006114fc602083018461359f565b6000602082840312156138bd57600080fd5b815180151581146114fc57600080fd5b600181815b808511156139085781600019048211156138ee576138ee613668565b808516156138fb57918102915b93841c93908002906138d2565b509250929050565b60008261391f575060016108dc565b8161392c575060006108dc565b8160018114613942576002811461394c57613968565b60019150506108dc565b60ff84111561395d5761395d613668565b50506001821b6108dc565b5060208310610133831016604e8410600b841016171561398b575081810a6108dc565b61399583836138cd565b80600019048211156139a9576139a9613668565b029392505050565b60006114fc8383613910565b60ff82811682821603908111156108dc576108dc613668565b80820281158282048414176108dc576108dc613668565b6000816139fc576139fc613668565b506000190190565b634e487b7160e01b600052603160045260246000fd5b60008251613a2c81846020870161357b565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbcb6e1aa954ca88134dedc447027c8ef72953bf046c847542dd28babf3f8d9092f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564dc0c909fa3135f9237d8a966b8b184ead9db0c05d73609dcb237ff6a00b0717ba2646970667358221220f695e89f72a5d98be012a8bb17eed14caac04ee5f0b36838f5232197f36b9ffb64736f6c63430008120033",
    "sourceMap": "1772:18501:111:-:0;;;1332:4:46;1289:48;;6445:47:111;;;;;;;;;-1:-1:-1;6465:22:111;:20;:22::i;:::-;1772:18501;;5939:280:45;6007:13;;;;;;;6006:14;5998:66;;;;-1:-1:-1;;;5998:66:45;;216:2:118;5998:66:45;;;198:21:118;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:118;;;338:37;392:19;;5998:66:45;;;;;;;;6078:12;;6094:15;6078:12;;;:31;6074:139;;6125:12;:30;;-1:-1:-1;;6125:30:45;6140:15;6125:30;;;;;;6174:28;;564:36:118;;;6174:28:45;;552:2:118;537:18;6174:28:45;;;;;;;6074:139;5939:280::o;422:184:118:-;1772:18501:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061025c5760003560e01c806352d1902d11610144578063a4303a45116100b6578063cac7c65c1161007a578063cac7c65c146107d7578063cb8af2b5146107f7578063d547741f14610817578063e286ef3314610837578063f24bd8a614610874578063f7ef8ead146108a157600080fd5b8063a4303a4514610721578063b3428d1514610743578063bb0544a114610763578063c254498714610783578063ca15c873146107b757600080fd5b806381d0606b1161010857806381d0606b1461065c5780638469ddc7146106965780639010d07c146106ac57806391d14854146106cc57806399247be7146106ec578063a217fddf1461070c57600080fd5b806352d1902d146105c5578063557499ba146105da57806366951bc1146105fa57806376a250a71461061c57806381910e331461063c57600080fd5b80632608ff35116101dd57806336568abe116101a157806336568abe146104fb5780633659cfe61461051b5780633d867d951461053b57806346ccbb40146105725780634e543b26146105925780634f1ef286146105b257600080fd5b80632608ff351461041f578063265718b41461043f57806329b4a590146104735780632f2ff15d146104a7578063363227e5146104c757600080fd5b806318ab58ac1161022457806318ab58ac146103625780631c5633d71461038f5780632210d525146103b157806323a7b42a146103d0578063248a9ca3146103ef57600080fd5b806301ffc9a714610261578063039bcf8e1461029657806306c571d5146102e857806310da95e61461032d578063111029b91461034c575b600080fd5b34801561026d57600080fd5b5061028161027c366004613195565b6108b7565b60405190151581526020015b60405180910390f35b3480156102a257600080fd5b506102d06102b13660046131d4565b6001600160a01b03908116600090815261012f60205260409020541690565b6040516001600160a01b03909116815260200161028d565b3480156102f457600080fd5b5061031f6103033660046131d4565b6001600160a01b03166000908152610130602052604090205490565b60405190815260200161028d565b34801561033957600080fd5b50610139546001600160a01b03166102d0565b34801561035857600080fd5b506101385461031f565b34801561036e57600080fd5b5061038261037d3660046131f1565b6108e2565b60405161028d9190613266565b34801561039b57600080fd5b506103af6103aa3660046132b3565b610a42565b005b3480156103bd57600080fd5b50610136546001600160a01b03166102d0565b3480156103dc57600080fd5b50610137546001600160a01b03166102d0565b3480156103fb57600080fd5b5061031f61040a3660046132b3565b60009081526065602052604090206001015490565b34801561042b57600080fd5b506103af61043a3660046132cc565b610ad8565b34801561044b57600080fd5b5061031f7fcfac5101a9a6e666acfba4416612534dd5edcaa6e3fec2fd00fb2e84b0e5e1d781565b34801561047f57600080fd5b5061031f7f1fb53273153c82fe1363373dd3355bec4bce8bdfe349c78a8ad09156481e622181565b3480156104b357600080fd5b506103af6104c236600461330d565b610b6d565b3480156104d357600080fd5b5061031f7f400c5a1da7685ba9f18764e1fcfab4b29512376de39bc16cc5ea8f80b7b6781981565b34801561050757600080fd5b506103af61051636600461330d565b610b97565b34801561052757600080fd5b506103af6105363660046131d4565b610bd9565b34801561054757600080fd5b5061031f6105563660046131d4565b6001600160a01b03166000908152610131602052604090205490565b34801561057e57600080fd5b506103af61058d36600461333d565b610cc1565b34801561059e57600080fd5b506103af6105ad3660046131d4565b610fa3565b6103af6105c03660046133da565b61105f565b3480156105d157600080fd5b5061031f61112b565b3480156105e657600080fd5b506103af6105f53660046131d4565b6111de565b34801561060657600080fd5b5061031f600080516020613a5783398151915281565b34801561062857600080fd5b506103af61063736600461346d565b61129a565b34801561064857600080fd5b506103af6106573660046132cc565b611404565b34801561066857600080fd5b506102d06106773660046131d4565b6001600160a01b03908116600090815261012d60205260409020541690565b3480156106a257600080fd5b506101345461031f565b3480156106b857600080fd5b506102d06106c73660046134b8565b6114e4565b3480156106d857600080fd5b506102816106e736600461330d565b611503565b3480156106f857600080fd5b506103af6107073660046131d4565b61152e565b34801561071857600080fd5b5061031f600081565b34801561072d57600080fd5b5061031f600080516020613a9e83398151915281565b34801561074f57600080fd5b506103af61075e3660046132b3565b6115d8565b34801561076f57600080fd5b506103af61077e3660046134da565b611665565b34801561078f57600080fd5b5061031f7f6b742d59f502efc664ffa5cec8b4f798ca10dc8c5372b7e9f352dc77e490827b81565b3480156107c357600080fd5b5061031f6107d23660046132b3565b61198c565b3480156107e357600080fd5b506103af6107f23660046132cc565b6119a3565b34801561080357600080fd5b506103af6108123660046132b3565b611a2e565b34801561082357600080fd5b506103af61083236600461330d565b611abb565b34801561084357600080fd5b506102d06108523660046131d4565b6001600160a01b03908116600090815261012d60205260409020600101541690565b34801561088057600080fd5b5061089461088f3660046131d4565b611ae0565b60405161028d91906135cb565b3480156108ad57600080fd5b506101355461031f565b60006001600160e01b03198216635a05180f60e01b14806108dc57506108dc82611d94565b92915050565b606060008267ffffffffffffffff8111156108ff576108ff61336b565b604051908082528060200260200182016040528015610928578160200160208202803683370190505b50905060005b83811015610a3a5784848281811061094857610948613635565b905060200201602081019061095d91906131d4565b6001600160a01b0316633b248c766040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156109b6575060408051601f3d908101601f191682019092526109b39181019061364b565b60015b6109f35760008282815181106109ce576109ce613635565b60200260200101906001600160a01b031690816001600160a01b031681525050610a28565b80838381518110610a0657610a06613635565b60200260200101906001600160a01b031690816001600160a01b031681525050505b80610a328161367e565b91505061092e565b509392505050565b6301e13380811115610a67576040516333f2123960e21b815260040160405180910390fd5b610a7f600080516020613a9e83398151915233611503565b610a9b576040516282b42960e81b815260040160405180910390fd5b6101348190556040518181527f439c9ef273bcbea625a0b7b93955ba4d4963bc26fdeaafe7dd6e674779464105906020015b60405180910390a150565b610af0600080516020613a5783398151915233611503565b610b0c576040516282b42960e81b815260040160405180910390fd5b6001600160a01b0383166000908152610130602052604081208054839290610b35908490613697565b90915550506001600160a01b0382166000908152610131602052604081208054839290610b63908490613697565b9091555050505050565b600082815260656020526040902060010154610b8881611dc9565b610b928383611dd3565b505050565b81158015610bad5750610ba98261198c565b6001145b15610bcb57604051630f29d08f60e31b815260040160405180910390fd5b610bd58282611df5565b5050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610c2a5760405162461bcd60e51b8152600401610c21906136aa565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610c73600080516020613a37833981519152546001600160a01b031690565b6001600160a01b031614610c995760405162461bcd60e51b8152600401610c21906136f6565b610ca281611e6f565b60408051600080825260208201909252610cbe91839190611ebd565b50565b806001600160a01b0316826001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2d919061364b565b6001600160a01b031614158015610db75750806001600160a01b0316826001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dab919061364b565b6001600160a01b031614155b15610dd45760405162820f3560e61b815260040160405180910390fd5b6101375460408051630dfe168160e01b815290516001600160a01b0392831692851691630dfe16819160048083019260209291908290030181865afa158015610e21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e45919061364b565b6001600160a01b031614158015610ed45750610137546040805163d21220a760e01b815290516001600160a01b039283169285169163d21220a79160048083019260209291908290030181865afa158015610ea4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec8919061364b565b6001600160a01b031614155b15610ef15760405162820f3560e61b815260040160405180910390fd5b610f1b7f400c5a1da7685ba9f18764e1fcfab4b29512376de39bc16cc5ea8f80b7b6781933611503565b610f37576040516282b42960e81b815260040160405180910390fd5b6001600160a01b03818116600081815261012f602090815260409182902080546001600160a01b031916948716948517905581519384528301919091527f90b58464d7ad372751038449eef244602d2be9c82abdab06596a7677272cd427910160405180910390a15050565b6001600160a01b038116610fca57604051637827912560e01b815260040160405180910390fd5b610ff47f6b742d59f502efc664ffa5cec8b4f798ca10dc8c5372b7e9f352dc77e490827b33611503565b611010576040516282b42960e81b815260040160405180910390fd5b61013380546001600160a01b0319166001600160a01b0383169081179091556040519081527f15cd6d20bba01b3fcb790c73829dd07412cbdf689ef818c96a2505889f3736a290602001610acd565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036110a75760405162461bcd60e51b8152600401610c21906136aa565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166110f0600080516020613a37833981519152546001600160a01b031690565b6001600160a01b0316146111165760405162461bcd60e51b8152600401610c21906136f6565b61111f82611e6f565b610bd582826001611ebd565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146111cb5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610c21565b50600080516020613a3783398151915290565b6001600160a01b03811661120557604051637827912560e01b815260040160405180910390fd5b61122f7f6b742d59f502efc664ffa5cec8b4f798ca10dc8c5372b7e9f352dc77e490827b33611503565b61124b576040516282b42960e81b815260040160405180910390fd5b61013280546001600160a01b0319166001600160a01b0383169081179091556040519081527fd192c0b229b00473ccb6ccfebf6642805bca1dcdf2d9fb4fd102c7dc7ea4ce2390602001610acd565b6112c47fcfac5101a9a6e666acfba4416612534dd5edcaa6e3fec2fd00fb2e84b0e5e1d733611503565b6112e0576040516282b42960e81b815260040160405180910390fd5b6001600160a01b03831661130757604051637827912560e01b815260040160405180910390fd5b6001600160a01b03821661132e57604051637827912560e01b815260040160405180910390fd5b6001600160a01b03811661135557604051637827912560e01b815260040160405180910390fd5b6001600160a01b03838116600090815261012d6020526040902054161561138f576040516333e9f35b60e11b815260040160405180910390fd5b6040805180820182526001600160a01b039384168082529284166020808301918252958516600081815261012d8852848120935184549088166001600160a01b0319918216178555925160019094018054949097169383169390931790955592815261012e9094529092208054909216179055565b61013654604051636eb1769f60e11b81526001600160a01b038581166004830152306024830152909116908290829063dd62ed3e90604401602060405180830381865afa158015611459573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061147d9190613742565b101561149c576040516321a1cc1360e11b815260040160405180910390fd5b33600090815261012e60205260409020546001600160a01b03166114d2576040516282b42960e81b815260040160405180910390fd5b6114de81858585612028565b50505050565b60008281526097602052604081206114fc9083612082565b9392505050565b60009182526065602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6001600160a01b03811661155557604051637827912560e01b815260040160405180910390fd5b61156d600080516020613a9e83398151915233611503565b611589576040516282b42960e81b815260040160405180910390fd5b61013980546001600160a01b0319166001600160a01b0383169081179091556040519081527fa37a7d6d9546ebba206b7200fd6814cc4885bd05277f43db31703508086bac5b90602001610acd565b6127108111156115fb5760405163669a78b160e11b815260040160405180910390fd5b611613600080516020613a9e83398151915233611503565b61162f576040516282b42960e81b815260040160405180910390fd5b6101388190556040518181527f8edc85bde8568f5dc6d7febb4820920db680537ad498b90d003e63d93a3988a190602001610acd565b600054610100900460ff16158080156116855750600054600160ff909116105b8061169f5750303b15801561169f575060005460ff166001145b6117025760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610c21565b6000805460ff191660011790558015611725576000805461ff0019166101001790555b6301e1338087111561174a576040516333f2123960e21b815260040160405180910390fd5b61271086111561176d5760405163669a78b160e11b815260040160405180910390fd5b6127108511156117905760405163669a78b160e11b815260040160405180910390fd5b6001600160a01b038a166117b757604051637827912560e01b815260040160405180910390fd5b6001600160a01b0389166117de57604051637827912560e01b815260040160405180910390fd5b6001600160a01b03881661180557604051637827912560e01b815260040160405180910390fd5b6001600160a01b03841661182c57604051637827912560e01b815260040160405180910390fd5b6001600160a01b03831661185357604051637827912560e01b815260040160405180910390fd5b6001600160a01b03821661187a57604051637827912560e01b815260040160405180910390fd5b61188560008b611dd3565b6118bd600080516020613a578339815191527f1fb53273153c82fe1363373dd3355bec4bce8bdfe349c78a8ad09156481e622161208e565b61013280546001600160a01b03199081166001600160a01b038c811691909117909255610133805482168b8416179055610135889055610134899055610136805482168784161790556101378054821686841617905561013887905561013980549091169184169190911790556119326120d9565b61193a6120d9565b8015611980576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050505050565b60008181526097602052604081206108dc90612146565b6119bb600080516020613a5783398151915233611503565b6119d7576040516282b42960e81b815260040160405180910390fd5b6001600160a01b0383166000908152610130602052604081208054839290611a0090849061375b565b90915550506001600160a01b0382166000908152610131602052604081208054839290610b6390849061375b565b612710811115611a515760405163669a78b160e11b815260040160405180910390fd5b611a69600080516020613a9e83398151915233611503565b611a85576040516282b42960e81b815260040160405180910390fd5b6101358190556040518181527f392bc62c14254761a14ce86ad9820d13103f5f490089391c7ecf162afd5d68f990602001610acd565b600082815260656020526040902060010154611ad681611dc9565b610b928383612150565b611ae861315b565b6101335461013254604051632ffef98760e21b81526001600160a01b038581166004830152600093611bd4939082169263691f3431929091169063bffbe61c90602401602060405180830381865afa158015611b48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b6c9190613742565b6040518263ffffffff1660e01b8152600401611b8a91815260200190565b600060405180830381865afa158015611ba7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611bcf919081019061376e565b612172565b9050611bde61315b565b6001600160a01b03808516600081815261012d60208181526040808420805487169188019190915293909252905260010154166060820152611c1f8261219f565b15611cd957611c50611c49604051806040016040528060018152602001601760f91b815250612172565b8390612278565b50611c8d82611c8760405180604001604052806011815260200170029bcb73a3432ba34b1902920a922903e1607d1b815250612172565b9061229e565b8152611ccd611ca6611bcf611ca18561232e565b612397565b611c876040518060400160405280600681526020016578524152455f60d01b815250612172565b60208201529392505050565b6000611ce48561240a565b90506000611cf8611bcf8360066000612420565b90506000611d0c611bcf8460046023612420565b90506000611d1d611bcf848461229e565b9050611d5581611c8760405180604001604052806011815260200170029bcb73a3432ba34b1902920a922903e1607d1b815250612172565b855260408051808201909152600681526578524152455f60d01b6020820152611d83908290611c8790612172565b602086015250929695505050505050565b60006001600160e01b03198216637965db0b60e01b14806108dc57506301ffc9a760e01b6001600160e01b03198316146108dc565b610cbe8133612511565b611ddd828261256a565b6000828152609760205260409020610b9290826125f0565b6001600160a01b0381163314611e655760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610c21565b610bd58282612150565b611e7a600033611503565b611e96576040516282b42960e81b815260040160405180910390fd5b6001600160a01b038116610cbe57604051637827912560e01b815260040160405180910390fd5b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615611ef057610b9283612605565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611f4a575060408051601f3d908101601f19168201909252611f4791810190613742565b60015b611fad5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610c21565b600080516020613a37833981519152811461201c5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610c21565b50610b928383836126a1565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526114de9085906126c6565b60006114fc838361279b565b600082815260656020526040808220600101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b600054610100900460ff166121445760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610c21565b565b60006108dc825490565b61215a82826127c5565b6000828152609760205260409020610b92908261282c565b60408051808201825260008082526020918201528151808301909252825182529182019181019190915290565b600080601f83602001516121b3919061375b565b83519091506000906121c59083613697565b9050600092505b8082101561227157815160ff1660808110156121f4576121ed600184613697565b925061225e565b60e08160ff16101561220b576121ed600284613697565b60f08160ff161015612222576121ed600384613697565b60f88160ff161015612239576121ed600484613697565b60fc8160ff161015612250576121ed600584613697565b61225b600684613697565b92505b50826122698161367e565b9350506121cc565b5050919050565b6040805180820190915260008082526020820152612297838383612841565b5092915050565b805182516060916000916122b29190613697565b67ffffffffffffffff8111156122ca576122ca61336b565b6040519080825280601f01601f1916602001820160405280156122f4576020820181803683370190505b509050600060208201905061231281866020015187600001516128d7565b8451610a3a906123229083613697565b602086015186516128d7565b60606000826000015167ffffffffffffffff81111561234f5761234f61336b565b6040519080825280601f01601f191660200182016040528015612379576020820181803683370190505b509050600060208201905061229781856020015186600001516128d7565b60608160005b8151811015612297576123cf8282815181106123bb576123bb613635565b01602001516001600160f81b031916612951565b8282815181106123e1576123e1613635565b60200101906001600160f81b031916908160001a905350806124028161367e565b91505061239d565b60606108dc6001600160a01b03831660146129a0565b8251606090849061243185856137e5565b111561243f5761243f61380d565b60008467ffffffffffffffff81111561245a5761245a61336b565b6040519080825280601f01601f191660200182016040528015612484576020820181803683370190505b509050806000855b61249688886137e5565b811015612504578481815181106124af576124af613635565b01602001516001600160f81b03191683836124c98161367e565b9450815181106124db576124db613635565b60200101906001600160f81b031916908160001a905350806124fc8161367e565b91505061248c565b5090979650505050505050565b61251b8282611503565b610bd55761252881612b3c565b612533836020612b4e565b604051602001612544929190613823565b60408051601f198184030181529082905262461bcd60e51b8252610c2191600401613898565b6125748282611503565b610bd55760008281526065602090815260408083206001600160a01b03851684529091529020805460ff191660011790556125ac3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60006114fc836001600160a01b038416612c9b565b6001600160a01b0381163b6126725760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610c21565b600080516020613a3783398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6126aa83612cea565b6000825111806126b75750805b15610b92576114de8383612d2a565b600061271b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612d4f9092919063ffffffff16565b905080516000148061273c57508080602001905181019061273c91906138ab565b610b925760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610c21565b60008260000182815481106127b2576127b2613635565b9060005260206000200154905092915050565b6127cf8282611503565b15610bd55760008281526065602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60006114fc836001600160a01b038416612d66565b604080518082019091526000808252602082015260006128738560000151866020015186600001518760200151612e59565b602080850182905286015190915061288b908261375b565b8551612897919061375b565b8352602085015181036128ad57600085526128ce565b835183516128bb9190613697565b855186906128ca90839061375b565b9052505b50909392505050565b6020811061290f57815183526128ee602084613697565b92506128fb602083613697565b915061290860208261375b565b90506128d7565b600019811561293e57600161292583602061375b565b612931906101006139b1565b61293b919061375b565b90505b9151835183169219169190911790915250565b6000606160f81b6001600160f81b031983161080159061297f5750603d60f91b6001600160f81b0319831611155b1561299c57612993602060f884901c6139bd565b60f81b92915050565b5090565b606060006129af8360026139d6565b6129ba906002613697565b67ffffffffffffffff8111156129d2576129d261336b565b6040519080825280601f01601f1916602001820160405280156129fc576020820181803683370190505b509050600360fc1b81600081518110612a1757612a17613635565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110612a4657612a46613635565b60200101906001600160f81b031916908160001a9053506000612a6a8460026139d6565b612a75906001613697565b90505b6001811115612aed576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110612aa957612aa9613635565b1a60f81b828281518110612abf57612abf613635565b60200101906001600160f81b031916908160001a90535060049490941c93612ae6816139ed565b9050612a78565b5083156114fc5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610c21565b60606108dc6001600160a01b03831660145b60606000612b5d8360026139d6565b612b68906002613697565b67ffffffffffffffff811115612b8057612b8061336b565b6040519080825280601f01601f191660200182016040528015612baa576020820181803683370190505b509050600360fc1b81600081518110612bc557612bc5613635565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110612bf457612bf4613635565b60200101906001600160f81b031916908160001a9053506000612c188460026139d6565b612c23906001613697565b90505b6001811115612aed576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110612c5757612c57613635565b1a60f81b828281518110612c6d57612c6d613635565b60200101906001600160f81b031916908160001a90535060049490941c93612c94816139ed565b9050612c26565b6000818152600183016020526040812054612ce2575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556108dc565b5060006108dc565b612cf381612605565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606114fc8383604051806060016040528060278152602001613a7760279139612f6a565b6060612d5e8484600085612fe2565b949350505050565b60008181526001830160205260408120548015612e4f576000612d8a60018361375b565b8554909150600090612d9e9060019061375b565b9050818114612e03576000866000018281548110612dbe57612dbe613635565b9060005260206000200154905080876000018481548110612de157612de1613635565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080612e1457612e14613a04565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506108dc565b60009150506108dc565b600080858411612f605760208411612f0c5760008415612ea4576001612e8086602061375b565b612e8b9060086139d6565b612e969060026139b1565b612ea0919061375b565b1990505b8351811685612eb38989613697565b612ebd919061375b565b805190935082165b818114612ef757878411612edf5787945050505050612d5e565b83612ee9816139ed565b945050828451169050612ec5565b612f018785613697565b945050505050612d5e565b838320612f19858861375b565b612f239087613697565b91505b858210612f5e57848220808203612f4b57612f418684613697565b9350505050612d5e565b612f5660018461375b565b925050612f26565b505b5092949350505050565b6060600080856001600160a01b031685604051612f879190613a1a565b600060405180830381855af49150503d8060008114612fc2576040519150601f19603f3d011682016040523d82523d6000602084013e612fc7565b606091505b5091509150612fd8868383876130bd565b9695505050505050565b6060824710156130435760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610c21565b600080866001600160a01b0316858760405161305f9190613a1a565b60006040518083038185875af1925050503d806000811461309c576040519150601f19603f3d011682016040523d82523d6000602084013e6130a1565b606091505b50915091506130b2878383876130bd565b979650505050505050565b6060831561312c578251600003613125576001600160a01b0385163b6131255760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610c21565b5081612d5e565b612d5e83838151156131415781518083602001fd5b8060405162461bcd60e51b8152600401610c219190613898565b6040518060800160405280606081526020016060815260200160006001600160a01b0316815260200160006001600160a01b031681525090565b6000602082840312156131a757600080fd5b81356001600160e01b0319811681146114fc57600080fd5b6001600160a01b0381168114610cbe57600080fd5b6000602082840312156131e657600080fd5b81356114fc816131bf565b6000806020838503121561320457600080fd5b823567ffffffffffffffff8082111561321c57600080fd5b818501915085601f83011261323057600080fd5b81358181111561323f57600080fd5b8660208260051b850101111561325457600080fd5b60209290920196919550909350505050565b6020808252825182820181905260009190848201906040850190845b818110156132a75783516001600160a01b031683529284019291840191600101613282565b50909695505050505050565b6000602082840312156132c557600080fd5b5035919050565b6000806000606084860312156132e157600080fd5b83356132ec816131bf565b925060208401356132fc816131bf565b929592945050506040919091013590565b6000806040838503121561332057600080fd5b823591506020830135613332816131bf565b809150509250929050565b6000806040838503121561335057600080fd5b823561335b816131bf565b91506020830135613332816131bf565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156133aa576133aa61336b565b604052919050565b600067ffffffffffffffff8211156133cc576133cc61336b565b50601f01601f191660200190565b600080604083850312156133ed57600080fd5b82356133f8816131bf565b9150602083013567ffffffffffffffff81111561341457600080fd5b8301601f8101851361342557600080fd5b8035613438613433826133b2565b613381565b81815286602083850101111561344d57600080fd5b816020840160208301376000602083830101528093505050509250929050565b60008060006060848603121561348257600080fd5b833561348d816131bf565b9250602084013561349d816131bf565b915060408401356134ad816131bf565b809150509250925092565b600080604083850312156134cb57600080fd5b50508035926020909101359150565b60008060008060008060008060006101208a8c0312156134f957600080fd5b8935613504816131bf565b985060208a0135613514816131bf565b975060408a0135613524816131bf565b965060608a0135955060808a0135945060a08a0135935060c08a0135613549816131bf565b925060e08a0135613559816131bf565b91506101008a013561356a816131bf565b809150509295985092959850929598565b60005b8381101561359657818101518382015260200161357e565b50506000910152565b600081518084526135b781602086016020860161357b565b601f01601f19169290920160200192915050565b6020815260008251608060208401526135e760a084018261359f565b90506020840151601f19848303016040850152613604828261359f565b60408601516001600160a01b0390811660608781019190915290960151909516608090940193909352509192915050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561365d57600080fd5b81516114fc816131bf565b634e487b7160e01b600052601160045260246000fd5b60006001820161369057613690613668565b5060010190565b808201808211156108dc576108dc613668565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b60006020828403121561375457600080fd5b5051919050565b818103818111156108dc576108dc613668565b60006020828403121561378057600080fd5b815167ffffffffffffffff81111561379757600080fd5b8201601f810184136137a857600080fd5b80516137b6613433826133b2565b8181528560208385010111156137cb57600080fd5b6137dc82602083016020860161357b565b95945050505050565b808201828112600083128015821682158216171561380557613805613668565b505092915050565b634e487b7160e01b600052600160045260246000fd5b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161385b81601785016020880161357b565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161388c81602884016020880161357b565b01602801949350505050565b6020815260006114fc602083018461359f565b6000602082840312156138bd57600080fd5b815180151581146114fc57600080fd5b600181815b808511156139085781600019048211156138ee576138ee613668565b808516156138fb57918102915b93841c93908002906138d2565b509250929050565b60008261391f575060016108dc565b8161392c575060006108dc565b8160018114613942576002811461394c57613968565b60019150506108dc565b60ff84111561395d5761395d613668565b50506001821b6108dc565b5060208310610133831016604e8410600b841016171561398b575081810a6108dc565b61399583836138cd565b80600019048211156139a9576139a9613668565b029392505050565b60006114fc8383613910565b60ff82811682821603908111156108dc576108dc613668565b80820281158282048414176108dc576108dc613668565b6000816139fc576139fc613668565b506000190190565b634e487b7160e01b600052603160045260246000fd5b60008251613a2c81846020870161357b565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbcb6e1aa954ca88134dedc447027c8ef72953bf046c847542dd28babf3f8d9092f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564dc0c909fa3135f9237d8a966b8b184ead9db0c05d73609dcb237ff6a00b0717ba2646970667358221220f695e89f72a5d98be012a8bb17eed14caac04ee5f0b36838f5232197f36b9ffb64736f6c63430008120033",
    "sourceMap": "1772:18501:111:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;962:223:34;;;;;;;;;;-1:-1:-1;962:223:34;;;;;:::i;:::-;;:::i;:::-;;;470:14:118;;463:22;445:41;;433:2;418:18;962:223:34;;;;;;;;14891:104:111;;;;;;;;;;-1:-1:-1;14891:104:111;;;;;:::i;:::-;-1:-1:-1;;;;;14973:17:111;;;14951:7;14973:17;;;:9;:17;;;;;;;;14891:104;;;;-1:-1:-1;;;;;1049:32:118;;;1031:51;;1019:2;1004:18;14891:104:111;885:203:118;16980:133:111;;;;;;;;;;-1:-1:-1;16980:133:111;;;;;:::i;:::-;-1:-1:-1;;;;;17083:25:111;17054:14;17083:25;;;:18;:25;;;;;;;16980:133;;;;1239:25:118;;;1227:2;1212:18;16980:133:111;1093:177:118;14759:89:111;;;;;;;;;;-1:-1:-1;14831:12:111;;-1:-1:-1;;;;;14831:12:111;14759:89;;14616:100;;;;;;;;;;-1:-1:-1;14694:17:111;;14616:100;;17469:436;;;;;;;;;;-1:-1:-1;17469:436:111;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;12006:290::-;;;;;;;;;;-1:-1:-1;12006:290:111;;;;;:::i;:::-;;:::i;:::-;;15161:80;;;;;;;;;;-1:-1:-1;15232:4:111;;-1:-1:-1;;;;;15232:4:111;15161:80;;15038;;;;;;;;;;-1:-1:-1;15109:4:111;;-1:-1:-1;;;;;15109:4:111;15038:80;;4834:129:35;;;;;;;;;;-1:-1:-1;4834:129:35;;;;;:::i;:::-;4908:7;4934:12;;;:6;:12;;;;;:22;;;;4834:129;9925:268:111;;;;;;;;;;-1:-1:-1;9925:268:111;;;;;:::i;:::-;;:::i;4108:88::-;;;;;;;;;;;;4159:37;4108:88;;4240:100;;;;;;;;;;;;4297:43;4240:100;;5259:145:35;;;;;;;;;;-1:-1:-1;5259:145:35;;;;;:::i;:::-;;:::i;4766:82:111:-;;;;;;;;;;;;4814:34;4766:82;;8766:284;;;;;;;;;;-1:-1:-1;8766:284:111;;;;;:::i;:::-;;:::i;3387:195:46:-;;;;;;;;;;-1:-1:-1;3387:195:46;;;;;:::i;:::-;;:::i;17156:135:111:-;;;;;;;;;;-1:-1:-1;17156:135:111;;;;;:::i;:::-;-1:-1:-1;;;;;17259:27:111;17230:14;17259:27;;;:20;:27;;;;;;;17156:135;13268:606;;;;;;;;;;-1:-1:-1;13268:606:111;;;;;:::i;:::-;;:::i;12873:268::-;;;;;;;;;;-1:-1:-1;12873:268:111;;;;;:::i;:::-;;:::i;3901:220:46:-;;;;;;:::i;:::-;;:::i;3006:131::-;;;;;;;;;;;;;:::i;12421:327:111:-;;;;;;;;;;-1:-1:-1;12421:327:111;;;;;:::i;:::-;;:::i;4384:88::-;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4384:88:111;;9145:646;;;;;;;;;;-1:-1:-1;9145:646:111;;;;;:::i;:::-;;:::i;13971:393::-;;;;;;;;;;-1:-1:-1;13971:393:111;;;;;:::i;:::-;;:::i;16603:141::-;;;;;;;;;;-1:-1:-1;16603:141:111;;;;;:::i;:::-;-1:-1:-1;;;;;16697:27:111;;;16675:7;16697:27;;;:20;:27;;;;;:42;;;16603:141;15436:89;;;;;;;;;;-1:-1:-1;15508:12:111;;15436:89;;1770:151:34;;;;;;;;;;-1:-1:-1;1770:151:34;;;;;:::i;:::-;;:::i;3329:145:35:-;;;;;;;;;;-1:-1:-1;3329:145:35;;;;;:::i;:::-;;:::i;10731:264:111:-;;;;;;;;;;-1:-1:-1;10731:264:111;;;;;:::i;:::-;;:::i;2450:49:35:-;;;;;;;;;;-1:-1:-1;2450:49:35;2495:4;2450:49;;4516:92:111;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4516:92:111;;11575:295;;;;;;;;;;-1:-1:-1;11575:295:111;;;;;:::i;:::-;;:::i;6696:1385::-;;;;;;;;;;-1:-1:-1;6696:1385:111;;;;;:::i;:::-;;:::i;4652:70::-;;;;;;;;;;;;4694:28;4652:70;;2089:140:34;;;;;;;;;;-1:-1:-1;2089:140:34;;;;;:::i;:::-;;:::i;10327:268:111:-;;;;;;;;;;-1:-1:-1;10327:268:111;;;;;:::i;:::-;;:::i;11131:308::-;;;;;;;;;;-1:-1:-1;11131:308:111;;;;;:::i;:::-;;:::i;5684:147:35:-;;;;;;;;;;-1:-1:-1;5684:147:35;;;;;:::i;:::-;;:::i;16787:150:111:-;;;;;;;;;;-1:-1:-1;16787:150:111;;;;;:::i;:::-;-1:-1:-1;;;;;16891:27:111;;;16869:7;16891:27;;;:20;:27;;;;;:41;;;;;16787:150;15568:992;;;;;;;;;;-1:-1:-1;15568:992:111;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;15284:109::-;;;;;;;;;;-1:-1:-1;15366:22:111;;15284:109;;962:223:34;1047:4;-1:-1:-1;;;;;;1070:68:34;;-1:-1:-1;;;1070:68:34;;:108;;;1142:36;1166:11;1142:23;:36::i;:::-;1063:115;962:223;-1:-1:-1;;962:223:34:o;17469:436:111:-;17563:16;17587:22;17626:13;17612:35;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17612:35:111;;17587:60;;17659:9;17654:228;17674:24;;;17654:228;;;17729:13;;17743:1;17729:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;17717:52:111;;:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17717:54:111;;;;;;;;-1:-1:-1;;17717:54:111;;;;;;;;;;;;:::i;:::-;;;17713:163;;17865:1;17846:5;17852:1;17846:8;;;;;;;;:::i;:::-;;;;;;:21;-1:-1:-1;;;;;17846:21:111;;;-1:-1:-1;;;;;17846:21:111;;;;;17713:163;;;17816:4;17805:5;17811:1;17805:8;;;;;;;;:::i;:::-;;;;;;:15;-1:-1:-1;;;;;17805:15:111;;;-1:-1:-1;;;;;17805:15:111;;;;;17772:57;17713:163;17700:3;;;;:::i;:::-;;;;17654:228;;;-1:-1:-1;17895:5:111;17469:436;-1:-1:-1;;;17469:436:111:o;12006:290::-;12089:8;12073:13;:24;12069:62;;;12106:25;;-1:-1:-1;;;12106:25:111;;;;;;;;;;;12069:62;12142:47;-1:-1:-1;;;;;;;;;;;12178:10:111;12142:7;:47::i;:::-;12137:75;;12198:14;;-1:-1:-1;;;12198:14:111;;;;;;;;;;;12137:75;12218:12;:28;;;12257:34;;1239:25:118;;;12257:34:111;;1227:2:118;1212:18;12257:34:111;;;;;;;;12006:290;:::o;9925:268::-;10028:45;-1:-1:-1;;;;;;;;;;;10062:10:111;10028:7;:45::i;:::-;10023:73;;10082:14;;-1:-1:-1;;;10082:14:111;;;;;;;;;;;10023:73;-1:-1:-1;;;;;10102:27:111;;;;;;:18;:27;;;;;:38;;10133:7;;10102:27;:38;;10133:7;;10102:38;:::i;:::-;;;;-1:-1:-1;;;;;;;10146:31:111;;;;;;:20;:31;;;;;:42;;10181:7;;10146:31;:42;;10181:7;;10146:42;:::i;:::-;;;;-1:-1:-1;;;;;9925:268:111:o;5259:145:35:-;4908:7;4934:12;;;:6;:12;;;;;:22;;;2928:16;2939:4;2928:10;:16::i;:::-;5372:25:::1;5383:4;5389:7;5372:10;:25::i;:::-;5259:145:::0;;;:::o;8766:284:111:-;8906:26;;:59;;;;;8936:24;8955:4;8936:18;:24::i;:::-;8964:1;8936:29;8906:59;8902:104;;;8982:17;;-1:-1:-1;;;8982:17:111;;;;;;;;;;;8902:104;9012:33;9031:4;9037:7;9012:18;:33::i;:::-;8766:284;;:::o;3387:195:46:-;-1:-1:-1;;;;;1898:6:46;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:46;;;;;;;:::i;:::-;;;;;;;;;1995:6;-1:-1:-1;;;;;1971:30:46;:20;-1:-1:-1;;;;;;;;;;;1536:65:43;-1:-1:-1;;;;;1536:65:43;;1457:151;1971:20:46;-1:-1:-1;;;;;1971:30:46;;1963:87;;;;-1:-1:-1;;;1963:87:46;;;;;;;:::i;:::-;3468:36:::1;3486:17;3468;:36::i;:::-;3555:12;::::0;;3565:1:::1;3555:12:::0;;;::::1;::::0;::::1;::::0;;;3514:61:::1;::::0;3536:17;;3555:12;3514:21:::1;:61::i;:::-;3387:195:::0;:::o;13268:606:111:-;13426:6;-1:-1:-1;;;;;13385:47:111;13400:12;-1:-1:-1;;;;;13385:35:111;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;13385:47:111;;;:98;;;;;13477:6;-1:-1:-1;;;;;13436:47:111;13451:12;-1:-1:-1;;;;;13436:35:111;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;13436:47:111;;;13385:98;13381:139;;;13500:13;;-1:-1:-1;;;13500:13:111;;;;;;;;;;;13381:139;13608:4;;13567:37;;;-1:-1:-1;;;13567:37:111;;;;-1:-1:-1;;;;;13608:4:111;;;;13567:35;;;;;:37;;;;;;;;;;;;;;:35;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;13567:45:111;;;:94;;;;-1:-1:-1;13657:4:111;;13616:37;;;-1:-1:-1;;;13616:37:111;;;;-1:-1:-1;;;;;13657:4:111;;;;13616:35;;;;;:37;;;;;;;;;;;;;;:35;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;13616:45:111;;;13567:94;13563:135;;;13678:13;;-1:-1:-1;;;13678:13:111;;;;;;;;;;;13563:135;13708:42;4814:34;13739:10;13708:7;:42::i;:::-;13703:85;;13767:14;;-1:-1:-1;;;13767:14:111;;;;;;;;;;;13703:85;-1:-1:-1;;;;;13793:17:111;;;;;;;:9;:17;;;;;;;;;:32;;-1:-1:-1;;;;;;13793:32:111;;;;;;;;;13836:33;;10792:34:118;;;10842:18;;10835:43;;;;13836:33:111;;10727:18:118;13836:33:111;;;;;;;13268:606;;:::o;12873:268::-;-1:-1:-1;;;;;12932:23:111;;12928:60;;12964:24;;-1:-1:-1;;;12964:24:111;;;;;;;;;;;12928:60;12999:36;4694:28;13024:10;12999:7;:36::i;:::-;12994:64;;13044:14;;-1:-1:-1;;;13044:14:111;;;;;;;;;;;12994:64;13064:8;:35;;-1:-1:-1;;;;;;13064:35:111;-1:-1:-1;;;;;13064:35:111;;;;;;;;13110:26;;1031:51:118;;;13110:26:111;;1019:2:118;1004:18;13110:26:111;885:203:118;3901:220:46;-1:-1:-1;;;;;1898:6:46;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:46;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:46;:20;-1:-1:-1;;;;;;;;;;;1536:65:43;-1:-1:-1;;;;;1536:65:43;;1457:151;1971:20:46;-1:-1:-1;;;;;1971:30:46;;1963:87;;;;-1:-1:-1;;;1963:87:46;;;;;;;:::i;:::-;4016:36:::1;4034:17;4016;:36::i;:::-;4062:52;4084:17;4103:4;4109;4062:21;:52::i;3006:131::-:0;3084:7;2324:4;-1:-1:-1;;;;;2333:6:46;2316:23;;2308:92;;;;-1:-1:-1;;;2308:92:46;;11091:2:118;2308:92:46;;;11073:21:118;11130:2;11110:18;;;11103:30;11169:34;11149:18;;;11142:62;11240:26;11220:18;;;11213:54;11284:19;;2308:92:46;10889:420:118;2308:92:46;-1:-1:-1;;;;;;;;;;;;3006:131:46;:::o;12421:327:111:-;-1:-1:-1;;;;;12496:31:111;;12492:68;;12536:24;;-1:-1:-1;;;12536:24:111;;;;;;;;;;;12492:68;12571:36;4694:28;12596:10;12571:7;:36::i;:::-;12566:64;;12616:14;;-1:-1:-1;;;12616:14:111;;;;;;;;;;;12566:64;12636:16;:54;;-1:-1:-1;;;;;;12636:54:111;-1:-1:-1;;;;;12636:54:111;;;;;;;;12701:42;;1031:51:118;;;12701:42:111;;1019:2:118;1004:18;12701:42:111;885:203:118;9145:646:111;9262:45;4159:37;9296:10;9262:7;:45::i;:::-;9257:73;;9316:14;;-1:-1:-1;;;9316:14:111;;;;;;;;;;;9257:73;-1:-1:-1;;;;;9340:19:111;;9336:56;;9368:24;;-1:-1:-1;;;9368:24:111;;;;;;;;;;;9336:56;-1:-1:-1;;;;;9402:29:111;;9398:66;;9440:24;;-1:-1:-1;;;9440:24:111;;;;;;;;;;;9398:66;-1:-1:-1;;;;;9474:32:111;;9470:69;;9515:24;;-1:-1:-1;;;9515:24:111;;;;;;;;;;;9470:69;-1:-1:-1;;;;;9549:27:111;;;9603:1;9549:27;;;:20;:27;;;;;:42;;:56;9545:99;;9614:30;;-1:-1:-1;;;9614:30:111;;;;;;;;;;;9545:99;9680:59;;;;;;;;-1:-1:-1;;;;;9680:59:111;;;;;;;;;;;;;;;;9650:27;;;-1:-1:-1;9650:27:111;;;:20;:27;;;;;:89;;;;;;;-1:-1:-1;;;;;;9650:89:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;9745:33;;;:16;:33;;;;;;:41;;;;;;;;9145:646::o;13971:393::-;14101:4;;14116:37;;-1:-1:-1;;;14116:37:111;;-1:-1:-1;;;;;10810:15:118;;;14116:37:111;;;10792:34:118;14147:4:111;10842:18:118;;;10835:43;14101:4:111;;;;14156:7;;14101:4;;14116:15;;10727:18:118;;14116:37:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;14112:102;;;14180:27;;-1:-1:-1;;;14180:27:111;;;;;;;;;;;14112:102;14240:10;14263:1;14223:28;;;:16;:28;;;;;;-1:-1:-1;;;;;14223:28:111;14219:69;;14274:14;;-1:-1:-1;;;14274:14:111;;;;;;;;;;;14219:69;14294:65;14332:5;14339;14346:3;14351:7;14294:37;:65::i;:::-;14051:313;13971:393;;;:::o;1770:151:34:-;1860:7;1886:18;;;:12;:18;;;;;:28;;1908:5;1886:21;:28::i;:::-;1879:35;1770:151;-1:-1:-1;;;1770:151:34:o;3329:145:35:-;3415:4;3438:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3438:29:35;;;;;;;;;;;;;;;3329:145::o;10731:264:111:-;-1:-1:-1;;;;;10791:20:111;;10787:57;;10820:24;;-1:-1:-1;;;10820:24:111;;;;;;;;;;;10787:57;10855:47;-1:-1:-1;;;;;;;;;;;10891:10:111;10855:7;:47::i;:::-;10850:75;;10911:14;;-1:-1:-1;;;10911:14:111;;;;;;;;;;;10850:75;10931:12;:21;;-1:-1:-1;;;;;;10931:21:111;-1:-1:-1;;;;;10931:21:111;;;;;;;;10963:27;;1031:51:118;;;10963:27:111;;1019:2:118;1004:18;10963:27:111;885:203:118;11575:295:111;11660:6;11646:11;:20;11642:56;;;11675:23;;-1:-1:-1;;;11675:23:111;;;;;;;;;;;11642:56;11709:47;-1:-1:-1;;;;;;;;;;;11745:10:111;11709:7;:47::i;:::-;11704:75;;11765:14;;-1:-1:-1;;;11765:14:111;;;;;;;;;;;11704:75;11785:17;:31;;;11827:38;;1239:25:118;;;11827:38:111;;1227:2:118;1212:18;11827:38:111;1093:177:118;6696:1385:111;3279:19:45;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:45;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:45;1713:19:55;:23;;;3387:66:45;;-1:-1:-1;3436:12:45;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:45;;11705:2:118;3325:201:45;;;11687:21:118;11744:2;11724:18;;;11717:30;11783:34;11763:18;;;11756:62;-1:-1:-1;;;11834:18:118;;;11827:44;11888:19;;3325:201:45;11503:410:118;3325:201:45;3536:12;:16;;-1:-1:-1;;3536:16:45;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:45;;;;;3562:65;7002:8:111::1;6986:13;:24;6982:62;;;7019:25;;-1:-1:-1::0;;;7019:25:111::1;;;;;;;;;;;6982:62;7080:6;7054:23;:32;7050:68;;;7095:23;;-1:-1:-1::0;;;7095:23:111::1;;;;;;;;;;;7050:68;7149:6;7128:18;:27;7124:63;;;7164:23;;-1:-1:-1::0;;;7164:23:111::1;;;;;;;;;;;7124:63;-1:-1:-1::0;;;;;7197:20:111;::::1;7193:57;;7226:24;;-1:-1:-1::0;;;7226:24:111::1;;;;;;;;;;;7193:57;-1:-1:-1::0;;;;;7260:31:111;::::1;7256:68;;7300:24;;-1:-1:-1::0;;;7300:24:111::1;;;;;;;;;;;7256:68;-1:-1:-1::0;;;;;7334:23:111;::::1;7330:60;;7366:24;;-1:-1:-1::0;;;7366:24:111::1;;;;;;;;;;;7330:60;-1:-1:-1::0;;;;;7400:19:111;::::1;7396:56;;7428:24;;-1:-1:-1::0;;;7428:24:111::1;;;;;;;;;;;7396:56;-1:-1:-1::0;;;;;7462:19:111;::::1;7458:56;;7490:24;;-1:-1:-1::0;;;7490:24:111::1;;;;;;;;;;;7458:56;-1:-1:-1::0;;;;;7524:27:111;::::1;7520:64;;7560:24;;-1:-1:-1::0;;;7560:24:111::1;;;;;;;;;;;7520:64;7590:38;2495:4:35;7621:6:111::0;7590:10:::1;:38::i;:::-;7634:71;-1:-1:-1::0;;;;;;;;;;;4297:43:111::1;7634:13;:71::i;:::-;7711:16;:54:::0;;-1:-1:-1;;;;;;7711:54:111;;::::1;-1:-1:-1::0;;;;;7711:54:111;;::::1;::::0;;;::::1;::::0;;;7771:8:::1;:35:::0;;;::::1;::::0;;::::1;;::::0;;7812:22:::1;:48:::0;;;7866:12:::1;:28:::0;;;7900:4:::1;:12:::0;;;::::1;::::0;;::::1;;::::0;;7918:4:::1;:12:::0;;;::::1;::::0;;::::1;;::::0;;7936:17:::1;:38:::0;;;7980:12:::1;:28:::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;8014:32:::1;:30;:32::i;:::-;8052:24;:22;:24::i;:::-;3651:14:45::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:45;;;3721:14;;-1:-1:-1;12070:36:118;;3721:14:45;;12058:2:118;12043:18;3721:14:45;;;;;;;3647:99;3269:483;6696:1385:111;;;;;;;;;:::o;2089:140:34:-;2169:7;2195:18;;;:12;:18;;;;;:27;;:25;:27::i;10327:268:111:-;10430:45;-1:-1:-1;;;;;;;;;;;10464:10:111;10430:7;:45::i;:::-;10425:73;;10484:14;;-1:-1:-1;;;10484:14:111;;;;;;;;;;;10425:73;-1:-1:-1;;;;;10504:27:111;;;;;;:18;:27;;;;;:38;;10535:7;;10504:27;:38;;10535:7;;10504:38;:::i;:::-;;;;-1:-1:-1;;;;;;;10548:31:111;;;;;;:20;:31;;;;;:42;;10583:7;;10548:31;:42;;10583:7;;10548:42;:::i;11131:308::-;11220:6;11206:11;:20;11202:56;;;11235:23;;-1:-1:-1;;;11235:23:111;;;;;;;;;;;11202:56;11269:47;-1:-1:-1;;;;;;;;;;;11305:10:111;11269:7;:47::i;:::-;11264:75;;11325:14;;-1:-1:-1;;;11325:14:111;;;;;;;;;;;11264:75;11345:22;:36;;;11392:42;;1239:25:118;;;11392:42:111;;1227:2:118;1212:18;11392:42:111;1093:177:118;5684:147:35;4908:7;4934:12;;;:6;:12;;;;;:22;;;2928:16;2939:4;2928:10;:16::i;:::-;5798:26:::1;5810:4;5816:7;5798:11;:26::i;15568:992:111:-:0;15637:11;;:::i;:::-;15684:8;;15699:16;;:28;;-1:-1:-1;;;15699:28:111;;-1:-1:-1;;;;;1049:32:118;;;15699:28:111;;;1031:51:118;15656:25:111;;15684:55;;:8;;;;:13;;15699:16;;;;:21;;1004:18:118;;15699:28:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15684:45;;;;;;;;;;;;;1239:25:118;;1227:2;1212:18;;1093:177;15684:45:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15684:45:111;;;;;;;;;;;;:::i;:::-;:53;:55::i;:::-;15656:83;;15745:16;;:::i;:::-;-1:-1:-1;;;;;15789:27:111;;;;;;;:20;:27;;;;;;;;:42;;;;15767:19;;;:64;;;;15858:27;;;;;;15789:42;15858:41;;;15837:18;;;:62;15909:10;:4;:8;:10::i;:::-;:15;15905:228;;15934:26;15946:13;:11;;;;;;;;;;;;;-1:-1:-1;;;15946:11:111;;;;:13::i;:::-;15934:4;;:11;:26::i;:::-;;15980:44;16019:4;15981:29;:27;;;;;;;;;;;;;-1:-1:-1;;;15981:27:111;;;;:29::i;:::-;15980:38;;:44::i;:::-;15968:56;;16046:61;16074:32;:22;16080:15;:4;:13;:15::i;:::-;16074:5;:22::i;:32::-;16047:18;:16;;;;;;;;;;;;;-1:-1:-1;;;16047:16:111;;;;:18::i;16046:61::-;16032:11;;;:75;:4;15568:992;-1:-1:-1;;;15568:992:111:o;15905:228::-;16138:21;16162:26;16182:5;16162:19;:26::i;:::-;16138:50;;16194:30;16227:35;:25;16238:7;16247:1;16250;16227:10;:25::i;:35::-;16194:68;;16268:24;16295:36;:26;16306:7;16315:1;16318:2;16295:10;:26::i;:36::-;16268:63;-1:-1:-1;16337:34:111;16374:31;:21;:9;16268:63;16374:16;:21::i;:31::-;16337:68;;16423:53;16462:13;16424:29;:27;;;;;;;;;;;;;-1:-1:-1;;;16424:27:111;;;;:29::i;16423:53::-;16411:65;;16497:16;;;;;;;;;;;;-1:-1:-1;;;16497:16:111;;;;16496:42;;16524:13;;16497:18;;:16;:18::i;16496:42::-;16482:11;;;:56;-1:-1:-1;16482:4:111;;15568:992;-1:-1:-1;;;;;;15568:992:111:o;3029:213:35:-;3114:4;-1:-1:-1;;;;;;3137:58:35;;-1:-1:-1;;;3137:58:35;;:98;;-1:-1:-1;;;;;;;;;;1168:51:61;;;3199:36:35;1060:166:61;3768:103:35;3834:30;3845:4;929:10:57;3834::35;:30::i;2317:166:34:-;2404:31;2421:4;2427:7;2404:16;:31::i;:::-;2445:18;;;;:12;:18;;;;;:31;;2468:7;2445:22;:31::i;6368:214:35:-;-1:-1:-1;;;;;6463:23:35;;929:10:57;6463:23:35;6455:83;;;;-1:-1:-1;;;6455:83:35;;13294:2:118;6455:83:35;;;13276:21:118;13333:2;13313:18;;;13306:30;13372:34;13352:18;;;13345:62;-1:-1:-1;;;13423:18:118;;;13416:45;13478:19;;6455:83:35;13092:411:118;6455:83:35;6549:26;6561:4;6567:7;6549:11;:26::i;8328:225:111:-;8414:39;2495:4:35;8442:10:111;8414:7;:39::i;:::-;8409:67;;8462:14;;-1:-1:-1;;;8462:14:111;;;;;;;;;;;8409:67;-1:-1:-1;;;;;8486:29:111;;8482:66;;8524:24;;-1:-1:-1;;;8524:24:111;;;;;;;;;;;2820:944:43;971:66;3236:59;;;3232:526;;;3311:37;3330:17;3311:18;:37::i;3232:526::-;3412:17;-1:-1:-1;;;;;3383:61:43;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3383:63:43;;;;;;;;-1:-1:-1;;3383:63:43;;;;;;;;;;;;:::i;:::-;;;3379:302;;3610:56;;-1:-1:-1;;;3610:56:43;;13710:2:118;3610:56:43;;;13692:21:118;13749:2;13729:18;;;13722:30;13788:34;13768:18;;;13761:62;-1:-1:-1;;;13839:18:118;;;13832:44;13893:19;;3610:56:43;13508:410:118;3379:302:43;-1:-1:-1;;;;;;;;;;;3496:28:43;;3488:82;;;;-1:-1:-1;;;3488:82:43;;14125:2:118;3488:82:43;;;14107:21:118;14164:2;14144:18;;;14137:30;14203:34;14183:18;;;14176:62;-1:-1:-1;;;14254:18:118;;;14247:39;14303:19;;3488:82:43;13923:405:118;3488:82:43;3447:138;3694:53;3712:17;3731:4;3737:9;3694:17;:53::i;1421:214:54:-;1559:68;;;-1:-1:-1;;;;;14591:15:118;;;1559:68:54;;;14573:34:118;14643:15;;14623:18;;;14616:43;14675:18;;;;14668:34;;;1559:68:54;;;;;;;;;;14508:18:118;;;;1559:68:54;;;;;;;;-1:-1:-1;;;;;1559:68:54;-1:-1:-1;;;1559:68:54;;;1532:96;;1552:5;;1532:19;:96::i;9574:156:66:-;9648:7;9698:22;9702:3;9714:5;9698:3;:22::i;7502:247:35:-;7585:25;4934:12;;;:6;:12;;;;;;:22;;;;7641:34;;;;7690:52;;4934:22;;7641:34;;4934:22;;:12;;7690:52;;7585:25;7690:52;7575:174;7502:247;;:::o;570:75:34:-;5374:13:45;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:45;;14915:2:118;5366:69:45;;;14897:21:118;14954:2;14934:18;;;14927:30;14993:34;14973:18;;;14966:62;-1:-1:-1;;;15044:18:118;;;15037:41;15095:19;;5366:69:45;14713:407:118;5366:69:45;570:75:34:o;9117:115:66:-;9180:7;9206:19;9214:3;4556:18;;4474:107;2572:171:34;2660:32;2678:4;2684:7;2660:17;:32::i;:::-;2702:18;;;;:12;:18;;;;;:34;;2728:7;2702:25;:34::i;2904:210:92:-;-1:-1:-1;;;;;;;;;;;;;;;;;3077:30:92;;;;;;;;3083:18;;3077:30;;3036:15;;;3077:30;;;;;;;;2904:210::o;5942:692::-;5997:6;6090:8;6113:2;6101:4;:9;;;:14;;;;:::i;:::-;6142:9;;6090:25;;-1:-1:-1;6125:8:92;;6136:15;;6090:25;6136:15;:::i;:::-;6125:26;;6170:1;6166:5;;6161:467;6179:3;6173;:9;6161:467;;;6244:10;;6256:4;6240:21;6284:4;6280:8;;6276:342;;;6308:8;6315:1;6308:8;;:::i;:::-;;;6276:342;;;6344:4;6340:1;:8;;;6337:281;;;6368:8;6375:1;6368:8;;:::i;6337:281::-;6404:4;6400:1;:8;;;6397:221;;;6428:8;6435:1;6428:8;;:::i;6397:221::-;6464:4;6460:1;:8;;;6457:161;;;6488:8;6495:1;6488:8;;:::i;6457:161::-;6524:4;6520:1;:8;;;6517:101;;;6548:8;6555:1;6548:8;;:::i;6517:101::-;6595:8;6602:1;6595:8;;:::i;:::-;;;6517:101;-1:-1:-1;6184:3:92;;;;:::i;:::-;;;;6161:467;;;6005:629;;5942:692;;;:::o;22782:143::-;-1:-1:-1;;;;;;;;;;;;;;;;;22891:27:92;22898:4;22904:6;22912:5;22891:6;:27::i;:::-;;22782:143;;;;:::o;24264:355::-;24410:10;;24398:9;;24342:13;;24367:17;;24398:22;;24410:10;24398:22;:::i;:::-;24387:34;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;24387:34:92;;24367:54;;24431:11;24482:2;24477:3;24473:12;24463:22;;24496:36;24503:6;24511:4;:9;;;24522:4;:9;;;24496:6;:36::i;:::-;24558:9;;24542:50;;24549:18;;:6;:18;:::i;:::-;24569:10;;;;24581;;24542:6;:50::i;5286:265::-;5346:13;5371:17;5402:4;:9;;;5391:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5391:21:92;;5371:41;;5422:11;5473:2;5468:3;5464:12;5454:22;;5488:36;5495:6;5503:4;:9;;;5514:4;:9;;;5488:6;:36::i;18425:259:111:-;18484:13;18537:5;18505:23;18549:100;18573:10;:17;18569:1;:21;18549:100;;;18621:21;18628:10;18639:1;18628:13;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;18628:13:111;18621:6;:21::i;:::-;18605:10;18616:1;18605:13;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;18605:37:111;;;;;;;;-1:-1:-1;18592:3:111;;;;:::i;:::-;;;;18549:100;;2407:149:84;2465:13;2497:52;-1:-1:-1;;;;;2509:22:84;;343:2;2497:11;:52::i;19778:493:111:-;19977:17;;19874:13;;19927:5;;19955:17;19965:7;19955;:17;:::i;:::-;19947:47;;19940:55;;;;:::i;:::-;20002:18;20042:7;20023:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20023:28:111;-1:-1:-1;20002:49:111;-1:-1:-1;20002:49:111;20057:22;20144:7;20119:117;20166:17;20176:7;20166;:17;:::i;:::-;20154:1;:30;20119:117;;;20216:10;20227:1;20216:13;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;20216:13:111;20199:9;20209:3;;;;:::i;:::-;;;20199:14;;;;;;;;:::i;:::-;;;;:30;-1:-1:-1;;;;;20199:30:111;;;;;;;;-1:-1:-1;20186:3:111;;;;:::i;:::-;;;;20119:117;;;-1:-1:-1;20256:9:111;;19778:493;-1:-1:-1;;;;;;;19778:493:111:o;4152:501:35:-;4240:22;4248:4;4254:7;4240;:22::i;:::-;4235:412;;4423:39;4454:7;4423:30;:39::i;:::-;4533:49;4572:4;4579:2;4533:30;:49::i;:::-;4330:274;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4330:274:35;;;;;;;;;;-1:-1:-1;;;4278:358:35;;;;;;;:::i;7917:233::-;8000:22;8008:4;8014:7;8000;:22::i;:::-;7995:149;;8038:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8038:29:35;;;;;;;;;:36;;-1:-1:-1;;8038:36:35;8070:4;8038:36;;;8120:12;929:10:57;;850:96;8120:12:35;-1:-1:-1;;;;;8093:40:35;8111:7;-1:-1:-1;;;;;8093:40:35;8105:4;8093:40;;;;;;;;;;7917:233;;:::o;8316:150:66:-;8386:4;8409:50;8414:3;-1:-1:-1;;;;;8434:23:66;;8409:4;:50::i;1699:281:43:-;-1:-1:-1;;;;;1713:19:55;;;1772:106:43;;;;-1:-1:-1;;;1772:106:43;;16722:2:118;1772:106:43;;;16704:21:118;16761:2;16741:18;;;16734:30;16800:34;16780:18;;;16773:62;-1:-1:-1;;;16851:18:118;;;16844:43;16904:19;;1772:106:43;16520:409:118;1772:106:43;-1:-1:-1;;;;;;;;;;;1888:85:43;;-1:-1:-1;;;;;;1888:85:43;-1:-1:-1;;;;;1888:85:43;;;;;;;;;;1699:281::o;2372:276::-;2480:29;2491:17;2480:10;:29::i;:::-;2537:1;2523:4;:11;:15;:28;;;;2542:9;2523:28;2519:123;;;2567:64;2607:17;2626:4;2567:39;:64::i;5305:653:54:-;5735:23;5761:69;5789:4;5761:69;;;;;;;;;;;;;;;;;5769:5;-1:-1:-1;;;;;5761:27:54;;;:69;;;;;:::i;:::-;5735:95;;5848:10;:17;5869:1;5848:22;:56;;;;5885:10;5874:30;;;;;;;;;;;;:::i;:::-;5840:111;;;;-1:-1:-1;;;5840:111:54;;17418:2:118;5840:111:54;;;17400:21:118;17457:2;17437:18;;;17430:30;17496:34;17476:18;;;17469:62;-1:-1:-1;;;17547:18:118;;;17540:40;17597:19;;5840:111:54;17216:406:118;4923:118:66;4990:7;5016:3;:11;;5028:5;5016:18;;;;;;;;:::i;:::-;;;;;;;;;5009:25;;4923:118;;;;:::o;8321:234:35:-;8404:22;8412:4;8418:7;8404;:22::i;:::-;8400:149;;;8474:5;8442:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8442:29:35;;;;;;;;;;:37;;-1:-1:-1;;8442:37:35;;;8498:40;929:10:57;;8442:12:35;;8498:40;;8474:5;8498:40;8321:234;;:::o;8634:156:66:-;8707:4;8730:53;8738:3;-1:-1:-1;;;;;8758:23:66;;8730:7;:53::i;21854:459:92:-;-1:-1:-1;;;;;;;;;;;;;;;;;21977:8:92;21988:56;21997:4;:9;;;22008:4;:9;;;22019:6;:11;;;22032:6;:11;;;21988:8;:56::i;:::-;22054:10;;;;:16;;;22112:9;;;21977:67;;-1:-1:-1;22106:15:92;;21977:67;22106:15;:::i;:::-;22093:9;;:29;;;;:::i;:::-;22080:42;;22143:9;;;;22136:16;;22132:153;;22205:1;22193:13;;22132:153;;;22263:11;;22250:10;;:24;;22263:11;22250:24;:::i;:::-;22237:37;;:4;;:37;;;;;:::i;:::-;;;-1:-1:-1;22132:153:92;-1:-1:-1;22301:5:92;;21854:459;-1:-1:-1;;;21854:459:92:o;2088:616::-;2221:2;2214:3;:9;2208:164;;2290:10;;2277:24;;2328:10;2336:2;2284:4;2328:10;:::i;:::-;;-1:-1:-1;2352:9:92;2359:2;2352:9;;:::i;:::-;;-1:-1:-1;2225:9:92;2232:2;2225:9;;:::i;:::-;;;2208:164;;;-1:-1:-1;;2454:7:92;;2450:66;;2504:1;2492:8;2497:3;2492:2;:8;:::i;:::-;2484:17;;:3;:17;:::i;:::-;:21;;;;:::i;:::-;2477:28;;2450:66;2567:10;;2622:11;;2618:22;;2579:9;;2563:26;2666:21;;;;2653:35;;;-1:-1:-1;2088:616:92:o;19045:162:111:-;19095:6;-1:-1:-1;;;;;;;;;19113:11:111;;;;;;:26;;-1:-1:-1;;;;;;;;;;19128:11:111;;;;19113:26;19109:77;;;19163:15;19176:2;19163:10;;;;:15;:::i;:::-;19156:23;;;19045:162;-1:-1:-1;;19045:162:111:o;19109:77::-;-1:-1:-1;19199:3:111;19045:162::o;1818:437:84:-;1893:13;1918:19;1950:10;1954:6;1950:1;:10;:::i;:::-;:14;;1963:1;1950:14;:::i;:::-;1940:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1940:25:84;;1918:47;;-1:-1:-1;;;1975:6:84;1982:1;1975:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1975:15:84;;;;;;;;;-1:-1:-1;;;2000:6:84;2007:1;2000:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2000:15:84;;;;;;;;-1:-1:-1;2030:9:84;2042:10;2046:6;2042:1;:10;:::i;:::-;:14;;2055:1;2042:14;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;-1:-1:-1;;;2105:5:84;2113:3;2105:11;2096:21;;;;;;;:::i;:::-;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2084:33:84;;;;;;;;-1:-1:-1;2141:1:84;2131:11;;;;;2065:3;;;:::i;:::-;;;2025:128;;;-1:-1:-1;2170:10:84;;2162:55;;;;-1:-1:-1;;;2162:55:84;;19673:2:118;2162:55:84;;;19655:21:118;;;19692:18;;;19685:30;19751:34;19731:18;;;19724:62;19803:18;;2162:55:84;19471:356:118;2473:149:60;2531:13;2563:52;-1:-1:-1;;;;;2575:22:60;;376:2;1884:437;1959:13;1984:19;2016:10;2020:6;2016:1;:10;:::i;:::-;:14;;2029:1;2016:14;:::i;:::-;2006:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2006:25:60;;1984:47;;-1:-1:-1;;;2041:6:60;2048:1;2041:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2041:15:60;;;;;;;;;-1:-1:-1;;;2066:6:60;2073:1;2066:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2066:15:60;;;;;;;;-1:-1:-1;2096:9:60;2108:10;2112:6;2108:1;:10;:::i;:::-;:14;;2121:1;2108:14;:::i;:::-;2096:26;;2091:128;2128:1;2124;:5;2091:128;;;-1:-1:-1;;;2171:5:60;2179:3;2171:11;2162:21;;;;;;;:::i;:::-;;;;2150:6;2157:1;2150:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2150:33:60;;;;;;;;-1:-1:-1;2207:1:60;2197:11;;;;;2131:3;;;:::i;:::-;;;2091:128;;2225:404:66;2288:4;4362:19;;;:12;;;:19;;;;;;2304:319;;-1:-1:-1;2346:23:66;;;;;;;;:11;:23;;;;;;;;;;;;;2526:18;;2504:19;;;:12;;;:19;;;;;;:40;;;;2558:11;;2304:319;-1:-1:-1;2607:5:66;2600:12;;2086:152:43;2152:37;2171:17;2152:18;:37::i;:::-;2204:27;;-1:-1:-1;;;;;2204:27:43;;;;;;;;2086:152;:::o;6685:198:55:-;6768:12;6799:77;6820:6;6828:4;6799:77;;;;;;;;;;;;;;;;;:20;:77::i;4119:223::-;4252:12;4283:52;4305:6;4313:4;4319:1;4322:12;4283:21;:52::i;:::-;4276:59;4119:223;-1:-1:-1;;;;4119:223:55:o;2797:1388:66:-;2863:4;3000:19;;;:12;;;:19;;;;;;3034:15;;3030:1149;;3403:21;3427:14;3440:1;3427:10;:14;:::i;:::-;3475:18;;3403:38;;-1:-1:-1;3455:17:66;;3475:22;;3496:1;;3475:22;:::i;:::-;3455:42;;3529:13;3516:9;:26;3512:398;;3562:17;3582:3;:11;;3594:9;3582:22;;;;;;;;:::i;:::-;;;;;;;;;3562:42;;3733:9;3704:3;:11;;3716:13;3704:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3816:23;;;:12;;;:23;;;;;:36;;;3512:398;3988:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4080:3;:12;;:19;4093:5;4080:19;;;;;;;;;;;4073:26;;;4121:4;4114:11;;;;;;;3030:1149;4163:5;4156:12;;;;;17083:1457:92;17183:4;17199:8;17235:7;17222:9;:20;17218:1292;;17275:2;17262:9;:15;17258:1242;;17297:12;17331:13;;17327:110;;17415:1;17396:14;17401:9;17396:2;:14;:::i;:::-;17391:20;;:1;:20;:::i;:::-;17385:27;;:1;:27;:::i;:::-;:31;;;;:::i;:::-;17383:34;;-1:-1:-1;17327:110:92;17520:16;;17516:27;;17589:9;17569:17;17579:7;17569;:17;:::i;:::-;:29;;;;:::i;:::-;17675:10;;17563:35;;-1:-1:-1;17671:21:92;;17712:222;17730:10;17719:7;:21;17712:222;;17775:7;17768:3;:14;17764:58;;17815:7;17808:14;;;;;;;;17764:58;17844:5;;;;:::i;:::-;;;;17909:4;17903:3;17897:10;17893:21;17882:32;;17712:222;;;17958:15;17964:9;17958:3;:15;:::i;:::-;17951:22;;;;;;;;17258:1242;18110:31;;;18177:19;18131:9;18177:7;:19;:::i;:::-;18166:31;;:7;:31;:::i;:::-;18160:37;;18215:271;18229:7;18222:3;:14;18215:271;;18321:25;;;18373:16;;;18369:68;;18422:15;18428:9;18422:3;:15;:::i;:::-;18415:22;;;;;;;18369:68;18459:8;18466:1;18459:8;;:::i;:::-;;;18238:248;18215:271;;;17994:506;17258:1242;-1:-1:-1;18526:7:92;;17083:1457;-1:-1:-1;;;;17083:1457:92:o;7069:325:55:-;7210:12;7235;7249:23;7276:6;-1:-1:-1;;;;;7276:19:55;7296:4;7276:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7234:67;;;;7318:69;7345:6;7353:7;7362:10;7374:12;7318:26;:69::i;:::-;7311:76;7069:325;-1:-1:-1;;;;;;7069:325:55:o;5176:446::-;5341:12;5398:5;5373:21;:30;;5365:81;;;;-1:-1:-1;;;5365:81:55;;20458:2:118;5365:81:55;;;20440:21:118;20497:2;20477:18;;;20470:30;20536:34;20516:18;;;20509:62;-1:-1:-1;;;20587:18:118;;;20580:36;20633:19;;5365:81:55;20256:402:118;5365:81:55;5457:12;5471:23;5498:6;-1:-1:-1;;;;;5498:11:55;5517:5;5524:4;5498:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5456:73;;;;5546:69;5573:6;5581:7;5590:10;5602:12;5546:26;:69::i;:::-;5539:76;5176:446;-1:-1:-1;;;;;;;5176:446:55:o;7682:628::-;7862:12;7890:7;7886:418;;;7917:10;:17;7938:1;7917:22;7913:286;;-1:-1:-1;;;;;1713:19:55;;;8124:60;;;;-1:-1:-1;;;8124:60:55;;20865:2:118;8124:60:55;;;20847:21:118;20904:2;20884:18;;;20877:30;20943:31;20923:18;;;20916:59;20992:18;;8124:60:55;20663:353:118;8124:60:55;-1:-1:-1;8219:10:55;8212:17;;7886:418;8260:33;8268:10;8280:12;8991:17;;:21;8987:379;;9219:10;9213:17;9275:15;9262:10;9258:2;9254:19;9247:44;8987:379;9342:12;9335:20;;-1:-1:-1;;;9335:20:55;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:286:118:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:118;;209:43;;199:71;;266:1;263;256:12;497:131;-1:-1:-1;;;;;572:31:118;;562:42;;552:70;;618:1;615;608:12;633:247;692:6;745:2;733:9;724:7;720:23;716:32;713:52;;;761:1;758;751:12;713:52;800:9;787:23;819:31;844:5;819:31;:::i;1275:615::-;1361:6;1369;1422:2;1410:9;1401:7;1397:23;1393:32;1390:52;;;1438:1;1435;1428:12;1390:52;1478:9;1465:23;1507:18;1548:2;1540:6;1537:14;1534:34;;;1564:1;1561;1554:12;1534:34;1602:6;1591:9;1587:22;1577:32;;1647:7;1640:4;1636:2;1632:13;1628:27;1618:55;;1669:1;1666;1659:12;1618:55;1709:2;1696:16;1735:2;1727:6;1724:14;1721:34;;;1751:1;1748;1741:12;1721:34;1804:7;1799:2;1789:6;1786:1;1782:14;1778:2;1774:23;1770:32;1767:45;1764:65;;;1825:1;1822;1815:12;1764:65;1856:2;1848:11;;;;;1878:6;;-1:-1:-1;1275:615:118;;-1:-1:-1;;;;1275:615:118:o;1895:658::-;2066:2;2118:21;;;2188:13;;2091:18;;;2210:22;;;2037:4;;2066:2;2289:15;;;;2263:2;2248:18;;;2037:4;2332:195;2346:6;2343:1;2340:13;2332:195;;;2411:13;;-1:-1:-1;;;;;2407:39:118;2395:52;;2502:15;;;;2467:12;;;;2443:1;2361:9;2332:195;;;-1:-1:-1;2544:3:118;;1895:658;-1:-1:-1;;;;;;1895:658:118:o;2558:180::-;2617:6;2670:2;2658:9;2649:7;2645:23;2641:32;2638:52;;;2686:1;2683;2676:12;2638:52;-1:-1:-1;2709:23:118;;2558:180;-1:-1:-1;2558:180:118:o;3110:456::-;3187:6;3195;3203;3256:2;3244:9;3235:7;3231:23;3227:32;3224:52;;;3272:1;3269;3262:12;3224:52;3311:9;3298:23;3330:31;3355:5;3330:31;:::i;:::-;3380:5;-1:-1:-1;3437:2:118;3422:18;;3409:32;3450:33;3409:32;3450:33;:::i;:::-;3110:456;;3502:7;;-1:-1:-1;;;3556:2:118;3541:18;;;;3528:32;;3110:456::o;3571:315::-;3639:6;3647;3700:2;3688:9;3679:7;3675:23;3671:32;3668:52;;;3716:1;3713;3706:12;3668:52;3752:9;3739:23;3729:33;;3812:2;3801:9;3797:18;3784:32;3825:31;3850:5;3825:31;:::i;:::-;3875:5;3865:15;;;3571:315;;;;;:::o;3891:388::-;3959:6;3967;4020:2;4008:9;3999:7;3995:23;3991:32;3988:52;;;4036:1;4033;4026:12;3988:52;4075:9;4062:23;4094:31;4119:5;4094:31;:::i;:::-;4144:5;-1:-1:-1;4201:2:118;4186:18;;4173:32;4214:33;4173:32;4214:33;:::i;4284:127::-;4345:10;4340:3;4336:20;4333:1;4326:31;4376:4;4373:1;4366:15;4400:4;4397:1;4390:15;4416:275;4487:2;4481:9;4552:2;4533:13;;-1:-1:-1;;4529:27:118;4517:40;;4587:18;4572:34;;4608:22;;;4569:62;4566:88;;;4634:18;;:::i;:::-;4670:2;4663:22;4416:275;;-1:-1:-1;4416:275:118:o;4696:186::-;4744:4;4777:18;4769:6;4766:30;4763:56;;;4799:18;;:::i;:::-;-1:-1:-1;4865:2:118;4844:15;-1:-1:-1;;4840:29:118;4871:4;4836:40;;4696:186::o;4887:806::-;4964:6;4972;5025:2;5013:9;5004:7;5000:23;4996:32;4993:52;;;5041:1;5038;5031:12;4993:52;5080:9;5067:23;5099:31;5124:5;5099:31;:::i;:::-;5149:5;-1:-1:-1;5205:2:118;5190:18;;5177:32;5232:18;5221:30;;5218:50;;;5264:1;5261;5254:12;5218:50;5287:22;;5340:4;5332:13;;5328:27;-1:-1:-1;5318:55:118;;5369:1;5366;5359:12;5318:55;5405:2;5392:16;5430:48;5446:31;5474:2;5446:31;:::i;:::-;5430:48;:::i;:::-;5501:2;5494:5;5487:17;5541:7;5536:2;5531;5527;5523:11;5519:20;5516:33;5513:53;;;5562:1;5559;5552:12;5513:53;5617:2;5612;5608;5604:11;5599:2;5592:5;5588:14;5575:45;5661:1;5656:2;5651;5644:5;5640:14;5636:23;5629:34;5682:5;5672:15;;;;;4887:806;;;;;:::o;5698:529::-;5775:6;5783;5791;5844:2;5832:9;5823:7;5819:23;5815:32;5812:52;;;5860:1;5857;5850:12;5812:52;5899:9;5886:23;5918:31;5943:5;5918:31;:::i;:::-;5968:5;-1:-1:-1;6025:2:118;6010:18;;5997:32;6038:33;5997:32;6038:33;:::i;:::-;6090:7;-1:-1:-1;6149:2:118;6134:18;;6121:32;6162:33;6121:32;6162:33;:::i;:::-;6214:7;6204:17;;;5698:529;;;;;:::o;6232:248::-;6300:6;6308;6361:2;6349:9;6340:7;6336:23;6332:32;6329:52;;;6377:1;6374;6367:12;6329:52;-1:-1:-1;;6400:23:118;;;6470:2;6455:18;;;6442:32;;-1:-1:-1;6232:248:118:o;6485:1162::-;6616:6;6624;6632;6640;6648;6656;6664;6672;6680;6733:3;6721:9;6712:7;6708:23;6704:33;6701:53;;;6750:1;6747;6740:12;6701:53;6789:9;6776:23;6808:31;6833:5;6808:31;:::i;:::-;6858:5;-1:-1:-1;6915:2:118;6900:18;;6887:32;6928:33;6887:32;6928:33;:::i;:::-;6980:7;-1:-1:-1;7039:2:118;7024:18;;7011:32;7052:33;7011:32;7052:33;:::i;:::-;7104:7;-1:-1:-1;7158:2:118;7143:18;;7130:32;;-1:-1:-1;7209:3:118;7194:19;;7181:33;;-1:-1:-1;7261:3:118;7246:19;;7233:33;;-1:-1:-1;7318:3:118;7303:19;;7290:33;7332;7290;7332;:::i;:::-;7384:7;-1:-1:-1;7443:3:118;7428:19;;7415:33;7457;7415;7457;:::i;:::-;7509:7;-1:-1:-1;7568:3:118;7553:19;;7540:33;7582;7540;7582;:::i;:::-;7634:7;7624:17;;;6485:1162;;;;;;;;;;;:::o;7652:250::-;7737:1;7747:113;7761:6;7758:1;7755:13;7747:113;;;7837:11;;;7831:18;7818:11;;;7811:39;7783:2;7776:10;7747:113;;;-1:-1:-1;;7894:1:118;7876:16;;7869:27;7652:250::o;7907:271::-;7949:3;7987:5;7981:12;8014:6;8009:3;8002:19;8030:76;8099:6;8092:4;8087:3;8083:14;8076:4;8069:5;8065:16;8030:76;:::i;:::-;8160:2;8139:15;-1:-1:-1;;8135:29:118;8126:39;;;;8167:4;8122:50;;7907:271;-1:-1:-1;;7907:271:118:o;8183:776::-;8358:2;8347:9;8340:21;8321:4;8396:6;8390:13;8439:4;8434:2;8423:9;8419:18;8412:32;8467:52;8514:3;8503:9;8499:19;8485:12;8467:52;:::i;:::-;8453:66;;8568:2;8560:6;8556:15;8550:22;8640:2;8636:7;8624:9;8616:6;8612:22;8608:36;8603:2;8592:9;8588:18;8581:64;8668:41;8702:6;8686:14;8668:41;:::i;:::-;8758:2;8746:15;;8740:22;-1:-1:-1;;;;;8836:23:118;;;8831:2;8816:18;;;8809:51;;;;8908:15;;;8902:22;8898:31;;;8891:4;8876:20;;;8869:61;;;;-1:-1:-1;8654:55:118;;8183:776;-1:-1:-1;;8183:776:118:o;8964:127::-;9025:10;9020:3;9016:20;9013:1;9006:31;9056:4;9053:1;9046:15;9080:4;9077:1;9070:15;9096:251;9166:6;9219:2;9207:9;9198:7;9194:23;9190:32;9187:52;;;9235:1;9232;9225:12;9187:52;9267:9;9261:16;9286:31;9311:5;9286:31;:::i;9352:127::-;9413:10;9408:3;9404:20;9401:1;9394:31;9444:4;9441:1;9434:15;9468:4;9465:1;9458:15;9484:135;9523:3;9544:17;;;9541:43;;9564:18;;:::i;:::-;-1:-1:-1;9611:1:118;9600:13;;9484:135::o;9624:125::-;9689:9;;;9710:10;;;9707:36;;;9723:18;;:::i;9754:408::-;9956:2;9938:21;;;9995:2;9975:18;;;9968:30;10034:34;10029:2;10014:18;;10007:62;-1:-1:-1;;;10100:2:118;10085:18;;10078:42;10152:3;10137:19;;9754:408::o;10167:::-;10369:2;10351:21;;;10408:2;10388:18;;;10381:30;10447:34;10442:2;10427:18;;10420:62;-1:-1:-1;;;10513:2:118;10498:18;;10491:42;10565:3;10550:19;;10167:408::o;11314:184::-;11384:6;11437:2;11425:9;11416:7;11412:23;11408:32;11405:52;;;11453:1;11450;11443:12;11405:52;-1:-1:-1;11476:16:118;;11314:184;-1:-1:-1;11314:184:118:o;12117:128::-;12184:9;;;12205:11;;;12202:37;;;12219:18;;:::i;12439:648::-;12519:6;12572:2;12560:9;12551:7;12547:23;12543:32;12540:52;;;12588:1;12585;12578:12;12540:52;12621:9;12615:16;12654:18;12646:6;12643:30;12640:50;;;12686:1;12683;12676:12;12640:50;12709:22;;12762:4;12754:13;;12750:27;-1:-1:-1;12740:55:118;;12791:1;12788;12781:12;12740:55;12820:2;12814:9;12845:48;12861:31;12889:2;12861:31;:::i;12845:48::-;12916:2;12909:5;12902:17;12956:7;12951:2;12946;12942;12938:11;12934:20;12931:33;12928:53;;;12977:1;12974;12967:12;12928:53;12990:67;13054:2;13049;13042:5;13038:14;13033:2;13029;13025:11;12990:67;:::i;:::-;13076:5;12439:648;-1:-1:-1;;;;;12439:648:118:o;15125:216::-;15189:9;;;15217:11;;;15164:3;15247:9;;15275:10;;15271:19;;15300:10;;15292:19;;15268:44;15265:70;;;15315:18;;:::i;:::-;15265:70;;15125:216;;;;:::o;15346:127::-;15407:10;15402:3;15398:20;15395:1;15388:31;15438:4;15435:1;15428:15;15462:4;15459:1;15452:15;15478:812;15889:25;15884:3;15877:38;15859:3;15944:6;15938:13;15960:75;16028:6;16023:2;16018:3;16014:12;16007:4;15999:6;15995:17;15960:75;:::i;:::-;-1:-1:-1;;;16094:2:118;16054:16;;;16086:11;;;16079:40;16144:13;;16166:76;16144:13;16228:2;16220:11;;16213:4;16201:17;;16166:76;:::i;:::-;16262:17;16281:2;16258:26;;15478:812;-1:-1:-1;;;;15478:812:118:o;16295:220::-;16444:2;16433:9;16426:21;16407:4;16464:45;16505:2;16494:9;16490:18;16482:6;16464:45;:::i;16934:277::-;17001:6;17054:2;17042:9;17033:7;17029:23;17025:32;17022:52;;;17070:1;17067;17060:12;17022:52;17102:9;17096:16;17155:5;17148:13;17141:21;17134:5;17131:32;17121:60;;17177:1;17174;17167:12;17627:422;17716:1;17759:5;17716:1;17773:270;17794:7;17784:8;17781:21;17773:270;;;17853:4;17849:1;17845:6;17841:17;17835:4;17832:27;17829:53;;;17862:18;;:::i;:::-;17912:7;17902:8;17898:22;17895:55;;;17932:16;;;;17895:55;18011:22;;;;17971:15;;;;17773:270;;;17777:3;17627:422;;;;;:::o;18054:806::-;18103:5;18133:8;18123:80;;-1:-1:-1;18174:1:118;18188:5;;18123:80;18222:4;18212:76;;-1:-1:-1;18259:1:118;18273:5;;18212:76;18304:4;18322:1;18317:59;;;;18390:1;18385:130;;;;18297:218;;18317:59;18347:1;18338:10;;18361:5;;;18385:130;18422:3;18412:8;18409:17;18406:43;;;18429:18;;:::i;:::-;-1:-1:-1;;18485:1:118;18471:16;;18500:5;;18297:218;;18599:2;18589:8;18586:16;18580:3;18574:4;18571:13;18567:36;18561:2;18551:8;18548:16;18543:2;18537:4;18534:12;18530:35;18527:77;18524:159;;;-1:-1:-1;18636:19:118;;;18668:5;;18524:159;18715:34;18740:8;18734:4;18715:34;:::i;:::-;18785:6;18781:1;18777:6;18773:19;18764:7;18761:32;18758:58;;;18796:18;;:::i;:::-;18834:20;;18054:806;-1:-1:-1;;;18054:806:118:o;18865:131::-;18925:5;18954:36;18981:8;18975:4;18954:36;:::i;19001:151::-;19091:4;19084:12;;;19070;;;19066:31;;19109:14;;19106:40;;;19126:18;;:::i;19157:168::-;19230:9;;;19261;;19278:15;;;19272:22;;19258:37;19248:71;;19299:18;;:::i;19330:136::-;19369:3;19397:5;19387:39;;19406:18;;:::i;:::-;-1:-1:-1;;;19442:18:118;;19330:136::o;19832:127::-;19893:10;19888:3;19884:20;19881:1;19874:31;19924:4;19921:1;19914:15;19948:4;19945:1;19938:15;19964:287;20093:3;20131:6;20125:13;20147:66;20206:6;20201:3;20194:4;20186:6;20182:17;20147:66;:::i;:::-;20229:16;;;;;19964:287;-1:-1:-1;;19964:287:118:o",
    "linkReferences": {},
    "immutableReferences": {
      "31740": [
        {
          "start": 3043,
          "length": 32
        },
        {
          "start": 3116,
          "length": 32
        },
        {
          "start": 4201,
          "length": 32
        },
        {
          "start": 4265,
          "length": 32
        },
        {
          "start": 4408,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "ENS_SETTER_ROLE()": "c2544987",
    "STAKING_CONFIG_SETTER_ROLE()": "a4303a45",
    "STAKING_INFO_SETTER_ROLE()": "265718b4",
    "STAKING_STAT_SETTER_ADMIN_ROLE()": "29b4a590",
    "STAKING_STAT_SETTER_ROLE()": "66951bc1",
    "SWAP_POOL_SETTER_ROLE()": "363227e5",
    "decreaseAmountStaked(address,address,uint256)": "cac7c65c",
    "getDefaultPayee()": "10da95e6",
    "getDeflationaryPercentage()": "f7ef8ead",
    "getDiscountPercentage()": "111029b9",
    "getPeriodLength()": "8469ddc7",
    "getRareAddress()": "2210d525",
    "getRewardAccumulatorAddressForUser(address)": "e286ef33",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getRoleMember(bytes32,uint256)": "9010d07c",
    "getRoleMemberCount(bytes32)": "ca15c873",
    "getStakingAddressForUser(address)": "81d0606b",
    "getStakingInfoForUser(address)": "f24bd8a6",
    "getSwapPool(address)": "039bcf8e",
    "getTotalAmountStakedByUser(address)": "06c571d5",
    "getTotalAmountStakedOnUser(address)": "3d867d95",
    "getUsersForStakingAddresses(address[])": "18ab58ac",
    "getWethAddress()": "23a7b42a",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "increaseAmountStaked(address,address,uint256)": "2608ff35",
    "initialize(address,address,address,uint256,uint256,uint256,address,address,address)": "bb0544a1",
    "proxiableUUID()": "52d1902d",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "setDefaultPayee(address)": "99247be7",
    "setDeflationaryPercentage(uint256)": "cb8af2b5",
    "setDiscountPercentage(uint256)": "b3428d15",
    "setPeriodLength(uint256)": "1c5633d7",
    "setResolver(address)": "4e543b26",
    "setReverseRegistrar(address)": "557499ba",
    "setStakingAddresses(address,address,address)": "76a250a7",
    "setSwapPool(address,address)": "46ccbb40",
    "supportsInterface(bytes4)": "01ffc9a7",
    "transferRareFrom(address,address,uint256)": "81910e33",
    "upgradeTo(address)": "3659cfe6",
    "upgradeToAndCall(address,bytes)": "4f1ef286"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InsufficientRareAllowance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPool\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PercentageBeyondLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PeriodLengthBeyondLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RenouncingAdmin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StakingContractAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddressUnsupported\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_payee\",\"type\":\"address\"}],\"name\":\"DefaultPayeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_percentage\",\"type\":\"uint256\"}],\"name\":\"DeflationaryPercentageUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_percentage\",\"type\":\"uint256\"}],\"name\":\"DiscountPercentageUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_periodLength\",\"type\":\"uint256\"}],\"name\":\"PeriodLengthUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_resolver\",\"type\":\"address\"}],\"name\":\"ResolverUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_percentage\",\"type\":\"address\"}],\"name\":\"ReverseRegistrarUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_uniswapPool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"SetSwapPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ENS_SETTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKING_CONFIG_SETTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKING_INFO_SETTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKING_STAT_SETTER_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKING_STAT_SETTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SWAP_POOL_SETTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakedOn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"decreaseAmountStaked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultPayee\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeflationaryPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDiscountPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPeriodLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRareAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getRewardAccumulatorAddressForUser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getStakingAddressForUser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getStakingInfoForUser\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"stakingAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardAddress\",\"type\":\"address\"}],\"internalType\":\"struct IRareStakingRegistry.Info\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getSwapPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getTotalAmountStakedByUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getTotalAmountStakedOnUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_stakingAddrs\",\"type\":\"address[]\"}],\"name\":\"getUsersForStakingAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWethAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakedOn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"increaseAmountStaked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_reverseRegistrar\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_resolver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_periodLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deflationaryPercentage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_discountedPercent\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_rare\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_weth\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_defaultPayee\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_payee\",\"type\":\"address\"}],\"name\":\"setDefaultPayee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_percentage\",\"type\":\"uint256\"}],\"name\":\"setDeflationaryPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_percentage\",\"type\":\"uint256\"}],\"name\":\"setDiscountPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_periodLength\",\"type\":\"uint256\"}],\"name\":\"setPeriodLength\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_resolver\",\"type\":\"address\"}],\"name\":\"setResolver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reverseRegistrar\",\"type\":\"address\"}],\"name\":\"setReverseRegistrar\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakingAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardSwapAddress\",\"type\":\"address\"}],\"name\":\"setStakingAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_uniswapPool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setSwapPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferRareFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"koloz, charlescrain\",\"details\":\"Made to be used with a UUPS Proxy.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"decreaseAmountStaked(address,address,uint256)\":{\"details\":\"Requires the caller to have the {STAKING_STAT_SETTER_ROLE} access control role.\",\"params\":{\"_amount\":\"The amount of $RARE that has been unstaked.\",\"_stakedOn\":\"The user who was being staked on.\",\"_staker\":\"The user who is unstaking.\"}},\"getDefaultPayee()\":{\"returns\":{\"_0\":\"address to send rewards to.\"}},\"getDeflationaryPercentage()\":{\"returns\":{\"_0\":\"uint256 deflationary percentage.\"}},\"getDiscountPercentage()\":{\"returns\":{\"_0\":\"uint256  discount percentage.\"}},\"getPeriodLength()\":{\"returns\":{\"_0\":\"uint256 period length.\"}},\"getRareAddress()\":{\"returns\":{\"_0\":\"address Address of $RARE (the staking token to be used).\"}},\"getRewardAccumulatorAddressForUser(address)\":{\"params\":{\"_user\":\"Address of user being queried.\"},\"returns\":{\"_0\":\"address Reward accumulator address.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"getStakingAddressForUser(address)\":{\"params\":{\"_user\":\"Address of user being queried.\"},\"returns\":{\"_0\":\"address staking address.\"}},\"getStakingInfoForUser(address)\":{\"params\":{\"_user\":\"Address of user being queried.\"},\"returns\":{\"_0\":\"Info struct containing name, symbol, staking address, and reward accumulator address.\"}},\"getSwapPool(address)\":{\"returns\":{\"_0\":\"address of the swap pool associated with the token.\"}},\"getTotalAmountStakedByUser(address)\":{\"params\":{\"_user\":\"Address of the user staking.\"},\"returns\":{\"amount\":\"uint256 Amount of rare the user is staking.\"}},\"getTotalAmountStakedOnUser(address)\":{\"params\":{\"_user\":\"Address of the user being staked on.\"},\"returns\":{\"amount\":\"uint256 Amount of rare being staked on the user.\"}},\"getUsersForStakingAddresses(address[])\":{\"details\":\"Order maintained and zero address returned if it doesnt exist.This function is intended to be called off chain.\",\"params\":{\"_stakingAddrs\":\"Addresses of staking contracts being queried.\"}},\"getWethAddress()\":{\"returns\":{\"_0\":\"address Address of Wrapped Ethereum.\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAmountStaked(address,address,uint256)\":{\"details\":\"Requires the caller to have the {STAKING_STAT_SETTER_ROLE} access control role.\",\"params\":{\"_amount\":\"The amount of $RARE that has been staked.\",\"_stakedOn\":\"The user who is being staked on.\",\"_staker\":\"The user who is staking.\"}},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setDefaultPayee(address)\":{\"details\":\"Requires the caller to have the {STAKING_CONFIG_SETTER_ROLE} access control role.\",\"params\":{\"_payee\":\"Address of the account to be the new default payee.\"}},\"setDeflationaryPercentage(uint256)\":{\"details\":\"Requires the caller to have the {STAKING_CONFIG_SETTER_ROLE} access control role.\",\"params\":{\"_percentage\":\"The new deflactionary percentage.\"}},\"setDiscountPercentage(uint256)\":{\"details\":\"Requires the caller to have the {STAKING_CONFIG_SETTER_ROLE} access control role.\",\"params\":{\"_percentage\":\"The new discount percentage.\"}},\"setPeriodLength(uint256)\":{\"details\":\"Requires the caller to have the {STAKING_CONFIG_SETTER_ROLE} access control role.\",\"params\":{\"_periodLength\":\"The new period start.\"}},\"setResolver(address)\":{\"details\":\"Requires the caller to have the {ENS_SETTER_ROLE} access control role.\",\"params\":{\"_resolver\":\"The new period start.\"}},\"setReverseRegistrar(address)\":{\"details\":\"Requires the caller to have the {ENS_SETTER_ROLE} access control role.\",\"params\":{\"_reverseRegistrar\":\"The new period start.\"}},\"setStakingAddresses(address,address,address)\":{\"details\":\"Requires the caller to have the {STAKING_INFO_SETTER_ROLE} access control role.\"},\"setSwapPool(address,address)\":{\"details\":\"Requires the caller to have the {SWAP_POOL_SETTER_ROLE} of the contract.\",\"params\":{\"_token\":\"Address of  ERC20 contract.\",\"_uniswapPool\":\"Address of  uniswap pool.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferRareFrom(address,address,uint256)\":{\"details\":\"Only staking pool contracts can call this.\",\"params\":{\"_amount\":\"uint256 amount to transfer.\",\"_from\":\"Address to transfer the tokens from.\",\"_to\":\"Address to transfer the tokens to.\"}},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"ENS_SETTER_ROLE\":{\"return\":\"bytes32 value of the ens setter role.\",\"returns\":{\"_0\":\"bytes32 value of the ens setter role.\"}},\"STAKING_CONFIG_SETTER_ROLE\":{\"return\":\"bytes32 value of the staking config setter role.\",\"returns\":{\"_0\":\"bytes32 value of the staking config setter role.\"}},\"STAKING_INFO_SETTER_ROLE\":{\"return\":\"bytes32 value of the staking info setter role.\",\"returns\":{\"_0\":\"bytes32 value of the staking info setter role.\"}},\"STAKING_STAT_SETTER_ADMIN_ROLE\":{\"return\":\"bytes32 value of the staking stat setter admin role.\",\"returns\":{\"_0\":\"bytes32 value of the staking stat setter admin role.\"}},\"STAKING_STAT_SETTER_ROLE\":{\"return\":\"bytes32 value of the stat setter role.\",\"returns\":{\"_0\":\"bytes32 value of the stat setter role.\"}},\"SWAP_POOL_SETTER_ROLE\":{\"return\":\"bytes32 value of the swap pool setter role.\",\"returns\":{\"_0\":\"bytes32 value of the swap pool setter role.\"}}},\"title\":\"RareStakingRegistry\",\"version\":1},\"userdoc\":{\"errors\":{\"InsufficientRareAllowance()\":[{\"notice\":\"Error emitted in {transferRareFrom} when a user performs an action that requires moving $RARE but has not made enough allowance for the registry.\"}],\"InvalidPool()\":[{\"notice\":\"Emitted via {setSwapPool} if the pool doesn't match the token and pairs with WETH.\"}],\"PercentageBeyondLimit()\":[{\"notice\":\"Emitted when a percentage is beyond the specified limit.\"}],\"PeriodLengthBeyondLimit()\":[{\"notice\":\"Emitted when a Period Length is beyond the specified limit.\"}],\"RenouncingAdmin()\":[{\"notice\":\"Emitted when renouncing the admin role and no other account has the role.\"}],\"StakingContractAlreadyExists()\":[{\"notice\":\"Emitted via {setStakingAddress} if the user already has a staking address.\"}],\"Unauthorized()\":[{\"notice\":\"Emitted when guarded functions are called by users without the necessary permissions.\"}],\"ZeroAddressUnsupported()\":[{\"notice\":\"Emitted when Zero address provided where it is not allowed.\"}]},\"events\":{\"DefaultPayeeUpdated(address)\":{\"notice\":\"Emitted via {setDefaultPayee} when the defaultPayee is updated.\"},\"DeflationaryPercentageUpdated(uint256)\":{\"notice\":\"Emitted via {setDeflationaryPercentage} when the deflationaryPercentage is updated.\"},\"DiscountPercentageUpdated(uint256)\":{\"notice\":\"Emitted via {setDiscountPercentage} when the discountedPercent is updated.\"},\"PeriodLengthUpdated(uint256)\":{\"notice\":\"Emitted via {setPeriodLength} when the periodLength is updated.\"},\"ResolverUpdated(address)\":{\"notice\":\"Emitted via {setResolver} when the ENS resolver is updated.\"},\"ReverseRegistrarUpdated(address)\":{\"notice\":\"Emitted via {setReverseRegistrar} when the ENS reverse registrar is updated.\"},\"SetSwapPool(address,address)\":{\"notice\":\"Emitted via {setSwapPool} when a new swap pool has been set.\"}},\"kind\":\"user\",\"methods\":{\"ENS_SETTER_ROLE()\":{\"notice\":\"Bytes32 representation of the role used for updating the ENS resolvers.\"},\"STAKING_CONFIG_SETTER_ROLE()\":{\"notice\":\"Bytes32 representation of the role used for period length, deflationary percentages, and the default payee.\"},\"STAKING_INFO_SETTER_ROLE()\":{\"notice\":\"Bytes32 representation of the role used for setting the staking address of a user.\"},\"STAKING_STAT_SETTER_ADMIN_ROLE()\":{\"notice\":\"Bytes32 representation of the admin role for granting the ability to set amount staked for a single user/total amount staked on a user.\"},\"STAKING_STAT_SETTER_ROLE()\":{\"notice\":\"Bytes32 representation of the role used for updating the amount being staked on a user/amount a user is staking globally.\"},\"SWAP_POOL_SETTER_ROLE()\":{\"notice\":\"Bytes32 representation of the role used for updating uniswap pools.\"},\"decreaseAmountStaked(address,address,uint256)\":{\"notice\":\"Decrease the amount staked when a user unstakes.\"},\"getDefaultPayee()\":{\"notice\":\"Get the address for sending rewards if there are no stakers.\"},\"getDeflationaryPercentage()\":{\"notice\":\"Get the unstake deflationary percentage.\"},\"getDiscountPercentage()\":{\"notice\":\"Get reward swap discount percentage.\"},\"getPeriodLength()\":{\"notice\":\"Get the round period length.\"},\"getRareAddress()\":{\"notice\":\"Retrieve the address of $RARE.\"},\"getRewardAccumulatorAddressForUser(address)\":{\"notice\":\"Retrieves the reward accumulator address for a given user.\"},\"getStakingAddressForUser(address)\":{\"notice\":\"Retrieves the staking address for a given user.\"},\"getStakingInfoForUser(address)\":{\"notice\":\"Retrieves the staking info for a given user.\"},\"getSwapPool(address)\":{\"notice\":\"Get the swap pool address for the ERC20 token.\"},\"getTotalAmountStakedByUser(address)\":{\"notice\":\"Retrieves the total amount of rare staked by a given user.\"},\"getTotalAmountStakedOnUser(address)\":{\"notice\":\"Retrieves the total amount of rare being staked on a given user.\"},\"getUsersForStakingAddresses(address[])\":{\"notice\":\"Query the users for the following staking addresseses.\"},\"getWethAddress()\":{\"notice\":\"Retrieve the address of Wrapped Ethereum.\"},\"increaseAmountStaked(address,address,uint256)\":{\"notice\":\"Increase amount staked when a user stakes.\"},\"setDefaultPayee(address)\":{\"notice\":\"Set the default payee.\"},\"setDeflationaryPercentage(uint256)\":{\"notice\":\"Set the unstake deflationary percentage.\"},\"setDiscountPercentage(uint256)\":{\"notice\":\"Set the reward swap discount percentage.\"},\"setPeriodLength(uint256)\":{\"notice\":\"Set the round period length time.\"},\"setResolver(address)\":{\"notice\":\"Set the ENS resolver address.\"},\"setReverseRegistrar(address)\":{\"notice\":\"Set the ENS reverse registrar address.\"},\"setSwapPool(address,address)\":{\"notice\":\"Set the uniswap pool address for the given ERC20 token.\"},\"transferRareFrom(address,address,uint256)\":{\"notice\":\"Pools to transfer $RARE tokens, usually into pools. This is so users only need to approve the registry when staking or performing reward swaps.\"}},\"notice\":\"The Staking Registry contract that holds info such as the staking contract for a given user and global staking stats.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/staking/registry/RareStakingRegistry.sol\":\"RareStakingRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/buffer/=lib/buffer/\",\":@ensdomains/ens-contracts/=lib/ens-contracts/contracts/\",\":@manifoldxyz/libraries-solidity/=lib/royalty-registry-solidity/lib/libraries-solidity/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/royalty-registry-solidity/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/royalty-registry-solidity/lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/contracts/\",\":@uniswap/v3-core/contracts/=lib/v3-core/contracts/\",\":@uniswap/v3-periphery/=lib/v3-periphery/contracts/\",\":arachnid/solidity-stringutils/=lib/solidity-stringutils/\",\":assets/=lib/assets/\",\":aux/=lib/aux/\",\":buffer/=lib/buffer/contracts/\",\":create2-helpers/=lib/royalty-registry-solidity/lib/create2-helpers/\",\":create2-scripts/=lib/royalty-registry-solidity/lib/create2-helpers/script/\",\":ds-test/=lib/ds-test/src/\",\":ens-contracts/=lib/ens-contracts/contracts/\",\":ensdomains/ens-contracts/=lib/ensdomains/ens-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":libraries-solidity/=lib/royalty-registry-solidity/lib/libraries-solidity/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":rareprotocol/assets/=lib/assets/src/\",\":rareprotocol/aux/=lib/aux/src/\",\":royalty-guard/=lib/aux/lib/royalty-guard/src/\",\":royalty-registry-solidity/=lib/royalty-registry-solidity/contracts/\",\":royalty-registry/=lib/royalty-registry-solidity/contracts/\",\":solidity-stringutils/=lib/solidity-stringutils/\",\":solmate/=lib/solmate/src/\",\":v3-core/=lib/v3-core/\",\":v3-periphery/=lib/v3-periphery/contracts/\"]},\"sources\":{\"lib/ens-contracts/contracts/registry/ENS.sol\":{\"keccak256\":\"0x7cb1158c7d268b63de1468e28e2711b28d686e2628ddb22da2149cd93ddeafda\",\"urls\":[\"bzz-raw://a7018309acca24b10ea1235b1c27828f29f2ddfabb653a794639baf620dc2314\",\"dweb:/ipfs/QmakFQT5NFvGs3g8xxwtgtWdddq28Wtm6MjNSpJNhV1YpR\"]},\"lib/ens-contracts/contracts/registry/IReverseRegistrar.sol\":{\"keccak256\":\"0x83adfcf6da72b1bcd1e3ac387afe5fc7fdf7f2ac28b7601544d2ca4b9d45d159\",\"urls\":[\"bzz-raw://ca4b52ebdeb0fcddedded0e0027e530df4468c25b438ce0d4699b188603a4560\",\"dweb:/ipfs/QmW3LPwkwcL84rBu8cbLagKQPMGunXnh6cZfm6RRyfXArb\"]},\"lib/ens-contracts/contracts/registry/ReverseRegistrar.sol\":{\"keccak256\":\"0x6c79056e7f564409e834619de2cf0511321dcbcf90b9f68d8ffed50fab070791\",\"urls\":[\"bzz-raw://881731d1a6e17885e3ea8eba31caae46d8ae5e266f7897666fcabf652f1d1b99\",\"dweb:/ipfs/QmReNiMnjyPRyLWRkcyFUSvL1vZ81MLtfuugGJRQZ5edzf\"]},\"lib/ens-contracts/contracts/resolvers/profiles/INameResolver.sol\":{\"keccak256\":\"0x9ec392b612447b1acbdc01114f2da2837a658d3f3157f60a99c5269f0b623346\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b2cd9e5339b09f40e82bd91fed7d5f643dd031393eefb9aec588eaba8465049\",\"dweb:/ipfs/QmT2A8eswhJU9YadCs9BtwKNj6YGypntXmFepANQYyGw7x\"]},\"lib/ens-contracts/contracts/root/Controllable.sol\":{\"keccak256\":\"0xb19b8c0fafe9ca2b4bf8aaafee486fa31437672e1e1977bdf84bfe03464969db\",\"urls\":[\"bzz-raw://cd365d76a131b89fa0f6b4097e63032337d2c071c082f5b9ca4af85cd16b3350\",\"dweb:/ipfs/QmXcgvgArVaK9k4wfzEj2rGu86W6U3BAY8mw8jVaAwJpFH\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0xc2dfd6ba9449f61b6b03b262182faf302f093a8c05dd10792aeecb4ed1663c0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f79816b0fdc0a6f53173238932ef86e2d7089a6e87b6c5c9c27e6d60f3fe809a\",\"dweb:/ipfs/QmTtXQ8sw91q4n4nXZigNWH3YaGqsJjPXyWCgPGDC6s24j\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xfeefb24d068524440e1ba885efdf105d91f83504af3c2d745ffacc4595396831\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3df5f6a75f86411cb20df54362ed4ec9b4c270720be20da7095f169932fa2709\",\"dweb:/ipfs/QmTThfuAwFYAvtHgZbmp6ZAbN2MVGSabAnhAbsB6JQxJCF\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlEnumerableUpgradeable.sol\":{\"keccak256\":\"0x7acbc538aad6eb4614e26612a8c5c0149bb8808db95e2638d245a8365f63e572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea07bdbf13b16d19ccf8a8f1a361c80bbfb6073e8b1d079b72f7a5f09dc642cd\",\"dweb:/ipfs/QmQh5YhCySYR5RSAEFTt3NaDhq6MCxvSTdFh56874JPxbY\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC20Upgradeable.sol\":{\"keccak256\":\"0xe73087c5001a37cf7186b3709377c7ceb01a0d38fb908723d1464cea66b4958c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b835a1929ca2c7c978085e58f08f48855df8a82ef6a426ac71393cf032ea0fc5\",\"dweb:/ipfs/QmUMXRN9g8u9wm63wc7PMaSs7oG2nqnM1VVvktaWkvF68v\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9826c7edf276ff48b99ee217358393097c30448a71d345d287c2f6961bb1f159\",\"dweb:/ipfs/QmYXBTY9wDvffGU47yMRFJ1NFyKwpbj94VHzRzhsm6R7Gz\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33e8f8d863c6943ea046fcf4972b4e815c04ab06bad195dba1d93f8ebeb8420d\",\"dweb:/ipfs/QmTQzxQTuuzPDk3eqVmYy7hv2RCXM1yt1NtubXpRbzYjaj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20PermitUpgradeable.sol\":{\"keccak256\":\"0xd60f939a3ca0199014d079b4dd66aa757954334947d81eb5c1d35d7a83061ab3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce6e5ae4633559c2aad156be884a96f7a9beb8dd31b1b630a6de55972e3af622\",\"dweb:/ipfs/QmQasz4sQoexkrvB7wCQAY6NbMoCtPS7AqomymRoJGYz85\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"keccak256\":\"0x4dae161227d332808312ee2caf6384929321b83c16cc89b5642985fbec6b814c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42e226467674f856e38311d37c03598e19a0dbae3f4e970ec1eb853c7b9a87d8\",\"dweb:/ipfs/QmZ4FWqZYKMjgnxBEjVJ5Qszuh7mZoE6GYqkimEzj8qtVe\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/structs/EnumerableMapUpgradeable.sol\":{\"keccak256\":\"0xdfa041144ad3a40abcdc6f97fd9e9b467448206722b0c9b9bd13f343891ae447\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f74d375967e813aacc9ab924ea9dd07a9dbf149b5c93a2cf968f89269fd942ca\",\"dweb:/ipfs/QmeNAiboecuK4CGjFkr1gqBmk3UbTdr1w41R31AaVtMJXf\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/structs/EnumerableSetUpgradeable.sol\":{\"keccak256\":\"0x1c65595a26548a1b2263315b08a56334a2d7087319814437559c3c96025e939f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://876afb75e0d5615b07f70a0bc69ae7f098df8ef058251b5934b9d05c9c7e0d1f\",\"dweb:/ipfs/Qmay4sdoBJQtP2cC1EDyQ8GzNPJZzo3v5soRRy8rDNLfBJ\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf\",\"dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xbaf3bd8c64ac943fafde717797ee797c96360586b9448ea25e9872490a6e6858\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bab65b9b5ea0c68e96e1a73460db616042f639d144a6a75595434cfa2a483ed4\",\"dweb:/ipfs/QmUgwEcWXaEu4VSpymiVq8tZYKgA44HPMWZowpg2L8Kiij\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"lib/royalty-registry-solidity/lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/royalty-registry-solidity/lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/solidity-stringutils/src/strings.sol\":{\"keccak256\":\"0x9e064fd116cdd5ed4b0132d0606a372bd94ff243c0520bc723fb6b09e947c16e\",\"urls\":[\"bzz-raw://93d1a36262aa498a85ac7a275ead2cf410b9c674d6bef09d0972203cb33b724e\",\"dweb:/ipfs/QmY9T4HKDbPXEZPHzXaFbd2M86fV1Q68sBJYh8J9LDFApU\"]},\"lib/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]},\"lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"lib/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0xaa9d8894cfc7826e4d1abacb026b022ef4ff07569037b8796474d43257fb1f19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d4defb32c4331c11a78f235cc5a844c67036221eb9b7fdd5ef81ea024b1c05b\",\"dweb:/ipfs/QmRX1y6Wsg8eyAvTcDynRBvH65cFt7B2DH2Ux92C12m588\"]},\"lib/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0x681ad959f8a575271b01dbde85e2a61f41eddd3247da3f8bc59d948446975347\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2347b5b5258d7a8afc15d725ef2b2193751a073cf6180ec1359292729f454a97\",\"dweb:/ipfs/QmTvqAQpCQMZ6wNVAN4CWXaaqZv9zc2vNfXHsaLG5Mmdv2\"]},\"lib/v3-periphery/contracts/libraries/OracleLibrary.sol\":{\"keccak256\":\"0x7845d46168720f378aeb0178ff8198e2cbbedae7eb9aaf9cee6abaa80d0b618a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1a48a2a2e96a9ee41d73e17965926ae90f33a3219e6f98c065b3f65d7a404313\",\"dweb:/ipfs/QmY5WEYcNxPNLhcbAangLyqkuCEtQhT8dmuNBKouxBUXkR\"]},\"src/staking/registry/IRareStakingRegistry.sol\":{\"keccak256\":\"0x26458c277ad3b3280dbedd7dbfdfbaa8d2af5f6180959ef732cbcec78b6c2924\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5ba0ab87bedec5547531b79c123233dfcbdf9062a860845d242ae518e6ff8d6\",\"dweb:/ipfs/QmT4kZV7MjKwevN2ABFRD7tNnXRkUxJqNKyrXxthfWC5mR\"]},\"src/staking/registry/RareStakingRegistry.sol\":{\"keccak256\":\"0x59c1e348309fc54ba585807f6950af279da6000d0b69b350e104008ef79aa3eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f2fb4dcd47c5c84eaa0890204a35ec3b3e5020d34dc6832a5ea826c8f6e00bf\",\"dweb:/ipfs/QmSqkmQB7hjZWESL2mVDaPmYvKNRW3ikSRBYtwyhd6zhT8\"]},\"src/staking/token/IRarityPool.sol\":{\"keccak256\":\"0x8a1c433510ef5db8f4a8b2b298c6618a91e974f1ea6c280967c1d3c710e3794b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ade4d1308318773489621961a1b6e2ed76a0c8ed0686225e75100f73df91f14\",\"dweb:/ipfs/Qma1AxmUyfM8CbRN6MnWW6BVpYE9iByWQygCDvG3RunbqS\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.18+commit.87f61d96"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientRareAllowance"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidPool"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PercentageBeyondLimit"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PeriodLengthBeyondLimit"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RenouncingAdmin"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "StakingContractAlreadyExists"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Unauthorized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroAddressUnsupported"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousAdmin",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "beacon",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "BeaconUpgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_payee",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultPayeeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_percentage",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DeflationaryPercentageUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_percentage",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DiscountPercentageUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_periodLength",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PeriodLengthUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_resolver",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ResolverUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_percentage",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ReverseRegistrarUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_uniswapPool",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "_token",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetSwapPool",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Upgraded",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ENS_SETTER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "STAKING_CONFIG_SETTER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "STAKING_INFO_SETTER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "STAKING_STAT_SETTER_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "STAKING_STAT_SETTER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SWAP_POOL_SETTER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_staker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_stakedOn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAmountStaked"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultPayee",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDeflationaryPercentage",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDiscountPercentage",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPeriodLength",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRareAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRewardAccumulatorAddressForUser",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMember",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleMemberCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakingAddressForUser",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakingInfoForUser",
          "outputs": [
            {
              "internalType": "struct IRareStakingRegistry.Info",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "symbol",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "stakingAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "rewardAddress",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSwapPool",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTotalAmountStakedByUser",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTotalAmountStakedOnUser",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "_stakingAddrs",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUsersForStakingAddresses",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getWethAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_staker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_stakedOn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAmountStaked"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_reverseRegistrar",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_resolver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_periodLength",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_deflationaryPercentage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_discountedPercent",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_rare",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_weth",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_defaultPayee",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxiableUUID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_payee",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultPayee"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_percentage",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDeflationaryPercentage"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_percentage",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDiscountPercentage"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_periodLength",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPeriodLength"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_resolver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setResolver"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_reverseRegistrar",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setReverseRegistrar"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_stakingAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_rewardSwapAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setStakingAddresses"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_uniswapPool",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setSwapPool"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferRareFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "upgradeTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "upgradeToAndCall"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "decreaseAmountStaked(address,address,uint256)": {
            "details": "Requires the caller to have the {STAKING_STAT_SETTER_ROLE} access control role.",
            "params": {
              "_amount": "The amount of $RARE that has been unstaked.",
              "_stakedOn": "The user who was being staked on.",
              "_staker": "The user who is unstaking."
            }
          },
          "getDefaultPayee()": {
            "returns": {
              "_0": "address to send rewards to."
            }
          },
          "getDeflationaryPercentage()": {
            "returns": {
              "_0": "uint256 deflationary percentage."
            }
          },
          "getDiscountPercentage()": {
            "returns": {
              "_0": "uint256  discount percentage."
            }
          },
          "getPeriodLength()": {
            "returns": {
              "_0": "uint256 period length."
            }
          },
          "getRareAddress()": {
            "returns": {
              "_0": "address Address of $RARE (the staking token to be used)."
            }
          },
          "getRewardAccumulatorAddressForUser(address)": {
            "params": {
              "_user": "Address of user being queried."
            },
            "returns": {
              "_0": "address Reward accumulator address."
            }
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "getRoleMember(bytes32,uint256)": {
            "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
          },
          "getRoleMemberCount(bytes32)": {
            "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
          },
          "getStakingAddressForUser(address)": {
            "params": {
              "_user": "Address of user being queried."
            },
            "returns": {
              "_0": "address staking address."
            }
          },
          "getStakingInfoForUser(address)": {
            "params": {
              "_user": "Address of user being queried."
            },
            "returns": {
              "_0": "Info struct containing name, symbol, staking address, and reward accumulator address."
            }
          },
          "getSwapPool(address)": {
            "returns": {
              "_0": "address of the swap pool associated with the token."
            }
          },
          "getTotalAmountStakedByUser(address)": {
            "params": {
              "_user": "Address of the user staking."
            },
            "returns": {
              "amount": "uint256 Amount of rare the user is staking."
            }
          },
          "getTotalAmountStakedOnUser(address)": {
            "params": {
              "_user": "Address of the user being staked on."
            },
            "returns": {
              "amount": "uint256 Amount of rare being staked on the user."
            }
          },
          "getUsersForStakingAddresses(address[])": {
            "details": "Order maintained and zero address returned if it doesnt exist.This function is intended to be called off chain.",
            "params": {
              "_stakingAddrs": "Addresses of staking contracts being queried."
            }
          },
          "getWethAddress()": {
            "returns": {
              "_0": "address Address of Wrapped Ethereum."
            }
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "increaseAmountStaked(address,address,uint256)": {
            "details": "Requires the caller to have the {STAKING_STAT_SETTER_ROLE} access control role.",
            "params": {
              "_amount": "The amount of $RARE that has been staked.",
              "_stakedOn": "The user who is being staked on.",
              "_staker": "The user who is staking."
            }
          },
          "proxiableUUID()": {
            "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
          },
          "setDefaultPayee(address)": {
            "details": "Requires the caller to have the {STAKING_CONFIG_SETTER_ROLE} access control role.",
            "params": {
              "_payee": "Address of the account to be the new default payee."
            }
          },
          "setDeflationaryPercentage(uint256)": {
            "details": "Requires the caller to have the {STAKING_CONFIG_SETTER_ROLE} access control role.",
            "params": {
              "_percentage": "The new deflactionary percentage."
            }
          },
          "setDiscountPercentage(uint256)": {
            "details": "Requires the caller to have the {STAKING_CONFIG_SETTER_ROLE} access control role.",
            "params": {
              "_percentage": "The new discount percentage."
            }
          },
          "setPeriodLength(uint256)": {
            "details": "Requires the caller to have the {STAKING_CONFIG_SETTER_ROLE} access control role.",
            "params": {
              "_periodLength": "The new period start."
            }
          },
          "setResolver(address)": {
            "details": "Requires the caller to have the {ENS_SETTER_ROLE} access control role.",
            "params": {
              "_resolver": "The new period start."
            }
          },
          "setReverseRegistrar(address)": {
            "details": "Requires the caller to have the {ENS_SETTER_ROLE} access control role.",
            "params": {
              "_reverseRegistrar": "The new period start."
            }
          },
          "setStakingAddresses(address,address,address)": {
            "details": "Requires the caller to have the {STAKING_INFO_SETTER_ROLE} access control role."
          },
          "setSwapPool(address,address)": {
            "details": "Requires the caller to have the {SWAP_POOL_SETTER_ROLE} of the contract.",
            "params": {
              "_token": "Address of  ERC20 contract.",
              "_uniswapPool": "Address of  uniswap pool."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "transferRareFrom(address,address,uint256)": {
            "details": "Only staking pool contracts can call this.",
            "params": {
              "_amount": "uint256 amount to transfer.",
              "_from": "Address to transfer the tokens from.",
              "_to": "Address to transfer the tokens to."
            }
          },
          "upgradeTo(address)": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          },
          "upgradeToAndCall(address,bytes)": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "ENS_SETTER_ROLE()": {
            "notice": "Bytes32 representation of the role used for updating the ENS resolvers."
          },
          "STAKING_CONFIG_SETTER_ROLE()": {
            "notice": "Bytes32 representation of the role used for period length, deflationary percentages, and the default payee."
          },
          "STAKING_INFO_SETTER_ROLE()": {
            "notice": "Bytes32 representation of the role used for setting the staking address of a user."
          },
          "STAKING_STAT_SETTER_ADMIN_ROLE()": {
            "notice": "Bytes32 representation of the admin role for granting the ability to set amount staked for a single user/total amount staked on a user."
          },
          "STAKING_STAT_SETTER_ROLE()": {
            "notice": "Bytes32 representation of the role used for updating the amount being staked on a user/amount a user is staking globally."
          },
          "SWAP_POOL_SETTER_ROLE()": {
            "notice": "Bytes32 representation of the role used for updating uniswap pools."
          },
          "decreaseAmountStaked(address,address,uint256)": {
            "notice": "Decrease the amount staked when a user unstakes."
          },
          "getDefaultPayee()": {
            "notice": "Get the address for sending rewards if there are no stakers."
          },
          "getDeflationaryPercentage()": {
            "notice": "Get the unstake deflationary percentage."
          },
          "getDiscountPercentage()": {
            "notice": "Get reward swap discount percentage."
          },
          "getPeriodLength()": {
            "notice": "Get the round period length."
          },
          "getRareAddress()": {
            "notice": "Retrieve the address of $RARE."
          },
          "getRewardAccumulatorAddressForUser(address)": {
            "notice": "Retrieves the reward accumulator address for a given user."
          },
          "getStakingAddressForUser(address)": {
            "notice": "Retrieves the staking address for a given user."
          },
          "getStakingInfoForUser(address)": {
            "notice": "Retrieves the staking info for a given user."
          },
          "getSwapPool(address)": {
            "notice": "Get the swap pool address for the ERC20 token."
          },
          "getTotalAmountStakedByUser(address)": {
            "notice": "Retrieves the total amount of rare staked by a given user."
          },
          "getTotalAmountStakedOnUser(address)": {
            "notice": "Retrieves the total amount of rare being staked on a given user."
          },
          "getUsersForStakingAddresses(address[])": {
            "notice": "Query the users for the following staking addresseses."
          },
          "getWethAddress()": {
            "notice": "Retrieve the address of Wrapped Ethereum."
          },
          "increaseAmountStaked(address,address,uint256)": {
            "notice": "Increase amount staked when a user stakes."
          },
          "setDefaultPayee(address)": {
            "notice": "Set the default payee."
          },
          "setDeflationaryPercentage(uint256)": {
            "notice": "Set the unstake deflationary percentage."
          },
          "setDiscountPercentage(uint256)": {
            "notice": "Set the reward swap discount percentage."
          },
          "setPeriodLength(uint256)": {
            "notice": "Set the round period length time."
          },
          "setResolver(address)": {
            "notice": "Set the ENS resolver address."
          },
          "setReverseRegistrar(address)": {
            "notice": "Set the ENS reverse registrar address."
          },
          "setSwapPool(address,address)": {
            "notice": "Set the uniswap pool address for the given ERC20 token."
          },
          "transferRareFrom(address,address,uint256)": {
            "notice": "Pools to transfer $RARE tokens, usually into pools. This is so users only need to approve the registry when staking or performing reward swaps."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/buffer/=lib/buffer/",
        ":@ensdomains/ens-contracts/=lib/ens-contracts/contracts/",
        ":@manifoldxyz/libraries-solidity/=lib/royalty-registry-solidity/lib/libraries-solidity/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@openzeppelin/contracts-upgradeable/=lib/royalty-registry-solidity/lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/royalty-registry-solidity/lib/openzeppelin-contracts/contracts/",
        ":@uniswap/v3-core/=lib/v3-core/contracts/",
        ":@uniswap/v3-core/contracts/=lib/v3-core/contracts/",
        ":@uniswap/v3-periphery/=lib/v3-periphery/contracts/",
        ":arachnid/solidity-stringutils/=lib/solidity-stringutils/",
        ":assets/=lib/assets/",
        ":aux/=lib/aux/",
        ":buffer/=lib/buffer/contracts/",
        ":create2-helpers/=lib/royalty-registry-solidity/lib/create2-helpers/",
        ":create2-scripts/=lib/royalty-registry-solidity/lib/create2-helpers/script/",
        ":ds-test/=lib/ds-test/src/",
        ":ens-contracts/=lib/ens-contracts/contracts/",
        ":ensdomains/ens-contracts/=lib/ensdomains/ens-contracts/contracts/",
        ":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":libraries-solidity/=lib/royalty-registry-solidity/lib/libraries-solidity/contracts/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":rareprotocol/assets/=lib/assets/src/",
        ":rareprotocol/aux/=lib/aux/src/",
        ":royalty-guard/=lib/aux/lib/royalty-guard/src/",
        ":royalty-registry-solidity/=lib/royalty-registry-solidity/contracts/",
        ":royalty-registry/=lib/royalty-registry-solidity/contracts/",
        ":solidity-stringutils/=lib/solidity-stringutils/",
        ":solmate/=lib/solmate/src/",
        ":v3-core/=lib/v3-core/",
        ":v3-periphery/=lib/v3-periphery/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/staking/registry/RareStakingRegistry.sol": "RareStakingRegistry"
      },
      "libraries": {}
    },
    "sources": {
      "lib/ens-contracts/contracts/registry/ENS.sol": {
        "keccak256": "0x7cb1158c7d268b63de1468e28e2711b28d686e2628ddb22da2149cd93ddeafda",
        "urls": [
          "bzz-raw://a7018309acca24b10ea1235b1c27828f29f2ddfabb653a794639baf620dc2314",
          "dweb:/ipfs/QmakFQT5NFvGs3g8xxwtgtWdddq28Wtm6MjNSpJNhV1YpR"
        ],
        "license": null
      },
      "lib/ens-contracts/contracts/registry/IReverseRegistrar.sol": {
        "keccak256": "0x83adfcf6da72b1bcd1e3ac387afe5fc7fdf7f2ac28b7601544d2ca4b9d45d159",
        "urls": [
          "bzz-raw://ca4b52ebdeb0fcddedded0e0027e530df4468c25b438ce0d4699b188603a4560",
          "dweb:/ipfs/QmW3LPwkwcL84rBu8cbLagKQPMGunXnh6cZfm6RRyfXArb"
        ],
        "license": null
      },
      "lib/ens-contracts/contracts/registry/ReverseRegistrar.sol": {
        "keccak256": "0x6c79056e7f564409e834619de2cf0511321dcbcf90b9f68d8ffed50fab070791",
        "urls": [
          "bzz-raw://881731d1a6e17885e3ea8eba31caae46d8ae5e266f7897666fcabf652f1d1b99",
          "dweb:/ipfs/QmReNiMnjyPRyLWRkcyFUSvL1vZ81MLtfuugGJRQZ5edzf"
        ],
        "license": null
      },
      "lib/ens-contracts/contracts/resolvers/profiles/INameResolver.sol": {
        "keccak256": "0x9ec392b612447b1acbdc01114f2da2837a658d3f3157f60a99c5269f0b623346",
        "urls": [
          "bzz-raw://5b2cd9e5339b09f40e82bd91fed7d5f643dd031393eefb9aec588eaba8465049",
          "dweb:/ipfs/QmT2A8eswhJU9YadCs9BtwKNj6YGypntXmFepANQYyGw7x"
        ],
        "license": "MIT"
      },
      "lib/ens-contracts/contracts/root/Controllable.sol": {
        "keccak256": "0xb19b8c0fafe9ca2b4bf8aaafee486fa31437672e1e1977bdf84bfe03464969db",
        "urls": [
          "bzz-raw://cd365d76a131b89fa0f6b4097e63032337d2c071c082f5b9ca4af85cd16b3350",
          "dweb:/ipfs/QmXcgvgArVaK9k4wfzEj2rGu86W6U3BAY8mw8jVaAwJpFH"
        ],
        "license": null
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlEnumerableUpgradeable.sol": {
        "keccak256": "0xc2dfd6ba9449f61b6b03b262182faf302f093a8c05dd10792aeecb4ed1663c0c",
        "urls": [
          "bzz-raw://f79816b0fdc0a6f53173238932ef86e2d7089a6e87b6c5c9c27e6d60f3fe809a",
          "dweb:/ipfs/QmTtXQ8sw91q4n4nXZigNWH3YaGqsJjPXyWCgPGDC6s24j"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol": {
        "keccak256": "0xfeefb24d068524440e1ba885efdf105d91f83504af3c2d745ffacc4595396831",
        "urls": [
          "bzz-raw://3df5f6a75f86411cb20df54362ed4ec9b4c270720be20da7095f169932fa2709",
          "dweb:/ipfs/QmTThfuAwFYAvtHgZbmp6ZAbN2MVGSabAnhAbsB6JQxJCF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlEnumerableUpgradeable.sol": {
        "keccak256": "0x7acbc538aad6eb4614e26612a8c5c0149bb8808db95e2638d245a8365f63e572",
        "urls": [
          "bzz-raw://ea07bdbf13b16d19ccf8a8f1a361c80bbfb6073e8b1d079b72f7a5f09dc642cd",
          "dweb:/ipfs/QmQh5YhCySYR5RSAEFTt3NaDhq6MCxvSTdFh56874JPxbY"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlUpgradeable.sol": {
        "keccak256": "0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa",
        "urls": [
          "bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c",
          "dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC1967Upgradeable.sol": {
        "keccak256": "0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b",
        "urls": [
          "bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0",
          "dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC20Upgradeable.sol": {
        "keccak256": "0xe73087c5001a37cf7186b3709377c7ceb01a0d38fb908723d1464cea66b4958c",
        "urls": [
          "bzz-raw://b835a1929ca2c7c978085e58f08f48855df8a82ef6a426ac71393cf032ea0fc5",
          "dweb:/ipfs/QmUMXRN9g8u9wm63wc7PMaSs7oG2nqnM1VVvktaWkvF68v"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol": {
        "keccak256": "0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f",
        "urls": [
          "bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053",
          "dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
        "keccak256": "0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161",
        "urls": [
          "bzz-raw://9826c7edf276ff48b99ee217358393097c30448a71d345d287c2f6961bb1f159",
          "dweb:/ipfs/QmYXBTY9wDvffGU47yMRFJ1NFyKwpbj94VHzRzhsm6R7Gz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol": {
        "keccak256": "0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908",
        "urls": [
          "bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1",
          "dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad",
        "urls": [
          "bzz-raw://33e8f8d863c6943ea046fcf4972b4e815c04ab06bad195dba1d93f8ebeb8420d",
          "dweb:/ipfs/QmTQzxQTuuzPDk3eqVmYy7hv2RCXM1yt1NtubXpRbzYjaj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f",
        "urls": [
          "bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f",
          "dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20PermitUpgradeable.sol": {
        "keccak256": "0xd60f939a3ca0199014d079b4dd66aa757954334947d81eb5c1d35d7a83061ab3",
        "urls": [
          "bzz-raw://ce6e5ae4633559c2aad156be884a96f7a9beb8dd31b1b630a6de55972e3af622",
          "dweb:/ipfs/QmQasz4sQoexkrvB7wCQAY6NbMoCtPS7AqomymRoJGYz85"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/utils/SafeERC20Upgradeable.sol": {
        "keccak256": "0x4dae161227d332808312ee2caf6384929321b83c16cc89b5642985fbec6b814c",
        "urls": [
          "bzz-raw://42e226467674f856e38311d37c03598e19a0dbae3f4e970ec1eb853c7b9a87d8",
          "dweb:/ipfs/QmZ4FWqZYKMjgnxBEjVJ5Qszuh7mZoE6GYqkimEzj8qtVe"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol": {
        "keccak256": "0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908",
        "urls": [
          "bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685",
          "dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb",
        "urls": [
          "bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a",
          "dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
        "urls": [
          "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
          "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol": {
        "keccak256": "0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e",
        "urls": [
          "bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91",
          "dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SignedMathUpgradeable.sol": {
        "keccak256": "0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a",
        "urls": [
          "bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4",
          "dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/structs/EnumerableMapUpgradeable.sol": {
        "keccak256": "0xdfa041144ad3a40abcdc6f97fd9e9b467448206722b0c9b9bd13f343891ae447",
        "urls": [
          "bzz-raw://f74d375967e813aacc9ab924ea9dd07a9dbf149b5c93a2cf968f89269fd942ca",
          "dweb:/ipfs/QmeNAiboecuK4CGjFkr1gqBmk3UbTdr1w41R31AaVtMJXf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/structs/EnumerableSetUpgradeable.sol": {
        "keccak256": "0x1c65595a26548a1b2263315b08a56334a2d7087319814437559c3c96025e939f",
        "urls": [
          "bzz-raw://876afb75e0d5615b07f70a0bc69ae7f098df8ef058251b5934b9d05c9c7e0d1f",
          "dweb:/ipfs/Qmay4sdoBJQtP2cC1EDyQ8GzNPJZzo3v5soRRy8rDNLfBJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f",
        "urls": [
          "bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf",
          "dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xbaf3bd8c64ac943fafde717797ee797c96360586b9448ea25e9872490a6e6858",
        "urls": [
          "bzz-raw://bab65b9b5ea0c68e96e1a73460db616042f639d144a6a75595434cfa2a483ed4",
          "dweb:/ipfs/QmUgwEcWXaEu4VSpymiVq8tZYKgA44HPMWZowpg2L8Kiij"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "lib/royalty-registry-solidity/lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/royalty-registry-solidity/lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/solidity-stringutils/src/strings.sol": {
        "keccak256": "0x9e064fd116cdd5ed4b0132d0606a372bd94ff243c0520bc723fb6b09e947c16e",
        "urls": [
          "bzz-raw://93d1a36262aa498a85ac7a275ead2cf410b9c674d6bef09d0972203cb33b724e",
          "dweb:/ipfs/QmY9T4HKDbPXEZPHzXaFbd2M86fV1Q68sBJYh8J9LDFApU"
        ],
        "license": null
      },
      "lib/v3-core/contracts/interfaces/IUniswapV3Factory.sol": {
        "keccak256": "0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489",
        "urls": [
          "bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2",
          "dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
        "keccak256": "0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1",
        "urls": [
          "bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5",
          "dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
        "keccak256": "0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634",
        "urls": [
          "bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5",
          "dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
        "keccak256": "0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5",
        "urls": [
          "bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7",
          "dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
        "keccak256": "0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd",
        "urls": [
          "bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03",
          "dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
        "keccak256": "0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7",
        "urls": [
          "bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047",
          "dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
        "keccak256": "0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235",
        "urls": [
          "bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735",
          "dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
        "keccak256": "0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f",
        "urls": [
          "bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f",
          "dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/FullMath.sol": {
        "keccak256": "0xaa9d8894cfc7826e4d1abacb026b022ef4ff07569037b8796474d43257fb1f19",
        "urls": [
          "bzz-raw://3d4defb32c4331c11a78f235cc5a844c67036221eb9b7fdd5ef81ea024b1c05b",
          "dweb:/ipfs/QmRX1y6Wsg8eyAvTcDynRBvH65cFt7B2DH2Ux92C12m588"
        ],
        "license": "MIT"
      },
      "lib/v3-core/contracts/libraries/TickMath.sol": {
        "keccak256": "0x681ad959f8a575271b01dbde85e2a61f41eddd3247da3f8bc59d948446975347",
        "urls": [
          "bzz-raw://2347b5b5258d7a8afc15d725ef2b2193751a073cf6180ec1359292729f454a97",
          "dweb:/ipfs/QmTvqAQpCQMZ6wNVAN4CWXaaqZv9zc2vNfXHsaLG5Mmdv2"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/OracleLibrary.sol": {
        "keccak256": "0x7845d46168720f378aeb0178ff8198e2cbbedae7eb9aaf9cee6abaa80d0b618a",
        "urls": [
          "bzz-raw://1a48a2a2e96a9ee41d73e17965926ae90f33a3219e6f98c065b3f65d7a404313",
          "dweb:/ipfs/QmY5WEYcNxPNLhcbAangLyqkuCEtQhT8dmuNBKouxBUXkR"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/staking/registry/IRareStakingRegistry.sol": {
        "keccak256": "0x26458c277ad3b3280dbedd7dbfdfbaa8d2af5f6180959ef732cbcec78b6c2924",
        "urls": [
          "bzz-raw://e5ba0ab87bedec5547531b79c123233dfcbdf9062a860845d242ae518e6ff8d6",
          "dweb:/ipfs/QmT4kZV7MjKwevN2ABFRD7tNnXRkUxJqNKyrXxthfWC5mR"
        ],
        "license": "MIT"
      },
      "src/staking/registry/RareStakingRegistry.sol": {
        "keccak256": "0x59c1e348309fc54ba585807f6950af279da6000d0b69b350e104008ef79aa3eb",
        "urls": [
          "bzz-raw://3f2fb4dcd47c5c84eaa0890204a35ec3b3e5020d34dc6832a5ea826c8f6e00bf",
          "dweb:/ipfs/QmSqkmQB7hjZWESL2mVDaPmYvKNRW3ikSRBYtwyhd6zhT8"
        ],
        "license": "MIT"
      },
      "src/staking/token/IRarityPool.sol": {
        "keccak256": "0x8a1c433510ef5db8f4a8b2b298c6618a91e974f1ea6c280967c1d3c710e3794b",
        "urls": [
          "bzz-raw://8ade4d1308318773489621961a1b6e2ed76a0c8ed0686225e75100f73df91f14",
          "dweb:/ipfs/Qma1AxmUyfM8CbRN6MnWW6BVpYE9iByWQygCDvG3RunbqS"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/staking/registry/RareStakingRegistry.sol",
    "id": 48573,
    "exportedSymbols": {
      "ADDR_REVERSE_NODE": [
        2510
      ],
      "AccessControlEnumerableUpgradeable": [
        30500
      ],
      "AccessControlUpgradeable": [
        30836
      ],
      "AddressUpgradeable": [
        33798
      ],
      "Context": [
        55274
      ],
      "Controllable": [
        3280
      ],
      "ENS": [
        2428
      ],
      "ERC1967UpgradeUpgradeable": [
        31530
      ],
      "EnumerableMapUpgradeable": [
        36694
      ],
      "EnumerableSetUpgradeable": [
        37307
      ],
      "FullMath": [
        44777
      ],
      "IAccessControlUpgradeable": [
        30934
      ],
      "IBeaconUpgradeable": [
        31540
      ],
      "IERC1822ProxiableUpgradeable": [
        31206
      ],
      "IERC1967Upgradeable": [
        31193
      ],
      "IERC20Upgradeable": [
        32619
      ],
      "INameResolver": [
        3187
      ],
      "IRareStakingRegistry": [
        47228
      ],
      "IRarityPool": [
        49335
      ],
      "IReverseRegistrar": [
        2490
      ],
      "IUniswapV3Factory": [
        44154
      ],
      "IUniswapV3Pool": [
        44176
      ],
      "IUniswapV3PoolActions": [
        44272
      ],
      "IUniswapV3PoolDerivedState": [
        44303
      ],
      "IUniswapV3PoolEvents": [
        44422
      ],
      "IUniswapV3PoolImmutables": [
        44462
      ],
      "IUniswapV3PoolOwnerActions": [
        44488
      ],
      "IUniswapV3PoolState": [
        44596
      ],
      "Initializable": [
        31709
      ],
      "NameResolver": [
        2504
      ],
      "OracleLibrary": [
        45917
      ],
      "Ownable": [
        55240
      ],
      "RareStakingRegistry": [
        48572
      ],
      "ReverseRegistrar": [
        2841
      ],
      "SafeCast": [
        42135
      ],
      "SafeERC20Upgradeable": [
        33468
      ],
      "StorageSlotUpgradeable": [
        34180
      ],
      "Strings": [
        39716
      ],
      "TickMath": [
        45315
      ],
      "UUPSUpgradeable": [
        31845
      ],
      "lookup": [
        2507
      ],
      "strings": [
        44071
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:20242:111",
    "nodes": [
      {
        "id": 47230,
        "nodeType": "PragmaDirective",
        "src": "32:23:111",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".18"
        ]
      },
      {
        "id": 47234,
        "nodeType": "ImportDirective",
        "src": "57:185:111",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlEnumerableUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48573,
        "sourceUnit": 30501,
        "symbolAliases": [
          {
            "foreign": {
              "id": 47231,
              "name": "AccessControlEnumerableUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30500,
              "src": "65:34:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 47232,
              "name": "IAccessControlUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30934,
              "src": "101:25:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 47233,
              "name": "AccessControlUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30836,
              "src": "128:24:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 47236,
        "nodeType": "ImportDirective",
        "src": "243:119:111",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/structs/EnumerableMapUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/utils/structs/EnumerableMapUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48573,
        "sourceUnit": 36695,
        "symbolAliases": [
          {
            "foreign": {
              "id": 47235,
              "name": "EnumerableMapUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36694,
              "src": "251:24:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 47238,
        "nodeType": "ImportDirective",
        "src": "363:119:111",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/structs/EnumerableSetUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48573,
        "sourceUnit": 37308,
        "symbolAliases": [
          {
            "foreign": {
              "id": 47237,
              "name": "EnumerableSetUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37307,
              "src": "371:24:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 47240,
        "nodeType": "ImportDirective",
        "src": "483:115:111",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48573,
        "sourceUnit": 33469,
        "symbolAliases": [
          {
            "foreign": {
              "id": 47239,
              "name": "SafeERC20Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 33468,
              "src": "491:20:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 47242,
        "nodeType": "ImportDirective",
        "src": "599:103:111",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48573,
        "sourceUnit": 32620,
        "symbolAliases": [
          {
            "foreign": {
              "id": 47241,
              "name": "IERC20Upgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32619,
              "src": "607:17:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 47244,
        "nodeType": "ImportDirective",
        "src": "703:106:111",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48573,
        "sourceUnit": 31541,
        "symbolAliases": [
          {
            "foreign": {
              "id": 47243,
              "name": "IBeaconUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31540,
              "src": "711:18:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 47246,
        "nodeType": "ImportDirective",
        "src": "810:65:111",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "file": "openzeppelin-contracts/utils/Strings.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48573,
        "sourceUnit": 39717,
        "symbolAliases": [
          {
            "foreign": {
              "id": 47245,
              "name": "Strings",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39716,
              "src": "818:7:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 47248,
        "nodeType": "ImportDirective",
        "src": "876:72:111",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol",
        "file": "openzeppelin-contracts/utils/math/SafeCast.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48573,
        "sourceUnit": 42136,
        "symbolAliases": [
          {
            "foreign": {
              "id": 47247,
              "name": "SafeCast",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42135,
              "src": "884:8:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 47249,
        "nodeType": "ImportDirective",
        "src": "949:76:111",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48573,
        "sourceUnit": 31846,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 47251,
        "nodeType": "ImportDirective",
        "src": "1026:70:111",
        "nodes": [],
        "absolutePath": "lib/solidity-stringutils/src/strings.sol",
        "file": "arachnid/solidity-stringutils/src/strings.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48573,
        "sourceUnit": 44072,
        "symbolAliases": [
          {
            "foreign": {
              "id": 47250,
              "name": "strings",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44071,
              "src": "1034:7:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 47252,
        "nodeType": "ImportDirective",
        "src": "1097:65:111",
        "nodes": [],
        "absolutePath": "lib/ens-contracts/contracts/registry/ReverseRegistrar.sol",
        "file": "@ensdomains/ens-contracts/registry/ReverseRegistrar.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48573,
        "sourceUnit": 2842,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 47253,
        "nodeType": "ImportDirective",
        "src": "1163:72:111",
        "nodes": [],
        "absolutePath": "lib/ens-contracts/contracts/resolvers/profiles/INameResolver.sol",
        "file": "@ensdomains/ens-contracts/resolvers/profiles/INameResolver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48573,
        "sourceUnit": 3188,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 47254,
        "nodeType": "ImportDirective",
        "src": "1236:59:111",
        "nodes": [],
        "absolutePath": "lib/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
        "file": "@uniswap/v3-core/interfaces/IUniswapV3Factory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48573,
        "sourceUnit": 44155,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 47255,
        "nodeType": "ImportDirective",
        "src": "1296:56:111",
        "nodes": [],
        "absolutePath": "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "file": "@uniswap/v3-core/interfaces/IUniswapV3Pool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48573,
        "sourceUnit": 44177,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 47256,
        "nodeType": "ImportDirective",
        "src": "1353:59:111",
        "nodes": [],
        "absolutePath": "lib/v3-periphery/contracts/libraries/OracleLibrary.sol",
        "file": "@uniswap/v3-periphery/libraries/OracleLibrary.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48573,
        "sourceUnit": 45918,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 47258,
        "nodeType": "ImportDirective",
        "src": "1414:53:111",
        "nodes": [],
        "absolutePath": "src/staking/token/IRarityPool.sol",
        "file": "../token/IRarityPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48573,
        "sourceUnit": 49336,
        "symbolAliases": [
          {
            "foreign": {
              "id": 47257,
              "name": "IRarityPool",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49335,
              "src": "1422:11:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 47260,
        "nodeType": "ImportDirective",
        "src": "1469:64:111",
        "nodes": [],
        "absolutePath": "src/staking/registry/IRareStakingRegistry.sol",
        "file": "./IRareStakingRegistry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 48573,
        "sourceUnit": 47229,
        "symbolAliases": [
          {
            "foreign": {
              "id": 47259,
              "name": "IRareStakingRegistry",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47228,
              "src": "1477:20:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48572,
        "nodeType": "ContractDefinition",
        "src": "1772:18501:111",
        "nodes": [
          {
            "id": 47269,
            "nodeType": "UsingForDirective",
            "src": "3323:20:111",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 47268,
              "name": "strings",
              "nameLocations": [
                "3329:7:111"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44071,
              "src": "3329:7:111"
            }
          },
          {
            "id": 47272,
            "nodeType": "UsingForDirective",
            "src": "3346:27:111",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 47270,
              "name": "SafeCast",
              "nameLocations": [
                "3352:8:111"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 42135,
              "src": "3352:8:111"
            },
            "typeName": {
              "id": 47271,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3365:7:111",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 47275,
            "nodeType": "UsingForDirective",
            "src": "3376:27:111",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 47273,
              "name": "SafeCast",
              "nameLocations": [
                "3382:8:111"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 42135,
              "src": "3382:8:111"
            },
            "typeName": {
              "id": 47274,
              "name": "uint128",
              "nodeType": "ElementaryTypeName",
              "src": "3395:7:111",
              "typeDescriptions": {
                "typeIdentifier": "t_uint128",
                "typeString": "uint128"
              }
            }
          },
          {
            "id": 47280,
            "nodeType": "StructDefinition",
            "src": "3776:90:111",
            "nodes": [],
            "canonicalName": "RareStakingRegistry.RarityPoolContractPair",
            "members": [
              {
                "constant": false,
                "id": 47277,
                "mutability": "mutable",
                "name": "stakingAddress",
                "nameLocation": "3820:14:111",
                "nodeType": "VariableDeclaration",
                "scope": 47280,
                "src": "3812:22:111",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 47276,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3812:7:111",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47279,
                "mutability": "mutable",
                "name": "rewardAddress",
                "nameLocation": "3848:13:111",
                "nodeType": "VariableDeclaration",
                "scope": 47280,
                "src": "3840:21:111",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 47278,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3840:7:111",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "RarityPoolContractPair",
            "nameLocation": "3783:22:111",
            "scope": 48572,
            "visibility": "public"
          },
          {
            "id": 47286,
            "nodeType": "VariableDeclaration",
            "src": "4108:88:111",
            "nodes": [],
            "baseFunctions": [
              47197
            ],
            "constant": true,
            "documentation": {
              "id": 47281,
              "nodeType": "StructuredDocumentation",
              "src": "4069:36:111",
              "text": "@inheritdoc IRareStakingRegistry"
            },
            "functionSelector": "265718b4",
            "mutability": "constant",
            "name": "STAKING_INFO_SETTER_ROLE",
            "nameLocation": "4132:24:111",
            "scope": 48572,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 47282,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "4108:7:111",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5354414b494e475f494e464f5f5345545445525f524f4c45",
                  "id": 47284,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "4169:26:111",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_cfac5101a9a6e666acfba4416612534dd5edcaa6e3fec2fd00fb2e84b0e5e1d7",
                    "typeString": "literal_string \"STAKING_INFO_SETTER_ROLE\""
                  },
                  "value": "STAKING_INFO_SETTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_cfac5101a9a6e666acfba4416612534dd5edcaa6e3fec2fd00fb2e84b0e5e1d7",
                    "typeString": "literal_string \"STAKING_INFO_SETTER_ROLE\""
                  }
                ],
                "id": 47283,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "4159:9:111",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 47285,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "4159:37:111",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 47292,
            "nodeType": "VariableDeclaration",
            "src": "4240:100:111",
            "nodes": [],
            "baseFunctions": [
              47203
            ],
            "constant": true,
            "documentation": {
              "id": 47287,
              "nodeType": "StructuredDocumentation",
              "src": "4201:36:111",
              "text": "@inheritdoc IRareStakingRegistry"
            },
            "functionSelector": "29b4a590",
            "mutability": "constant",
            "name": "STAKING_STAT_SETTER_ADMIN_ROLE",
            "nameLocation": "4264:30:111",
            "scope": 48572,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 47288,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "4240:7:111",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5354414b494e475f535441545f5345545445525f41444d494e5f524f4c45",
                  "id": 47290,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "4307:32:111",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_1fb53273153c82fe1363373dd3355bec4bce8bdfe349c78a8ad09156481e6221",
                    "typeString": "literal_string \"STAKING_STAT_SETTER_ADMIN_ROLE\""
                  },
                  "value": "STAKING_STAT_SETTER_ADMIN_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_1fb53273153c82fe1363373dd3355bec4bce8bdfe349c78a8ad09156481e6221",
                    "typeString": "literal_string \"STAKING_STAT_SETTER_ADMIN_ROLE\""
                  }
                ],
                "id": 47289,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "4297:9:111",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 47291,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "4297:43:111",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 47298,
            "nodeType": "VariableDeclaration",
            "src": "4384:88:111",
            "nodes": [],
            "baseFunctions": [
              47209
            ],
            "constant": true,
            "documentation": {
              "id": 47293,
              "nodeType": "StructuredDocumentation",
              "src": "4345:36:111",
              "text": "@inheritdoc IRareStakingRegistry"
            },
            "functionSelector": "66951bc1",
            "mutability": "constant",
            "name": "STAKING_STAT_SETTER_ROLE",
            "nameLocation": "4408:24:111",
            "scope": 48572,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 47294,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "4384:7:111",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5354414b494e475f535441545f5345545445525f524f4c45",
                  "id": 47296,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "4445:26:111",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_b6e1aa954ca88134dedc447027c8ef72953bf046c847542dd28babf3f8d9092f",
                    "typeString": "literal_string \"STAKING_STAT_SETTER_ROLE\""
                  },
                  "value": "STAKING_STAT_SETTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_b6e1aa954ca88134dedc447027c8ef72953bf046c847542dd28babf3f8d9092f",
                    "typeString": "literal_string \"STAKING_STAT_SETTER_ROLE\""
                  }
                ],
                "id": 47295,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "4435:9:111",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 47297,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "4435:37:111",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 47304,
            "nodeType": "VariableDeclaration",
            "src": "4516:92:111",
            "nodes": [],
            "baseFunctions": [
              47215
            ],
            "constant": true,
            "documentation": {
              "id": 47299,
              "nodeType": "StructuredDocumentation",
              "src": "4477:36:111",
              "text": "@inheritdoc IRareStakingRegistry"
            },
            "functionSelector": "a4303a45",
            "mutability": "constant",
            "name": "STAKING_CONFIG_SETTER_ROLE",
            "nameLocation": "4540:26:111",
            "scope": 48572,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 47300,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "4516:7:111",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5354414b494e475f434f4e4649475f5345545445525f524f4c45",
                  "id": 47302,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "4579:28:111",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_dc0c909fa3135f9237d8a966b8b184ead9db0c05d73609dcb237ff6a00b0717b",
                    "typeString": "literal_string \"STAKING_CONFIG_SETTER_ROLE\""
                  },
                  "value": "STAKING_CONFIG_SETTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_dc0c909fa3135f9237d8a966b8b184ead9db0c05d73609dcb237ff6a00b0717b",
                    "typeString": "literal_string \"STAKING_CONFIG_SETTER_ROLE\""
                  }
                ],
                "id": 47301,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "4569:9:111",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 47303,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "4569:39:111",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 47310,
            "nodeType": "VariableDeclaration",
            "src": "4652:70:111",
            "nodes": [],
            "baseFunctions": [
              47221
            ],
            "constant": true,
            "documentation": {
              "id": 47305,
              "nodeType": "StructuredDocumentation",
              "src": "4613:36:111",
              "text": "@inheritdoc IRareStakingRegistry"
            },
            "functionSelector": "c2544987",
            "mutability": "constant",
            "name": "ENS_SETTER_ROLE",
            "nameLocation": "4676:15:111",
            "scope": 48572,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 47306,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "4652:7:111",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "454e535f5345545445525f524f4c45",
                  "id": 47308,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "4704:17:111",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_6b742d59f502efc664ffa5cec8b4f798ca10dc8c5372b7e9f352dc77e490827b",
                    "typeString": "literal_string \"ENS_SETTER_ROLE\""
                  },
                  "value": "ENS_SETTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_6b742d59f502efc664ffa5cec8b4f798ca10dc8c5372b7e9f352dc77e490827b",
                    "typeString": "literal_string \"ENS_SETTER_ROLE\""
                  }
                ],
                "id": 47307,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "4694:9:111",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 47309,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "4694:28:111",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 47316,
            "nodeType": "VariableDeclaration",
            "src": "4766:82:111",
            "nodes": [],
            "baseFunctions": [
              47227
            ],
            "constant": true,
            "documentation": {
              "id": 47311,
              "nodeType": "StructuredDocumentation",
              "src": "4727:36:111",
              "text": "@inheritdoc IRareStakingRegistry"
            },
            "functionSelector": "363227e5",
            "mutability": "constant",
            "name": "SWAP_POOL_SETTER_ROLE",
            "nameLocation": "4790:21:111",
            "scope": 48572,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 47312,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "4766:7:111",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "535741505f504f4f4c5f5345545445525f524f4c45",
                  "id": 47314,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "4824:23:111",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_400c5a1da7685ba9f18764e1fcfab4b29512376de39bc16cc5ea8f80b7b67819",
                    "typeString": "literal_string \"SWAP_POOL_SETTER_ROLE\""
                  },
                  "value": "SWAP_POOL_SETTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_400c5a1da7685ba9f18764e1fcfab4b29512376de39bc16cc5ea8f80b7b67819",
                    "typeString": "literal_string \"SWAP_POOL_SETTER_ROLE\""
                  }
                ],
                "id": 47313,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "4814:9:111",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 47315,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "4814:34:111",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 47321,
            "nodeType": "VariableDeclaration",
            "src": "5115:71:111",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "userToRarityPoolPair",
            "nameLocation": "5166:20:111",
            "scope": 48572,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RarityPoolContractPair_$47280_storage_$",
              "typeString": "mapping(address => struct RareStakingRegistry.RarityPoolContractPair)"
            },
            "typeName": {
              "id": 47320,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 47317,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "5123:7:111",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "5115:42:111",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RarityPoolContractPair_$47280_storage_$",
                "typeString": "mapping(address => struct RareStakingRegistry.RarityPoolContractPair)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 47319,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 47318,
                  "name": "RarityPoolContractPair",
                  "nameLocations": [
                    "5134:22:111"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47280,
                  "src": "5134:22:111"
                },
                "referencedDeclaration": 47280,
                "src": "5134:22:111",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_RarityPoolContractPair_$47280_storage_ptr",
                  "typeString": "struct RareStakingRegistry.RarityPoolContractPair"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 47325,
            "nodeType": "VariableDeclaration",
            "src": "5255:52:111",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "rarityPoolToUser",
            "nameLocation": "5291:16:111",
            "scope": 48572,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 47324,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 47322,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "5263:7:111",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "5255:27:111",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 47323,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "5274:7:111",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 47329,
            "nodeType": "VariableDeclaration",
            "src": "5379:45:111",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "swapPools",
            "nameLocation": "5415:9:111",
            "scope": 48572,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 47328,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 47326,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "5387:7:111",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "5379:27:111",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 47327,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "5398:7:111",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 47333,
            "nodeType": "VariableDeclaration",
            "src": "5474:54:111",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "amountStakedByUser",
            "nameLocation": "5510:18:111",
            "scope": 48572,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 47332,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 47330,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "5482:7:111",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "5474:27:111",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 47331,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5493:7:111",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 47337,
            "nodeType": "VariableDeclaration",
            "src": "5583:56:111",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "amountStakedOnTarget",
            "nameLocation": "5619:20:111",
            "scope": 48572,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 47336,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 47334,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "5591:7:111",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "5583:27:111",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 47335,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5602:7:111",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 47340,
            "nodeType": "VariableDeclaration",
            "src": "5671:41:111",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "reverseRegistrar",
            "nameLocation": "5696:16:111",
            "scope": 48572,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ReverseRegistrar_$2841",
              "typeString": "contract ReverseRegistrar"
            },
            "typeName": {
              "id": 47339,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 47338,
                "name": "ReverseRegistrar",
                "nameLocations": [
                  "5671:16:111"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2841,
                "src": "5671:16:111"
              },
              "referencedDeclaration": 2841,
              "src": "5671:16:111",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ReverseRegistrar_$2841",
                "typeString": "contract ReverseRegistrar"
              }
            },
            "visibility": "private"
          },
          {
            "id": 47343,
            "nodeType": "VariableDeclaration",
            "src": "5740:30:111",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "resolver",
            "nameLocation": "5762:8:111",
            "scope": 48572,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_INameResolver_$3187",
              "typeString": "contract INameResolver"
            },
            "typeName": {
              "id": 47342,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 47341,
                "name": "INameResolver",
                "nameLocations": [
                  "5740:13:111"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3187,
                "src": "5740:13:111"
              },
              "referencedDeclaration": 3187,
              "src": "5740:13:111",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_INameResolver_$3187",
                "typeString": "contract INameResolver"
              }
            },
            "visibility": "private"
          },
          {
            "id": 47345,
            "nodeType": "VariableDeclaration",
            "src": "5834:28:111",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "periodLength",
            "nameLocation": "5850:12:111",
            "scope": 48572,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 47344,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "5834:7:111",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 47347,
            "nodeType": "VariableDeclaration",
            "src": "5901:38:111",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "deflationaryPercentage",
            "nameLocation": "5917:22:111",
            "scope": 48572,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 47346,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "5901:7:111",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 47349,
            "nodeType": "VariableDeclaration",
            "src": "5987:20:111",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "rare",
            "nameLocation": "6003:4:111",
            "scope": 48572,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 47348,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "5987:7:111",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 47351,
            "nodeType": "VariableDeclaration",
            "src": "6055:20:111",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "weth",
            "nameLocation": "6071:4:111",
            "scope": 48572,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 47350,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "6055:7:111",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 47353,
            "nodeType": "VariableDeclaration",
            "src": "6139:33:111",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "discountedPercent",
            "nameLocation": "6155:17:111",
            "scope": 48572,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 47352,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "6139:7:111",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 47355,
            "nodeType": "VariableDeclaration",
            "src": "6212:28:111",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "defaultPayee",
            "nameLocation": "6228:12:111",
            "scope": 48572,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 47354,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "6212:7:111",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 47362,
            "nodeType": "FunctionDefinition",
            "src": "6445:47:111",
            "nodes": [],
            "body": {
              "id": 47361,
              "nodeType": "Block",
              "src": "6459:33:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 47358,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31690,
                      "src": "6465:20:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 47359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6465:22:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47360,
                  "nodeType": "ExpressionStatement",
                  "src": "6465:22:111"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 47356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6456:2:111"
            },
            "returnParameters": {
              "id": 47357,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6459:0:111"
            },
            "scope": 48572,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 47519,
            "nodeType": "FunctionDefinition",
            "src": "6696:1385:111",
            "nodes": [],
            "body": {
              "id": 47518,
              "nodeType": "Block",
              "src": "6976:1105:111",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 47387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 47385,
                      "name": "_periodLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47370,
                      "src": "6986:13:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "333635",
                      "id": 47386,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7002:8:111",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_31536000_by_1",
                        "typeString": "int_const 31536000"
                      },
                      "value": "365"
                    },
                    "src": "6986:24:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47391,
                  "nodeType": "IfStatement",
                  "src": "6982:62:111",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 47388,
                        "name": "PeriodLengthBeyondLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47009,
                        "src": "7019:23:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 47389,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7019:25:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 47390,
                    "nodeType": "RevertStatement",
                    "src": "7012:32:111"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 47394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 47392,
                      "name": "_deflationaryPercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47372,
                      "src": "7054:23:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "3130305f3030",
                      "id": 47393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7080:6:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "100_00"
                    },
                    "src": "7054:32:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47398,
                  "nodeType": "IfStatement",
                  "src": "7050:68:111",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 47395,
                        "name": "PercentageBeyondLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47006,
                        "src": "7095:21:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 47396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7095:23:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 47397,
                    "nodeType": "RevertStatement",
                    "src": "7088:30:111"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 47401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 47399,
                      "name": "_discountedPercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47374,
                      "src": "7128:18:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "3130305f3030",
                      "id": 47400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7149:6:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "100_00"
                    },
                    "src": "7128:27:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47405,
                  "nodeType": "IfStatement",
                  "src": "7124:63:111",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 47402,
                        "name": "PercentageBeyondLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47006,
                        "src": "7164:21:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 47403,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7164:23:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 47404,
                    "nodeType": "RevertStatement",
                    "src": "7157:30:111"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 47411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 47406,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47364,
                      "src": "7197:6:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 47409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7215:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 47408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7207:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 47407,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7207:7:111",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 47410,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7207:10:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7197:20:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47415,
                  "nodeType": "IfStatement",
                  "src": "7193:57:111",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 47412,
                        "name": "ZeroAddressUnsupported",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47000,
                        "src": "7226:22:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 47413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7226:24:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 47414,
                    "nodeType": "RevertStatement",
                    "src": "7219:31:111"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 47421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 47416,
                      "name": "_reverseRegistrar",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47366,
                      "src": "7260:17:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 47419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7289:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 47418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7281:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 47417,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7281:7:111",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 47420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7281:10:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7260:31:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47425,
                  "nodeType": "IfStatement",
                  "src": "7256:68:111",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 47422,
                        "name": "ZeroAddressUnsupported",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47000,
                        "src": "7300:22:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 47423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7300:24:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 47424,
                    "nodeType": "RevertStatement",
                    "src": "7293:31:111"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 47431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 47426,
                      "name": "_resolver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47368,
                      "src": "7334:9:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 47429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7355:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 47428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7347:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 47427,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7347:7:111",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 47430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7347:10:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7334:23:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47435,
                  "nodeType": "IfStatement",
                  "src": "7330:60:111",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 47432,
                        "name": "ZeroAddressUnsupported",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47000,
                        "src": "7366:22:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 47433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7366:24:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 47434,
                    "nodeType": "RevertStatement",
                    "src": "7359:31:111"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 47441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 47436,
                      "name": "_rare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47376,
                      "src": "7400:5:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 47439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7417:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 47438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7409:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 47437,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7409:7:111",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 47440,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7409:10:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7400:19:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47445,
                  "nodeType": "IfStatement",
                  "src": "7396:56:111",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 47442,
                        "name": "ZeroAddressUnsupported",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47000,
                        "src": "7428:22:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 47443,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7428:24:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 47444,
                    "nodeType": "RevertStatement",
                    "src": "7421:31:111"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 47451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 47446,
                      "name": "_weth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47378,
                      "src": "7462:5:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 47449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7479:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 47448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7471:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 47447,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7471:7:111",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 47450,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7471:10:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7462:19:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47455,
                  "nodeType": "IfStatement",
                  "src": "7458:56:111",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 47452,
                        "name": "ZeroAddressUnsupported",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47000,
                        "src": "7490:22:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 47453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7490:24:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 47454,
                    "nodeType": "RevertStatement",
                    "src": "7483:31:111"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 47461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 47456,
                      "name": "_defaultPayee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47380,
                      "src": "7524:13:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 47459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7549:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 47458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7541:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 47457,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7541:7:111",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 47460,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7541:10:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7524:27:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47465,
                  "nodeType": "IfStatement",
                  "src": "7520:64:111",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 47462,
                        "name": "ZeroAddressUnsupported",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47000,
                        "src": "7560:22:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 47463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7560:24:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 47464,
                    "nodeType": "RevertStatement",
                    "src": "7553:31:111"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 47467,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30543,
                        "src": "7601:18:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 47468,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47364,
                        "src": "7621:6:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 47466,
                      "name": "_grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        30470
                      ],
                      "referencedDeclaration": 30470,
                      "src": "7590:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 47469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7590:38:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47470,
                  "nodeType": "ExpressionStatement",
                  "src": "7590:38:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 47472,
                        "name": "STAKING_STAT_SETTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47298,
                        "src": "7648:24:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 47473,
                        "name": "STAKING_STAT_SETTER_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47292,
                        "src": "7674:30:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 47471,
                      "name": "_setRoleAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30767,
                      "src": "7634:13:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 47474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7634:71:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47475,
                  "nodeType": "ExpressionStatement",
                  "src": "7634:71:111"
                },
                {
                  "expression": {
                    "id": 47480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47476,
                      "name": "reverseRegistrar",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47340,
                      "src": "7711:16:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ReverseRegistrar_$2841",
                        "typeString": "contract ReverseRegistrar"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 47478,
                          "name": "_reverseRegistrar",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47366,
                          "src": "7747:17:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 47477,
                        "name": "ReverseRegistrar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2841,
                        "src": "7730:16:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ReverseRegistrar_$2841_$",
                          "typeString": "type(contract ReverseRegistrar)"
                        }
                      },
                      "id": 47479,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7730:35:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ReverseRegistrar_$2841",
                        "typeString": "contract ReverseRegistrar"
                      }
                    },
                    "src": "7711:54:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ReverseRegistrar_$2841",
                      "typeString": "contract ReverseRegistrar"
                    }
                  },
                  "id": 47481,
                  "nodeType": "ExpressionStatement",
                  "src": "7711:54:111"
                },
                {
                  "expression": {
                    "id": 47486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47482,
                      "name": "resolver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47343,
                      "src": "7771:8:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_INameResolver_$3187",
                        "typeString": "contract INameResolver"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 47484,
                          "name": "_resolver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47368,
                          "src": "7796:9:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 47483,
                        "name": "INameResolver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3187,
                        "src": "7782:13:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_INameResolver_$3187_$",
                          "typeString": "type(contract INameResolver)"
                        }
                      },
                      "id": 47485,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7782:24:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_INameResolver_$3187",
                        "typeString": "contract INameResolver"
                      }
                    },
                    "src": "7771:35:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_INameResolver_$3187",
                      "typeString": "contract INameResolver"
                    }
                  },
                  "id": 47487,
                  "nodeType": "ExpressionStatement",
                  "src": "7771:35:111"
                },
                {
                  "expression": {
                    "id": 47490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47488,
                      "name": "deflationaryPercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47347,
                      "src": "7812:22:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 47489,
                      "name": "_deflationaryPercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47372,
                      "src": "7837:23:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7812:48:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 47491,
                  "nodeType": "ExpressionStatement",
                  "src": "7812:48:111"
                },
                {
                  "expression": {
                    "id": 47494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47492,
                      "name": "periodLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47345,
                      "src": "7866:12:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 47493,
                      "name": "_periodLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47370,
                      "src": "7881:13:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7866:28:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 47495,
                  "nodeType": "ExpressionStatement",
                  "src": "7866:28:111"
                },
                {
                  "expression": {
                    "id": 47498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47496,
                      "name": "rare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47349,
                      "src": "7900:4:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 47497,
                      "name": "_rare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47376,
                      "src": "7907:5:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7900:12:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 47499,
                  "nodeType": "ExpressionStatement",
                  "src": "7900:12:111"
                },
                {
                  "expression": {
                    "id": 47502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47500,
                      "name": "weth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47351,
                      "src": "7918:4:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 47501,
                      "name": "_weth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47378,
                      "src": "7925:5:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7918:12:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 47503,
                  "nodeType": "ExpressionStatement",
                  "src": "7918:12:111"
                },
                {
                  "expression": {
                    "id": 47506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47504,
                      "name": "discountedPercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47353,
                      "src": "7936:17:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 47505,
                      "name": "_discountedPercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47374,
                      "src": "7956:18:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7936:38:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 47507,
                  "nodeType": "ExpressionStatement",
                  "src": "7936:38:111"
                },
                {
                  "expression": {
                    "id": 47510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47508,
                      "name": "defaultPayee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47355,
                      "src": "7980:12:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 47509,
                      "name": "_defaultPayee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47380,
                      "src": "7995:13:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7980:28:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 47511,
                  "nodeType": "ExpressionStatement",
                  "src": "7980:28:111"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 47512,
                      "name": "__AccessControlEnumerable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30374,
                      "src": "8014:30:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 47513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8014:32:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47514,
                  "nodeType": "ExpressionStatement",
                  "src": "8014:32:111"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 47515,
                      "name": "__UUPSUpgradeable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31727,
                      "src": "8052:22:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 47516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8052:24:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47517,
                  "nodeType": "ExpressionStatement",
                  "src": "8052:24:111"
                }
              ]
            },
            "functionSelector": "bb0544a1",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 47383,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 47382,
                  "name": "initializer",
                  "nameLocations": [
                    "6964:11:111"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31611,
                  "src": "6964:11:111"
                },
                "nodeType": "ModifierInvocation",
                "src": "6964:11:111"
              }
            ],
            "name": "initialize",
            "nameLocation": "6705:10:111",
            "parameters": {
              "id": 47381,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47364,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "6729:6:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47519,
                  "src": "6721:14:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47363,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6721:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47366,
                  "mutability": "mutable",
                  "name": "_reverseRegistrar",
                  "nameLocation": "6749:17:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47519,
                  "src": "6741:25:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47365,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6741:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47368,
                  "mutability": "mutable",
                  "name": "_resolver",
                  "nameLocation": "6780:9:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47519,
                  "src": "6772:17:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47367,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6772:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47370,
                  "mutability": "mutable",
                  "name": "_periodLength",
                  "nameLocation": "6803:13:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47519,
                  "src": "6795:21:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47369,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6795:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47372,
                  "mutability": "mutable",
                  "name": "_deflationaryPercentage",
                  "nameLocation": "6830:23:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47519,
                  "src": "6822:31:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47371,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6822:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47374,
                  "mutability": "mutable",
                  "name": "_discountedPercent",
                  "nameLocation": "6867:18:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47519,
                  "src": "6859:26:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47373,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6859:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47376,
                  "mutability": "mutable",
                  "name": "_rare",
                  "nameLocation": "6899:5:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47519,
                  "src": "6891:13:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47375,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6891:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47378,
                  "mutability": "mutable",
                  "name": "_weth",
                  "nameLocation": "6918:5:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47519,
                  "src": "6910:13:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47377,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6910:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47380,
                  "mutability": "mutable",
                  "name": "_defaultPayee",
                  "nameLocation": "6937:13:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47519,
                  "src": "6929:21:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47379,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6929:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6715:239:111"
            },
            "returnParameters": {
              "id": 47384,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6976:0:111"
            },
            "scope": 48572,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47547,
            "nodeType": "FunctionDefinition",
            "src": "8328:225:111",
            "nodes": [],
            "body": {
              "id": 47546,
              "nodeType": "Block",
              "src": "8403:150:111",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 47531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "8413:40:111",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 47527,
                          "name": "DEFAULT_ADMIN_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30543,
                          "src": "8422:18:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "expression": {
                            "id": 47528,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "8442:3:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 47529,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8446:6:111",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8442:10:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 47526,
                        "name": "hasRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30595,
                        "src": "8414:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                          "typeString": "function (bytes32,address) view returns (bool)"
                        }
                      },
                      "id": 47530,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8414:39:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47535,
                  "nodeType": "IfStatement",
                  "src": "8409:67:111",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 47532,
                        "name": "Unauthorized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46991,
                        "src": "8462:12:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 47533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8462:14:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 47534,
                    "nodeType": "RevertStatement",
                    "src": "8455:21:111"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 47541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 47536,
                      "name": "_implementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47522,
                      "src": "8486:15:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 47539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8513:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 47538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8505:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 47537,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8505:7:111",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 47540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8505:10:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8486:29:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47545,
                  "nodeType": "IfStatement",
                  "src": "8482:66:111",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 47542,
                        "name": "ZeroAddressUnsupported",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47000,
                        "src": "8524:22:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 47543,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8524:24:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 47544,
                    "nodeType": "RevertStatement",
                    "src": "8517:31:111"
                  }
                }
              ]
            },
            "baseFunctions": [
              31839
            ],
            "documentation": {
              "id": 47520,
              "nodeType": "StructuredDocumentation",
              "src": "8294:31:111",
              "text": "@inheritdoc UUPSUpgradeable"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_authorizeUpgrade",
            "nameLocation": "8337:17:111",
            "overrides": {
              "id": 47524,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8394:8:111"
            },
            "parameters": {
              "id": 47523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47522,
                  "mutability": "mutable",
                  "name": "_implementation",
                  "nameLocation": "8363:15:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47547,
                  "src": "8355:23:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47521,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8355:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8354:25:111"
            },
            "returnParameters": {
              "id": 47525,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8403:0:111"
            },
            "scope": 48572,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 47579,
            "nodeType": "FunctionDefinition",
            "src": "8766:284:111",
            "nodes": [],
            "body": {
              "id": 47578,
              "nodeType": "Block",
              "src": "8896:154:111",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 47565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "id": 47559,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 47557,
                        "name": "role",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47549,
                        "src": "8906:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 47558,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30543,
                        "src": "8914:18:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "src": "8906:26:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 47564,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 47561,
                            "name": "role",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47549,
                            "src": "8955:4:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 47560,
                          "name": "getRoleMemberCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30446,
                          "src": "8936:18:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_uint256_$",
                            "typeString": "function (bytes32) view returns (uint256)"
                          }
                        },
                        "id": 47562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8936:24:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 47563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8964:1:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "8936:29:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "8906:59:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47570,
                  "nodeType": "IfStatement",
                  "src": "8902:104:111",
                  "trueBody": {
                    "id": 47569,
                    "nodeType": "Block",
                    "src": "8967:39:111",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 47566,
                            "name": "RenouncingAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47012,
                            "src": "8982:15:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 47567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8982:17:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 47568,
                        "nodeType": "RevertStatement",
                        "src": "8975:24:111"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 47574,
                        "name": "role",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47549,
                        "src": "9031:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 47575,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47551,
                        "src": "9037:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 47571,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "9012:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_RareStakingRegistry_$48572_$",
                          "typeString": "type(contract super RareStakingRegistry)"
                        }
                      },
                      "id": 47573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9018:12:111",
                      "memberName": "renounceRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30725,
                      "src": "9012:18:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 47576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9012:33:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47577,
                  "nodeType": "ExpressionStatement",
                  "src": "9012:33:111"
                }
              ]
            },
            "baseFunctions": [
              30725,
              30933
            ],
            "functionSelector": "36568abe",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "renounceRole",
            "nameLocation": "8775:12:111",
            "overrides": {
              "id": 47555,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 47553,
                  "name": "IAccessControlUpgradeable",
                  "nameLocations": [
                    "8843:25:111"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30934,
                  "src": "8843:25:111"
                },
                {
                  "id": 47554,
                  "name": "AccessControlUpgradeable",
                  "nameLocations": [
                    "8870:24:111"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30836,
                  "src": "8870:24:111"
                }
              ],
              "src": "8834:61:111"
            },
            "parameters": {
              "id": 47552,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47549,
                  "mutability": "mutable",
                  "name": "role",
                  "nameLocation": "8796:4:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47579,
                  "src": "8788:12:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 47548,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8788:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47551,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8810:7:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47579,
                  "src": "8802:15:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47550,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8802:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8787:31:111"
            },
            "returnParameters": {
              "id": 47556,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8896:0:111"
            },
            "scope": 48572,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 47658,
            "nodeType": "FunctionDefinition",
            "src": "9145:646:111",
            "nodes": [],
            "body": {
              "id": 47657,
              "nodeType": "Block",
              "src": "9251:540:111",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 47594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "9261:46:111",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 47590,
                          "name": "STAKING_INFO_SETTER_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47286,
                          "src": "9270:24:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "expression": {
                            "id": 47591,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "9296:3:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 47592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9300:6:111",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "9296:10:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 47589,
                        "name": "hasRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30595,
                        "src": "9262:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                          "typeString": "function (bytes32,address) view returns (bool)"
                        }
                      },
                      "id": 47593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9262:45:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47598,
                  "nodeType": "IfStatement",
                  "src": "9257:73:111",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 47595,
                        "name": "Unauthorized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46991,
                        "src": "9316:12:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 47596,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9316:14:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 47597,
                    "nodeType": "RevertStatement",
                    "src": "9309:21:111"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 47604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 47599,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47582,
                      "src": "9340:5:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 47602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9357:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 47601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9349:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 47600,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9349:7:111",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 47603,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9349:10:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9340:19:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47608,
                  "nodeType": "IfStatement",
                  "src": "9336:56:111",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 47605,
                        "name": "ZeroAddressUnsupported",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47000,
                        "src": "9368:22:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 47606,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9368:24:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 47607,
                    "nodeType": "RevertStatement",
                    "src": "9361:31:111"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 47614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 47609,
                      "name": "_stakingAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47584,
                      "src": "9402:15:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 47612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9429:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 47611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9421:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 47610,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9421:7:111",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 47613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9421:10:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9402:29:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47618,
                  "nodeType": "IfStatement",
                  "src": "9398:66:111",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 47615,
                        "name": "ZeroAddressUnsupported",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47000,
                        "src": "9440:22:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 47616,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9440:24:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 47617,
                    "nodeType": "RevertStatement",
                    "src": "9433:31:111"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 47624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 47619,
                      "name": "_rewardSwapAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47586,
                      "src": "9474:18:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 47622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9504:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 47621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9496:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 47620,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9496:7:111",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 47623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9496:10:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9474:32:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47628,
                  "nodeType": "IfStatement",
                  "src": "9470:69:111",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 47625,
                        "name": "ZeroAddressUnsupported",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47000,
                        "src": "9515:22:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 47626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9515:24:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 47627,
                    "nodeType": "RevertStatement",
                    "src": "9508:31:111"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 47637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 47629,
                          "name": "userToRarityPoolPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47321,
                          "src": "9549:20:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RarityPoolContractPair_$47280_storage_$",
                            "typeString": "mapping(address => struct RareStakingRegistry.RarityPoolContractPair storage ref)"
                          }
                        },
                        "id": 47631,
                        "indexExpression": {
                          "id": 47630,
                          "name": "_user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47582,
                          "src": "9570:5:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9549:27:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RarityPoolContractPair_$47280_storage",
                          "typeString": "struct RareStakingRegistry.RarityPoolContractPair storage ref"
                        }
                      },
                      "id": 47632,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9577:14:111",
                      "memberName": "stakingAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47277,
                      "src": "9549:42:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 47635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9603:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 47634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9595:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 47633,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9595:7:111",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 47636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9595:10:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9549:56:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47641,
                  "nodeType": "IfStatement",
                  "src": "9545:99:111",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 47638,
                        "name": "StakingContractAlreadyExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46997,
                        "src": "9614:28:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 47639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9614:30:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 47640,
                    "nodeType": "RevertStatement",
                    "src": "9607:37:111"
                  }
                },
                {
                  "expression": {
                    "id": 47649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 47642,
                        "name": "userToRarityPoolPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47321,
                        "src": "9650:20:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RarityPoolContractPair_$47280_storage_$",
                          "typeString": "mapping(address => struct RareStakingRegistry.RarityPoolContractPair storage ref)"
                        }
                      },
                      "id": 47644,
                      "indexExpression": {
                        "id": 47643,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47582,
                        "src": "9671:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9650:27:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RarityPoolContractPair_$47280_storage",
                        "typeString": "struct RareStakingRegistry.RarityPoolContractPair storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 47646,
                          "name": "_stakingAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47584,
                          "src": "9703:15:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 47647,
                          "name": "_rewardSwapAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47586,
                          "src": "9720:18:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 47645,
                        "name": "RarityPoolContractPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47280,
                        "src": "9680:22:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_RarityPoolContractPair_$47280_storage_ptr_$",
                          "typeString": "type(struct RareStakingRegistry.RarityPoolContractPair storage pointer)"
                        }
                      },
                      "id": 47648,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9680:59:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RarityPoolContractPair_$47280_memory_ptr",
                        "typeString": "struct RareStakingRegistry.RarityPoolContractPair memory"
                      }
                    },
                    "src": "9650:89:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RarityPoolContractPair_$47280_storage",
                      "typeString": "struct RareStakingRegistry.RarityPoolContractPair storage ref"
                    }
                  },
                  "id": 47650,
                  "nodeType": "ExpressionStatement",
                  "src": "9650:89:111"
                },
                {
                  "expression": {
                    "id": 47655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 47651,
                        "name": "rarityPoolToUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47325,
                        "src": "9745:16:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 47653,
                      "indexExpression": {
                        "id": 47652,
                        "name": "_stakingAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47584,
                        "src": "9762:15:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9745:33:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 47654,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47582,
                      "src": "9781:5:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9745:41:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 47656,
                  "nodeType": "ExpressionStatement",
                  "src": "9745:41:111"
                }
              ]
            },
            "baseFunctions": [
              47042
            ],
            "documentation": {
              "id": 47580,
              "nodeType": "StructuredDocumentation",
              "src": "9054:88:111",
              "text": "@dev Requires the caller to have the {STAKING_INFO_SETTER_ROLE} access control role."
            },
            "functionSelector": "76a250a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setStakingAddresses",
            "nameLocation": "9154:19:111",
            "parameters": {
              "id": 47587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47582,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "9182:5:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47658,
                  "src": "9174:13:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47581,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9174:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47584,
                  "mutability": "mutable",
                  "name": "_stakingAddress",
                  "nameLocation": "9197:15:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47658,
                  "src": "9189:23:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47583,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9189:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47586,
                  "mutability": "mutable",
                  "name": "_rewardSwapAddress",
                  "nameLocation": "9222:18:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47658,
                  "src": "9214:26:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47585,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9214:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9173:68:111"
            },
            "returnParameters": {
              "id": 47588,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9251:0:111"
            },
            "scope": 48572,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47691,
            "nodeType": "FunctionDefinition",
            "src": "9925:268:111",
            "nodes": [],
            "body": {
              "id": 47690,
              "nodeType": "Block",
              "src": "10017:176:111",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 47673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "10027:46:111",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 47669,
                          "name": "STAKING_STAT_SETTER_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47298,
                          "src": "10036:24:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "expression": {
                            "id": 47670,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "10062:3:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 47671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10066:6:111",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "10062:10:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 47668,
                        "name": "hasRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30595,
                        "src": "10028:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                          "typeString": "function (bytes32,address) view returns (bool)"
                        }
                      },
                      "id": 47672,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10028:45:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47677,
                  "nodeType": "IfStatement",
                  "src": "10023:73:111",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 47674,
                        "name": "Unauthorized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46991,
                        "src": "10082:12:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 47675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10082:14:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 47676,
                    "nodeType": "RevertStatement",
                    "src": "10075:21:111"
                  }
                },
                {
                  "expression": {
                    "id": 47682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 47678,
                        "name": "amountStakedByUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47333,
                        "src": "10102:18:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 47680,
                      "indexExpression": {
                        "id": 47679,
                        "name": "_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47661,
                        "src": "10121:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10102:27:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 47681,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47665,
                      "src": "10133:7:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10102:38:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 47683,
                  "nodeType": "ExpressionStatement",
                  "src": "10102:38:111"
                },
                {
                  "expression": {
                    "id": 47688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 47684,
                        "name": "amountStakedOnTarget",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47337,
                        "src": "10146:20:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 47686,
                      "indexExpression": {
                        "id": 47685,
                        "name": "_stakedOn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47663,
                        "src": "10167:9:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10146:31:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 47687,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47665,
                      "src": "10181:7:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10146:42:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 47689,
                  "nodeType": "ExpressionStatement",
                  "src": "10146:42:111"
                }
              ]
            },
            "baseFunctions": [
              47022
            ],
            "documentation": {
              "id": 47659,
              "nodeType": "StructuredDocumentation",
              "src": "9795:127:111",
              "text": "@inheritdoc IRareStakingRegistry\n @dev Requires the caller to have the {STAKING_STAT_SETTER_ROLE} access control role."
            },
            "functionSelector": "2608ff35",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increaseAmountStaked",
            "nameLocation": "9934:20:111",
            "parameters": {
              "id": 47666,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47661,
                  "mutability": "mutable",
                  "name": "_staker",
                  "nameLocation": "9963:7:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47691,
                  "src": "9955:15:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47660,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9955:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47663,
                  "mutability": "mutable",
                  "name": "_stakedOn",
                  "nameLocation": "9980:9:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47691,
                  "src": "9972:17:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47662,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9972:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47665,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "9999:7:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47691,
                  "src": "9991:15:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47664,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9991:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9954:53:111"
            },
            "returnParameters": {
              "id": 47667,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10017:0:111"
            },
            "scope": 48572,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47724,
            "nodeType": "FunctionDefinition",
            "src": "10327:268:111",
            "nodes": [],
            "body": {
              "id": 47723,
              "nodeType": "Block",
              "src": "10419:176:111",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 47706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "10429:46:111",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 47702,
                          "name": "STAKING_STAT_SETTER_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47298,
                          "src": "10438:24:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "expression": {
                            "id": 47703,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "10464:3:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 47704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10468:6:111",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "10464:10:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 47701,
                        "name": "hasRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30595,
                        "src": "10430:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                          "typeString": "function (bytes32,address) view returns (bool)"
                        }
                      },
                      "id": 47705,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10430:45:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47710,
                  "nodeType": "IfStatement",
                  "src": "10425:73:111",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 47707,
                        "name": "Unauthorized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46991,
                        "src": "10484:12:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 47708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10484:14:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 47709,
                    "nodeType": "RevertStatement",
                    "src": "10477:21:111"
                  }
                },
                {
                  "expression": {
                    "id": 47715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 47711,
                        "name": "amountStakedByUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47333,
                        "src": "10504:18:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 47713,
                      "indexExpression": {
                        "id": 47712,
                        "name": "_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47694,
                        "src": "10523:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10504:27:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 47714,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47698,
                      "src": "10535:7:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10504:38:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 47716,
                  "nodeType": "ExpressionStatement",
                  "src": "10504:38:111"
                },
                {
                  "expression": {
                    "id": 47721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 47717,
                        "name": "amountStakedOnTarget",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47337,
                        "src": "10548:20:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 47719,
                      "indexExpression": {
                        "id": 47718,
                        "name": "_stakedOn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47696,
                        "src": "10569:9:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10548:31:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 47720,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47698,
                      "src": "10583:7:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10548:42:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 47722,
                  "nodeType": "ExpressionStatement",
                  "src": "10548:42:111"
                }
              ]
            },
            "baseFunctions": [
              47032
            ],
            "documentation": {
              "id": 47692,
              "nodeType": "StructuredDocumentation",
              "src": "10197:127:111",
              "text": "@inheritdoc IRareStakingRegistry\n @dev Requires the caller to have the {STAKING_STAT_SETTER_ROLE} access control role."
            },
            "functionSelector": "cac7c65c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseAmountStaked",
            "nameLocation": "10336:20:111",
            "parameters": {
              "id": 47699,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47694,
                  "mutability": "mutable",
                  "name": "_staker",
                  "nameLocation": "10365:7:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47724,
                  "src": "10357:15:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47693,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10357:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47696,
                  "mutability": "mutable",
                  "name": "_stakedOn",
                  "nameLocation": "10382:9:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47724,
                  "src": "10374:17:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47695,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10374:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47698,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "10401:7:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47724,
                  "src": "10393:15:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47697,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10393:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10356:53:111"
            },
            "returnParameters": {
              "id": 47700,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10419:0:111"
            },
            "scope": 48572,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47759,
            "nodeType": "FunctionDefinition",
            "src": "10731:264:111",
            "nodes": [],
            "body": {
              "id": 47758,
              "nodeType": "Block",
              "src": "10781:214:111",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 47735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 47730,
                      "name": "_payee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47727,
                      "src": "10791:6:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 47733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10809:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 47732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "10801:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 47731,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10801:7:111",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 47734,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10801:10:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10791:20:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47739,
                  "nodeType": "IfStatement",
                  "src": "10787:57:111",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 47736,
                        "name": "ZeroAddressUnsupported",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47000,
                        "src": "10820:22:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 47737,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10820:24:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 47738,
                    "nodeType": "RevertStatement",
                    "src": "10813:31:111"
                  }
                },
                {
                  "condition": {
                    "id": 47745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "10854:48:111",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 47741,
                          "name": "STAKING_CONFIG_SETTER_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47304,
                          "src": "10863:26:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "expression": {
                            "id": 47742,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "10891:3:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 47743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10895:6:111",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "10891:10:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 47740,
                        "name": "hasRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30595,
                        "src": "10855:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                          "typeString": "function (bytes32,address) view returns (bool)"
                        }
                      },
                      "id": 47744,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10855:47:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47749,
                  "nodeType": "IfStatement",
                  "src": "10850:75:111",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 47746,
                        "name": "Unauthorized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46991,
                        "src": "10911:12:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 47747,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10911:14:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 47748,
                    "nodeType": "RevertStatement",
                    "src": "10904:21:111"
                  }
                },
                {
                  "expression": {
                    "id": 47752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47750,
                      "name": "defaultPayee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47355,
                      "src": "10931:12:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 47751,
                      "name": "_payee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47727,
                      "src": "10946:6:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10931:21:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 47753,
                  "nodeType": "ExpressionStatement",
                  "src": "10931:21:111"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 47755,
                        "name": "_payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47727,
                        "src": "10983:6:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 47754,
                      "name": "DefaultPayeeUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46956,
                      "src": "10963:19:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 47756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10963:27:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47757,
                  "nodeType": "EmitStatement",
                  "src": "10958:32:111"
                }
              ]
            },
            "baseFunctions": [
              47048
            ],
            "documentation": {
              "id": 47725,
              "nodeType": "StructuredDocumentation",
              "src": "10599:129:111",
              "text": "@inheritdoc IRareStakingRegistry\n @dev Requires the caller to have the {STAKING_CONFIG_SETTER_ROLE} access control role."
            },
            "functionSelector": "99247be7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setDefaultPayee",
            "nameLocation": "10740:15:111",
            "parameters": {
              "id": 47728,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47727,
                  "mutability": "mutable",
                  "name": "_payee",
                  "nameLocation": "10764:6:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47759,
                  "src": "10756:14:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47726,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10756:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10755:16:111"
            },
            "returnParameters": {
              "id": 47729,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10781:0:111"
            },
            "scope": 48572,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47791,
            "nodeType": "FunctionDefinition",
            "src": "11131:308:111",
            "nodes": [],
            "body": {
              "id": 47790,
              "nodeType": "Block",
              "src": "11196:243:111",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 47767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 47765,
                      "name": "_percentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47762,
                      "src": "11206:11:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "3130305f3030",
                      "id": 47766,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11220:6:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "100_00"
                    },
                    "src": "11206:20:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47771,
                  "nodeType": "IfStatement",
                  "src": "11202:56:111",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 47768,
                        "name": "PercentageBeyondLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47006,
                        "src": "11235:21:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 47769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11235:23:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 47770,
                    "nodeType": "RevertStatement",
                    "src": "11228:30:111"
                  }
                },
                {
                  "condition": {
                    "id": 47777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "11268:48:111",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 47773,
                          "name": "STAKING_CONFIG_SETTER_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47304,
                          "src": "11277:26:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "expression": {
                            "id": 47774,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "11305:3:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 47775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11309:6:111",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "11305:10:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 47772,
                        "name": "hasRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30595,
                        "src": "11269:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                          "typeString": "function (bytes32,address) view returns (bool)"
                        }
                      },
                      "id": 47776,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11269:47:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47781,
                  "nodeType": "IfStatement",
                  "src": "11264:75:111",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 47778,
                        "name": "Unauthorized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46991,
                        "src": "11325:12:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 47779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11325:14:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 47780,
                    "nodeType": "RevertStatement",
                    "src": "11318:21:111"
                  }
                },
                {
                  "expression": {
                    "id": 47784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47782,
                      "name": "deflationaryPercentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47347,
                      "src": "11345:22:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 47783,
                      "name": "_percentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47762,
                      "src": "11370:11:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11345:36:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 47785,
                  "nodeType": "ExpressionStatement",
                  "src": "11345:36:111"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 47787,
                        "name": "_percentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47762,
                        "src": "11422:11:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 47786,
                      "name": "DeflationaryPercentageUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46961,
                      "src": "11392:29:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 47788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11392:42:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47789,
                  "nodeType": "EmitStatement",
                  "src": "11387:47:111"
                }
              ]
            },
            "baseFunctions": [
              47060
            ],
            "documentation": {
              "id": 47760,
              "nodeType": "StructuredDocumentation",
              "src": "10999:129:111",
              "text": "@inheritdoc IRareStakingRegistry\n @dev Requires the caller to have the {STAKING_CONFIG_SETTER_ROLE} access control role."
            },
            "functionSelector": "cb8af2b5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setDeflationaryPercentage",
            "nameLocation": "11140:25:111",
            "parameters": {
              "id": 47763,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47762,
                  "mutability": "mutable",
                  "name": "_percentage",
                  "nameLocation": "11174:11:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47791,
                  "src": "11166:19:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47761,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11166:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11165:21:111"
            },
            "returnParameters": {
              "id": 47764,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11196:0:111"
            },
            "scope": 48572,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47823,
            "nodeType": "FunctionDefinition",
            "src": "11575:295:111",
            "nodes": [],
            "body": {
              "id": 47822,
              "nodeType": "Block",
              "src": "11636:234:111",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 47799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 47797,
                      "name": "_percentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47794,
                      "src": "11646:11:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "3130305f3030",
                      "id": 47798,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11660:6:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "100_00"
                    },
                    "src": "11646:20:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47803,
                  "nodeType": "IfStatement",
                  "src": "11642:56:111",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 47800,
                        "name": "PercentageBeyondLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47006,
                        "src": "11675:21:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 47801,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11675:23:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 47802,
                    "nodeType": "RevertStatement",
                    "src": "11668:30:111"
                  }
                },
                {
                  "condition": {
                    "id": 47809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "11708:48:111",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 47805,
                          "name": "STAKING_CONFIG_SETTER_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47304,
                          "src": "11717:26:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "expression": {
                            "id": 47806,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "11745:3:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 47807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11749:6:111",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "11745:10:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 47804,
                        "name": "hasRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30595,
                        "src": "11709:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                          "typeString": "function (bytes32,address) view returns (bool)"
                        }
                      },
                      "id": 47808,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11709:47:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47813,
                  "nodeType": "IfStatement",
                  "src": "11704:75:111",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 47810,
                        "name": "Unauthorized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46991,
                        "src": "11765:12:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 47811,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11765:14:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 47812,
                    "nodeType": "RevertStatement",
                    "src": "11758:21:111"
                  }
                },
                {
                  "expression": {
                    "id": 47816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47814,
                      "name": "discountedPercent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47353,
                      "src": "11785:17:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 47815,
                      "name": "_percentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47794,
                      "src": "11805:11:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11785:31:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 47817,
                  "nodeType": "ExpressionStatement",
                  "src": "11785:31:111"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 47819,
                        "name": "_percentage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47794,
                        "src": "11853:11:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 47818,
                      "name": "DiscountPercentageUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46966,
                      "src": "11827:25:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 47820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11827:38:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47821,
                  "nodeType": "EmitStatement",
                  "src": "11822:43:111"
                }
              ]
            },
            "baseFunctions": [
              47054
            ],
            "documentation": {
              "id": 47792,
              "nodeType": "StructuredDocumentation",
              "src": "11443:129:111",
              "text": "@inheritdoc IRareStakingRegistry\n @dev Requires the caller to have the {STAKING_CONFIG_SETTER_ROLE} access control role."
            },
            "functionSelector": "b3428d15",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setDiscountPercentage",
            "nameLocation": "11584:21:111",
            "parameters": {
              "id": 47795,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47794,
                  "mutability": "mutable",
                  "name": "_percentage",
                  "nameLocation": "11614:11:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47823,
                  "src": "11606:19:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47793,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11606:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11605:21:111"
            },
            "returnParameters": {
              "id": 47796,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11636:0:111"
            },
            "scope": 48572,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47855,
            "nodeType": "FunctionDefinition",
            "src": "12006:290:111",
            "nodes": [],
            "body": {
              "id": 47854,
              "nodeType": "Block",
              "src": "12063:233:111",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 47831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 47829,
                      "name": "_periodLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47826,
                      "src": "12073:13:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "333635",
                      "id": 47830,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12089:8:111",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_31536000_by_1",
                        "typeString": "int_const 31536000"
                      },
                      "value": "365"
                    },
                    "src": "12073:24:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47835,
                  "nodeType": "IfStatement",
                  "src": "12069:62:111",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 47832,
                        "name": "PeriodLengthBeyondLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47009,
                        "src": "12106:23:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 47833,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12106:25:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 47834,
                    "nodeType": "RevertStatement",
                    "src": "12099:32:111"
                  }
                },
                {
                  "condition": {
                    "id": 47841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "12141:48:111",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 47837,
                          "name": "STAKING_CONFIG_SETTER_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47304,
                          "src": "12150:26:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "expression": {
                            "id": 47838,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "12178:3:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 47839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12182:6:111",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "12178:10:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 47836,
                        "name": "hasRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30595,
                        "src": "12142:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                          "typeString": "function (bytes32,address) view returns (bool)"
                        }
                      },
                      "id": 47840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12142:47:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47845,
                  "nodeType": "IfStatement",
                  "src": "12137:75:111",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 47842,
                        "name": "Unauthorized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46991,
                        "src": "12198:12:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 47843,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12198:14:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 47844,
                    "nodeType": "RevertStatement",
                    "src": "12191:21:111"
                  }
                },
                {
                  "expression": {
                    "id": 47848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47846,
                      "name": "periodLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47345,
                      "src": "12218:12:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 47847,
                      "name": "_periodLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47826,
                      "src": "12233:13:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12218:28:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 47849,
                  "nodeType": "ExpressionStatement",
                  "src": "12218:28:111"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 47851,
                        "name": "_periodLength",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47826,
                        "src": "12277:13:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 47850,
                      "name": "PeriodLengthUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46971,
                      "src": "12257:19:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 47852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12257:34:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47853,
                  "nodeType": "EmitStatement",
                  "src": "12252:39:111"
                }
              ]
            },
            "baseFunctions": [
              47066
            ],
            "documentation": {
              "id": 47824,
              "nodeType": "StructuredDocumentation",
              "src": "11874:129:111",
              "text": "@inheritdoc IRareStakingRegistry\n @dev Requires the caller to have the {STAKING_CONFIG_SETTER_ROLE} access control role."
            },
            "functionSelector": "1c5633d7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setPeriodLength",
            "nameLocation": "12015:15:111",
            "parameters": {
              "id": 47827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47826,
                  "mutability": "mutable",
                  "name": "_periodLength",
                  "nameLocation": "12039:13:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47855,
                  "src": "12031:21:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47825,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12031:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12030:23:111"
            },
            "returnParameters": {
              "id": 47828,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12063:0:111"
            },
            "scope": 48572,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47892,
            "nodeType": "FunctionDefinition",
            "src": "12421:327:111",
            "nodes": [],
            "body": {
              "id": 47891,
              "nodeType": "Block",
              "src": "12486:262:111",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 47866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 47861,
                      "name": "_reverseRegistrar",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47858,
                      "src": "12496:17:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 47864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12525:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 47863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "12517:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 47862,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12517:7:111",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 47865,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12517:10:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12496:31:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47870,
                  "nodeType": "IfStatement",
                  "src": "12492:68:111",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 47867,
                        "name": "ZeroAddressUnsupported",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47000,
                        "src": "12536:22:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 47868,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12536:24:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 47869,
                    "nodeType": "RevertStatement",
                    "src": "12529:31:111"
                  }
                },
                {
                  "condition": {
                    "id": 47876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "12570:37:111",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 47872,
                          "name": "ENS_SETTER_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47310,
                          "src": "12579:15:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "expression": {
                            "id": 47873,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "12596:3:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 47874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12600:6:111",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "12596:10:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 47871,
                        "name": "hasRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30595,
                        "src": "12571:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                          "typeString": "function (bytes32,address) view returns (bool)"
                        }
                      },
                      "id": 47875,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12571:36:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47880,
                  "nodeType": "IfStatement",
                  "src": "12566:64:111",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 47877,
                        "name": "Unauthorized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46991,
                        "src": "12616:12:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 47878,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12616:14:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 47879,
                    "nodeType": "RevertStatement",
                    "src": "12609:21:111"
                  }
                },
                {
                  "expression": {
                    "id": 47885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47881,
                      "name": "reverseRegistrar",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47340,
                      "src": "12636:16:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ReverseRegistrar_$2841",
                        "typeString": "contract ReverseRegistrar"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 47883,
                          "name": "_reverseRegistrar",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47858,
                          "src": "12672:17:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 47882,
                        "name": "ReverseRegistrar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2841,
                        "src": "12655:16:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ReverseRegistrar_$2841_$",
                          "typeString": "type(contract ReverseRegistrar)"
                        }
                      },
                      "id": 47884,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12655:35:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ReverseRegistrar_$2841",
                        "typeString": "contract ReverseRegistrar"
                      }
                    },
                    "src": "12636:54:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ReverseRegistrar_$2841",
                      "typeString": "contract ReverseRegistrar"
                    }
                  },
                  "id": 47886,
                  "nodeType": "ExpressionStatement",
                  "src": "12636:54:111"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 47888,
                        "name": "_reverseRegistrar",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47858,
                        "src": "12725:17:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 47887,
                      "name": "ReverseRegistrarUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46976,
                      "src": "12701:23:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 47889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12701:42:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47890,
                  "nodeType": "EmitStatement",
                  "src": "12696:47:111"
                }
              ]
            },
            "baseFunctions": [
              47072
            ],
            "documentation": {
              "id": 47856,
              "nodeType": "StructuredDocumentation",
              "src": "12300:118:111",
              "text": "@inheritdoc IRareStakingRegistry\n @dev Requires the caller to have the {ENS_SETTER_ROLE} access control role."
            },
            "functionSelector": "557499ba",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setReverseRegistrar",
            "nameLocation": "12430:19:111",
            "parameters": {
              "id": 47859,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47858,
                  "mutability": "mutable",
                  "name": "_reverseRegistrar",
                  "nameLocation": "12458:17:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47892,
                  "src": "12450:25:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47857,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12450:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12449:27:111"
            },
            "returnParameters": {
              "id": 47860,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12486:0:111"
            },
            "scope": 48572,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47929,
            "nodeType": "FunctionDefinition",
            "src": "12873:268:111",
            "nodes": [],
            "body": {
              "id": 47928,
              "nodeType": "Block",
              "src": "12922:219:111",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 47903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 47898,
                      "name": "_resolver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47895,
                      "src": "12932:9:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 47901,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12953:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 47900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "12945:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 47899,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12945:7:111",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 47902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12945:10:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12932:23:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47907,
                  "nodeType": "IfStatement",
                  "src": "12928:60:111",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 47904,
                        "name": "ZeroAddressUnsupported",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47000,
                        "src": "12964:22:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 47905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12964:24:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 47906,
                    "nodeType": "RevertStatement",
                    "src": "12957:31:111"
                  }
                },
                {
                  "condition": {
                    "id": 47913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "12998:37:111",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 47909,
                          "name": "ENS_SETTER_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47310,
                          "src": "13007:15:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "expression": {
                            "id": 47910,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "13024:3:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 47911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13028:6:111",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "13024:10:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 47908,
                        "name": "hasRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30595,
                        "src": "12999:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                          "typeString": "function (bytes32,address) view returns (bool)"
                        }
                      },
                      "id": 47912,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12999:36:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47917,
                  "nodeType": "IfStatement",
                  "src": "12994:64:111",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 47914,
                        "name": "Unauthorized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46991,
                        "src": "13044:12:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 47915,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13044:14:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 47916,
                    "nodeType": "RevertStatement",
                    "src": "13037:21:111"
                  }
                },
                {
                  "expression": {
                    "id": 47922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 47918,
                      "name": "resolver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47343,
                      "src": "13064:8:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_INameResolver_$3187",
                        "typeString": "contract INameResolver"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 47920,
                          "name": "_resolver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47895,
                          "src": "13089:9:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 47919,
                        "name": "INameResolver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3187,
                        "src": "13075:13:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_INameResolver_$3187_$",
                          "typeString": "type(contract INameResolver)"
                        }
                      },
                      "id": 47921,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13075:24:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_INameResolver_$3187",
                        "typeString": "contract INameResolver"
                      }
                    },
                    "src": "13064:35:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_INameResolver_$3187",
                      "typeString": "contract INameResolver"
                    }
                  },
                  "id": 47923,
                  "nodeType": "ExpressionStatement",
                  "src": "13064:35:111"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 47925,
                        "name": "_resolver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47895,
                        "src": "13126:9:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 47924,
                      "name": "ResolverUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46981,
                      "src": "13110:15:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 47926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13110:26:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47927,
                  "nodeType": "EmitStatement",
                  "src": "13105:31:111"
                }
              ]
            },
            "baseFunctions": [
              47078
            ],
            "documentation": {
              "id": 47893,
              "nodeType": "StructuredDocumentation",
              "src": "12752:118:111",
              "text": "@inheritdoc IRareStakingRegistry\n @dev Requires the caller to have the {ENS_SETTER_ROLE} access control role."
            },
            "functionSelector": "4e543b26",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setResolver",
            "nameLocation": "12882:11:111",
            "parameters": {
              "id": 47896,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47895,
                  "mutability": "mutable",
                  "name": "_resolver",
                  "nameLocation": "12902:9:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47929,
                  "src": "12894:17:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47894,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12894:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12893:19:111"
            },
            "returnParameters": {
              "id": 47897,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12922:0:111"
            },
            "scope": 48572,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 48000,
            "nodeType": "FunctionDefinition",
            "src": "13268:606:111",
            "nodes": [],
            "body": {
              "id": 47999,
              "nodeType": "Block",
              "src": "13336:538:111",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 47951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 47943,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 47938,
                                "name": "_uniswapPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47932,
                                "src": "13400:12:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 47937,
                              "name": "IUniswapV3Pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44176,
                              "src": "13385:14:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$44176_$",
                                "typeString": "type(contract IUniswapV3Pool)"
                              }
                            },
                            "id": 47939,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13385:28:111",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV3Pool_$44176",
                              "typeString": "contract IUniswapV3Pool"
                            }
                          },
                          "id": 47940,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13414:6:111",
                          "memberName": "token0",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44437,
                          "src": "13385:35:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 47941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13385:37:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 47942,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47934,
                        "src": "13426:6:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "13385:47:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 47950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 47945,
                                "name": "_uniswapPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47932,
                                "src": "13451:12:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 47944,
                              "name": "IUniswapV3Pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44176,
                              "src": "13436:14:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$44176_$",
                                "typeString": "type(contract IUniswapV3Pool)"
                              }
                            },
                            "id": 47946,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13436:28:111",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV3Pool_$44176",
                              "typeString": "contract IUniswapV3Pool"
                            }
                          },
                          "id": 47947,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13465:6:111",
                          "memberName": "token1",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44443,
                          "src": "13436:35:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 47948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13436:37:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 47949,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47934,
                        "src": "13477:6:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "13436:47:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "13385:98:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47956,
                  "nodeType": "IfStatement",
                  "src": "13381:139:111",
                  "trueBody": {
                    "id": 47955,
                    "nodeType": "Block",
                    "src": "13485:35:111",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 47952,
                            "name": "InvalidPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46994,
                            "src": "13500:11:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 47953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13500:13:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 47954,
                        "nodeType": "RevertStatement",
                        "src": "13493:20:111"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 47971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 47963,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 47958,
                                "name": "_uniswapPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47932,
                                "src": "13582:12:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 47957,
                              "name": "IUniswapV3Pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44176,
                              "src": "13567:14:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$44176_$",
                                "typeString": "type(contract IUniswapV3Pool)"
                              }
                            },
                            "id": 47959,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13567:28:111",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV3Pool_$44176",
                              "typeString": "contract IUniswapV3Pool"
                            }
                          },
                          "id": 47960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13596:6:111",
                          "memberName": "token0",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44437,
                          "src": "13567:35:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 47961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13567:37:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 47962,
                        "name": "weth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47351,
                        "src": "13608:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "13567:45:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 47970,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 47965,
                                "name": "_uniswapPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47932,
                                "src": "13631:12:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 47964,
                              "name": "IUniswapV3Pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44176,
                              "src": "13616:14:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$44176_$",
                                "typeString": "type(contract IUniswapV3Pool)"
                              }
                            },
                            "id": 47966,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13616:28:111",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV3Pool_$44176",
                              "typeString": "contract IUniswapV3Pool"
                            }
                          },
                          "id": 47967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13645:6:111",
                          "memberName": "token1",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44443,
                          "src": "13616:35:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 47968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13616:37:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 47969,
                        "name": "weth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47351,
                        "src": "13657:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "13616:45:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "13567:94:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47976,
                  "nodeType": "IfStatement",
                  "src": "13563:135:111",
                  "trueBody": {
                    "id": 47975,
                    "nodeType": "Block",
                    "src": "13663:35:111",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 47972,
                            "name": "InvalidPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46994,
                            "src": "13678:11:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 47973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13678:13:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 47974,
                        "nodeType": "RevertStatement",
                        "src": "13671:20:111"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 47982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "13707:43:111",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 47978,
                          "name": "SWAP_POOL_SETTER_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47316,
                          "src": "13716:21:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "expression": {
                            "id": 47979,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "13739:3:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 47980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13743:6:111",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "13739:10:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 47977,
                        "name": "hasRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30595,
                        "src": "13708:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                          "typeString": "function (bytes32,address) view returns (bool)"
                        }
                      },
                      "id": 47981,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13708:42:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47987,
                  "nodeType": "IfStatement",
                  "src": "13703:85:111",
                  "trueBody": {
                    "id": 47986,
                    "nodeType": "Block",
                    "src": "13752:36:111",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 47983,
                            "name": "Unauthorized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46991,
                            "src": "13767:12:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 47984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13767:14:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 47985,
                        "nodeType": "RevertStatement",
                        "src": "13760:21:111"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 47992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 47988,
                        "name": "swapPools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47329,
                        "src": "13793:9:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 47990,
                      "indexExpression": {
                        "id": 47989,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47934,
                        "src": "13803:6:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13793:17:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 47991,
                      "name": "_uniswapPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47932,
                      "src": "13813:12:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13793:32:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 47993,
                  "nodeType": "ExpressionStatement",
                  "src": "13793:32:111"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 47995,
                        "name": "_uniswapPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47932,
                        "src": "13848:12:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47996,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47934,
                        "src": "13862:6:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 47994,
                      "name": "SetSwapPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46988,
                      "src": "13836:11:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 47997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13836:33:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47998,
                  "nodeType": "EmitStatement",
                  "src": "13831:38:111"
                }
              ]
            },
            "baseFunctions": [
              47086
            ],
            "documentation": {
              "id": 47930,
              "nodeType": "StructuredDocumentation",
              "src": "13145:120:111",
              "text": "@inheritdoc IRareStakingRegistry\n @dev Requires the caller to have the {SWAP_POOL_SETTER_ROLE} of the contract."
            },
            "functionSelector": "46ccbb40",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setSwapPool",
            "nameLocation": "13277:11:111",
            "parameters": {
              "id": 47935,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47932,
                  "mutability": "mutable",
                  "name": "_uniswapPool",
                  "nameLocation": "13297:12:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 48000,
                  "src": "13289:20:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47931,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13289:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47934,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "13319:6:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 48000,
                  "src": "13311:14:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47933,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13311:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13288:38:111"
            },
            "returnParameters": {
              "id": 47936,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13336:0:111"
            },
            "scope": 48572,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 48055,
            "nodeType": "FunctionDefinition",
            "src": "13971:393:111",
            "nodes": [],
            "body": {
              "id": 48054,
              "nodeType": "Block",
              "src": "14051:313:111",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    48012
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48012,
                      "mutability": "mutable",
                      "name": "_rare",
                      "nameLocation": "14075:5:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48054,
                      "src": "14057:23:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Upgradeable_$32619",
                        "typeString": "contract IERC20Upgradeable"
                      },
                      "typeName": {
                        "id": 48011,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48010,
                          "name": "IERC20Upgradeable",
                          "nameLocations": [
                            "14057:17:111"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 32619,
                          "src": "14057:17:111"
                        },
                        "referencedDeclaration": 32619,
                        "src": "14057:17:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$32619",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48016,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 48014,
                        "name": "rare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47349,
                        "src": "14101:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 48013,
                      "name": "IERC20Upgradeable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32619,
                      "src": "14083:17:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$32619_$",
                        "typeString": "type(contract IERC20Upgradeable)"
                      }
                    },
                    "id": 48015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14083:23:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Upgradeable_$32619",
                      "typeString": "contract IERC20Upgradeable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14057:49:111"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 48026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 48019,
                          "name": "_from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48003,
                          "src": "14132:5:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 48022,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "14147:4:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RareStakingRegistry_$48572",
                                "typeString": "contract RareStakingRegistry"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_RareStakingRegistry_$48572",
                                "typeString": "contract RareStakingRegistry"
                              }
                            ],
                            "id": 48021,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14139:7:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 48020,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14139:7:111",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14139:13:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 48017,
                          "name": "_rare",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48012,
                          "src": "14116:5:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Upgradeable_$32619",
                            "typeString": "contract IERC20Upgradeable"
                          }
                        },
                        "id": 48018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14122:9:111",
                        "memberName": "allowance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32596,
                        "src": "14116:15:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address,address) view external returns (uint256)"
                        }
                      },
                      "id": 48024,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14116:37:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 48025,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48007,
                      "src": "14156:7:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14116:47:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 48031,
                  "nodeType": "IfStatement",
                  "src": "14112:102:111",
                  "trueBody": {
                    "id": 48030,
                    "nodeType": "Block",
                    "src": "14165:49:111",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 48027,
                            "name": "InsufficientRareAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47003,
                            "src": "14180:25:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 48028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14180:27:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 48029,
                        "nodeType": "RevertStatement",
                        "src": "14173:34:111"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 48040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 48032,
                        "name": "rarityPoolToUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47325,
                        "src": "14223:16:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 48035,
                      "indexExpression": {
                        "expression": {
                          "id": 48033,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "14240:3:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 48034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14244:6:111",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "14240:10:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "14223:28:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 48038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14263:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 48037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "14255:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 48036,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14255:7:111",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 48039,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14255:10:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "14223:42:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 48044,
                  "nodeType": "IfStatement",
                  "src": "14219:69:111",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 48041,
                        "name": "Unauthorized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46991,
                        "src": "14274:12:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 48042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14274:14:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 48043,
                    "nodeType": "RevertStatement",
                    "src": "14267:21:111"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48048,
                        "name": "_rare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48012,
                        "src": "14332:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$32619",
                          "typeString": "contract IERC20Upgradeable"
                        }
                      },
                      {
                        "id": 48049,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48003,
                        "src": "14339:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 48050,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48005,
                        "src": "14346:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 48051,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48007,
                        "src": "14351:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20Upgradeable_$32619",
                          "typeString": "contract IERC20Upgradeable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 48045,
                        "name": "SafeERC20Upgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33468,
                        "src": "14294:20:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeERC20Upgradeable_$33468_$",
                          "typeString": "type(library SafeERC20Upgradeable)"
                        }
                      },
                      "id": 48047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14315:16:111",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33152,
                      "src": "14294:37:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20Upgradeable_$32619_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IERC20Upgradeable,address,address,uint256)"
                      }
                    },
                    "id": 48052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14294:65:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48053,
                  "nodeType": "ExpressionStatement",
                  "src": "14294:65:111"
                }
              ]
            },
            "baseFunctions": [
              47096
            ],
            "documentation": {
              "id": 48001,
              "nodeType": "StructuredDocumentation",
              "src": "13878:90:111",
              "text": "@inheritdoc IRareStakingRegistry\n @dev Only staking pool contracts can call this."
            },
            "functionSelector": "81910e33",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferRareFrom",
            "nameLocation": "13980:16:111",
            "parameters": {
              "id": 48008,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48003,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "14005:5:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 48055,
                  "src": "13997:13:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48002,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13997:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48005,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "14020:3:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 48055,
                  "src": "14012:11:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48004,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14012:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48007,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "14033:7:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 48055,
                  "src": "14025:15:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48006,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14025:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13996:45:111"
            },
            "returnParameters": {
              "id": 48009,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14051:0:111"
            },
            "scope": 48572,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 48064,
            "nodeType": "FunctionDefinition",
            "src": "14616:100:111",
            "nodes": [],
            "body": {
              "id": 48063,
              "nodeType": "Block",
              "src": "14681:35:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 48061,
                    "name": "discountedPercent",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 47353,
                    "src": "14694:17:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 48060,
                  "id": 48062,
                  "nodeType": "Return",
                  "src": "14687:24:111"
                }
              ]
            },
            "baseFunctions": [
              47128
            ],
            "documentation": {
              "id": 48056,
              "nodeType": "StructuredDocumentation",
              "src": "14577:36:111",
              "text": "@inheritdoc IRareStakingRegistry"
            },
            "functionSelector": "111029b9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDiscountPercentage",
            "nameLocation": "14625:21:111",
            "parameters": {
              "id": 48057,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14646:2:111"
            },
            "returnParameters": {
              "id": 48060,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48059,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48064,
                  "src": "14672:7:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48058,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14672:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14671:9:111"
            },
            "scope": 48572,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 48073,
            "nodeType": "FunctionDefinition",
            "src": "14759:89:111",
            "nodes": [],
            "body": {
              "id": 48072,
              "nodeType": "Block",
              "src": "14818:30:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 48070,
                    "name": "defaultPayee",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 47355,
                    "src": "14831:12:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 48069,
                  "id": 48071,
                  "nodeType": "Return",
                  "src": "14824:19:111"
                }
              ]
            },
            "baseFunctions": [
              47102
            ],
            "documentation": {
              "id": 48065,
              "nodeType": "StructuredDocumentation",
              "src": "14720:36:111",
              "text": "@inheritdoc IRareStakingRegistry"
            },
            "functionSelector": "10da95e6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDefaultPayee",
            "nameLocation": "14768:15:111",
            "parameters": {
              "id": 48066,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14783:2:111"
            },
            "returnParameters": {
              "id": 48069,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48068,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48073,
                  "src": "14809:7:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48067,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14809:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14808:9:111"
            },
            "scope": 48572,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 48086,
            "nodeType": "FunctionDefinition",
            "src": "14891:104:111",
            "nodes": [],
            "body": {
              "id": 48085,
              "nodeType": "Block",
              "src": "14960:35:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 48081,
                      "name": "swapPools",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47329,
                      "src": "14973:9:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 48083,
                    "indexExpression": {
                      "id": 48082,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48076,
                      "src": "14983:6:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14973:17:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 48080,
                  "id": 48084,
                  "nodeType": "Return",
                  "src": "14966:24:111"
                }
              ]
            },
            "baseFunctions": [
              47110
            ],
            "documentation": {
              "id": 48074,
              "nodeType": "StructuredDocumentation",
              "src": "14852:36:111",
              "text": "@inheritdoc IRareStakingRegistry"
            },
            "functionSelector": "039bcf8e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSwapPool",
            "nameLocation": "14900:11:111",
            "parameters": {
              "id": 48077,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48076,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "14920:6:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 48086,
                  "src": "14912:14:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48075,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14912:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14911:16:111"
            },
            "returnParameters": {
              "id": 48080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48079,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48086,
                  "src": "14951:7:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48078,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14951:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14950:9:111"
            },
            "scope": 48572,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 48095,
            "nodeType": "FunctionDefinition",
            "src": "15038:80:111",
            "nodes": [],
            "body": {
              "id": 48094,
              "nodeType": "Block",
              "src": "15096:22:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 48092,
                    "name": "weth",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 47351,
                    "src": "15109:4:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 48091,
                  "id": 48093,
                  "nodeType": "Return",
                  "src": "15102:11:111"
                }
              ]
            },
            "baseFunctions": [
              47122
            ],
            "documentation": {
              "id": 48087,
              "nodeType": "StructuredDocumentation",
              "src": "14999:36:111",
              "text": "@inheritdoc IRareStakingRegistry"
            },
            "functionSelector": "23a7b42a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getWethAddress",
            "nameLocation": "15047:14:111",
            "parameters": {
              "id": 48088,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15061:2:111"
            },
            "returnParameters": {
              "id": 48091,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48090,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48095,
                  "src": "15087:7:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48089,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15087:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15086:9:111"
            },
            "scope": 48572,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 48104,
            "nodeType": "FunctionDefinition",
            "src": "15161:80:111",
            "nodes": [],
            "body": {
              "id": 48103,
              "nodeType": "Block",
              "src": "15219:22:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 48101,
                    "name": "rare",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 47349,
                    "src": "15232:4:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 48100,
                  "id": 48102,
                  "nodeType": "Return",
                  "src": "15225:11:111"
                }
              ]
            },
            "baseFunctions": [
              47116
            ],
            "documentation": {
              "id": 48096,
              "nodeType": "StructuredDocumentation",
              "src": "15122:36:111",
              "text": "@inheritdoc IRareStakingRegistry"
            },
            "functionSelector": "2210d525",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRareAddress",
            "nameLocation": "15170:14:111",
            "parameters": {
              "id": 48097,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15184:2:111"
            },
            "returnParameters": {
              "id": 48100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48099,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48104,
                  "src": "15210:7:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48098,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15210:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15209:9:111"
            },
            "scope": 48572,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 48113,
            "nodeType": "FunctionDefinition",
            "src": "15284:109:111",
            "nodes": [],
            "body": {
              "id": 48112,
              "nodeType": "Block",
              "src": "15353:40:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 48110,
                    "name": "deflationaryPercentage",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 47347,
                    "src": "15366:22:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 48109,
                  "id": 48111,
                  "nodeType": "Return",
                  "src": "15359:29:111"
                }
              ]
            },
            "baseFunctions": [
              47134
            ],
            "documentation": {
              "id": 48105,
              "nodeType": "StructuredDocumentation",
              "src": "15245:36:111",
              "text": "@inheritdoc IRareStakingRegistry"
            },
            "functionSelector": "f7ef8ead",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDeflationaryPercentage",
            "nameLocation": "15293:25:111",
            "parameters": {
              "id": 48106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15318:2:111"
            },
            "returnParameters": {
              "id": 48109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48108,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48113,
                  "src": "15344:7:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48107,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15344:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15343:9:111"
            },
            "scope": 48572,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 48122,
            "nodeType": "FunctionDefinition",
            "src": "15436:89:111",
            "nodes": [],
            "body": {
              "id": 48121,
              "nodeType": "Block",
              "src": "15495:30:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 48119,
                    "name": "periodLength",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 47345,
                    "src": "15508:12:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 48118,
                  "id": 48120,
                  "nodeType": "Return",
                  "src": "15501:19:111"
                }
              ]
            },
            "baseFunctions": [
              47140
            ],
            "documentation": {
              "id": 48114,
              "nodeType": "StructuredDocumentation",
              "src": "15397:36:111",
              "text": "@inheritdoc IRareStakingRegistry"
            },
            "functionSelector": "8469ddc7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPeriodLength",
            "nameLocation": "15445:15:111",
            "parameters": {
              "id": 48115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15460:2:111"
            },
            "returnParameters": {
              "id": 48118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48117,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48122,
                  "src": "15486:7:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48116,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15486:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15485:9:111"
            },
            "scope": 48572,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 48288,
            "nodeType": "FunctionDefinition",
            "src": "15568:992:111",
            "nodes": [],
            "body": {
              "id": 48287,
              "nodeType": "Block",
              "src": "15650:910:111",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    48135
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48135,
                      "mutability": "mutable",
                      "name": "name",
                      "nameLocation": "15677:4:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48287,
                      "src": "15656:25:111",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_slice_$42247_memory_ptr",
                        "typeString": "struct strings.slice"
                      },
                      "typeName": {
                        "id": 48134,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48133,
                          "name": "strings.slice",
                          "nameLocations": [
                            "15656:7:111",
                            "15664:5:111"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 42247,
                          "src": "15656:13:111"
                        },
                        "referencedDeclaration": 42247,
                        "src": "15656:13:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_slice_$42247_storage_ptr",
                          "typeString": "struct strings.slice"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48146,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "components": [
                              {
                                "arguments": [
                                  {
                                    "id": 48140,
                                    "name": "_user",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 48125,
                                    "src": "15721:5:111",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 48138,
                                    "name": "reverseRegistrar",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 47340,
                                    "src": "15699:16:111",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ReverseRegistrar_$2841",
                                      "typeString": "contract ReverseRegistrar"
                                    }
                                  },
                                  "id": 48139,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "15716:4:111",
                                  "memberName": "node",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2802,
                                  "src": "15699:21:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_pure$_t_address_$returns$_t_bytes32_$",
                                    "typeString": "function (address) pure external returns (bytes32)"
                                  }
                                },
                                "id": 48141,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15699:28:111",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "id": 48142,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "15698:30:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 48136,
                            "name": "resolver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47343,
                            "src": "15684:8:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_INameResolver_$3187",
                              "typeString": "contract INameResolver"
                            }
                          },
                          "id": 48137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15693:4:111",
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3186,
                          "src": "15684:13:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (bytes32) view external returns (string memory)"
                          }
                        },
                        "id": 48143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15684:45:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "id": 48144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15730:7:111",
                      "memberName": "toSlice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42322,
                      "src": "15684:53:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_struct$_slice_$42247_memory_ptr_$attached_to$_t_string_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (struct strings.slice memory)"
                      }
                    },
                    "id": 48145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15684:55:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_slice_$42247_memory_ptr",
                      "typeString": "struct strings.slice memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15656:83:111"
                },
                {
                  "assignments": [
                    48149
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48149,
                      "mutability": "mutable",
                      "name": "info",
                      "nameLocation": "15757:4:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48287,
                      "src": "15745:16:111",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Info_$46951_memory_ptr",
                        "typeString": "struct IRareStakingRegistry.Info"
                      },
                      "typeName": {
                        "id": 48148,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48147,
                          "name": "Info",
                          "nameLocations": [
                            "15745:4:111"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 46951,
                          "src": "15745:4:111"
                        },
                        "referencedDeclaration": 46951,
                        "src": "15745:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Info_$46951_storage_ptr",
                          "typeString": "struct IRareStakingRegistry.Info"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48150,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15745:16:111"
                },
                {
                  "expression": {
                    "id": 48158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 48151,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48149,
                        "src": "15767:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Info_$46951_memory_ptr",
                          "typeString": "struct IRareStakingRegistry.Info memory"
                        }
                      },
                      "id": 48153,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "15772:14:111",
                      "memberName": "stakingAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46948,
                      "src": "15767:19:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 48154,
                          "name": "userToRarityPoolPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47321,
                          "src": "15789:20:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RarityPoolContractPair_$47280_storage_$",
                            "typeString": "mapping(address => struct RareStakingRegistry.RarityPoolContractPair storage ref)"
                          }
                        },
                        "id": 48156,
                        "indexExpression": {
                          "id": 48155,
                          "name": "_user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48125,
                          "src": "15810:5:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15789:27:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RarityPoolContractPair_$47280_storage",
                          "typeString": "struct RareStakingRegistry.RarityPoolContractPair storage ref"
                        }
                      },
                      "id": 48157,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15817:14:111",
                      "memberName": "stakingAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47277,
                      "src": "15789:42:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "15767:64:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 48159,
                  "nodeType": "ExpressionStatement",
                  "src": "15767:64:111"
                },
                {
                  "expression": {
                    "id": 48167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 48160,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48149,
                        "src": "15837:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Info_$46951_memory_ptr",
                          "typeString": "struct IRareStakingRegistry.Info memory"
                        }
                      },
                      "id": 48162,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "15842:13:111",
                      "memberName": "rewardAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46950,
                      "src": "15837:18:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 48163,
                          "name": "userToRarityPoolPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47321,
                          "src": "15858:20:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RarityPoolContractPair_$47280_storage_$",
                            "typeString": "mapping(address => struct RareStakingRegistry.RarityPoolContractPair storage ref)"
                          }
                        },
                        "id": 48165,
                        "indexExpression": {
                          "id": 48164,
                          "name": "_user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48125,
                          "src": "15879:5:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15858:27:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RarityPoolContractPair_$47280_storage",
                          "typeString": "struct RareStakingRegistry.RarityPoolContractPair storage ref"
                        }
                      },
                      "id": 48166,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15886:13:111",
                      "memberName": "rewardAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47279,
                      "src": "15858:41:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "15837:62:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 48168,
                  "nodeType": "ExpressionStatement",
                  "src": "15837:62:111"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 48173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 48169,
                          "name": "name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48135,
                          "src": "15909:4:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_slice_$42247_memory_ptr",
                            "typeString": "struct strings.slice memory"
                          }
                        },
                        "id": 48170,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15914:3:111",
                        "memberName": "len",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 42636,
                        "src": "15909:8:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_struct$_slice_$42247_memory_ptr_$returns$_t_uint256_$attached_to$_t_struct$_slice_$42247_memory_ptr_$",
                          "typeString": "function (struct strings.slice memory) pure returns (uint256)"
                        }
                      },
                      "id": 48171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15909:10:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 48172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15923:1:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "15909:15:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 48215,
                  "nodeType": "IfStatement",
                  "src": "15905:228:111",
                  "trueBody": {
                    "id": 48214,
                    "nodeType": "Block",
                    "src": "15926:207:111",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "hexValue": "2e",
                                  "id": 48177,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "15946:3:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_6f010af653ebe3cb07d297a4ef13366103d392ceffa68dd48232e6e9ff2187bf",
                                    "typeString": "literal_string \".\""
                                  },
                                  "value": "."
                                },
                                "id": 48178,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "15950:7:111",
                                "memberName": "toSlice",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 42322,
                                "src": "15946:11:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_struct$_slice_$42247_memory_ptr_$attached_to$_t_string_memory_ptr_$",
                                  "typeString": "function (string memory) pure returns (struct strings.slice memory)"
                                }
                              },
                              "id": 48179,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15946:13:111",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_slice_$42247_memory_ptr",
                                "typeString": "struct strings.slice memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_slice_$42247_memory_ptr",
                                "typeString": "struct strings.slice memory"
                              }
                            ],
                            "expression": {
                              "id": 48174,
                              "name": "name",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48135,
                              "src": "15934:4:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_slice_$42247_memory_ptr",
                                "typeString": "struct strings.slice memory"
                              }
                            },
                            "id": 48176,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "15939:6:111",
                            "memberName": "rsplit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 43819,
                            "src": "15934:11:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_slice_$42247_memory_ptr_$_t_struct$_slice_$42247_memory_ptr_$returns$_t_struct$_slice_$42247_memory_ptr_$attached_to$_t_struct$_slice_$42247_memory_ptr_$",
                              "typeString": "function (struct strings.slice memory,struct strings.slice memory) pure returns (struct strings.slice memory)"
                            }
                          },
                          "id": 48180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15934:26:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_slice_$42247_memory_ptr",
                            "typeString": "struct strings.slice memory"
                          }
                        },
                        "id": 48181,
                        "nodeType": "ExpressionStatement",
                        "src": "15934:26:111"
                      },
                      {
                        "expression": {
                          "id": 48192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 48182,
                              "name": "info",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48149,
                              "src": "15968:4:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Info_$46951_memory_ptr",
                                "typeString": "struct IRareStakingRegistry.Info memory"
                              }
                            },
                            "id": 48184,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "15973:4:111",
                            "memberName": "name",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46944,
                            "src": "15968:9:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 48190,
                                "name": "name",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48135,
                                "src": "16019:4:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_slice_$42247_memory_ptr",
                                  "typeString": "struct strings.slice memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_slice_$42247_memory_ptr",
                                  "typeString": "struct strings.slice memory"
                                }
                              ],
                              "expression": {
                                "components": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "hexValue": "53796e7468657469632052415245207c20",
                                        "id": 48185,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "15981:19:111",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_a6ec9ec70b4976bc5252f048be904f676c54cd61ceedbcc32700d51482c51a38",
                                          "typeString": "literal_string \"Synthetic RARE | \""
                                        },
                                        "value": "Synthetic RARE | "
                                      },
                                      "id": 48186,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "16001:7:111",
                                      "memberName": "toSlice",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 42322,
                                      "src": "15981:27:111",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_struct$_slice_$42247_memory_ptr_$attached_to$_t_string_memory_ptr_$",
                                        "typeString": "function (string memory) pure returns (struct strings.slice memory)"
                                      }
                                    },
                                    "id": 48187,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "15981:29:111",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_slice_$42247_memory_ptr",
                                      "typeString": "struct strings.slice memory"
                                    }
                                  }
                                ],
                                "id": 48188,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "15980:31:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_slice_$42247_memory_ptr",
                                  "typeString": "struct strings.slice memory"
                                }
                              },
                              "id": 48189,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "16012:6:111",
                              "memberName": "concat",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 43954,
                              "src": "15980:38:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_struct$_slice_$42247_memory_ptr_$_t_struct$_slice_$42247_memory_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_struct$_slice_$42247_memory_ptr_$",
                                "typeString": "function (struct strings.slice memory,struct strings.slice memory) pure returns (string memory)"
                              }
                            },
                            "id": 48191,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15980:44:111",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "15968:56:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 48193,
                        "nodeType": "ExpressionStatement",
                        "src": "15968:56:111"
                      },
                      {
                        "expression": {
                          "id": 48210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 48194,
                              "name": "info",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48149,
                              "src": "16032:4:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Info_$46951_memory_ptr",
                                "typeString": "struct IRareStakingRegistry.Info memory"
                              }
                            },
                            "id": 48196,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "16037:6:111",
                            "memberName": "symbol",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 46946,
                            "src": "16032:11:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "expression": {
                                            "id": 48203,
                                            "name": "name",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 48135,
                                            "src": "16080:4:111",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_slice_$42247_memory_ptr",
                                              "typeString": "struct strings.slice memory"
                                            }
                                          },
                                          "id": 48204,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "16085:8:111",
                                          "memberName": "toString",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 42547,
                                          "src": "16080:13:111",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_struct$_slice_$42247_memory_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_struct$_slice_$42247_memory_ptr_$",
                                            "typeString": "function (struct strings.slice memory) pure returns (string memory)"
                                          }
                                        },
                                        "id": 48205,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "16080:15:111",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "id": 48202,
                                      "name": "upper",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 48454,
                                      "src": "16074:5:111",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                                        "typeString": "function (string memory) pure returns (string memory)"
                                      }
                                    },
                                    "id": 48206,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "16074:22:111",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  "id": 48207,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "16097:7:111",
                                  "memberName": "toSlice",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 42322,
                                  "src": "16074:30:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_struct$_slice_$42247_memory_ptr_$attached_to$_t_string_memory_ptr_$",
                                    "typeString": "function (string memory) pure returns (struct strings.slice memory)"
                                  }
                                },
                                "id": 48208,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "16074:32:111",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_slice_$42247_memory_ptr",
                                  "typeString": "struct strings.slice memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_slice_$42247_memory_ptr",
                                  "typeString": "struct strings.slice memory"
                                }
                              ],
                              "expression": {
                                "components": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "hexValue": "78524152455f",
                                        "id": 48197,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "16047:8:111",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_2c269d9975075a39a6d48064d3c992bfa578226b4c012ef241d177cf203ddd19",
                                          "typeString": "literal_string \"xRARE_\""
                                        },
                                        "value": "xRARE_"
                                      },
                                      "id": 48198,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "16056:7:111",
                                      "memberName": "toSlice",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 42322,
                                      "src": "16047:16:111",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_struct$_slice_$42247_memory_ptr_$attached_to$_t_string_memory_ptr_$",
                                        "typeString": "function (string memory) pure returns (struct strings.slice memory)"
                                      }
                                    },
                                    "id": 48199,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "16047:18:111",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_slice_$42247_memory_ptr",
                                      "typeString": "struct strings.slice memory"
                                    }
                                  }
                                ],
                                "id": 48200,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "16046:20:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_slice_$42247_memory_ptr",
                                  "typeString": "struct strings.slice memory"
                                }
                              },
                              "id": 48201,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "16067:6:111",
                              "memberName": "concat",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 43954,
                              "src": "16046:27:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_struct$_slice_$42247_memory_ptr_$_t_struct$_slice_$42247_memory_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_struct$_slice_$42247_memory_ptr_$",
                                "typeString": "function (struct strings.slice memory,struct strings.slice memory) pure returns (string memory)"
                              }
                            },
                            "id": 48209,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16046:61:111",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "16032:75:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "id": 48211,
                        "nodeType": "ExpressionStatement",
                        "src": "16032:75:111"
                      },
                      {
                        "expression": {
                          "id": 48212,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48149,
                          "src": "16122:4:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Info_$46951_memory_ptr",
                            "typeString": "struct IRareStakingRegistry.Info memory"
                          }
                        },
                        "functionReturnParameters": 48130,
                        "id": 48213,
                        "nodeType": "Return",
                        "src": "16115:11:111"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    48217
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48217,
                      "mutability": "mutable",
                      "name": "userStr",
                      "nameLocation": "16152:7:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48287,
                      "src": "16138:21:111",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 48216,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "16138:6:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48222,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 48220,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48125,
                        "src": "16182:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 48218,
                        "name": "Strings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39716,
                        "src": "16162:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Strings_$39716_$",
                          "typeString": "type(library Strings)"
                        }
                      },
                      "id": 48219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16170:11:111",
                      "memberName": "toHexString",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39690,
                      "src": "16162:19:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (address) pure returns (string memory)"
                      }
                    },
                    "id": 48221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16162:26:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16138:50:111"
                },
                {
                  "assignments": [
                    48227
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48227,
                      "mutability": "mutable",
                      "name": "beginning",
                      "nameLocation": "16215:9:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48287,
                      "src": "16194:30:111",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_slice_$42247_memory_ptr",
                        "typeString": "struct strings.slice"
                      },
                      "typeName": {
                        "id": 48226,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48225,
                          "name": "strings.slice",
                          "nameLocations": [
                            "16194:7:111",
                            "16202:5:111"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 42247,
                          "src": "16194:13:111"
                        },
                        "referencedDeclaration": 42247,
                        "src": "16194:13:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_slice_$42247_storage_ptr",
                          "typeString": "struct strings.slice"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48235,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 48229,
                            "name": "userStr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48217,
                            "src": "16238:7:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "36",
                            "id": 48230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16247:1:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_6_by_1",
                              "typeString": "int_const 6"
                            },
                            "value": "6"
                          },
                          {
                            "hexValue": "30",
                            "id": 48231,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16250:1:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_rational_6_by_1",
                              "typeString": "int_const 6"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 48228,
                          "name": "_substring",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48571,
                          "src": "16227:10:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_int256_$_t_int256_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (string memory,int256,int256) pure returns (string memory)"
                          }
                        },
                        "id": 48232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16227:25:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "id": 48233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16253:7:111",
                      "memberName": "toSlice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42322,
                      "src": "16227:33:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_struct$_slice_$42247_memory_ptr_$attached_to$_t_string_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (struct strings.slice memory)"
                      }
                    },
                    "id": 48234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16227:35:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_slice_$42247_memory_ptr",
                      "typeString": "struct strings.slice memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16194:68:111"
                },
                {
                  "assignments": [
                    48240
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48240,
                      "mutability": "mutable",
                      "name": "end",
                      "nameLocation": "16289:3:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48287,
                      "src": "16268:24:111",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_slice_$42247_memory_ptr",
                        "typeString": "struct strings.slice"
                      },
                      "typeName": {
                        "id": 48239,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48238,
                          "name": "strings.slice",
                          "nameLocations": [
                            "16268:7:111",
                            "16276:5:111"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 42247,
                          "src": "16268:13:111"
                        },
                        "referencedDeclaration": 42247,
                        "src": "16268:13:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_slice_$42247_storage_ptr",
                          "typeString": "struct strings.slice"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48248,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 48242,
                            "name": "userStr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48217,
                            "src": "16306:7:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "hexValue": "34",
                            "id": 48243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16315:1:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          },
                          {
                            "hexValue": "3335",
                            "id": 48244,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16318:2:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_35_by_1",
                              "typeString": "int_const 35"
                            },
                            "value": "35"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            {
                              "typeIdentifier": "t_rational_35_by_1",
                              "typeString": "int_const 35"
                            }
                          ],
                          "id": 48241,
                          "name": "_substring",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48571,
                          "src": "16295:10:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_int256_$_t_int256_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (string memory,int256,int256) pure returns (string memory)"
                          }
                        },
                        "id": 48245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16295:26:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "id": 48246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16322:7:111",
                      "memberName": "toSlice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42322,
                      "src": "16295:34:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_struct$_slice_$42247_memory_ptr_$attached_to$_t_string_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (struct strings.slice memory)"
                      }
                    },
                    "id": 48247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16295:36:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_slice_$42247_memory_ptr",
                      "typeString": "struct strings.slice memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16268:63:111"
                },
                {
                  "assignments": [
                    48253
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48253,
                      "mutability": "mutable",
                      "name": "stakingNumber",
                      "nameLocation": "16358:13:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48287,
                      "src": "16337:34:111",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_slice_$42247_memory_ptr",
                        "typeString": "struct strings.slice"
                      },
                      "typeName": {
                        "id": 48252,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48251,
                          "name": "strings.slice",
                          "nameLocations": [
                            "16337:7:111",
                            "16345:5:111"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 42247,
                          "src": "16337:13:111"
                        },
                        "referencedDeclaration": 42247,
                        "src": "16337:13:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_slice_$42247_storage_ptr",
                          "typeString": "struct strings.slice"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48260,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 48256,
                            "name": "end",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48240,
                            "src": "16391:3:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_slice_$42247_memory_ptr",
                              "typeString": "struct strings.slice memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_slice_$42247_memory_ptr",
                              "typeString": "struct strings.slice memory"
                            }
                          ],
                          "expression": {
                            "id": 48254,
                            "name": "beginning",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48227,
                            "src": "16374:9:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_slice_$42247_memory_ptr",
                              "typeString": "struct strings.slice memory"
                            }
                          },
                          "id": 48255,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16384:6:111",
                          "memberName": "concat",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43954,
                          "src": "16374:16:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_slice_$42247_memory_ptr_$_t_struct$_slice_$42247_memory_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_struct$_slice_$42247_memory_ptr_$",
                            "typeString": "function (struct strings.slice memory,struct strings.slice memory) pure returns (string memory)"
                          }
                        },
                        "id": 48257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16374:21:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "id": 48258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16396:7:111",
                      "memberName": "toSlice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42322,
                      "src": "16374:29:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_struct$_slice_$42247_memory_ptr_$attached_to$_t_string_memory_ptr_$",
                        "typeString": "function (string memory) pure returns (struct strings.slice memory)"
                      }
                    },
                    "id": 48259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16374:31:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_slice_$42247_memory_ptr",
                      "typeString": "struct strings.slice memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16337:68:111"
                },
                {
                  "expression": {
                    "id": 48271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 48261,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48149,
                        "src": "16411:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Info_$46951_memory_ptr",
                          "typeString": "struct IRareStakingRegistry.Info memory"
                        }
                      },
                      "id": 48263,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "16416:4:111",
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46944,
                      "src": "16411:9:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 48269,
                          "name": "stakingNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48253,
                          "src": "16462:13:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_slice_$42247_memory_ptr",
                            "typeString": "struct strings.slice memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_slice_$42247_memory_ptr",
                            "typeString": "struct strings.slice memory"
                          }
                        ],
                        "expression": {
                          "components": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "hexValue": "53796e7468657469632052415245207c20",
                                  "id": 48264,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "16424:19:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_a6ec9ec70b4976bc5252f048be904f676c54cd61ceedbcc32700d51482c51a38",
                                    "typeString": "literal_string \"Synthetic RARE | \""
                                  },
                                  "value": "Synthetic RARE | "
                                },
                                "id": 48265,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "16444:7:111",
                                "memberName": "toSlice",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 42322,
                                "src": "16424:27:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_struct$_slice_$42247_memory_ptr_$attached_to$_t_string_memory_ptr_$",
                                  "typeString": "function (string memory) pure returns (struct strings.slice memory)"
                                }
                              },
                              "id": 48266,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16424:29:111",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_slice_$42247_memory_ptr",
                                "typeString": "struct strings.slice memory"
                              }
                            }
                          ],
                          "id": 48267,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "16423:31:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_slice_$42247_memory_ptr",
                            "typeString": "struct strings.slice memory"
                          }
                        },
                        "id": 48268,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16455:6:111",
                        "memberName": "concat",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43954,
                        "src": "16423:38:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_struct$_slice_$42247_memory_ptr_$_t_struct$_slice_$42247_memory_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_struct$_slice_$42247_memory_ptr_$",
                          "typeString": "function (struct strings.slice memory,struct strings.slice memory) pure returns (string memory)"
                        }
                      },
                      "id": 48270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16423:53:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "16411:65:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 48272,
                  "nodeType": "ExpressionStatement",
                  "src": "16411:65:111"
                },
                {
                  "expression": {
                    "id": 48283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 48273,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48149,
                        "src": "16482:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Info_$46951_memory_ptr",
                          "typeString": "struct IRareStakingRegistry.Info memory"
                        }
                      },
                      "id": 48275,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "16487:6:111",
                      "memberName": "symbol",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46946,
                      "src": "16482:11:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 48281,
                          "name": "stakingNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48253,
                          "src": "16524:13:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_slice_$42247_memory_ptr",
                            "typeString": "struct strings.slice memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_slice_$42247_memory_ptr",
                            "typeString": "struct strings.slice memory"
                          }
                        ],
                        "expression": {
                          "components": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "hexValue": "78524152455f",
                                  "id": 48276,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "16497:8:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_2c269d9975075a39a6d48064d3c992bfa578226b4c012ef241d177cf203ddd19",
                                    "typeString": "literal_string \"xRARE_\""
                                  },
                                  "value": "xRARE_"
                                },
                                "id": 48277,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "16506:7:111",
                                "memberName": "toSlice",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 42322,
                                "src": "16497:16:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_struct$_slice_$42247_memory_ptr_$attached_to$_t_string_memory_ptr_$",
                                  "typeString": "function (string memory) pure returns (struct strings.slice memory)"
                                }
                              },
                              "id": 48278,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16497:18:111",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_slice_$42247_memory_ptr",
                                "typeString": "struct strings.slice memory"
                              }
                            }
                          ],
                          "id": 48279,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "16496:20:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_slice_$42247_memory_ptr",
                            "typeString": "struct strings.slice memory"
                          }
                        },
                        "id": 48280,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16517:6:111",
                        "memberName": "concat",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43954,
                        "src": "16496:27:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_struct$_slice_$42247_memory_ptr_$_t_struct$_slice_$42247_memory_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_struct$_slice_$42247_memory_ptr_$",
                          "typeString": "function (struct strings.slice memory,struct strings.slice memory) pure returns (string memory)"
                        }
                      },
                      "id": 48282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16496:42:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "16482:56:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 48284,
                  "nodeType": "ExpressionStatement",
                  "src": "16482:56:111"
                },
                {
                  "expression": {
                    "id": 48285,
                    "name": "info",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 48149,
                    "src": "16551:4:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Info_$46951_memory_ptr",
                      "typeString": "struct IRareStakingRegistry.Info memory"
                    }
                  },
                  "functionReturnParameters": 48130,
                  "id": 48286,
                  "nodeType": "Return",
                  "src": "16544:11:111"
                }
              ]
            },
            "baseFunctions": [
              47149
            ],
            "documentation": {
              "id": 48123,
              "nodeType": "StructuredDocumentation",
              "src": "15529:36:111",
              "text": "@inheritdoc IRareStakingRegistry"
            },
            "functionSelector": "f24bd8a6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStakingInfoForUser",
            "nameLocation": "15577:21:111",
            "parameters": {
              "id": 48126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48125,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "15607:5:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 48288,
                  "src": "15599:13:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48124,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15599:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15598:15:111"
            },
            "returnParameters": {
              "id": 48130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48129,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48288,
                  "src": "15637:11:111",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Info_$46951_memory_ptr",
                    "typeString": "struct IRareStakingRegistry.Info"
                  },
                  "typeName": {
                    "id": 48128,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 48127,
                      "name": "Info",
                      "nameLocations": [
                        "15637:4:111"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 46951,
                      "src": "15637:4:111"
                    },
                    "referencedDeclaration": 46951,
                    "src": "15637:4:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Info_$46951_storage_ptr",
                      "typeString": "struct IRareStakingRegistry.Info"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15636:13:111"
            },
            "scope": 48572,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 48302,
            "nodeType": "FunctionDefinition",
            "src": "16603:141:111",
            "nodes": [],
            "body": {
              "id": 48301,
              "nodeType": "Block",
              "src": "16684:60:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 48296,
                        "name": "userToRarityPoolPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47321,
                        "src": "16697:20:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RarityPoolContractPair_$47280_storage_$",
                          "typeString": "mapping(address => struct RareStakingRegistry.RarityPoolContractPair storage ref)"
                        }
                      },
                      "id": 48298,
                      "indexExpression": {
                        "id": 48297,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48291,
                        "src": "16718:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "16697:27:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RarityPoolContractPair_$47280_storage",
                        "typeString": "struct RareStakingRegistry.RarityPoolContractPair storage ref"
                      }
                    },
                    "id": 48299,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "16725:14:111",
                    "memberName": "stakingAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 47277,
                    "src": "16697:42:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 48295,
                  "id": 48300,
                  "nodeType": "Return",
                  "src": "16690:49:111"
                }
              ]
            },
            "baseFunctions": [
              47157
            ],
            "documentation": {
              "id": 48289,
              "nodeType": "StructuredDocumentation",
              "src": "16564:36:111",
              "text": "@inheritdoc IRareStakingRegistry"
            },
            "functionSelector": "81d0606b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStakingAddressForUser",
            "nameLocation": "16612:24:111",
            "parameters": {
              "id": 48292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48291,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "16645:5:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 48302,
                  "src": "16637:13:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48290,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16637:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16636:15:111"
            },
            "returnParameters": {
              "id": 48295,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48294,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48302,
                  "src": "16675:7:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48293,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16675:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16674:9:111"
            },
            "scope": 48572,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 48316,
            "nodeType": "FunctionDefinition",
            "src": "16787:150:111",
            "nodes": [],
            "body": {
              "id": 48315,
              "nodeType": "Block",
              "src": "16878:59:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 48310,
                        "name": "userToRarityPoolPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47321,
                        "src": "16891:20:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RarityPoolContractPair_$47280_storage_$",
                          "typeString": "mapping(address => struct RareStakingRegistry.RarityPoolContractPair storage ref)"
                        }
                      },
                      "id": 48312,
                      "indexExpression": {
                        "id": 48311,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48305,
                        "src": "16912:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "16891:27:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RarityPoolContractPair_$47280_storage",
                        "typeString": "struct RareStakingRegistry.RarityPoolContractPair storage ref"
                      }
                    },
                    "id": 48313,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "16919:13:111",
                    "memberName": "rewardAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 47279,
                    "src": "16891:41:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 48309,
                  "id": 48314,
                  "nodeType": "Return",
                  "src": "16884:48:111"
                }
              ]
            },
            "baseFunctions": [
              47165
            ],
            "documentation": {
              "id": 48303,
              "nodeType": "StructuredDocumentation",
              "src": "16748:36:111",
              "text": "@inheritdoc IRareStakingRegistry"
            },
            "functionSelector": "e286ef33",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRewardAccumulatorAddressForUser",
            "nameLocation": "16796:34:111",
            "parameters": {
              "id": 48306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48305,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "16839:5:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 48316,
                  "src": "16831:13:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48304,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16831:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16830:15:111"
            },
            "returnParameters": {
              "id": 48309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48308,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48316,
                  "src": "16869:7:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48307,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16869:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16868:9:111"
            },
            "scope": 48572,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 48329,
            "nodeType": "FunctionDefinition",
            "src": "16980:133:111",
            "nodes": [],
            "body": {
              "id": 48328,
              "nodeType": "Block",
              "src": "17070:43:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 48324,
                      "name": "amountStakedByUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47333,
                      "src": "17083:18:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 48326,
                    "indexExpression": {
                      "id": 48325,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48319,
                      "src": "17102:5:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "17083:25:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 48323,
                  "id": 48327,
                  "nodeType": "Return",
                  "src": "17076:32:111"
                }
              ]
            },
            "baseFunctions": [
              47173
            ],
            "documentation": {
              "id": 48317,
              "nodeType": "StructuredDocumentation",
              "src": "16941:36:111",
              "text": "@inheritdoc IRareStakingRegistry"
            },
            "functionSelector": "06c571d5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalAmountStakedByUser",
            "nameLocation": "16989:26:111",
            "parameters": {
              "id": 48320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48319,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "17024:5:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 48329,
                  "src": "17016:13:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48318,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17016:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17015:15:111"
            },
            "returnParameters": {
              "id": 48323,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48322,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "17062:6:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 48329,
                  "src": "17054:14:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48321,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17054:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17053:16:111"
            },
            "scope": 48572,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 48342,
            "nodeType": "FunctionDefinition",
            "src": "17156:135:111",
            "nodes": [],
            "body": {
              "id": 48341,
              "nodeType": "Block",
              "src": "17246:45:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 48337,
                      "name": "amountStakedOnTarget",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47337,
                      "src": "17259:20:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 48339,
                    "indexExpression": {
                      "id": 48338,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48332,
                      "src": "17280:5:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "17259:27:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 48336,
                  "id": 48340,
                  "nodeType": "Return",
                  "src": "17252:34:111"
                }
              ]
            },
            "baseFunctions": [
              47181
            ],
            "documentation": {
              "id": 48330,
              "nodeType": "StructuredDocumentation",
              "src": "17117:36:111",
              "text": "@inheritdoc IRareStakingRegistry"
            },
            "functionSelector": "3d867d95",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalAmountStakedOnUser",
            "nameLocation": "17165:26:111",
            "parameters": {
              "id": 48333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48332,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "17200:5:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 48342,
                  "src": "17192:13:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48331,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17192:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17191:15:111"
            },
            "returnParameters": {
              "id": 48336,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48335,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "17238:6:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 48342,
                  "src": "17230:14:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48334,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17230:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17229:16:111"
            },
            "scope": 48572,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 48410,
            "nodeType": "FunctionDefinition",
            "src": "17469:436:111",
            "nodes": [],
            "body": {
              "id": 48409,
              "nodeType": "Block",
              "src": "17581:324:111",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    48356
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48356,
                      "mutability": "mutable",
                      "name": "users",
                      "nameLocation": "17604:5:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48409,
                      "src": "17587:22:111",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 48354,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17587:7:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 48355,
                        "nodeType": "ArrayTypeName",
                        "src": "17587:9:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48363,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 48360,
                          "name": "_stakingAddrs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48346,
                          "src": "17626:13:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                            "typeString": "address[] calldata"
                          }
                        },
                        "id": 48361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17640:6:111",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "17626:20:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 48359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "17612:13:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 48357,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17616:7:111",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 48358,
                        "nodeType": "ArrayTypeName",
                        "src": "17616:9:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 48362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17612:35:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17587:60:111"
                },
                {
                  "body": {
                    "id": 48405,
                    "nodeType": "Block",
                    "src": "17705:177:111",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 48391,
                              "nodeType": "Block",
                              "src": "17795:34:111",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 48389,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 48385,
                                        "name": "users",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 48356,
                                        "src": "17805:5:111",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                          "typeString": "address[] memory"
                                        }
                                      },
                                      "id": 48387,
                                      "indexExpression": {
                                        "id": 48386,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 48365,
                                        "src": "17811:1:111",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "17805:8:111",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "id": 48388,
                                      "name": "user",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 48383,
                                      "src": "17816:4:111",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "17805:15:111",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 48390,
                                  "nodeType": "ExpressionStatement",
                                  "src": "17805:15:111"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 48392,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 48384,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 48383,
                                  "mutability": "mutable",
                                  "name": "user",
                                  "nameLocation": "17789:4:111",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 48392,
                                  "src": "17781:12:111",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 48382,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "17781:7:111",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "17780:14:111"
                            },
                            "src": "17772:57:111"
                          },
                          {
                            "block": {
                              "id": 48402,
                              "nodeType": "Block",
                              "src": "17836:40:111",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 48400,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 48393,
                                        "name": "users",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 48356,
                                        "src": "17846:5:111",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                          "typeString": "address[] memory"
                                        }
                                      },
                                      "id": 48395,
                                      "indexExpression": {
                                        "id": 48394,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 48365,
                                        "src": "17852:1:111",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "17846:8:111",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "arguments": [
                                        {
                                          "hexValue": "30",
                                          "id": 48398,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "17865:1:111",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          },
                                          "value": "0"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_0_by_1",
                                            "typeString": "int_const 0"
                                          }
                                        ],
                                        "id": 48397,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "17857:7:111",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 48396,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "17857:7:111",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 48399,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "17857:10:111",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "17846:21:111",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 48401,
                                  "nodeType": "ExpressionStatement",
                                  "src": "17846:21:111"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 48403,
                            "nodeType": "TryCatchClause",
                            "src": "17830:46:111"
                          }
                        ],
                        "externalCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 48376,
                                    "name": "_stakingAddrs",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 48346,
                                    "src": "17729:13:111",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                      "typeString": "address[] calldata"
                                    }
                                  },
                                  "id": 48378,
                                  "indexExpression": {
                                    "id": 48377,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 48365,
                                    "src": "17743:1:111",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "17729:16:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 48375,
                                "name": "IRarityPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49335,
                                "src": "17717:11:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IRarityPool_$49335_$",
                                  "typeString": "type(contract IRarityPool)"
                                }
                              },
                              "id": 48379,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17717:29:111",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRarityPool_$49335",
                                "typeString": "contract IRarityPool"
                              }
                            },
                            "id": 48380,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "17747:22:111",
                            "memberName": "getTargetBeingStakedOn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 49253,
                            "src": "17717:52:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 48381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17717:54:111",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 48404,
                        "nodeType": "TryStatement",
                        "src": "17713:163:111"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 48371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 48368,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48365,
                      "src": "17674:1:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 48369,
                        "name": "_stakingAddrs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48346,
                        "src": "17678:13:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 48370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17692:6:111",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "17678:20:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17674:24:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 48406,
                  "initializationExpression": {
                    "assignments": [
                      48365
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 48365,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "17667:1:111",
                        "nodeType": "VariableDeclaration",
                        "scope": 48406,
                        "src": "17659:9:111",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 48364,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "17659:7:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 48367,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 48366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17671:1:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "17659:13:111"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 48373,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "17700:3:111",
                      "subExpression": {
                        "id": 48372,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48365,
                        "src": "17700:1:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 48374,
                    "nodeType": "ExpressionStatement",
                    "src": "17700:3:111"
                  },
                  "nodeType": "ForStatement",
                  "src": "17654:228:111"
                },
                {
                  "expression": {
                    "id": 48407,
                    "name": "users",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 48356,
                    "src": "17895:5:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "functionReturnParameters": 48351,
                  "id": 48408,
                  "nodeType": "Return",
                  "src": "17888:12:111"
                }
              ]
            },
            "baseFunctions": [
              47191
            ],
            "documentation": {
              "id": 48343,
              "nodeType": "StructuredDocumentation",
              "src": "17295:171:111",
              "text": "@inheritdoc IRareStakingRegistry\n @dev Order maintained and zero address returned if it doesnt exist.\n @dev This function is intended to be called off chain."
            },
            "functionSelector": "18ab58ac",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUsersForStakingAddresses",
            "nameLocation": "17478:27:111",
            "parameters": {
              "id": 48347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48346,
                  "mutability": "mutable",
                  "name": "_stakingAddrs",
                  "nameLocation": "17525:13:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 48410,
                  "src": "17506:32:111",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 48344,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "17506:7:111",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 48345,
                    "nodeType": "ArrayTypeName",
                    "src": "17506:9:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17505:34:111"
            },
            "returnParameters": {
              "id": 48351,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48350,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48410,
                  "src": "17563:16:111",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 48348,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "17563:7:111",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 48349,
                    "nodeType": "ArrayTypeName",
                    "src": "17563:9:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17562:18:111"
            },
            "scope": 48572,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 48454,
            "nodeType": "FunctionDefinition",
            "src": "18425:259:111",
            "nodes": [],
            "body": {
              "id": 48453,
              "nodeType": "Block",
              "src": "18499:185:111",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    48419
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48419,
                      "mutability": "mutable",
                      "name": "_baseBytes",
                      "nameLocation": "18518:10:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48453,
                      "src": "18505:23:111",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 48418,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "18505:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48424,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 48422,
                        "name": "_base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48413,
                        "src": "18537:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 48421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "18531:5:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                        "typeString": "type(bytes storage pointer)"
                      },
                      "typeName": {
                        "id": 48420,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "18531:5:111",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 48423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18531:12:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18505:38:111"
                },
                {
                  "body": {
                    "id": 48446,
                    "nodeType": "Block",
                    "src": "18597:52:111",
                    "statements": [
                      {
                        "expression": {
                          "id": 48444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 48436,
                              "name": "_baseBytes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48419,
                              "src": "18605:10:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 48438,
                            "indexExpression": {
                              "id": 48437,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48426,
                              "src": "18616:1:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "18605:13:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 48440,
                                  "name": "_baseBytes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 48419,
                                  "src": "18628:10:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 48442,
                                "indexExpression": {
                                  "id": 48441,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 48426,
                                  "src": "18639:1:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "18628:13:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes1",
                                  "typeString": "bytes1"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes1",
                                  "typeString": "bytes1"
                                }
                              ],
                              "id": 48439,
                              "name": "_upper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48484,
                              "src": "18621:6:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes1_$returns$_t_bytes1_$",
                                "typeString": "function (bytes1) pure returns (bytes1)"
                              }
                            },
                            "id": 48443,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18621:21:111",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "src": "18605:37:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "id": 48445,
                        "nodeType": "ExpressionStatement",
                        "src": "18605:37:111"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 48432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 48429,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48426,
                      "src": "18569:1:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 48430,
                        "name": "_baseBytes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48419,
                        "src": "18573:10:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 48431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18584:6:111",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "18573:17:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18569:21:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 48447,
                  "initializationExpression": {
                    "assignments": [
                      48426
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 48426,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "18562:1:111",
                        "nodeType": "VariableDeclaration",
                        "scope": 48447,
                        "src": "18554:9:111",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 48425,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "18554:7:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 48428,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 48427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18566:1:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "18554:13:111"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 48434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "18592:3:111",
                      "subExpression": {
                        "id": 48433,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48426,
                        "src": "18592:1:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 48435,
                    "nodeType": "ExpressionStatement",
                    "src": "18592:3:111"
                  },
                  "nodeType": "ForStatement",
                  "src": "18549:100:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48450,
                        "name": "_baseBytes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48419,
                        "src": "18668:10:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 48449,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "18661:6:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 48448,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "18661:6:111",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 48451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18661:18:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 48417,
                  "id": 48452,
                  "nodeType": "Return",
                  "src": "18654:25:111"
                }
              ]
            },
            "documentation": {
              "id": 48411,
              "nodeType": "StructuredDocumentation",
              "src": "18118:304:111",
              "text": "@notice Converts all the values of a string to their corresponding upper case value. Taken from: https://github.com/willitscale/solidity-util\n @param _base When being used for a data type this is the extended object otherwise this is the string base to convert to upper case\n @return string"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "upper",
            "nameLocation": "18434:5:111",
            "parameters": {
              "id": 48414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48413,
                  "mutability": "mutable",
                  "name": "_base",
                  "nameLocation": "18454:5:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 48454,
                  "src": "18440:19:111",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 48412,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "18440:6:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18439:21:111"
            },
            "returnParameters": {
              "id": 48417,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48416,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48454,
                  "src": "18484:13:111",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 48415,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "18484:6:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18483:15:111"
            },
            "scope": 48572,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 48484,
            "nodeType": "FunctionDefinition",
            "src": "19045:162:111",
            "nodes": [],
            "body": {
              "id": 48483,
              "nodeType": "Block",
              "src": "19103:104:111",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 48468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      },
                      "id": 48464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 48462,
                        "name": "_b1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48457,
                        "src": "19113:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "hexValue": "30783631",
                        "id": 48463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19120:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_97_by_1",
                          "typeString": "int_const 97"
                        },
                        "value": "0x61"
                      },
                      "src": "19113:11:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      },
                      "id": 48467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 48465,
                        "name": "_b1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48457,
                        "src": "19128:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "hexValue": "30783741",
                        "id": 48466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19135:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_122_by_1",
                          "typeString": "int_const 122"
                        },
                        "value": "0x7A"
                      },
                      "src": "19128:11:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "19113:26:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 48480,
                  "nodeType": "IfStatement",
                  "src": "19109:77:111",
                  "trueBody": {
                    "id": 48479,
                    "nodeType": "Block",
                    "src": "19141:45:111",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "id": 48476,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 48473,
                                    "name": "_b1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 48457,
                                    "src": "19169:3:111",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes1",
                                      "typeString": "bytes1"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes1",
                                      "typeString": "bytes1"
                                    }
                                  ],
                                  "id": 48472,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "19163:5:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint8_$",
                                    "typeString": "type(uint8)"
                                  },
                                  "typeName": {
                                    "id": 48471,
                                    "name": "uint8",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "19163:5:111",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 48474,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "19163:10:111",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "3332",
                                "id": 48475,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "19176:2:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_32_by_1",
                                  "typeString": "int_const 32"
                                },
                                "value": "32"
                              },
                              "src": "19163:15:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "id": 48470,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "19156:6:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes1_$",
                              "typeString": "type(bytes1)"
                            },
                            "typeName": {
                              "id": 48469,
                              "name": "bytes1",
                              "nodeType": "ElementaryTypeName",
                              "src": "19156:6:111",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19156:23:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "functionReturnParameters": 48461,
                        "id": 48478,
                        "nodeType": "Return",
                        "src": "19149:30:111"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 48481,
                    "name": "_b1",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 48457,
                    "src": "19199:3:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "functionReturnParameters": 48461,
                  "id": 48482,
                  "nodeType": "Return",
                  "src": "19192:10:111"
                }
              ]
            },
            "documentation": {
              "id": 48455,
              "nodeType": "StructuredDocumentation",
              "src": "18688:354:111",
              "text": "@notice Convert an alphabetic character to upper case and return the original value when not alphabetic. Taken from: https://github.com/willitscale/solidity-util\n @param _b1 The byte to be converted to upper case\n @return bytes1 The converted value if the passed value was alphabetic and in a lower case otherwise returns the original value"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_upper",
            "nameLocation": "19054:6:111",
            "parameters": {
              "id": 48458,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48457,
                  "mutability": "mutable",
                  "name": "_b1",
                  "nameLocation": "19068:3:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 48484,
                  "src": "19061:10:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes1",
                    "typeString": "bytes1"
                  },
                  "typeName": {
                    "id": 48456,
                    "name": "bytes1",
                    "nodeType": "ElementaryTypeName",
                    "src": "19061:6:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19060:12:111"
            },
            "returnParameters": {
              "id": 48461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48460,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48484,
                  "src": "19095:6:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes1",
                    "typeString": "bytes1"
                  },
                  "typeName": {
                    "id": 48459,
                    "name": "bytes1",
                    "nodeType": "ElementaryTypeName",
                    "src": "19095:6:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19094:8:111"
            },
            "scope": 48572,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 48571,
            "nodeType": "FunctionDefinition",
            "src": "19778:493:111",
            "nodes": [],
            "body": {
              "id": 48570,
              "nodeType": "Block",
              "src": "19889:382:111",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    48497
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48497,
                      "mutability": "mutable",
                      "name": "_baseBytes",
                      "nameLocation": "19908:10:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48570,
                      "src": "19895:23:111",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 48496,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "19895:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48502,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 48500,
                        "name": "_base",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48487,
                        "src": "19927:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 48499,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "19921:5:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                        "typeString": "type(bytes storage pointer)"
                      },
                      "typeName": {
                        "id": 48498,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "19921:5:111",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 48501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19921:12:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19895:38:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 48512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              },
                              "id": 48508,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 48506,
                                "name": "_offset",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48491,
                                "src": "19955:7:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 48507,
                                "name": "_length",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48489,
                                "src": "19965:7:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int256",
                                  "typeString": "int256"
                                }
                              },
                              "src": "19955:17:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_int256",
                                "typeString": "int256"
                              }
                            ],
                            "id": 48505,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "19947:7:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 48504,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "19947:7:111",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19947:26:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 48510,
                            "name": "_baseBytes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48497,
                            "src": "19977:10:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 48511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "19988:6:111",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "19977:17:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "19947:47:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 48503,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "19940:6:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 48513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19940:55:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 48514,
                  "nodeType": "ExpressionStatement",
                  "src": "19940:55:111"
                },
                {
                  "assignments": [
                    48516
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48516,
                      "mutability": "mutable",
                      "name": "_tmp",
                      "nameLocation": "20016:4:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48570,
                      "src": "20002:18:111",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 48515,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "20002:6:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48524,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 48521,
                            "name": "_length",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48489,
                            "src": "20042:7:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          ],
                          "id": 48520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "20034:7:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 48519,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "20034:7:111",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 48522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20034:16:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 48518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "20023:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (string memory)"
                      },
                      "typeName": {
                        "id": 48517,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "20027:6:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      }
                    },
                    "id": 48523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20023:28:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20002:49:111"
                },
                {
                  "assignments": [
                    48526
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48526,
                      "mutability": "mutable",
                      "name": "_tmpBytes",
                      "nameLocation": "20070:9:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48570,
                      "src": "20057:22:111",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 48525,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "20057:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48531,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 48529,
                        "name": "_tmp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48516,
                        "src": "20088:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 48528,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "20082:5:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                        "typeString": "type(bytes storage pointer)"
                      },
                      "typeName": {
                        "id": 48527,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "20082:5:111",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 48530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20082:11:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20057:36:111"
                },
                {
                  "assignments": [
                    48533
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48533,
                      "mutability": "mutable",
                      "name": "j",
                      "nameLocation": "20108:1:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 48570,
                      "src": "20100:9:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 48532,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "20100:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48535,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 48534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "20112:1:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20100:13:111"
                },
                {
                  "body": {
                    "id": 48563,
                    "nodeType": "Block",
                    "src": "20191:45:111",
                    "statements": [
                      {
                        "expression": {
                          "id": 48561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 48554,
                              "name": "_tmpBytes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48526,
                              "src": "20199:9:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 48557,
                            "indexExpression": {
                              "id": 48556,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
                              "src": "20209:3:111",
                              "subExpression": {
                                "id": 48555,
                                "name": "j",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48533,
                                "src": "20209:1:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "20199:14:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 48558,
                              "name": "_baseBytes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48497,
                              "src": "20216:10:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 48560,
                            "indexExpression": {
                              "id": 48559,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48537,
                              "src": "20227:1:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "20216:13:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "src": "20199:30:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "id": 48562,
                        "nodeType": "ExpressionStatement",
                        "src": "20199:30:111"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 48550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 48543,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48537,
                      "src": "20154:1:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 48548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 48546,
                            "name": "_offset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48491,
                            "src": "20166:7:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 48547,
                            "name": "_length",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48489,
                            "src": "20176:7:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "src": "20166:17:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        ],
                        "id": 48545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "20158:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 48544,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "20158:7:111",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 48549,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20158:26:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "20154:30:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 48564,
                  "initializationExpression": {
                    "assignments": [
                      48537
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 48537,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "20132:1:111",
                        "nodeType": "VariableDeclaration",
                        "scope": 48564,
                        "src": "20124:9:111",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 48536,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "20124:7:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 48542,
                    "initialValue": {
                      "arguments": [
                        {
                          "id": 48540,
                          "name": "_offset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48491,
                          "src": "20144:7:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        ],
                        "id": 48539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "20136:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 48538,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "20136:7:111",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 48541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20136:16:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "20124:28:111"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 48552,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "20186:3:111",
                      "subExpression": {
                        "id": 48551,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48537,
                        "src": "20186:1:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 48553,
                    "nodeType": "ExpressionStatement",
                    "src": "20186:3:111"
                  },
                  "nodeType": "ForStatement",
                  "src": "20119:117:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 48567,
                        "name": "_tmpBytes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48526,
                        "src": "20256:9:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 48566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "20249:6:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 48565,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "20249:6:111",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 48568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20249:17:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 48495,
                  "id": 48569,
                  "nodeType": "Return",
                  "src": "20242:24:111"
                }
              ]
            },
            "documentation": {
              "id": 48485,
              "nodeType": "StructuredDocumentation",
              "src": "19211:564:111",
              "text": "@notice Extracts the part of a string based on the desired length and offset. The offset and length must not exceed the lenth of the base string. Taken from: https://github.com/willitscale/solidity-util\n @param _base When being used for a data type this is the extended object otherwise this is the string that will be used for extracting the sub string from\n @param _length The length of the sub string to be extracted from the base\n @param _offset The starting point to extract the sub string from\n @return string The extracted sub string"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_substring",
            "nameLocation": "19787:10:111",
            "parameters": {
              "id": 48492,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48487,
                  "mutability": "mutable",
                  "name": "_base",
                  "nameLocation": "19812:5:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 48571,
                  "src": "19798:19:111",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 48486,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "19798:6:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48489,
                  "mutability": "mutable",
                  "name": "_length",
                  "nameLocation": "19826:7:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 48571,
                  "src": "19819:14:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 48488,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19819:6:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48491,
                  "mutability": "mutable",
                  "name": "_offset",
                  "nameLocation": "19842:7:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 48571,
                  "src": "19835:14:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 48490,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19835:6:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19797:53:111"
            },
            "returnParameters": {
              "id": 48495,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48494,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48571,
                  "src": "19874:13:111",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 48493,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "19874:6:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19873:15:111"
            },
            "scope": 48572,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 47262,
              "name": "IRareStakingRegistry",
              "nameLocations": [
                "1804:20:111"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 47228,
              "src": "1804:20:111"
            },
            "id": 47263,
            "nodeType": "InheritanceSpecifier",
            "src": "1804:20:111"
          },
          {
            "baseName": {
              "id": 47264,
              "name": "AccessControlEnumerableUpgradeable",
              "nameLocations": [
                "1826:34:111"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30500,
              "src": "1826:34:111"
            },
            "id": 47265,
            "nodeType": "InheritanceSpecifier",
            "src": "1826:34:111"
          },
          {
            "baseName": {
              "id": 47266,
              "name": "UUPSUpgradeable",
              "nameLocations": [
                "1862:15:111"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31845,
              "src": "1862:15:111"
            },
            "id": 47267,
            "nodeType": "InheritanceSpecifier",
            "src": "1862:15:111"
          }
        ],
        "canonicalName": "RareStakingRegistry",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 47261,
          "nodeType": "StructuredDocumentation",
          "src": "1535:237:111",
          "text": "@author koloz, charlescrain\n @title RareStakingRegistry\n @notice The Staking Registry contract that holds info such as the staking contract for a given user and global staking stats.\n @dev Made to be used with a UUPS Proxy."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          48572,
          31845,
          31530,
          31193,
          31206,
          30500,
          30836,
          34453,
          34465,
          30861,
          30934,
          33996,
          31709,
          47228
        ],
        "name": "RareStakingRegistry",
        "nameLocation": "1781:19:111",
        "scope": 48573,
        "usedErrors": [
          46991,
          46994,
          46997,
          47000,
          47003,
          47006,
          47009,
          47012
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 111
}