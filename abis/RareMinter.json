{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "limit",
          "type": "uint256"
        }
      ],
      "name": "ContractMintLimitSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minimum",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endTimestamp",
          "type": "uint256"
        }
      ],
      "name": "ContractStakingMinimumSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "limit",
          "type": "uint256"
        }
      ],
      "name": "ContractTxLimitSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_contractAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_seller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_buyer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_tokenIdStart",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_tokenIdEnd",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "MintDirectSale",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_contractAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_startTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_maxMints",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address payable[]",
          "name": "splitRecipients",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint8[]",
          "name": "splitRatios",
          "type": "uint8[]"
        }
      ],
      "name": "PrepareMintDirectSale",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "_root",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_endTimestamp",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_contractAddress",
          "type": "address"
        }
      ],
      "name": "SetContractAllowListConfig",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contractAddress",
          "type": "address"
        }
      ],
      "name": "getContractAllowListConfig",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "root",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "endTimestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct IRareMinter.AllowListConfig",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contractAddress",
          "type": "address"
        }
      ],
      "name": "getContractMintLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contractAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getContractMintsPerAddress",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contractAddress",
          "type": "address"
        }
      ],
      "name": "getContractSellerStakingMinimum",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTimestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct IRareMinter.StakingMinimum",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contractAddress",
          "type": "address"
        }
      ],
      "name": "getContractTxLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contractAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getContractTxsPerAddress",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contractAddress",
          "type": "address"
        }
      ],
      "name": "getDirectSaleConfig",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "currencyAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxMints",
              "type": "uint256"
            },
            {
              "internalType": "address payable[]",
              "name": "splitRecipients",
              "type": "address[]"
            },
            {
              "internalType": "uint8[]",
              "name": "splitRatios",
              "type": "uint8[]"
            }
          ],
          "internalType": "struct IRareMinter.DirectSaleConfig",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_networkBeneficiary",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_marketplaceSettings",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_spaceOperatorRegistry",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_royaltyEngine",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_payments",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_approvedTokenRegistry",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_stakingSettings",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_stakingRegistry",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contractAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_currencyAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "_numMints",
          "type": "uint8"
        },
        {
          "internalType": "bytes32[]",
          "name": "_proof",
          "type": "bytes32[]"
        }
      ],
      "name": "mintDirectSale",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contractAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_currencyAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxMints",
          "type": "uint256"
        },
        {
          "internalType": "address payable[]",
          "name": "_splitRecipients",
          "type": "address[]"
        },
        {
          "internalType": "uint8[]",
          "name": "_splitRatios",
          "type": "uint8[]"
        }
      ],
      "name": "prepareMintDirectSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_approvedTokenRegistry",
          "type": "address"
        }
      ],
      "name": "setApprovedTokenRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_root",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_endTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_contractAddress",
          "type": "address"
        }
      ],
      "name": "setContractAllowListConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_limit",
          "type": "uint256"
        }
      ],
      "name": "setContractMintLimit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_minimum",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endTimestamp",
          "type": "uint256"
        }
      ],
      "name": "setContractSellerStakingMinimum",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contractAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_limit",
          "type": "uint256"
        }
      ],
      "name": "setContractTxLimit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_marketplaceSettings",
          "type": "address"
        }
      ],
      "name": "setMarketplaceSettings",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_networkBeneficiary",
          "type": "address"
        }
      ],
      "name": "setNetworkBeneficiary",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_payments",
          "type": "address"
        }
      ],
      "name": "setPayments",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_royaltyEngine",
          "type": "address"
        }
      ],
      "name": "setRoyaltyEngine",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_spaceOperatorRegistry",
          "type": "address"
        }
      ],
      "name": "setSpaceOperatorRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a08060405234610031573060805261461b90816100378239608051818181612eb101528181612fdd015261337e0152f35b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c90816304c1ff071461388d575080630fc635b31461373b578063176ab440146136b657806321ede0321461363957806323946f1f146135ff5780632da45e8e146135af5780633492e5a8146135325780633659cfe6146133595780634cf5f910146132315780634f1ef28614612f6257806352d1902d14612e9e578063677b198414612c92578063715018a614612c3457806378c19898146126bc5780637f3582301461263f5780638a29e2de146122175780638da5cb5b146121ee5780639890cddf146121815780639dbef5d114612057578063a01fa6a914611bb3578063af231a5814611b36578063ca774e6814611ae6578063d647ed3c146102a8578063e4e87e3b1461020c578063f2fde38b1461017b5763fa5312c81461013f57600080fd5b34610178576020366003190112610178576020906040906001600160a01b036101666138dc565b16815261010783522054604051908152f35b80fd5b5034610178576020366003190112610178576101956138dc565b61019d6139fc565b6001600160a01b038116156101b8576101b590613a54565b80f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b503461017857602036600319011261017857806102276138dc565b61022f6139fc565b73__$7682c538d2a75d26dfca907f0e750789f4$__90813b156102a4576040516386e5800760e01b815260fb60048201526001600160a01b039091166024820152908290829060449082905af48015610299576102895750f35b61029290613939565b6101785780f35b6040513d84823e3d90fd5b5050fd5b5060a0366003190112610178576102bd6138dc565b6102c5613908565b6064359060ff82168203610e64576084356001600160401b038111610de6576102f29036906004016139be565b9190600260655414611aa15760026065556001600160a01b03851686526101036020526040808720905193906103278561394c565b60018060a01b03815416855260018060a01b036001820154166020860152600281015460408601526003810154606086015260048101546080860152604051806005830190602082549182815201918b5260208b20908b5b818110611a82575050509061039981600694930382613982565b60a0870152604051910180548083529089526020808a209183918201908b905b80601f8301106118ed576104cf9454918181106118d9575b8181106118c2575b8181106118ab575b818110611894575b81811061187e575b818110611867575b818110611850575b818110611839575b818110611822575b81811061180b575b8181106117f4575b8181106117dd575b8181106117c6575b8181106117af575b818110611798575b818110611781575b81811061176a575b818110611753575b81811061173c575b818110611725575b81811061170e575b8181106116f7575b8181106116e0575b8181106116c9575b8181106116b2575b81811061169b575b818110611684575b81811061166d575b818110611656575b81811061163f575b818110611628575b1061161a575b500382613982565b60c085015283516001600160a01b0316156115b7576104ed81613d71565b916104fb6040519384613982565b8183526020830190368360051b820111610e0a5780915b8360051b820183106115a7575050505061052d903386613fb7565b8151610542906001600160a01b031685613e05565b60ff83161561154d576001600160a01b0384168552610105602052604085205415801561150b575b156114ae576001600160a01b03841685526101076020526040852054158015611468575b1561140457608082015180159081156113f6575b501561138b576060820151421061133a576040820151604435036112d9576001600160a01b038116158015611275575b156112385760208201516001600160a01b038281169116036111cd576105fd60443560ff8516613d9c565b916040810151611145575b6001600160a01b0385168652610105602052604086205461111a575b6001600160a01b038516865261010760205260408620546110da575b60405163755edd1760e01b8152336004820152926020846024818a6001600160a01b038b165af1938415610b6e5787946110a6575b5060fc5487906001600160a01b0316803b156110a257604051635a3c652d60e01b81526001600160a01b038916600482015260248101879052600160448201529082908290606490829084905af161108e575b505060015b60ff86168110610fac57506040820151610773575b50516001600160a01b0316926106fb9060ff1683613ddc565b600019810190811161075f576040805193845260208401919091526001600160a01b03918216908301526044356060830152339316907f3bbd73fed0f94290f16db112f6b7113697c2502dd42aa0ddf8f971472523f10090608090a4600160655580f35b634e487b7160e01b86526011600452602486fd5b92909491939560018060a01b038651169260a08701519760c0880151948951865103610f4b5760fc546040516361fe24a960e11b815260048101899052908890602090839060249082906001600160a01b03165afa918215610f40578692610f0c575b50604051916107e483613967565b60028352604036602085013760fb546001600160a01b031680610806856140ff565b526101025460405163e286ef3360e01b81526004810187905290602090829060249082906001600160a01b03165afa908115610e71578991610ed2575b506001600160a01b031661085685614122565b526001600160a01b0361086885614122565b5116610eb9575b61087884614122565b6001600160a01b03909116905260405161089181613967565b600281526040366020830137610101546040516303fdde1160e21b8152600481018d90526001600160a01b0390911690602081602481855afa908115610eae578a91610e7c575b506108e2836140ff565b5260208c60246040518094819363470d6ed960e11b835260048301525afa908115610e71579085918a91610e35575b50926109279361092084614122565b528d61446e565b60fc54604051631446f21360e21b81526001600160a01b038781166004830152602482018a9052909160209183916044918391165afa908115610b6e578791610e16575b50610c15576040519261097d8461391e565b6001845260203681860137604051926109958461391e565b60018452602036818601376001600160a01b03906109b2906140ff565b51166109bd846140ff565b5260fd54604051635dc22eff60e01b81526004810183905290602090829060249082906001600160a01b03165afa908115610c0a578891610bdb575b5015610b795760fd54604051632260494f60e01b81526004810192909252602090829060249082906001600160a01b03165afa908115610b6e578a610a61610a829695946064610a5a60ff8297610a67978f91610b3f575b50168095613d9c565b0490613df8565b9b613d9c565b04610a71836140ff565b52610a7b826140ff565b518a61446e565b885193610a8e85613d71565b94610a9c6040519687613982565b808652610aab601f1991613d71565b01366020870137839784985b8b518a1015610b1b57610b0f610b15916064610b0860ff610b008f8f8f908f908388610af3610afa9389610aeb8589614132565b511690613d9c565b0492614132565b52614132565b51168d613d9c565b0490613ddc565b99613de9565b98610ab7565b610b389399506106fb9692985060ff959b9197509993998761446e565b91506106e2565b610b61915060203d602011610b67575b610b598183613982565b810190614455565b38610a51565b503d610b4f565b6040513d89823e3d90fd5b5060fc5460405163b28a7bad60e01b81526001600160a01b038781166004830152909160209183916024918391165afa908115610b6e578a610a61610bd69695946064610a5a60ff8297610a67978f91610b3f5750168095613d9c565b610a82565b610bfd915060203d602011610c03575b610bf58183613982565b810190614146565b386109f9565b503d610beb565b6040513d8a823e3d90fd5b5050509794969391809693918160018060a01b0360fe541660648b6040519b8c938492637a99dc0160e11b845260018060a01b038816600485015289602485015260448401525af1998a15610299578298839b610cc1575b50829883995b8c518b1015610ca157610c95610c9b91610c8e8f8e90614132565b5190613ddc565b9a613de9565b99610c73565b989b919395979a610bd69395979a5089610cba91613df8565b988a61446e565b985099503d978883823e610cd58982613982565b6040818a81010312610e125780516001600160401b038111610e0e57810190898101601f83011215610e0e57815191610d0d83613d71565b92610d1b6040519485613982565b80845260208401918c840160208360051b83010111610de25760208101925b60208360051b8301018410610dea57505050506020810151996001600160401b038b11610de657808201601f8c8401011215610de6578a82015191610d7e83613d71565b9b610d8c6040519d8e613982565b838d5260208d0192820160208560051b838501010111610de2579190602083820101925b60208560051b82840101018410610dce575050505050979938610c6d565b602080809486518152019401939250610db0565b8680fd5b8480fd5b83516001600160a01b0381168103610e0a57815260209384019301610d3a565b8880fd5b8380fd5b8280fd5b610e2f915060203d602011610c0357610bf58183613982565b3861096b565b9150506020813d602011610e69575b81610e5160209383613982565b81010312610e6457518490610927610911565b600080fd5b3d9150610e44565b6040513d8b823e3d90fd5b90506020813d602011610ea6575b81610e9760209383613982565b81010312610e645751386108d8565b3d9150610e8a565b6040513d8c823e3d90fd5b506001600160a01b03610ecb84614122565b511661086f565b90506020813d602011610f04575b81610eed60209383613982565b81010312610e0a57610efe90613cfd565b38610843565b3d9150610ee0565b9091506020813d602011610f38575b81610f2860209383613982565b81010312610e64575190386107d6565b3d9150610f1b565b6040513d88823e3d90fd5b60405162461bcd60e51b815260206004820152603360248201527f4e756d626572206f662073706c69742061646472657373657320616e642072616044820152723a34b7b99036bab9ba1031329032b8bab0b61760691b6064820152608490fd5b60405163755edd1760e01b81523360048201526020816024818c6001600160a01b038d165af18015610e7157611063575b5060fc5488906001600160a01b0316610ff68388613ddc565b813b15610e1257604051635a3c652d60e01b81526001600160a01b038b1660048201526024810191909152600160448201529082908290606490829084905af161104b575b505061104690613de9565b6106cd565b61105490613939565b61105f57873861103b565b8780fd5b602090813d8311611087575b6110798183613982565b81010312610e645738610fdd565b503d61106f565b61109790613939565b610de25786386106c8565b5080fd5b9093506020813d6020116110d2575b816110c260209383613982565b81010312610e6457519238610675565b3d91506110b5565b610108602052604086203360005260205260406000208054600181018111611106576001019055610640565b634e487b7160e01b88526011600452602488fd5b6101066020526040862033600052602052604060002061113e60ff86168254613ddc565b9055610624565b60fc546040516361fe24a960e11b81526004810185905290602090829060249082906001600160a01b03165afa908115610b6e578791611199575b5061118e6111949185613ddc565b8361415e565b610608565b90506020813d6020116111c5575b816111b460209383613982565b81010312610e64575161118e611180565b3d91506111a7565b60405162461bcd60e51b815260206004820152603960248201527f6d696e7444697265637453616c653a3a43757272656e637920646f6573206e6f60448201527f74206d617463682072657175697265642063757272656e6379000000000000006064820152608490fd5b60405162461bcd60e51b81526020600482015260156024820152744e6f7420617070726f7665642063757272656e637960581b6044820152606490fd5b5061010054604051632d5ad3d560e01b81526001600160a01b038381166004830152909160209183916024918391165afa908115610f405786916112ba575b506105d2565b6112d3915060203d602011610c0357610bf58183613982565b386112b4565b60405162461bcd60e51b815260206004820152603360248201527f6d696e7444697265637453616c653a3a507269636520646f6573206e6f74206d6044820152726174636820726571756972656420707269636560681b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f6d696e7444697265637453616c653a3a53616c6520686173206e6f74207374616044820152631c9d195960e21b6064820152608490fd5b60405162461bcd60e51b815260206004820152603a60248201527f6d696e7444697265637453616c653a3a4d696e7473206d757374206265206c6560448201527f7373207468616e206d61784d696e7420696620656e61626c65640000000000006064820152608490fd5b905060ff84161115386105a2565b60405162461bcd60e51b815260206004820152603660248201527f6d696e7444697265637453616c653a3a4578636565646564207472616e73616360448201527574696f6e206c696d697420666f72206164647265737360501b6064820152608490fd5b50610108602052604085203360005260205260406000205460018101811161075f576001600160a01b03851686526101076020526040862054600191909101111561058e565b60405162461bcd60e51b815260206004820152602f60248201527f6d696e7444697265637453616c653a3a4578636565646564206d696e74206c6960448201526e6d697420666f72206164647265737360881b6064820152608490fd5b50610106602052604085203360005260205261152f60ff8416604060002054613ddc565b6001600160a01b03851686526101056020526040862054101561056a565b60405162461bcd60e51b815260206004820152602c60248201527f6d696e7444697265637453616c653a3a4d696e7473206d75737420626520677260448201526b06561746572207468616e20360a41b6064820152608490fd5b8235815260209283019201610512565b60405162461bcd60e51b815260206004820152603560248201527f6d696e7444697265637453616c653a3a436f6e7472616374206e6f7420707265604482015274706172656420666f72206469726563742073616c6560581b6064820152608490fd5b60f81c8152602001386104c7565b92602060019160ff8560f01c1681520193016104c1565b92602060019160ff8560e81c1681520193016104b9565b92602060019160ff8560e01c1681520193016104b1565b92602060019160ff8560d81c1681520193016104a9565b92602060019160ff8560d01c1681520193016104a1565b92602060019160ff8560c81c168152019301610499565b92602060019160ff8560c01c168152019301610491565b92602060019160ff8560b81c168152019301610489565b92602060019160ff8560b01c168152019301610481565b92602060019160ff8560a81c168152019301610479565b92602060019160ff8560a01c168152019301610471565b92602060019160ff8560981c168152019301610469565b92602060019160ff8560901c168152019301610461565b92602060019160ff8560881c168152019301610459565b92602060019160ff8560801c168152019301610451565b92602060019160ff8560781c168152019301610449565b92602060019160ff8560701c168152019301610441565b92602060019160ff8560681c168152019301610439565b92602060019160ff8560601c168152019301610431565b92602060019160ff8560581c168152019301610429565b92602060019160ff8560501c168152019301610421565b92602060019160ff8560481c168152019301610419565b92602060019160ff8560401c168152019301610411565b92602060019160ff8560381c168152019301610409565b92602060019160ff8560301c168152019301610401565b92602060019160ff8560281c1681520193016103f9565b92602060019160ff85831c1681520193016103f1565b92602060019160ff8560181c1681520193016103e9565b92602060019160ff8560101c1681520193016103e1565b92602060019160ff8560081c1681520193016103d9565b92602060019160ff851681520193016103d1565b916020919350610400600191865460ff8116825260ff8160081c168583015260ff8160101c16604083015260ff8160181c16606083015260ff81861c16608083015260ff8160281c1660a083015260ff8160c0828260301c1681860152828260381c1660e0860152828260401c16610100860152828260481c16610120860152828260501c16610140860152828260581c16610160860152828260601c16610180860152828260681c166101a0860152828260701c166101c0860152828260781c166101e0860152828260801c16610200860152828260881c16610220860152828260901c16610240860152828260981c16610260860152828260a01c16610280860152828260a81c166102a0860152828260b01c166102c0860152828260b81c166102e08601521c1661030083015260ff8160c81c1661032083015260ff8160d01c1661034083015260ff8160d81c1661036083015260ff8160e01c1661038083015260ff8160e81c166103a083015260ff8160f01c166103c083015260f81c6103e08201520194019201849293916103b9565b82546001600160a01b031684526020909301926001928301920161037f565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b503461017857604036600319011261017857611b006138dc565b6040611b0a613908565b9260018060a01b0380931681526101066020522091166000526020526020604060002054604051908152f35b50346101785760203660031901126101785780611b516138dc565b611b596139fc565b73__$7682c538d2a75d26dfca907f0e750789f4$__90813b156102a45760405163c70c56c760e01b815260fb60048201526001600160a01b039091166024820152908290829060449082905af48015610299576102895750f35b503461017857602036600319011261017857611bcd6138dc565b606060c0604051611bdd8161394c565b84815284602082015284604082015284838201528460808201528260a0820152015260018060a01b03168152610103602052604081209060405191611c218361394c565b60018060a01b03815416835260018060a01b0360018201541660208401526002810154604084015260038101546060840152600481015460808401526005810160405190816020825491828152019185526020852090855b8181106120385750505090611c9381600694930382613982565b60a085015260405191018054808352908352602080842091839182019085905b80601f830110611e9057611da99454918181106118d9578181106118c2578181106118ab578181106118945781811061187e578181106118675781811061185057818110611839578181106118225781811061180b578181106117f4578181106117dd578181106117c6578181106117af57818110611798578181106117815781811061176a578181106117535781811061173c578181106117255781811061170e578181106116f7578181106116e0578181106116c9578181106116b25781811061169b578181106116845781811061166d578181106116565781811061163f57818110611628571061161a57500382613982565b60c08301526040519182916020835261010083019160018060a01b03815116602085015260018060a01b0360208201511660408501526040810151606085015260608101516080850152608081015160a085015260a08101519260e060c0860152835180915260206101208601940190835b818110611e6e5750505060c0015191601f198482030160e0850152602080845192838152019301915b818110611e52575050500390f35b825160ff16845285945060209384019390920191600101611e44565b82516001600160a01b0316865287965060209586019590920191600101611e1b565b916020919350610400600191865460ff8116825260ff8160081c168583015260ff8160101c16604083015260ff8160181c16606083015260ff81861c16608083015260ff8160281c1660a083015260ff8160301c1660c083015260ff8160381c1660e083015260ff8160401c1661010083015260ff8160481c1661012083015260ff8160501c1661014083015260ff8160581c1661016083015260ff8160601c1661018083015260ff8160681c166101a083015260ff8160701c166101c083015260ff8160781c166101e083015260ff8160801c1661020083015260ff8160881c1661022083015260ff8160901c1661024083015260ff8160981c1661026083015260ff8160a01c1661028083015260ff8160a81c166102a083015260ff8160b01c166102c083015260ff8160b81c166102e083015260ff8160c01c1661030083015260ff8160c81c1661032083015260ff8160d01c1661034083015260ff8160d81c1661036083015260ff8160e01c1661038083015260ff8160e81c166103a083015260ff8160f01c166103c083015260f81c6103e0820152019401920184929391611cb3565b82546001600160a01b0316845260209093019260019283019201611c79565b5034610178576040366003190112610178576120716138dc565b604051638da5cb5b60e01b81526001600160a01b039182169160209160243591908381600481885afa908115610f40578691612148575b501633036120eb57907f5c8158ce792c8da34f9a8974acdb882c2c9cecc225c4ccf3c4a119aa2c726070918385526101078252806040862055604051908152a280f35b60405162461bcd60e51b815260048101839052602f60248201527f736574436f6e747261637454784c696d69743a3a4f6e6c7920636f6e7472616360448201526e1d081bdddb995c8818d85b881cd95d608a1b6064820152608490fd5b90508381813d831161217a575b61215f8183613982565b810103126121765761217090613cfd565b386120a8565b8580fd5b503d612155565b5034610178576020366003190112610178576040809161219f6138dc565b6000602084516121ae8161391e565b82815201526001600160a01b031681526101096020522081516121d08161391e565b60206001835493848452015491019081528251918252516020820152f35b50346101785780600319360112610178576033546040516001600160a01b039091168152602090f35b503461017857610100366003190112610178576122326138dc565b61223a613908565b906122436138f2565b6064356001600160a01b0381168103610e64576084356001600160a01b0381168103610e645760a435906001600160a01b0382168203610e645760c435926001600160a01b0384168403610e645760e435946001600160a01b0386168603610e645788549760ff8960081c16159889809a612632575b801561261b575b156125bf5760ff1981166001178b55896125ae575b506040516323e95fa960e01b81526001600160a01b039889166004820152908816602482015290871660448201529086166064820152908516608482015290841660a482015290831660c4820152911660e4820152610100816101048173__$7682c538d2a75d26dfca907f0e750789f4$__5af49081156125a3578391612477575b5060018060a01b03815116906001600160601b0360a01b918260fb54161760fb5560018060a01b036020820151168260fc54161760fc5560018060a01b036040820151168260fd54161760fd5560018060a01b036060820151168260fe54161760fe5560018060a01b036080820151168260ff54161760ff5560018060a01b0360a082015116826101005416176101005560018060a01b0360c082015116610101908382541617905560e060018060a01b03910151166101029182541617905561243060ff835460081c1661242b81613d11565b613d11565b61243933613a54565b6124405780f35b61ff001981541681557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a180f35b9050610100813d6101001161259b575b816124956101009383613982565b81010312610e12576040519061010082018281106001600160401b03821117612585576040526124c481613cfd565b825260208101516001600160a01b0381168103610de657602083015260408101516001600160a01b0381168103610de657604083015260608101516001600160a01b0381168103610de657606083015260808101516001600160a01b0381168103610de657608083015260a08101516001600160a01b0381168103610de65760a083015260c0810151906001600160a01b0382168203610de65760c083019190915260e001516001600160a01b0381168103610e0e5760e082015238612357565b634e487b7160e01b600052604160045260246000fd5b3d9150612487565b6040513d85823e3d90fd5b61ffff1916610101178a55386122d5565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156122c05750600160ff8216146122c0565b50600160ff8216106122b9565b5034610178576020366003190112610178578061265a6138dc565b6126626139fc565b73__$7682c538d2a75d26dfca907f0e750789f4$__90813b156102a457604051630cf1420760e21b815260fb60048201526001600160a01b039091166024820152908290829060449082905af48015610299576102895750f35b50346101785760e0366003190112610178576126d66138dc565b6126de613908565b9060a4356001600160401b038111610e0e576126fe9036906004016139be565b60c4356001600160401b0381116121765761271d9036906004016139be565b604051638da5cb5b60e01b8152919390916020816004816001600160a01b038a165afa908115610c0a578891612bfa575b50336001600160a01b0390911603612b835760405161276c8161394c565b3381526001600160a01b038716602082015260443560408201526064356060820152608435608082015261279f84613d71565b6127ac6040519182613982565b84815260208101368660051b850111612b675783905b8660051b85018210612b6b57505060a08201526127de83613d71565b6127eb6040519182613982565b83815260208101368560051b880111612b675786905b8560051b88018210612b4f57505060c082015260018060a01b0386168852610103602052604088209060018060a01b038151166001600160601b0360a01b8354161782556001820160018060a01b036020830151166001600160601b0360a01b82541617905560408101516002830155606081015160038301556080810151600483015560a08101518051906001600160401b038211612b3b57600160401b8211612b3b576020908b600586015484600588015584818110612b1d575b50505001600584018b5260208b208b5b838110612b00575050505060c00151908151906001600160401b038211612aec57600160401b8211612aec57600660209101928354838555808410612aa2575b50019189526020892090895b8160051c8110612a635750601f198116810380612a16575b5050505091604051928160a0850160443586526064356020870152608435604087015260a060608701525260c084019091885b8181106129ea575050602091508381036080850152828152019290865b8181106129c8575033956001600160a01b039081169516937f36de0d2c8eec9296de665d70b6b6e55d8c29bfa7a36e0178e805ef54725d9f5c939081900392509050a480f35b90919360208060019260ff6129dc896139ee565b168152019501929101612982565b909160019060209081906001600160a01b03612a0588613d88565b168152019401910192919092612965565b928a938b5b818110612a335750505060051c015538808080612932565b9091946020612a596001928460ff8a5116919060ff809160031b9316831b921b19161790565b9601929101612a1b565b8a8b5b60208110612a7b57508382015560010161291a565b855190959160019160209160ff60038a901b81811b199092169216901b1792019501612a66565b612acc90858d52838d20601f80870160051c82019281881680612ad2575b500160051c0190613dc5565b3861290e565b60001990818601918254918a0360031b1c16905538612ac0565b634e487b7160e01b8a52604160045260248afd5b82516001600160a01b0316818301556020909201916001016128ce565b84612b339360058a018152209182019101613dc5565b8b38846128be565b634e487b7160e01b8b52604160045260248bfd5b60208091612b5c846139ee565b815201910190612801565b8980fd5b60208091612b7884613d88565b8152019101906127c2565b60a460405162461bcd60e51b815260206004820152604460248201527f707265706172654d696e7444697265637453616c653a3a4f6e6c79206d696e7460448201527f20636f6e7472616374206f776e65722063616e207072657061726520746865206064820152631b5a5b9d60e21b6084820152fd5b90506020813d602011612c2c575b81612c1560209383613982565b8101031261105f57612c2690613cfd565b3861274e565b3d9150612c08565b5034610178578060031936011261017857612c4d6139fc565b603380546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5034610178576060366003190112610178576001600160a01b0380612cb56138dc565b1660405191638da5cb5b60e01b83526020928381600481865afa8015612df05782918691612e66575b50163303612dfb57602483826101025416604051928380926381d0606b60e01b82523360048301525afa908115612df0578591612dbb575b501615612d505760019061010960405193612d308561391e565b602435855280850192604435845286525260408420925183555191015580f35b60405162461bcd60e51b815260048101839052603c60248201527f736574436f6e747261637453656c6c65725374616b696e674d696e696d756d3a60448201527f3a53656c6c657220646f6573206e6f742068617665206120706f6f6c000000006064820152608490fd5b90508381813d8311612de9575b612dd28183613982565b81010312610de657612de390613cfd565b38612d16565b503d612dc8565b6040513d87823e3d90fd5b60405162461bcd60e51b815260048101849052603c60248201527f736574436f6e747261637453656c6c65725374616b696e674d696e696d756d3a60448201527f3a4f6e6c7920636f6e7472616374206f776e65722063616e20736574000000006064820152608490fd5b809250858092503d8311612e97575b612e7f8183613982565b81010312610de657612e918291613cfd565b38612cde565b503d612e75565b50346101785780600319360112610178577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163003612ef75760206040516000805160206145c68339815191528152f35b60405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608490fd5b50604036600319011261017857612f776138dc565b602435906001600160401b038211610e125736602383011215610e12578160040135612fa2816139a3565b90612fb06040519283613982565b80825284602094858401923660248284010111610e12578060248893018537840101526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169061300b30831415613a9d565b6130286000805160206145c6833981519152928284541614613afe565b6130306139fc565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561306857505050506101b59150613b5f565b84939416906040516352d1902d60e01b81528681600481865afa60009181613202575b506130ec5760405162461bcd60e51b815260048101889052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b959495036131ab576130fd83613b5f565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a28351158015906131a3575b613139575b5050505080f35b60008091613199957f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c6040519661316f88613967565b60278852870152660819985a5b195960ca1b60408701525190845af4613193613bef565b91613c1f565b5038808080613132565b50600161312d565b60405162461bcd60e51b815260048101859052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b90918882813d831161322a575b6132198183613982565b81010312610178575051903861308b565b503d61320f565b50346101785760403660031901126101785761324b6138dc565b604051638da5cb5b60e01b81526001600160a01b039182169160209160243591908381600481885afa908115610f40578691613324575b501633036132c557907fa9d9d6bd10e1caf4891001b6ccccdad5384a544c63cc903d40182c0a5a139cd9918385526101058252806040862055604051908152a280f35b60405162461bcd60e51b815260048101839052603160248201527f736574436f6e74726163744d696e744c696d69743a3a4f6e6c7920636f6e74726044820152701858dd081bdddb995c8818d85b881cd95d607a1b6064820152608490fd5b90508381813d8311613352575b61333b8183613982565b810103126121765761334c90613cfd565b38613282565b503d613331565b5034610178576020806003193601126110a2576133746138dc565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116906133ac30831415613a9d565b6133c96000805160206145c6833981519152928284541614613afe565b6133d16139fc565b60405191848301918383106001600160401b03841117612585578260405286845260ff7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143541660001461342c57505050506101b59150613b5f565b84939416906040516352d1902d60e01b81528681600481865afa60009181613503575b506134b05760405162461bcd60e51b815260048101889052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b959495036131ab576134c183613b5f565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a28351158015906134fb57613139575050505080f35b50600061312d565b90918882813d831161352b575b61351a8183613982565b81010312610178575051903861344f565b503d613510565b5034610178576020366003190112610178578061354d6138dc565b6135556139fc565b73__$7682c538d2a75d26dfca907f0e750789f4$__90813b156102a45760405163dec30e3360e01b815260fb60048201526001600160a01b039091166024820152908290829060449082905af48015610299576102895750f35b5034610178576040366003190112610178576135c96138dc565b60406135d3613908565b9260018060a01b0380931681526101086020522091166000526020526020604060002054604051908152f35b5034610178576020366003190112610178576020906040906001600160a01b036136276138dc565b16815261010583522054604051908152f35b503461017857602036600319011261017857806136546138dc565b61365c6139fc565b73__$7682c538d2a75d26dfca907f0e750789f4$__90813b156102a45760405163ebda042b60e01b815260fb60048201526001600160a01b039091166024820152908290829060449082905af48015610299576102895750f35b5034610178576020366003190112610178576136d06138dc565b6136d86139fc565b8173__$7682c538d2a75d26dfca907f0e750789f4$__91823b156110a257604051632c55921b60e01b815260fb60048201526001600160a01b03909116602482015291829060449082905af4801561029957613732575080f35b6101b590613939565b5034610178576060366003190112610178576024356004356001600160a01b03806137646138f2565b169260405191638da5cb5b60e01b83526020928381600481895afa908115610b6e578791613858575b501633036137ed57907fff2ce9a528a62cad638cc9f5bccd36a62ecfa9aa0b1ab82c98957cb3498b4b67916040516137c48161391e565b84815260018382018381528789526101048552604089209251835551910155604051908152a380f35b60405162461bcd60e51b815260048101839052603760248201527f736574436f6e7472616374416c6c6f774c697374436f6e6669673a3a4f6e6c7960448201527f20636f6e7472616374206f776e65722063616e207365740000000000000000006064820152608490fd5b90508381813d8311613886575b61386f8183613982565b81010312610de25761388090613cfd565b3861378d565b503d613865565b9050346110a25760203660031901126110a25760408281928160206138b06138dc565b926138ba8161391e565b82815201526001600160a01b031681526101046020522081516121d08161391e565b600435906001600160a01b0382168203610e6457565b604435906001600160a01b0382168203610e6457565b602435906001600160a01b0382168203610e6457565b604081019081106001600160401b0382111761258557604052565b6001600160401b03811161258557604052565b60e081019081106001600160401b0382111761258557604052565b606081019081106001600160401b0382111761258557604052565b90601f801991011681019081106001600160401b0382111761258557604052565b6001600160401b03811161258557601f01601f191660200190565b9181601f84011215610e64578235916001600160401b038311610e64576020808501948460051b010111610e6457565b359060ff82168203610e6457565b6033546001600160a01b03163303613a1057565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b603380546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b15613aa457565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608490fd5b15613b0557565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608490fd5b803b15613b94576000805160206145c683398151915280546001600160a01b0319166001600160a01b03909216919091179055565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b3d15613c1a573d90613c00826139a3565b91613c0e6040519384613982565b82523d6000602084013e565b606090565b91929015613c815750815115613c33575090565b3b15613c3c5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015613c945750805190602001fd5b60405162461bcd60e51b8152908190613cb09060048301613cb4565b0390fd5b6020808252825181830181905290939260005b828110613ce957505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501613cc7565b51906001600160a01b0382168203610e6457565b15613d1857565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b6001600160401b0381116125855760051b60200190565b35906001600160a01b0382168203610e6457565b81810292918115918404141715613daf57565b634e487b7160e01b600052601160045260246000fd5b818110613dd0575050565b60008155600101613dc5565b91908201809211613daf57565b6000198114613daf5760010190565b91908203918211613daf57565b6001600160a01b03908116600081815261010960208181526040808420805492979196959215613fad5760010154421015613fa4576101025486516381d0606b60e01b8152918616600483015287908290602490829089165afa908115613f9a579087918591613f64575b506024875180978193630e67667b60e21b8352336004840152165afa938415613f5a5790839291869495613f23575b5082528552205411613eaf575050565b60a49250519062461bcd60e51b82526004820152604260248201527f5f656e666f726365436f6e747261637453656c6c65725374616b696e674d696e60448201527f696d756d3a3a41646472657373206e6f74206f6e207374616b656420656e6f756064820152610ced60f31b6084820152fd5b878092965081939495503d8311613f53575b613f3f8183613982565b81010312610e125790849291519338613e9f565b503d613f35565b85513d85823e3d90fd5b82819392503d8311613f93575b613f7b8183613982565b81010312610e0e57613f8d8791613cfd565b38613e70565b503d613f71565b86513d86823e3d90fd5b50505050505050565b5050505050505050565b6001600160a01b03166000908152610104602090815260408083208054929591949293928415613fa457600180920154421015613fa457908092918651888101916001600160601b03199060601b168252601481526140158161391e565b5190209380935b614088575b505050500361402e575050565b60849250519062461bcd60e51b82526004820152602e60248201527f5f656e666f726365416c6c6f774c69737465643a3a41646472657373206e6f7460448201526d081bdb88185b1b1bddc81b1a5cdd60921b6064820152fd5b9091929383518510156140f9576140ce906140a38686614132565b518082116140d7578851908a8201928352898201528881526140c481613967565b5190205b94613de9565b9291908161401c565b908851908a8201928352898201528881526140f181613967565b5190206140c8565b93614021565b80511561410c5760200190565b634e487b7160e01b600052603260045260246000fd5b80516001101561410c5760400190565b805182101561410c5760209160051b010190565b90816020910312610e6457518015158103610e645790565b6001600160a01b031690811561433057346142da5760409081516370a0823160e01b938482523060048301526020948583602481855afa9283156142cf576000936142a0575b5084516323b872dd60e01b87820152336024820152306044820152606480820186905281529060a082016001600160401b038111838210176125855787926141ee91885284614375565b602486518094819382523060048301525afa90811561429557600091614266575b509061421a91613df8565b03614223575050565b60649250519062461bcd60e51b82526004820152601c60248201527f6e6f7420656e6f75676820746f6b656e73207472616e736665726564000000006044820152fd5b908582813d831161428e575b61427c8183613982565b8101031261017857505161421a61420f565b503d614272565b84513d6000823e3d90fd5b90928682813d83116142c8575b6142b78183613982565b8101031261017857505191386141a4565b503d6142ad565b85513d6000823e3d90fd5b60405162461bcd60e51b815260206004820152602860248201527f6d73672e76616c75652073686f756c642062652030207768656e206e6f7420756044820152670e6d2dcce40cae8d60c31b6064820152608490fd5b9050340361433a57565b60405162461bcd60e51b81526020600482015260136024820152721b9bdd08195b9bdd59da08195d1a081cd95b9d606a1b6044820152606490fd5b6040516143cd916001600160a01b031661438e8261391e565b6000806020958685527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656487860152868151910182855af1613193613bef565b80519082821592831561443d575b505050156143e65750565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b61444d9350820181019101614146565b3882816143db565b90816020910312610e64575160ff81168103610e645790565b6001600160a01b03929083168061454557508260ff541693604051916020908184019563c176e63960e01b87526064850160406024870152825180915283608487019301916000905b82821061452c575050505083810360231901604485015282518082529082019282019160005b82811061451857505050509181614503600096949387969403601f198101835282613982565b51925af161450f613bef565b9015613c945750565b8351855293810193928101926001016144dd565b83518116855293850193928501926001909101906144b7565b92915060009493945b81518110156145bd57806145b3846145696145b89486614132565b51166145ad614578848b614132565b5160405163a9059cbb60e01b60208201526001600160a01b039390931660248401526044808401919091528252606482613982565b86614375565b613de9565b61454e565b50505050905056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220b88ac79906979228270ad66cca8e9483b428a46912fc5ac02deb74d625d85a0064736f6c63430008120033",
    "sourceMap": "942:13992:159:-:0;;;;;;;1332:4:46;1324:13;;942:13992:159;;;;;;1324:13:46;942:13992:159;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {
      "src/utils/structs/MarketConfig.sol": {
        "MarketConfig": [
          {
            "start": 616,
            "length": 20
          },
          {
            "start": 7058,
            "length": 20
          },
          {
            "start": 9067,
            "length": 20
          },
          {
            "start": 9883,
            "length": 20
          },
          {
            "start": 13710,
            "length": 20
          },
          {
            "start": 13973,
            "length": 20
          },
          {
            "start": 14098,
            "length": 20
          }
        ]
      }
    }
  },
  "deployedBytecode": {
    "object": "0x608080604052600436101561001357600080fd5b600090813560e01c90816304c1ff071461388d575080630fc635b31461373b578063176ab440146136b657806321ede0321461363957806323946f1f146135ff5780632da45e8e146135af5780633492e5a8146135325780633659cfe6146133595780634cf5f910146132315780634f1ef28614612f6257806352d1902d14612e9e578063677b198414612c92578063715018a614612c3457806378c19898146126bc5780637f3582301461263f5780638a29e2de146122175780638da5cb5b146121ee5780639890cddf146121815780639dbef5d114612057578063a01fa6a914611bb3578063af231a5814611b36578063ca774e6814611ae6578063d647ed3c146102a8578063e4e87e3b1461020c578063f2fde38b1461017b5763fa5312c81461013f57600080fd5b34610178576020366003190112610178576020906040906001600160a01b036101666138dc565b16815261010783522054604051908152f35b80fd5b5034610178576020366003190112610178576101956138dc565b61019d6139fc565b6001600160a01b038116156101b8576101b590613a54565b80f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b503461017857602036600319011261017857806102276138dc565b61022f6139fc565b73__$7682c538d2a75d26dfca907f0e750789f4$__90813b156102a4576040516386e5800760e01b815260fb60048201526001600160a01b039091166024820152908290829060449082905af48015610299576102895750f35b61029290613939565b6101785780f35b6040513d84823e3d90fd5b5050fd5b5060a0366003190112610178576102bd6138dc565b6102c5613908565b6064359060ff82168203610e64576084356001600160401b038111610de6576102f29036906004016139be565b9190600260655414611aa15760026065556001600160a01b03851686526101036020526040808720905193906103278561394c565b60018060a01b03815416855260018060a01b036001820154166020860152600281015460408601526003810154606086015260048101546080860152604051806005830190602082549182815201918b5260208b20908b5b818110611a82575050509061039981600694930382613982565b60a0870152604051910180548083529089526020808a209183918201908b905b80601f8301106118ed576104cf9454918181106118d9575b8181106118c2575b8181106118ab575b818110611894575b81811061187e575b818110611867575b818110611850575b818110611839575b818110611822575b81811061180b575b8181106117f4575b8181106117dd575b8181106117c6575b8181106117af575b818110611798575b818110611781575b81811061176a575b818110611753575b81811061173c575b818110611725575b81811061170e575b8181106116f7575b8181106116e0575b8181106116c9575b8181106116b2575b81811061169b575b818110611684575b81811061166d575b818110611656575b81811061163f575b818110611628575b1061161a575b500382613982565b60c085015283516001600160a01b0316156115b7576104ed81613d71565b916104fb6040519384613982565b8183526020830190368360051b820111610e0a5780915b8360051b820183106115a7575050505061052d903386613fb7565b8151610542906001600160a01b031685613e05565b60ff83161561154d576001600160a01b0384168552610105602052604085205415801561150b575b156114ae576001600160a01b03841685526101076020526040852054158015611468575b1561140457608082015180159081156113f6575b501561138b576060820151421061133a576040820151604435036112d9576001600160a01b038116158015611275575b156112385760208201516001600160a01b038281169116036111cd576105fd60443560ff8516613d9c565b916040810151611145575b6001600160a01b0385168652610105602052604086205461111a575b6001600160a01b038516865261010760205260408620546110da575b60405163755edd1760e01b8152336004820152926020846024818a6001600160a01b038b165af1938415610b6e5787946110a6575b5060fc5487906001600160a01b0316803b156110a257604051635a3c652d60e01b81526001600160a01b038916600482015260248101879052600160448201529082908290606490829084905af161108e575b505060015b60ff86168110610fac57506040820151610773575b50516001600160a01b0316926106fb9060ff1683613ddc565b600019810190811161075f576040805193845260208401919091526001600160a01b03918216908301526044356060830152339316907f3bbd73fed0f94290f16db112f6b7113697c2502dd42aa0ddf8f971472523f10090608090a4600160655580f35b634e487b7160e01b86526011600452602486fd5b92909491939560018060a01b038651169260a08701519760c0880151948951865103610f4b5760fc546040516361fe24a960e11b815260048101899052908890602090839060249082906001600160a01b03165afa918215610f40578692610f0c575b50604051916107e483613967565b60028352604036602085013760fb546001600160a01b031680610806856140ff565b526101025460405163e286ef3360e01b81526004810187905290602090829060249082906001600160a01b03165afa908115610e71578991610ed2575b506001600160a01b031661085685614122565b526001600160a01b0361086885614122565b5116610eb9575b61087884614122565b6001600160a01b03909116905260405161089181613967565b600281526040366020830137610101546040516303fdde1160e21b8152600481018d90526001600160a01b0390911690602081602481855afa908115610eae578a91610e7c575b506108e2836140ff565b5260208c60246040518094819363470d6ed960e11b835260048301525afa908115610e71579085918a91610e35575b50926109279361092084614122565b528d61446e565b60fc54604051631446f21360e21b81526001600160a01b038781166004830152602482018a9052909160209183916044918391165afa908115610b6e578791610e16575b50610c15576040519261097d8461391e565b6001845260203681860137604051926109958461391e565b60018452602036818601376001600160a01b03906109b2906140ff565b51166109bd846140ff565b5260fd54604051635dc22eff60e01b81526004810183905290602090829060249082906001600160a01b03165afa908115610c0a578891610bdb575b5015610b795760fd54604051632260494f60e01b81526004810192909252602090829060249082906001600160a01b03165afa908115610b6e578a610a61610a829695946064610a5a60ff8297610a67978f91610b3f575b50168095613d9c565b0490613df8565b9b613d9c565b04610a71836140ff565b52610a7b826140ff565b518a61446e565b885193610a8e85613d71565b94610a9c6040519687613982565b808652610aab601f1991613d71565b01366020870137839784985b8b518a1015610b1b57610b0f610b15916064610b0860ff610b008f8f8f908f908388610af3610afa9389610aeb8589614132565b511690613d9c565b0492614132565b52614132565b51168d613d9c565b0490613ddc565b99613de9565b98610ab7565b610b389399506106fb9692985060ff959b9197509993998761446e565b91506106e2565b610b61915060203d602011610b67575b610b598183613982565b810190614455565b38610a51565b503d610b4f565b6040513d89823e3d90fd5b5060fc5460405163b28a7bad60e01b81526001600160a01b038781166004830152909160209183916024918391165afa908115610b6e578a610a61610bd69695946064610a5a60ff8297610a67978f91610b3f5750168095613d9c565b610a82565b610bfd915060203d602011610c03575b610bf58183613982565b810190614146565b386109f9565b503d610beb565b6040513d8a823e3d90fd5b5050509794969391809693918160018060a01b0360fe541660648b6040519b8c938492637a99dc0160e11b845260018060a01b038816600485015289602485015260448401525af1998a15610299578298839b610cc1575b50829883995b8c518b1015610ca157610c95610c9b91610c8e8f8e90614132565b5190613ddc565b9a613de9565b99610c73565b989b919395979a610bd69395979a5089610cba91613df8565b988a61446e565b985099503d978883823e610cd58982613982565b6040818a81010312610e125780516001600160401b038111610e0e57810190898101601f83011215610e0e57815191610d0d83613d71565b92610d1b6040519485613982565b80845260208401918c840160208360051b83010111610de25760208101925b60208360051b8301018410610dea57505050506020810151996001600160401b038b11610de657808201601f8c8401011215610de6578a82015191610d7e83613d71565b9b610d8c6040519d8e613982565b838d5260208d0192820160208560051b838501010111610de2579190602083820101925b60208560051b82840101018410610dce575050505050979938610c6d565b602080809486518152019401939250610db0565b8680fd5b8480fd5b83516001600160a01b0381168103610e0a57815260209384019301610d3a565b8880fd5b8380fd5b8280fd5b610e2f915060203d602011610c0357610bf58183613982565b3861096b565b9150506020813d602011610e69575b81610e5160209383613982565b81010312610e6457518490610927610911565b600080fd5b3d9150610e44565b6040513d8b823e3d90fd5b90506020813d602011610ea6575b81610e9760209383613982565b81010312610e645751386108d8565b3d9150610e8a565b6040513d8c823e3d90fd5b506001600160a01b03610ecb84614122565b511661086f565b90506020813d602011610f04575b81610eed60209383613982565b81010312610e0a57610efe90613cfd565b38610843565b3d9150610ee0565b9091506020813d602011610f38575b81610f2860209383613982565b81010312610e64575190386107d6565b3d9150610f1b565b6040513d88823e3d90fd5b60405162461bcd60e51b815260206004820152603360248201527f4e756d626572206f662073706c69742061646472657373657320616e642072616044820152723a34b7b99036bab9ba1031329032b8bab0b61760691b6064820152608490fd5b60405163755edd1760e01b81523360048201526020816024818c6001600160a01b038d165af18015610e7157611063575b5060fc5488906001600160a01b0316610ff68388613ddc565b813b15610e1257604051635a3c652d60e01b81526001600160a01b038b1660048201526024810191909152600160448201529082908290606490829084905af161104b575b505061104690613de9565b6106cd565b61105490613939565b61105f57873861103b565b8780fd5b602090813d8311611087575b6110798183613982565b81010312610e645738610fdd565b503d61106f565b61109790613939565b610de25786386106c8565b5080fd5b9093506020813d6020116110d2575b816110c260209383613982565b81010312610e6457519238610675565b3d91506110b5565b610108602052604086203360005260205260406000208054600181018111611106576001019055610640565b634e487b7160e01b88526011600452602488fd5b6101066020526040862033600052602052604060002061113e60ff86168254613ddc565b9055610624565b60fc546040516361fe24a960e11b81526004810185905290602090829060249082906001600160a01b03165afa908115610b6e578791611199575b5061118e6111949185613ddc565b8361415e565b610608565b90506020813d6020116111c5575b816111b460209383613982565b81010312610e64575161118e611180565b3d91506111a7565b60405162461bcd60e51b815260206004820152603960248201527f6d696e7444697265637453616c653a3a43757272656e637920646f6573206e6f60448201527f74206d617463682072657175697265642063757272656e6379000000000000006064820152608490fd5b60405162461bcd60e51b81526020600482015260156024820152744e6f7420617070726f7665642063757272656e637960581b6044820152606490fd5b5061010054604051632d5ad3d560e01b81526001600160a01b038381166004830152909160209183916024918391165afa908115610f405786916112ba575b506105d2565b6112d3915060203d602011610c0357610bf58183613982565b386112b4565b60405162461bcd60e51b815260206004820152603360248201527f6d696e7444697265637453616c653a3a507269636520646f6573206e6f74206d6044820152726174636820726571756972656420707269636560681b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f6d696e7444697265637453616c653a3a53616c6520686173206e6f74207374616044820152631c9d195960e21b6064820152608490fd5b60405162461bcd60e51b815260206004820152603a60248201527f6d696e7444697265637453616c653a3a4d696e7473206d757374206265206c6560448201527f7373207468616e206d61784d696e7420696620656e61626c65640000000000006064820152608490fd5b905060ff84161115386105a2565b60405162461bcd60e51b815260206004820152603660248201527f6d696e7444697265637453616c653a3a4578636565646564207472616e73616360448201527574696f6e206c696d697420666f72206164647265737360501b6064820152608490fd5b50610108602052604085203360005260205260406000205460018101811161075f576001600160a01b03851686526101076020526040862054600191909101111561058e565b60405162461bcd60e51b815260206004820152602f60248201527f6d696e7444697265637453616c653a3a4578636565646564206d696e74206c6960448201526e6d697420666f72206164647265737360881b6064820152608490fd5b50610106602052604085203360005260205261152f60ff8416604060002054613ddc565b6001600160a01b03851686526101056020526040862054101561056a565b60405162461bcd60e51b815260206004820152602c60248201527f6d696e7444697265637453616c653a3a4d696e7473206d75737420626520677260448201526b06561746572207468616e20360a41b6064820152608490fd5b8235815260209283019201610512565b60405162461bcd60e51b815260206004820152603560248201527f6d696e7444697265637453616c653a3a436f6e7472616374206e6f7420707265604482015274706172656420666f72206469726563742073616c6560581b6064820152608490fd5b60f81c8152602001386104c7565b92602060019160ff8560f01c1681520193016104c1565b92602060019160ff8560e81c1681520193016104b9565b92602060019160ff8560e01c1681520193016104b1565b92602060019160ff8560d81c1681520193016104a9565b92602060019160ff8560d01c1681520193016104a1565b92602060019160ff8560c81c168152019301610499565b92602060019160ff8560c01c168152019301610491565b92602060019160ff8560b81c168152019301610489565b92602060019160ff8560b01c168152019301610481565b92602060019160ff8560a81c168152019301610479565b92602060019160ff8560a01c168152019301610471565b92602060019160ff8560981c168152019301610469565b92602060019160ff8560901c168152019301610461565b92602060019160ff8560881c168152019301610459565b92602060019160ff8560801c168152019301610451565b92602060019160ff8560781c168152019301610449565b92602060019160ff8560701c168152019301610441565b92602060019160ff8560681c168152019301610439565b92602060019160ff8560601c168152019301610431565b92602060019160ff8560581c168152019301610429565b92602060019160ff8560501c168152019301610421565b92602060019160ff8560481c168152019301610419565b92602060019160ff8560401c168152019301610411565b92602060019160ff8560381c168152019301610409565b92602060019160ff8560301c168152019301610401565b92602060019160ff8560281c1681520193016103f9565b92602060019160ff85831c1681520193016103f1565b92602060019160ff8560181c1681520193016103e9565b92602060019160ff8560101c1681520193016103e1565b92602060019160ff8560081c1681520193016103d9565b92602060019160ff851681520193016103d1565b916020919350610400600191865460ff8116825260ff8160081c168583015260ff8160101c16604083015260ff8160181c16606083015260ff81861c16608083015260ff8160281c1660a083015260ff8160c0828260301c1681860152828260381c1660e0860152828260401c16610100860152828260481c16610120860152828260501c16610140860152828260581c16610160860152828260601c16610180860152828260681c166101a0860152828260701c166101c0860152828260781c166101e0860152828260801c16610200860152828260881c16610220860152828260901c16610240860152828260981c16610260860152828260a01c16610280860152828260a81c166102a0860152828260b01c166102c0860152828260b81c166102e08601521c1661030083015260ff8160c81c1661032083015260ff8160d01c1661034083015260ff8160d81c1661036083015260ff8160e01c1661038083015260ff8160e81c166103a083015260ff8160f01c166103c083015260f81c6103e08201520194019201849293916103b9565b82546001600160a01b031684526020909301926001928301920161037f565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b503461017857604036600319011261017857611b006138dc565b6040611b0a613908565b9260018060a01b0380931681526101066020522091166000526020526020604060002054604051908152f35b50346101785760203660031901126101785780611b516138dc565b611b596139fc565b73__$7682c538d2a75d26dfca907f0e750789f4$__90813b156102a45760405163c70c56c760e01b815260fb60048201526001600160a01b039091166024820152908290829060449082905af48015610299576102895750f35b503461017857602036600319011261017857611bcd6138dc565b606060c0604051611bdd8161394c565b84815284602082015284604082015284838201528460808201528260a0820152015260018060a01b03168152610103602052604081209060405191611c218361394c565b60018060a01b03815416835260018060a01b0360018201541660208401526002810154604084015260038101546060840152600481015460808401526005810160405190816020825491828152019185526020852090855b8181106120385750505090611c9381600694930382613982565b60a085015260405191018054808352908352602080842091839182019085905b80601f830110611e9057611da99454918181106118d9578181106118c2578181106118ab578181106118945781811061187e578181106118675781811061185057818110611839578181106118225781811061180b578181106117f4578181106117dd578181106117c6578181106117af57818110611798578181106117815781811061176a578181106117535781811061173c578181106117255781811061170e578181106116f7578181106116e0578181106116c9578181106116b25781811061169b578181106116845781811061166d578181106116565781811061163f57818110611628571061161a57500382613982565b60c08301526040519182916020835261010083019160018060a01b03815116602085015260018060a01b0360208201511660408501526040810151606085015260608101516080850152608081015160a085015260a08101519260e060c0860152835180915260206101208601940190835b818110611e6e5750505060c0015191601f198482030160e0850152602080845192838152019301915b818110611e52575050500390f35b825160ff16845285945060209384019390920191600101611e44565b82516001600160a01b0316865287965060209586019590920191600101611e1b565b916020919350610400600191865460ff8116825260ff8160081c168583015260ff8160101c16604083015260ff8160181c16606083015260ff81861c16608083015260ff8160281c1660a083015260ff8160301c1660c083015260ff8160381c1660e083015260ff8160401c1661010083015260ff8160481c1661012083015260ff8160501c1661014083015260ff8160581c1661016083015260ff8160601c1661018083015260ff8160681c166101a083015260ff8160701c166101c083015260ff8160781c166101e083015260ff8160801c1661020083015260ff8160881c1661022083015260ff8160901c1661024083015260ff8160981c1661026083015260ff8160a01c1661028083015260ff8160a81c166102a083015260ff8160b01c166102c083015260ff8160b81c166102e083015260ff8160c01c1661030083015260ff8160c81c1661032083015260ff8160d01c1661034083015260ff8160d81c1661036083015260ff8160e01c1661038083015260ff8160e81c166103a083015260ff8160f01c166103c083015260f81c6103e0820152019401920184929391611cb3565b82546001600160a01b0316845260209093019260019283019201611c79565b5034610178576040366003190112610178576120716138dc565b604051638da5cb5b60e01b81526001600160a01b039182169160209160243591908381600481885afa908115610f40578691612148575b501633036120eb57907f5c8158ce792c8da34f9a8974acdb882c2c9cecc225c4ccf3c4a119aa2c726070918385526101078252806040862055604051908152a280f35b60405162461bcd60e51b815260048101839052602f60248201527f736574436f6e747261637454784c696d69743a3a4f6e6c7920636f6e7472616360448201526e1d081bdddb995c8818d85b881cd95d608a1b6064820152608490fd5b90508381813d831161217a575b61215f8183613982565b810103126121765761217090613cfd565b386120a8565b8580fd5b503d612155565b5034610178576020366003190112610178576040809161219f6138dc565b6000602084516121ae8161391e565b82815201526001600160a01b031681526101096020522081516121d08161391e565b60206001835493848452015491019081528251918252516020820152f35b50346101785780600319360112610178576033546040516001600160a01b039091168152602090f35b503461017857610100366003190112610178576122326138dc565b61223a613908565b906122436138f2565b6064356001600160a01b0381168103610e64576084356001600160a01b0381168103610e645760a435906001600160a01b0382168203610e645760c435926001600160a01b0384168403610e645760e435946001600160a01b0386168603610e645788549760ff8960081c16159889809a612632575b801561261b575b156125bf5760ff1981166001178b55896125ae575b506040516323e95fa960e01b81526001600160a01b039889166004820152908816602482015290871660448201529086166064820152908516608482015290841660a482015290831660c4820152911660e4820152610100816101048173__$7682c538d2a75d26dfca907f0e750789f4$__5af49081156125a3578391612477575b5060018060a01b03815116906001600160601b0360a01b918260fb54161760fb5560018060a01b036020820151168260fc54161760fc5560018060a01b036040820151168260fd54161760fd5560018060a01b036060820151168260fe54161760fe5560018060a01b036080820151168260ff54161760ff5560018060a01b0360a082015116826101005416176101005560018060a01b0360c082015116610101908382541617905560e060018060a01b03910151166101029182541617905561243060ff835460081c1661242b81613d11565b613d11565b61243933613a54565b6124405780f35b61ff001981541681557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160018152a180f35b9050610100813d6101001161259b575b816124956101009383613982565b81010312610e12576040519061010082018281106001600160401b03821117612585576040526124c481613cfd565b825260208101516001600160a01b0381168103610de657602083015260408101516001600160a01b0381168103610de657604083015260608101516001600160a01b0381168103610de657606083015260808101516001600160a01b0381168103610de657608083015260a08101516001600160a01b0381168103610de65760a083015260c0810151906001600160a01b0382168203610de65760c083019190915260e001516001600160a01b0381168103610e0e5760e082015238612357565b634e487b7160e01b600052604160045260246000fd5b3d9150612487565b6040513d85823e3d90fd5b61ffff1916610101178a55386122d5565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156122c05750600160ff8216146122c0565b50600160ff8216106122b9565b5034610178576020366003190112610178578061265a6138dc565b6126626139fc565b73__$7682c538d2a75d26dfca907f0e750789f4$__90813b156102a457604051630cf1420760e21b815260fb60048201526001600160a01b039091166024820152908290829060449082905af48015610299576102895750f35b50346101785760e0366003190112610178576126d66138dc565b6126de613908565b9060a4356001600160401b038111610e0e576126fe9036906004016139be565b60c4356001600160401b0381116121765761271d9036906004016139be565b604051638da5cb5b60e01b8152919390916020816004816001600160a01b038a165afa908115610c0a578891612bfa575b50336001600160a01b0390911603612b835760405161276c8161394c565b3381526001600160a01b038716602082015260443560408201526064356060820152608435608082015261279f84613d71565b6127ac6040519182613982565b84815260208101368660051b850111612b675783905b8660051b85018210612b6b57505060a08201526127de83613d71565b6127eb6040519182613982565b83815260208101368560051b880111612b675786905b8560051b88018210612b4f57505060c082015260018060a01b0386168852610103602052604088209060018060a01b038151166001600160601b0360a01b8354161782556001820160018060a01b036020830151166001600160601b0360a01b82541617905560408101516002830155606081015160038301556080810151600483015560a08101518051906001600160401b038211612b3b57600160401b8211612b3b576020908b600586015484600588015584818110612b1d575b50505001600584018b5260208b208b5b838110612b00575050505060c00151908151906001600160401b038211612aec57600160401b8211612aec57600660209101928354838555808410612aa2575b50019189526020892090895b8160051c8110612a635750601f198116810380612a16575b5050505091604051928160a0850160443586526064356020870152608435604087015260a060608701525260c084019091885b8181106129ea575050602091508381036080850152828152019290865b8181106129c8575033956001600160a01b039081169516937f36de0d2c8eec9296de665d70b6b6e55d8c29bfa7a36e0178e805ef54725d9f5c939081900392509050a480f35b90919360208060019260ff6129dc896139ee565b168152019501929101612982565b909160019060209081906001600160a01b03612a0588613d88565b168152019401910192919092612965565b928a938b5b818110612a335750505060051c015538808080612932565b9091946020612a596001928460ff8a5116919060ff809160031b9316831b921b19161790565b9601929101612a1b565b8a8b5b60208110612a7b57508382015560010161291a565b855190959160019160209160ff60038a901b81811b199092169216901b1792019501612a66565b612acc90858d52838d20601f80870160051c82019281881680612ad2575b500160051c0190613dc5565b3861290e565b60001990818601918254918a0360031b1c16905538612ac0565b634e487b7160e01b8a52604160045260248afd5b82516001600160a01b0316818301556020909201916001016128ce565b84612b339360058a018152209182019101613dc5565b8b38846128be565b634e487b7160e01b8b52604160045260248bfd5b60208091612b5c846139ee565b815201910190612801565b8980fd5b60208091612b7884613d88565b8152019101906127c2565b60a460405162461bcd60e51b815260206004820152604460248201527f707265706172654d696e7444697265637453616c653a3a4f6e6c79206d696e7460448201527f20636f6e7472616374206f776e65722063616e207072657061726520746865206064820152631b5a5b9d60e21b6084820152fd5b90506020813d602011612c2c575b81612c1560209383613982565b8101031261105f57612c2690613cfd565b3861274e565b3d9150612c08565b5034610178578060031936011261017857612c4d6139fc565b603380546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5034610178576060366003190112610178576001600160a01b0380612cb56138dc565b1660405191638da5cb5b60e01b83526020928381600481865afa8015612df05782918691612e66575b50163303612dfb57602483826101025416604051928380926381d0606b60e01b82523360048301525afa908115612df0578591612dbb575b501615612d505760019061010960405193612d308561391e565b602435855280850192604435845286525260408420925183555191015580f35b60405162461bcd60e51b815260048101839052603c60248201527f736574436f6e747261637453656c6c65725374616b696e674d696e696d756d3a60448201527f3a53656c6c657220646f6573206e6f742068617665206120706f6f6c000000006064820152608490fd5b90508381813d8311612de9575b612dd28183613982565b81010312610de657612de390613cfd565b38612d16565b503d612dc8565b6040513d87823e3d90fd5b60405162461bcd60e51b815260048101849052603c60248201527f736574436f6e747261637453656c6c65725374616b696e674d696e696d756d3a60448201527f3a4f6e6c7920636f6e7472616374206f776e65722063616e20736574000000006064820152608490fd5b809250858092503d8311612e97575b612e7f8183613982565b81010312610de657612e918291613cfd565b38612cde565b503d612e75565b50346101785780600319360112610178577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163003612ef75760206040516000805160206145c68339815191528152f35b60405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608490fd5b50604036600319011261017857612f776138dc565b602435906001600160401b038211610e125736602383011215610e12578160040135612fa2816139a3565b90612fb06040519283613982565b80825284602094858401923660248284010111610e12578060248893018537840101526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169061300b30831415613a9d565b6130286000805160206145c6833981519152928284541614613afe565b6130306139fc565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561306857505050506101b59150613b5f565b84939416906040516352d1902d60e01b81528681600481865afa60009181613202575b506130ec5760405162461bcd60e51b815260048101889052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b959495036131ab576130fd83613b5f565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a28351158015906131a3575b613139575b5050505080f35b60008091613199957f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c6040519661316f88613967565b60278852870152660819985a5b195960ca1b60408701525190845af4613193613bef565b91613c1f565b5038808080613132565b50600161312d565b60405162461bcd60e51b815260048101859052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b90918882813d831161322a575b6132198183613982565b81010312610178575051903861308b565b503d61320f565b50346101785760403660031901126101785761324b6138dc565b604051638da5cb5b60e01b81526001600160a01b039182169160209160243591908381600481885afa908115610f40578691613324575b501633036132c557907fa9d9d6bd10e1caf4891001b6ccccdad5384a544c63cc903d40182c0a5a139cd9918385526101058252806040862055604051908152a280f35b60405162461bcd60e51b815260048101839052603160248201527f736574436f6e74726163744d696e744c696d69743a3a4f6e6c7920636f6e74726044820152701858dd081bdddb995c8818d85b881cd95d607a1b6064820152608490fd5b90508381813d8311613352575b61333b8183613982565b810103126121765761334c90613cfd565b38613282565b503d613331565b5034610178576020806003193601126110a2576133746138dc565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116906133ac30831415613a9d565b6133c96000805160206145c6833981519152928284541614613afe565b6133d16139fc565b60405191848301918383106001600160401b03841117612585578260405286845260ff7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143541660001461342c57505050506101b59150613b5f565b84939416906040516352d1902d60e01b81528681600481865afa60009181613503575b506134b05760405162461bcd60e51b815260048101889052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b959495036131ab576134c183613b5f565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a28351158015906134fb57613139575050505080f35b50600061312d565b90918882813d831161352b575b61351a8183613982565b81010312610178575051903861344f565b503d613510565b5034610178576020366003190112610178578061354d6138dc565b6135556139fc565b73__$7682c538d2a75d26dfca907f0e750789f4$__90813b156102a45760405163dec30e3360e01b815260fb60048201526001600160a01b039091166024820152908290829060449082905af48015610299576102895750f35b5034610178576040366003190112610178576135c96138dc565b60406135d3613908565b9260018060a01b0380931681526101086020522091166000526020526020604060002054604051908152f35b5034610178576020366003190112610178576020906040906001600160a01b036136276138dc565b16815261010583522054604051908152f35b503461017857602036600319011261017857806136546138dc565b61365c6139fc565b73__$7682c538d2a75d26dfca907f0e750789f4$__90813b156102a45760405163ebda042b60e01b815260fb60048201526001600160a01b039091166024820152908290829060449082905af48015610299576102895750f35b5034610178576020366003190112610178576136d06138dc565b6136d86139fc565b8173__$7682c538d2a75d26dfca907f0e750789f4$__91823b156110a257604051632c55921b60e01b815260fb60048201526001600160a01b03909116602482015291829060449082905af4801561029957613732575080f35b6101b590613939565b5034610178576060366003190112610178576024356004356001600160a01b03806137646138f2565b169260405191638da5cb5b60e01b83526020928381600481895afa908115610b6e578791613858575b501633036137ed57907fff2ce9a528a62cad638cc9f5bccd36a62ecfa9aa0b1ab82c98957cb3498b4b67916040516137c48161391e565b84815260018382018381528789526101048552604089209251835551910155604051908152a380f35b60405162461bcd60e51b815260048101839052603760248201527f736574436f6e7472616374416c6c6f774c697374436f6e6669673a3a4f6e6c7960448201527f20636f6e7472616374206f776e65722063616e207365740000000000000000006064820152608490fd5b90508381813d8311613886575b61386f8183613982565b81010312610de25761388090613cfd565b3861378d565b503d613865565b9050346110a25760203660031901126110a25760408281928160206138b06138dc565b926138ba8161391e565b82815201526001600160a01b031681526101046020522081516121d08161391e565b600435906001600160a01b0382168203610e6457565b604435906001600160a01b0382168203610e6457565b602435906001600160a01b0382168203610e6457565b604081019081106001600160401b0382111761258557604052565b6001600160401b03811161258557604052565b60e081019081106001600160401b0382111761258557604052565b606081019081106001600160401b0382111761258557604052565b90601f801991011681019081106001600160401b0382111761258557604052565b6001600160401b03811161258557601f01601f191660200190565b9181601f84011215610e64578235916001600160401b038311610e64576020808501948460051b010111610e6457565b359060ff82168203610e6457565b6033546001600160a01b03163303613a1057565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b603380546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b15613aa457565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608490fd5b15613b0557565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608490fd5b803b15613b94576000805160206145c683398151915280546001600160a01b0319166001600160a01b03909216919091179055565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b3d15613c1a573d90613c00826139a3565b91613c0e6040519384613982565b82523d6000602084013e565b606090565b91929015613c815750815115613c33575090565b3b15613c3c5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015613c945750805190602001fd5b60405162461bcd60e51b8152908190613cb09060048301613cb4565b0390fd5b6020808252825181830181905290939260005b828110613ce957505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501613cc7565b51906001600160a01b0382168203610e6457565b15613d1857565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b6001600160401b0381116125855760051b60200190565b35906001600160a01b0382168203610e6457565b81810292918115918404141715613daf57565b634e487b7160e01b600052601160045260246000fd5b818110613dd0575050565b60008155600101613dc5565b91908201809211613daf57565b6000198114613daf5760010190565b91908203918211613daf57565b6001600160a01b03908116600081815261010960208181526040808420805492979196959215613fad5760010154421015613fa4576101025486516381d0606b60e01b8152918616600483015287908290602490829089165afa908115613f9a579087918591613f64575b506024875180978193630e67667b60e21b8352336004840152165afa938415613f5a5790839291869495613f23575b5082528552205411613eaf575050565b60a49250519062461bcd60e51b82526004820152604260248201527f5f656e666f726365436f6e747261637453656c6c65725374616b696e674d696e60448201527f696d756d3a3a41646472657373206e6f74206f6e207374616b656420656e6f756064820152610ced60f31b6084820152fd5b878092965081939495503d8311613f53575b613f3f8183613982565b81010312610e125790849291519338613e9f565b503d613f35565b85513d85823e3d90fd5b82819392503d8311613f93575b613f7b8183613982565b81010312610e0e57613f8d8791613cfd565b38613e70565b503d613f71565b86513d86823e3d90fd5b50505050505050565b5050505050505050565b6001600160a01b03166000908152610104602090815260408083208054929591949293928415613fa457600180920154421015613fa457908092918651888101916001600160601b03199060601b168252601481526140158161391e565b5190209380935b614088575b505050500361402e575050565b60849250519062461bcd60e51b82526004820152602e60248201527f5f656e666f726365416c6c6f774c69737465643a3a41646472657373206e6f7460448201526d081bdb88185b1b1bddc81b1a5cdd60921b6064820152fd5b9091929383518510156140f9576140ce906140a38686614132565b518082116140d7578851908a8201928352898201528881526140c481613967565b5190205b94613de9565b9291908161401c565b908851908a8201928352898201528881526140f181613967565b5190206140c8565b93614021565b80511561410c5760200190565b634e487b7160e01b600052603260045260246000fd5b80516001101561410c5760400190565b805182101561410c5760209160051b010190565b90816020910312610e6457518015158103610e645790565b6001600160a01b031690811561433057346142da5760409081516370a0823160e01b938482523060048301526020948583602481855afa9283156142cf576000936142a0575b5084516323b872dd60e01b87820152336024820152306044820152606480820186905281529060a082016001600160401b038111838210176125855787926141ee91885284614375565b602486518094819382523060048301525afa90811561429557600091614266575b509061421a91613df8565b03614223575050565b60649250519062461bcd60e51b82526004820152601c60248201527f6e6f7420656e6f75676820746f6b656e73207472616e736665726564000000006044820152fd5b908582813d831161428e575b61427c8183613982565b8101031261017857505161421a61420f565b503d614272565b84513d6000823e3d90fd5b90928682813d83116142c8575b6142b78183613982565b8101031261017857505191386141a4565b503d6142ad565b85513d6000823e3d90fd5b60405162461bcd60e51b815260206004820152602860248201527f6d73672e76616c75652073686f756c642062652030207768656e206e6f7420756044820152670e6d2dcce40cae8d60c31b6064820152608490fd5b9050340361433a57565b60405162461bcd60e51b81526020600482015260136024820152721b9bdd08195b9bdd59da08195d1a081cd95b9d606a1b6044820152606490fd5b6040516143cd916001600160a01b031661438e8261391e565b6000806020958685527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656487860152868151910182855af1613193613bef565b80519082821592831561443d575b505050156143e65750565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b61444d9350820181019101614146565b3882816143db565b90816020910312610e64575160ff81168103610e645790565b6001600160a01b03929083168061454557508260ff541693604051916020908184019563c176e63960e01b87526064850160406024870152825180915283608487019301916000905b82821061452c575050505083810360231901604485015282518082529082019282019160005b82811061451857505050509181614503600096949387969403601f198101835282613982565b51925af161450f613bef565b9015613c945750565b8351855293810193928101926001016144dd565b83518116855293850193928501926001909101906144b7565b92915060009493945b81518110156145bd57806145b3846145696145b89486614132565b51166145ad614578848b614132565b5160405163a9059cbb60e01b60208201526001600160a01b039390931660248401526044808401919091528252606482613982565b86614375565b613de9565b61454e565b50505050905056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220b88ac79906979228270ad66cca8e9483b428a46912fc5ac02deb74d625d85a0064736f6c63430008120033",
    "sourceMap": "942:13992:159:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;942:13992:159;;;;;;;;-1:-1:-1;;;;;942:13992:159;;:::i;:::-;;;;4135:15;942:13992;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;942:13992:159;;;;;;:::i;:::-;1303:62:39;;:::i;:::-;-1:-1:-1;;;;;942:13992:159;;2402:22:39;942:13992:159;;2496:8:39;;;:::i;:::-;942:13992:159;;;;;-1:-1:-1;;;942:13992:159;;;;;;;;;;;;;;;;;-1:-1:-1;;;942:13992:159;;;;;;;;;;;;;;-1:-1:-1;;942:13992:159;;;;;;;:::i;:::-;1303:62:39;;:::i;:::-;12215:40:159;:64;;;;;;942:13992;;-1:-1:-1;;;12215:64:159;;:12;942:13992;12215:64;;942:13992;-1:-1:-1;;;;;942:13992:159;;;;;;;;;;;;;;;;12215:64;;;;;;;;942:13992;;12215:64;;;;:::i;:::-;942:13992;;12215:64;942:13992;12215:64;942:13992;;971:66:43;942:13992:159;;971:66:43;;;;12215:64:159;942:13992;;;;-1:-1:-1;942:13992:159;;-1:-1:-1;;942:13992:159;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;942:13992:159;;;;;;;;;;;:::i;:::-;;;1830:1:48;2712:7;942:13992:159;2712:19:48;1830:1;;;2712:7;942:13992:159;-1:-1:-1;;;;;942:13992:159;;;;7471:17;942:13992;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1830:1:48;942:13992:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;942:13992:159;7567:37;942:13992;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7750:10;;;;7706:63;7750:10;;7706:63;;:::i;:::-;942:13992;;7863:23;;-1:-1:-1;;;;;942:13992:159;7863:23;;:::i;:::-;942:13992;;;7924:13;942:13992;;-1:-1:-1;;;;;942:13992:159;;;;8041:17;942:13992;;;;;;8041:40;:156;;;;942:13992;;;;-1:-1:-1;;;;;942:13992:159;;;;8313:15;942:13992;;;;;;8313:38;:142;;;;942:13992;;;;;;;;8570:30;;:72;;;;;942:13992;;;;;;;;;8784:15;-1:-1:-1;942:13992:159;;;;;;;;8874:32;942:13992;;-1:-1:-1;;;;;942:13992:159;;756:30:219;:97;;;;942:13992:159;;;;;;;;-1:-1:-1;;;;;942:13992:159;;;;;9106:52;942:13992;;9259:18;942:13992;;;;;9259:18;:::i;:::-;942:13992;;;;;9303:230;;942:13992;-1:-1:-1;;;;;942:13992:159;;;;8041:17;942:13992;;;;;;9576:126;;942:13992;-1:-1:-1;;;;;942:13992:159;;;;8313:15;942:13992;;;;;;9743:114;;942:13992;;;-1:-1:-1;;;9906:48:159;;7750:10;942:13992;9906:48;;942:13992;;;;;;;-1:-1:-1;;;;;942:13992:159;;9906:48;;;;;;;;;;;942:13992;-1:-1:-1;10003:32:159;942:13992;;;-1:-1:-1;;;;;942:13992:159;10003:86;;;;;942:13992;;-1:-1:-1;;;10003:86:159;;-1:-1:-1;;;;;942:13992:159;;;10003:86;;942:13992;;;;;;;;;;;;;;;;;;;;;;;10003:86;;;;942:13992;10111:13;;942:13992;10126:13;942:13992;;;10126:13;;;;942:13992;;;;;10409:282;;10106:275;-1:-1:-1;942:13992:159;-1:-1:-1;;;;;942:13992:159;;10817:24;;942:13992;;10817:24;;:::i;:::-;-1:-1:-1;;942:13992:159;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;942:13992:159;;;;;;;;;;;;;7750:10;;942:13992;;10702:187;;942:13992;;10702:187;942:13992;2712:7:48;942:13992:159;;;;-1:-1:-1;;;942:13992:159;;;;;;;;10409:282;942:13992;;;;;;;;;;;;;;;;;;10606:32;942:13992;;;;10648:28;942:13992;;;;;6804:41:219;942:13992:159;;10003:32;942:13992;;;-1:-1:-1;;;7537:60:219;;942:13992:159;7537:60:219;;942:13992:159;;;;7449:33:219;;942:13992:159;;;;;;;;-1:-1:-1;;;;;942:13992:159;7537:60:219;;;;;;;;;;;10409:282:159;942:13992;;;;;;;:::i;:::-;1830:1:48;942:13992:159;;;;;;;;9000:12;942:13992;-1:-1:-1;;;;;942:13992:159;;7673:52:219;;;:::i;:::-;942:13992:159;7756:23:219;942:13992:159;;;-1:-1:-1;;;7756:67:219;;942:13992:159;7756:67:219;;942:13992:159;;;;;;;;;;;;-1:-1:-1;;;;;942:13992:159;7756:67:219;;;;;;;;;;;10409:282:159;-1:-1:-1;;;;;;942:13992:159;7731:93:219;;;:::i;:::-;942:13992:159;-1:-1:-1;;;;;7847:14:219;;;:::i;:::-;942:13992:159;;7847:83:219;;;7830:100;;;:::i;:::-;-1:-1:-1;;;;;942:13992:159;;;;;;;;;;:::i;:::-;1830:1:48;942:13992:159;;;;;;;;7996:23:219;942:13992:159;;;-1:-1:-1;;;7996:62:219;;942:13992:159;7996:62:219;;942:13992:159;;;-1:-1:-1;;;;;942:13992:159;;;;;;;;;7996:62:219;;;;;;;;;;;7847:83;7984:74;;;;:::i;:::-;942:13992:159;;;;;;971:66:43;;;;;;;8076:52:219;;942:13992:159;8076:52:219;;942:13992:159;8076:52:219;;;;;;;;;;;;;;7847:83;8064:64;;8206:6;8064:64;;;;:::i;:::-;942:13992:159;8206:6:219;;:::i;:::-;10003:32:159;942:13992;;;-1:-1:-1;;;8225:73:219;;-1:-1:-1;;;;;942:13992:159;;;;8225:73:219;;942:13992:159;;;;;;;;;;;;;;;;;;8225:73:219;;;;;;;;;;;7847:83;-1:-1:-1;8224:74:219;;942:13992:159;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;942:13992:159;8455:14:219;;;:::i;:::-;942:13992:159;;8436:33:219;;;:::i;:::-;942:13992:159;8482:29:219;942:13992:159;;;-1:-1:-1;;;8482:62:219;;942:13992:159;8482:62:219;;942:13992:159;;;;;;;;;;;;-1:-1:-1;;;;;942:13992:159;8482:62:219;;;;;;;;;;;8220:1546;-1:-1:-1;8478:826:219;;;8482:29;942:13992:159;;;-1:-1:-1;;;8585:60:219;;942:13992:159;8585:60:219;;942:13992:159;;;;;;;;;;;;-1:-1:-1;;;;;942:13992:159;8585:60:219;;;;;;;;8674:56;8878:11;8585:60;;;942:13992:159;8694:28:219;942:13992:159;8585:60:219;;8759:28;8585:60;;;;;8478:826;942:13992:159;;8694:28:219;;;:::i;:::-;942:13992:159;8674:56:219;;:::i;:::-;8759:28;;:::i;:::-;942:13992:159;8741:53:219;;;:::i;:::-;942:13992:159;8847:14:219;;;:::i;:::-;942:13992:159;8878:11:219;;:::i;:::-;942:13992:159;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;9845:22:219;9879:13;;9874:187;9918:3;942:13992:159;;9894:22:219;;;;;9999:55;9918:3;9969:15;942:13992:159;10014:33:219;942:13992:159;10032:15:219;9969;;;;;;;;9951:33;9931:60;9969:15;;;;;;:::i;:::-;942:13992:159;;9951:33:219;;:::i;:::-;942:13992:159;9931:60:219;;:::i;:::-;942:13992:159;10032:15:219;:::i;:::-;942:13992:159;;10014:33:219;;:::i;:::-;942:13992:159;9999:55:219;;:::i;:::-;9918:3;;:::i;:::-;9879:13;;;9894:22;10133:13;9894:22;;;10817:24:159;9894:22:219;;;;942:13992:159;9894:22:219;;;;;;;;10133:13;;:::i;:::-;10409:282:159;;;;8585:60:219;;;;942:13992:159;8585:60:219;942:13992:159;8585:60:219;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;942:13992:159;;971:66:43;942:13992:159;;971:66:43;;;;8478:826:219;-1:-1:-1;10003:32:159;942:13992;;;-1:-1:-1;;;8944:106:219;;-1:-1:-1;;;;;942:13992:159;;;;8944:106:219;;942:13992:159;;;;;;;;;;;;8944:106:219;;;;;;;;9079:56;9283:11;8944:106;;;942:13992:159;9099:28:219;942:13992:159;8944:106:219;;9164:28;8944:106;;;;;942:13992:159;;9099:28:219;;;:::i;9283:11::-;8478:826;;8482:62;;;;942:13992:159;8482:62:219;942:13992:159;8482:62:219;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;942:13992:159;;971:66:43;942:13992:159;;971:66:43;;;;8220:1546:219;942:13992:159;;;;;;;;;;;;;;;;;;9391:21:219;942:13992:159;;;;;;971:66:43;;;;;;;;9391:100:219;;942:13992:159;;;;;;;;9391:100:219;;942:13992:159;;;;;;;;;;9391:100:219;;;;;;;;;;;;;8220:1546;9500:26;;9540:13;;9535:96;9577:3;942:13992:159;;9555:20:219;;;;;9592:30;9577:3;9610:12;;;;;;:::i;:::-;942:13992:159;9592:30:219;;:::i;:::-;9577:3;;:::i;:::-;9540:13;;;9555:20;;;;;;;;9749:9;9555:20;;;;;;9639:33;9555:20;9639:33;:::i;:::-;9749:9;;;:::i;9391:100::-;;;;;;;;;;;;;;;:::i;:::-;942:13992:159;9391:100:219;;;;942:13992:159;;;;;;-1:-1:-1;;;;;942:13992:159;;;;;;9391:100:219;;;;942:13992:159;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;9391:100:219;;;;942:13992:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;942:13992:159;;;;9391:100:219;;;942:13992:159;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;9391:100:219;;;942:13992:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9391:100:219;;;;;;;;;;942:13992:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;942:13992:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;8225:73:219;;;;942:13992:159;8225:73:219;942:13992:159;8225:73:219;;;;;;;:::i;:::-;;;;8076:52;;;;942:13992:159;8076:52:219;;942:13992:159;8076:52:219;;;;;;942:13992:159;8076:52:219;;;:::i;:::-;;;942:13992:159;;;;;;;8206:6:219;8076:52;;942:13992:159;;;;8076:52:219;;;-1:-1:-1;8076:52:219;;;942:13992:159;;971:66:43;942:13992:159;;971:66:43;;;;7996:62:219;;;942:13992:159;7996:62:219;;942:13992:159;7996:62:219;;;;;;942:13992:159;7996:62:219;;;:::i;:::-;;;942:13992:159;;;;;7996:62:219;;;;;;-1:-1:-1;7996:62:219;;;942:13992:159;;971:66:43;942:13992:159;;971:66:43;;;;7847:83:219;-1:-1:-1;;;;;;7916:14:219;;;:::i;:::-;942:13992:159;;7847:83:219;;7756:67;;;942:13992:159;7756:67:219;;942:13992:159;7756:67:219;;;;;;942:13992:159;7756:67:219;;;:::i;:::-;;;942:13992:159;;;;;;;:::i;:::-;7756:67:219;;;;;;-1:-1:-1;7756:67:219;;7537:60;;;;942:13992:159;7537:60:219;;942:13992:159;7537:60:219;;;;;;942:13992:159;7537:60:219;;;:::i;:::-;;;942:13992:159;;;;;7537:60:219;;;;;;;-1:-1:-1;7537:60:219;;;942:13992:159;;971:66:43;942:13992:159;;971:66:43;;;;942:13992:159;;;-1:-1:-1;;;942:13992:159;;;;;;;;;;;;;;;;;-1:-1:-1;;;942:13992:159;;;;;;;10141:3;942:13992;;-1:-1:-1;;;10213:48:159;;7750:10;942:13992;10213:48;;942:13992;;;;;;-1:-1:-1;;;;;942:13992:159;;10213:48;;;;;;;;10141:3;-1:-1:-1;10003:32:159;942:13992;;;-1:-1:-1;;;;;942:13992:159;10340:16;;;;:::i;:::-;10273:90;;;;;942:13992;;-1:-1:-1;;;10273:90:159;;-1:-1:-1;;;;;942:13992:159;;;10273:90;;942:13992;;;;;;;;;;;;;;;;;;;;;;;;10273:90;;;;10141:3;;;;;;:::i;:::-;10111:13;;10273:90;;;;:::i;:::-;942:13992;;10273:90;;;;942:13992;;;;10213:48;942:13992;10213:48;;;;;;;;;;;;:::i;:::-;;;942:13992;;;;10213:48;;;;;;;;10003:86;;;;:::i;:::-;942:13992;;10003:86;;;;;942:13992;;;9906:48;;;;942:13992;9906:48;;942:13992;9906:48;;;;;;942:13992;9906:48;;;:::i;:::-;;;942:13992;;;;;9906:48;;;;;;;-1:-1:-1;9906:48:159;;9743:114;9794:21;942:13992;;;;;7750:10;942:13992;;;;;;;;;;;;;;;;;;;;9743:114;;942:13992;-1:-1:-1;;;942:13992:159;;;;;;;;9576:126;9629:23;942:13992;;;;;7750:10;942:13992;;;;;;;9629:66;942:13992;;;;;9629:66;:::i;:::-;942:13992;;9576:126;;9303:230;9382:32;942:13992;;;-1:-1:-1;;;9382:68:159;;942:13992;9382:68;;942:13992;;;;;;;;;;;;-1:-1:-1;;;;;942:13992:159;9382:68;;;;;;;;;;;9303:230;9369:81;;9511:14;9369:81;;;:::i;:::-;9511:14;;:::i;:::-;9303:230;;9382:68;;;942:13992;9382:68;;942:13992;9382:68;;;;;;942:13992;9382:68;;;:::i;:::-;;;942:13992;;;;;9369:81;9382:68;;;;;-1:-1:-1;9382:68:159;;942:13992;;;-1:-1:-1;;;942:13992:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;942:13992:159;;;;;;;;;;;;-1:-1:-1;;;942:13992:159;;;;;;;756:97:219;-1:-1:-1;942:13992:159;;;;-1:-1:-1;;;790:63:219;;-1:-1:-1;;;;;942:13992:159;;;;790:63:219;;942:13992:159;;;;;;;;;;;;790:63:219;;;;;;;;;;;756:97;;;;790:63;;;;942:13992:159;790:63:219;942:13992:159;790:63:219;;;;;;;:::i;:::-;;;;942:13992:159;;;-1:-1:-1;;;942:13992:159;;;;;;;;;;;;;;;;;-1:-1:-1;;;942:13992:159;;;;;;;;;;-1:-1:-1;;;942:13992:159;;;;;;;;;;;;;;;;;-1:-1:-1;;;942:13992:159;;;;;;;;;;-1:-1:-1;;;942:13992:159;;;;;;;;;;;;;;;;;;;;;;;;;8570:72;942:13992;;;;;8604:38;;8570:72;;;942:13992;;;-1:-1:-1;;;942:13992:159;;;;;;;;;;;;;;;;;-1:-1:-1;;;942:13992:159;;;;;;;8313:142;942:13992;8363:21;942:13992;;;;;7750:10;942:13992;;;;;;;;;;;;;;;-1:-1:-1;;;;;942:13992:159;;;;8313:15;942:13992;;;;;;;;;;;8363:92;;8313:142;;942:13992;;;-1:-1:-1;;;942:13992:159;;;;;;;;;;;;;;;;;-1:-1:-1;;;942:13992:159;;;;;;;8041:156;942:13992;8093:23;942:13992;;;;;7750:10;942:13992;;;;8093:65;942:13992;;;;;;;8093:65;:::i;:::-;-1:-1:-1;;;;;942:13992:159;;;;8041:17;942:13992;;;;;;-1:-1:-1;8093:104:159;8041:156;;942:13992;;;-1:-1:-1;;;942:13992:159;;;;;;;;;;;;;;;;;-1:-1:-1;;;942:13992:159;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;942:13992:159;;;;;;;;;;;;;;;;;-1:-1:-1;;;942:13992:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;942:13992:159;;;;;;;;;;;;;;;;1830:1:48;942:13992:159;;-1:-1:-1;;;1830:1:48;;942:13992:159;;1830:1:48;;;;942:13992:159;1830:1:48;;942:13992:159;1830:1:48;942:13992:159;;;1830:1:48;942:13992:159;;1830:1:48;942:13992:159;;;;;;;-1:-1:-1;;942:13992:159;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;3976:23;942:13992;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;942:13992:159;;;;;;;:::i;:::-;1303:62:39;;:::i;:::-;12077:27:159;:38;;;;;;942:13992;;-1:-1:-1;;;12077:38:159;;:12;942:13992;12077:38;;942:13992;-1:-1:-1;;;;;942:13992:159;;;;;;;;;;;;;;;;12077:38;;;;;;;;942:13992;;;;;;;;;-1:-1:-1;;942:13992:159;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3491:17;942:13992;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;942:13992:159;;;;;;;;;;;;;;;;-1:-1:-1;;;;;942:13992:159;;;;;-1:-1:-1;942:13992:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;942:13992:159;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;942:13992:159;;;;;;:::i;:::-;;;-1:-1:-1;;;6455:44:159;;-1:-1:-1;;;;;942:13992:159;;;;;;;;;;;;;;;6455:44;;;;;;;;;;;942:13992;;;6441:10;:58;942:13992;;;6621:44;942:13992;;;;6568:15;942:13992;;;;;;;;;;;;6621:44;942:13992;;;;;-1:-1:-1;;;942:13992:159;;;;;;;;;;;;;;;;;;-1:-1:-1;;;942:13992:159;;;;;;;6455:44;;;;;;;;;;;;;;;;:::i;:::-;;;942:13992;;;;;;;:::i;:::-;6455:44;;;942:13992;;;;6455:44;;;;;942:13992;;;;;;;-1:-1:-1;;942:13992:159;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;942:13992:159;;;4484:28;942:13992;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1513:6:39;942:13992:159;;;-1:-1:-1;;;;;942:13992:159;;;;;;;;;;;;;;;-1:-1:-1;;942:13992:159;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;-1:-1:-1;;;;;942:13992:159;;;;;;;;-1:-1:-1;;;;;942:13992:159;;;;;;;;;-1:-1:-1;;;;;942:13992:159;;;;;;;;;-1:-1:-1;;;;;942:13992:159;;;;;;;;;-1:-1:-1;;;;;942:13992:159;;;;;;;;;;;;;;3301:14:45;3347:34;;;;;;942:13992:159;3346:108:45;;;;942:13992:159;;;;-1:-1:-1;;942:13992:159;;;;;;;3562:65:45;;942:13992:159;-1:-1:-1;942:13992:159;;-1:-1:-1;;;2899:241:159;;-1:-1:-1;;;;;942:13992:159;;;;2899:241;;942:13992;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2899:12;:241;;;;;;;;;;;942:13992;;;;;;;;;;;-1:-1:-1;;;;;942:13992:159;;;;2884:256;942:13992;;;2884:256;942:13992;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5366:69:45;942:13992:159;;;;;;5366:69:45;;;:::i;:::-;;:::i;:::-;1195:12:39;929:10:65;1195:12:39;:::i;:::-;3647:99:45;;942:13992:159;;3647:99:45;942:13992:159;;;;;;;3721:14:45;942:13992:159;;;;;;3721:14:45;942:13992:159;;2899:241;;;942:13992;2899:241;;942:13992;2899:241;;;;;;942:13992;2899:241;;;:::i;:::-;;;942:13992;;;;;;;;;;;;;-1:-1:-1;;;;;942:13992:159;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;942:13992:159;;;;;;;;;;;;;;-1:-1:-1;;;;;942:13992:159;;;;;;;;;;;;;;-1:-1:-1;;;;;942:13992:159;;;;;;;;;;;;;;-1:-1:-1;;;;;942:13992:159;;;;;;;;;;;;;;-1:-1:-1;;;;;942:13992:159;;;;;;;;;;;;;;;-1:-1:-1;;;;;942:13992:159;;;;;;;;;;;;;;;;-1:-1:-1;;;;;942:13992:159;;;;;;;;;;2899:241;;;942:13992;;;;;;;;;;;;2899:241;;;-1:-1:-1;2899:241:159;;;942:13992;;971:66:43;942:13992:159;;971:66:43;;;;3562:65:45;-1:-1:-1;;942:13992:159;;;;;3562:65:45;;;942:13992:159;;;-1:-1:-1;;;942:13992:159;;;;;;;;;;;;;;;;;-1:-1:-1;;;942:13992:159;;;;;;;3346:108:45;3426:4;;1713:19:63;:23;3387:66:45;;3346:108;3387:66;942:13992:159;;;;;3436:17:45;3346:108;;3347:34;942:13992:159;;;;;3365:16:45;3347:34;;942:13992:159;;;;;;;-1:-1:-1;;942:13992:159;;;;;;;:::i;:::-;1303:62:39;;:::i;:::-;11807:40:159;:64;;;;;;942:13992;;-1:-1:-1;;;11807:64:159;;:12;942:13992;11807:64;;942:13992;-1:-1:-1;;;;;942:13992:159;;;;;;;;;;;;;;;;11807:64;;;;;;;;942:13992;;;;;;;;;-1:-1:-1;;942:13992:159;;;;;;:::i;:::-;;;:::i;:::-;;;;-1:-1:-1;;;;;942:13992:159;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;942:13992:159;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;5020:44:159;;942:13992;;;;;;;;-1:-1:-1;;;;;942:13992:159;;5020:44;;;;;;;;;;;942:13992;-1:-1:-1;5068:10:159;-1:-1:-1;;;;;942:13992:159;;;5020:58;942:13992;;;;;;;:::i;:::-;5068:10;942:13992;;-1:-1:-1;;;;;942:13992:159;;;5206:157;;942:13992;;;;5206:157;;942:13992;;;;5206:157;;942:13992;;;;5206:157;;942:13992;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;5206:157;;942:13992;5206:157;;942:13992;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;5206:157;;942:13992;5206:157;;942:13992;;;;;;;;;;5168:17;942:13992;;;;;;;;;;;;;;-1:-1:-1;;;;;942:13992:159;;;;;;;;;;;;;;;;;5206:157;;942:13992;;-1:-1:-1;;;;;942:13992:159;;;;;;;;;5206:157;;942:13992;;;;;;5206:157;;942:13992;;;;;;5206:157;;942:13992;;;;;;5206:157;;942:13992;;;;-1:-1:-1;;;;;942:13992:159;;;;-1:-1:-1;;;942:13992:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5206:157;;;;942:13992;5206:157;942:13992;;;;;-1:-1:-1;;;;;942:13992:159;;;;-1:-1:-1;;;942:13992:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;942:13992:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5068:10:159;;-1:-1:-1;;;;;942:13992:159;;;;;;5374:186;;;;;;;-1:-1:-1;5068:10:159;-1:-1:-1;5374:186:159;942:13992;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;942:13992:159;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;942:13992:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;942:13992:159;;;;;;;;;;;-1:-1:-1;;;;;942:13992:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;942:13992:159;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;942:13992:159;;;;;5020:44;;;942:13992;5020:44;;942:13992;5020:44;;;;;;942:13992;5020:44;;;:::i;:::-;;;942:13992;;;;;;;:::i;:::-;5020:44;;;;;;-1:-1:-1;5020:44:159;;942:13992;;;;;;;;;;;;;1303:62:39;;:::i;:::-;2758:6;942:13992:159;;-1:-1:-1;;;;;;942:13992:159;;;;;;;-1:-1:-1;;;;;942:13992:159;2806:40:39;942:13992:159;;2806:40:39;942:13992:159;;;;;;;;;-1:-1:-1;;942:13992:159;;;;-1:-1:-1;;;;;942:13992:159;;;:::i;:::-;;;;971:66:43;;;;6826:44:159;;942:13992;6826:44;;;942:13992;6826:44;;;;;;;;;;;;;;942:13992;;;6812:10;:58;942:13992;;;;;6967:28;942:13992;;;;971:66:43;;;;;;;6967:65:159;;6812:10;942:13992;6967:65;;942:13992;6967:65;;;;;;;;;;;942:13992;;;7046:18;942:13992;;;;7135:28;942:13992;;;;;;:::i;:::-;;;;;7184:39;;;942:13992;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;942:13992:159;;;;;;;;;;;;;;;;;;;;;;;;;;6967:65;;;;;;;;;;;;;;;;:::i;:::-;;;942:13992;;;;;;;:::i;:::-;6967:65;;;;;;;;;942:13992;;971:66:43;942:13992:159;;971:66:43;;;;942:13992:159;;;-1:-1:-1;;;942:13992:159;;;;;;;;;;;;;;;;;;;;;;;;;;6826:44;;;;;;;;;;;;;;;;;;:::i;:::-;;;942:13992;;;;;;;;:::i;:::-;6826:44;;;;;;;;942:13992;;;;;;;;;;;;;2333:6:46;-1:-1:-1;;;;;942:13992:159;2324:4:46;2316:23;942:13992:159;;;;;-1:-1:-1;;;;;;;;;;;942:13992:159;;;;;;-1:-1:-1;;;942:13992:159;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;942:13992:159;;-1:-1:-1;;942:13992:159;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;942:13992:159;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1898:6:46;942:13992:159;;;1873:80:46;1889:4;1881:23;;;1873:80;:::i;:::-;1963:87;-1:-1:-1;;;;;;;;;;;942:13992:159;;;;;1971:30:46;1963:87;:::i;:::-;1303:62:39;;:::i;:::-;971:66:43;;942:13992:159;;;;;3330:17:43;;;;;;;;:::i;3232:526::-;942:13992:159;;;;;;;971:66:43;;;3383:63;;;;942:13992:159;3383:63:43;;;;942:13992:159;;3383:63:43;;;3232:526;-1:-1:-1;3379:302:43;;942:13992:159;;-1:-1:-1;;;3610:56:43;;942:13992:159;3610:56:43;;971:66;;;;942:13992:159;971:66:43;;942:13992:159;971:66:43;942:13992:159;;;971:66:43;-1:-1:-1;;;971:66:43;;;;;;3610:56;3379:302;3496:28;;;;971:66;;2171:17;;;:::i;:::-;2204:27;942:13992:159;2204:27:43;;942:13992:159;;2523:15:43;;;:28;;;3379:302;2519:123;;3379:302;3232:526;;;;942:13992:159;;2519:123:43;942:13992:159;;;7318:69:63;942:13992:159;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;942:13992:159;;;;7276:25:63;;;;;;;:::i;:::-;7318:69;;:::i;:::-;;2519:123:43;;;;;;2523:28;;942:13992:159;2523:28:43;;971:66;942:13992:159;;-1:-1:-1;;;971:66:43;;942:13992:159;971:66:43;;;;;;942:13992:159;971:66:43;;942:13992:159;971:66:43;942:13992:159;;;971:66:43;-1:-1:-1;;;971:66:43;;;;;;;3383:63;;;;;;;;;;;;;;;;:::i;:::-;;;971:66;;;;;;3383:63;;;;;;;;;942:13992:159;;;;;;;-1:-1:-1;;942:13992:159;;;;;;:::i;:::-;;;-1:-1:-1;;;6116:44:159;;-1:-1:-1;;;;;942:13992:159;;;;;;;;;;;;;;;6116:44;;;;;;;;;;;942:13992;;;6102:10;:58;942:13992;;;6286:46;942:13992;;;;6231:17;942:13992;;;;;;;;;;;;6286:46;942:13992;;;;;-1:-1:-1;;;942:13992:159;;;;;;;;;;;;;;;;;;-1:-1:-1;;;942:13992:159;;;;;;;6116:44;;;;;;;;;;;;;;;;:::i;:::-;;;942:13992;;;;;;;:::i;:::-;6116:44;;;;;;;;942:13992;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1898:6:46;942:13992:159;;;1873:80:46;1889:4;1881:23;;;1873:80;:::i;:::-;1963:87;-1:-1:-1;;;;;;;;;;;942:13992:159;;;;;1971:30:46;1963:87;:::i;:::-;1303:62:39;;:::i;:::-;942:13992:159;;;;;;;;;;-1:-1:-1;;;;;942:13992:159;;;;;;;;;;;;971:66:43;;942:13992:159;3232:526:43;942:13992:159;;;3330:17:43;;;;;;;;:::i;3232:526::-;942:13992:159;;;;;;;971:66:43;;;3383:63;;;;942:13992:159;3383:63:43;;;;942:13992:159;;3383:63:43;;;3232:526;-1:-1:-1;3379:302:43;;942:13992:159;;-1:-1:-1;;;3610:56:43;;942:13992:159;3610:56:43;;971:66;;;;;;;942:13992:159;971:66:43;942:13992:159;;;971:66:43;-1:-1:-1;;;971:66:43;;;;;;3610:56;3379:302;3496:28;;;;971:66;;2171:17;;;:::i;:::-;2204:27;942:13992:159;2204:27:43;;942:13992:159;;2523:15:43;;;:28;;;2519:123;;3232:526;;;;942:13992:159;;2523:28:43;;942:13992:159;2523:28:43;;3383:63;;;;;;;;;;;;;;;;:::i;:::-;;;971:66;;;;;;3383:63;;;;;;;;;942:13992:159;;;;;;;-1:-1:-1;;942:13992:159;;;;;;;:::i;:::-;1303:62:39;;:::i;:::-;11493:37:159;:58;;;;;;942:13992;;-1:-1:-1;;;11493:58:159;;:12;942:13992;11493:58;;942:13992;-1:-1:-1;;;;;942:13992:159;;;;;;;;;;;;;;;;11493:58;;;;;;;;942:13992;;;;;;;;;-1:-1:-1;;942:13992:159;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;4300:21;942:13992;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;942:13992:159;;;;;;;;-1:-1:-1;;;;;942:13992:159;;:::i;:::-;;;;3807:17;942:13992;;;;;;;;;;;;;;;;;-1:-1:-1;;942:13992:159;;;;;;;:::i;:::-;1303:62:39;;:::i;:::-;11955:32:159;:48;;;;;;942:13992;;-1:-1:-1;;;11955:48:159;;:12;942:13992;11955:48;;942:13992;-1:-1:-1;;;;;942:13992:159;;;;;;;;;;;;;;;;11955:48;;;;;;;;942:13992;;;;;;;;;-1:-1:-1;;942:13992:159;;;;;;:::i;:::-;1303:62:39;;:::i;:::-;11647:38:159;;:60;;;;;;942:13992;;-1:-1:-1;;;11647:60:159;;:12;942:13992;11647:60;;942:13992;-1:-1:-1;;;;;942:13992:159;;;;;;;;;;;;;;11647:60;;;;;;;;942:13992;;;11647:60;;;;:::i;942:13992::-;;;;;;;-1:-1:-1;;942:13992:159;;;;;;;;-1:-1:-1;;;;;942:13992:159;;;:::i;:::-;;;;;971:66:43;;;;5713:44:159;;942:13992;5713:44;;;942:13992;5713:44;;;;;;;;;;;;;942:13992;;;5699:10;:58;942:13992;;;5925:66;942:13992;;;;;;:::i;:::-;;;;;5877:37;;;942:13992;;;;;;5834:22;942:13992;;;;;;;;;;;;;;;;;;5925:66;942:13992;;;;;-1:-1:-1;;;942:13992:159;;;;;;;;;;;;;;;;;;;;;;;;;;5713:44;;;;;;;;;;;;;;;;:::i;:::-;;;942:13992;;;;;;;:::i;:::-;5713:44;;;;;;;;942:13992;;;;;;;;-1:-1:-1;;942:13992:159;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;942:13992:159;;;3657:22;942:13992;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;942:13992:159;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;942:13992:159;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;942:13992:159;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;942:13992:159;;;;;;;:::o;:::-;-1:-1:-1;;;;;942:13992:159;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;942:13992:159;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;942:13992:159;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;942:13992:159;;;;;;;:::o;:::-;-1:-1:-1;;;;;942:13992:159;;;;;;-1:-1:-1;;942:13992:159;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;942:13992:159;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;1599:130:39:-;1513:6;942:13992:159;-1:-1:-1;;;;;942:13992:159;929:10:65;1662:23:39;942:13992:159;;1599:130:39:o;942:13992:159:-;;;;;;;;;;;;;;;;;;;;;;;;;2666:187:39;2758:6;942:13992:159;;-1:-1:-1;;;;;942:13992:159;;;-1:-1:-1;;;;;;942:13992:159;;;;;;;;;;2806:40:39;-1:-1:-1;;2806:40:39;2666:187::o;942:13992:159:-;;;;:::o;:::-;;;-1:-1:-1;;;942:13992:159;;;;;;;;;;;;;;;;;-1:-1:-1;;;942:13992:159;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;942:13992:159;;;;;;;;;;;;;;;;;-1:-1:-1;;;942:13992:159;;;;;;;1699:281:43;1713:19:63;;:23;942:13992:159;;-1:-1:-1;;;;;;;;;;;942:13992:159;;-1:-1:-1;;;;;;942:13992:159;-1:-1:-1;;;;;942:13992:159;;;;;;;;;1699:281:43:o;942:13992:159:-;;;-1:-1:-1;;;942:13992:159;;;;;;;;;;;;;;;;;-1:-1:-1;;;942:13992:159;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;942:13992:159;;;;:::o;:::-;;;:::o;7682:628:63:-;;;;7886:418;;;942:13992:159;;;7917:22:63;7913:286;;8212:17;;:::o;7913:286::-;1713:19;:23;942:13992:159;;8212:17:63;:::o;942:13992:159:-;;;-1:-1:-1;;;942:13992:159;;;;;;;;;;;;;;;;;;;;7886:418:63;942:13992:159;;;;-1:-1:-1;8991:21:63;:17;;9163:142;;;;;;;8987:379;942:13992:159;;-1:-1:-1;;;9335:20:63;;942:13992:159;;;9335:20:63;;;;;;:::i;:::-;;;;942:13992:159;;;;;;;;;;;;;;;;-1:-1:-1;942:13992:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;942:13992:159;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;942:13992:159;;;;;;;;;;;;;;;;;-1:-1:-1;;;942:13992:159;;;;;;;;-1:-1:-1;;;;;942:13992:159;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;942:13992:159;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;942:13992:159;;;;;;;:::o;:::-;;;;;;;;;;:::o;12695:671::-;-1:-1:-1;;;;;942:13992:159;;;-1:-1:-1;942:13992:159;;;12809:28;942:13992;;;;;;;;;;;;;;;;12809:58;12805:85;;942:13992;12962:59;942:13992;12943:15;:78;;12939:105;;13084:28;942:13992;;;-1:-1:-1;;;13084:63:159;;942:13992;;;13084:63;;;942:13992;;;;;;;;;;;13084:63;;;;;;;;;;;;;;12695:671;942:13992;;;;971:66:43;;;;;;;13072:117:159;;13178:10;13084:63;13072:117;;942:13992;;13072:117;;;;;;;;;;;;;;;;12695:671;942:13992;;;;;;;-1:-1:-1;942:13992:159;;12695:671;;:::o;942:13992::-;;;;;;;;;;;13084:63;942:13992;;;;;;;;;;;;;;;;;;-1:-1:-1;;;942:13992:159;;;;;13072:117;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;942:13992;;;;;;;;;13072:117;;;;;;;;;;942:13992;;971:66:43;942:13992:159;;971:66:43;;;;13084:63:159;;;;;;;;;;;;;;;;:::i;:::-;;;942:13992;;;;;;;;:::i;:::-;13084:63;;;;;;;;;942:13992;;971:66:43;942:13992:159;;971:66:43;;;;12939:105:159;13031:7;;;;;;;:::o;12805:85::-;12877:7;;;;;;;;:::o;13598:595::-;-1:-1:-1;;;;;942:13992:159;-1:-1:-1;942:13992:159;;;13753:22;942:13992;;;;;;;;;;;;;;;;-1:-1:-1;13846:18:159;;13842:45;;942:13992;13965:53;;;942:13992;13946:15;:72;;13942:99;;942:13992;;;;;;14084:26;;;942:13992;-1:-1:-1;;;;;942:13992:159;;;;;;;14084:26;;;;;;:::i;:::-;942:13992;14074:37;;14486:13;;14481:108;942:13992;;;14481:108;14602:20;;;;;942:13992;;13598:595;;:::o;942:13992::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;942:13992:159;;;;;14520:3;942:13992;;;;;;14501:17;;;;;14520:3;14572:9;;;;;:::i;:::-;942:13992;14849:6;;;;;942:13992;;14868:22;;;;942:13992;;;;;;;14868:22;;;;;;:::i;:::-;942:13992;14858:33;;14849:78;14520:3;;:::i;:::-;14486:13;;;;;;14849:78;942:13992;;;14904:22;;;;942:13992;;;;;;;14904:22;;;;;;:::i;:::-;942:13992;14894:33;;14849:78;;14501:17;;;;942:13992;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;3889:603:219:-;-1:-1:-1;;;;;942:13992:159;;3983:30:219;;3979:117;;4110:9;942:13992:159;;;;;;971:66:43;;;4245:30:219;;;;4269:4;4245:30;;;942:13992:159;4245:30:219;;;;942:13992:159;4245:30:219;;;;;;;;;4011:1;4245:30;;;3889:603;-1:-1:-1;942:13992:159;;-1:-1:-1;;;1482:68:93;;;;4305:10:219;942:13992:159;1482:68:93;;942:13992:159;4269:4:219;942:13992:159;;;;;;;;;;;1482:68:93;;942:13992:159;;;;-1:-1:-1;;;;;942:13992:159;;;;;;;;;;1482:68:93;942:13992:159;;;1482:68:93;;:::i;:::-;942:13992:159;;;4370:30:219;;;;;;4269:4;4245:30;4370;;942:13992:159;4370:30:219;;;;;;;4011:1;4370:30;;;3889:603;4415:28;;;;;:::i;:::-;:39;942:13992:159;;3889:603:219;;:::o;942:13992:159:-;;;;;;;;;;;4245:30:219;942:13992:159;;;;;;;;;;;;;;4370:30:219;;;;;;;;;;;;;;;:::i;:::-;;;942:13992:159;;;;-1:-1:-1;942:13992:159;4415:28:219;4370:30;;;;;;;;942:13992:159;;971:66:43;4011:1:219;971:66:43;;;;;4245:30:219;;;;;;;;;;;;;;;;:::i;:::-;;;942:13992:159;;;;;;4245:30:219;;;;;;;;;;942:13992:159;;971:66:43;4011:1:219;971:66:43;;;;;942:13992:159;;;-1:-1:-1;;;942:13992:159;;;;;;;;;;;;;;;;;-1:-1:-1;;;942:13992:159;;;;;;;3979:117:219;4031:9;;;:20;942:13992:159;;4083:7:219:o;942:13992:159:-;;;-1:-1:-1;;;942:13992:159;;;;;;;;;;;;-1:-1:-1;;;942:13992:159;;;;;;;5173:642:93;942:13992:159;;5535:69:98;;-1:-1:-1;;;;;942:13992:159;;;;:::i;:::-;-1:-1:-1;942:13992:159;;;;;;;;;;;5487:31:98;;;;;;;;;;;:::i;5535:69::-;942:13992:159;;5705:22:93;;;;:56;;;;;5173:642;942:13992:159;;;;;;5173:642:93;:::o;942:13992:159:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;942:13992:159;;;;;5705:56:93;5731:30;;-1:-1:-1;5731:30:93;;;;;;;:::i;:::-;5705:56;;;;;942:13992:159;;;;;;;;;;;;;;;;;;:::o;10156:657:219:-;-1:-1:-1;;;;;942:13992:159;10156:657:219;942:13992:159;;10368:30:219;942:13992:159;;;;10452:16:219;942:13992:159;;;;;10500:72:219;;;;;;10523:25;;;;10500:72;;942:13992:159;;;;10500:72:219;;;942:13992:159;;;;;;;;;;;;;10396:1:219;942:13992:159;;;;;;;-1:-1:-1;;;;942:13992:159;;;-1:-1:-1;;942:13992:159;;;;;;;;;;;;;;;;;10396:1:219;942:13992:159;;;;;;10500:72:219;;;;;;;10396:1;10500:72;;;;;;;942:13992:159;;10500:72:219;;;;;;:::i;:::-;10444:136;;;;;;:::i;:::-;942:13992:159;;;;10364:445:219;10156:657::o;942:13992:159:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10364:445:219;10693:13;;;10396:1;10693:13;;;10732:3;942:13992:159;;10708:22:219;;;;;10766:14;1050:58:93;10766:14:219;;10732:3;10766:14;;;:::i;:::-;942:13992:159;;1050:58:93;10782:11:219;;;;:::i;:::-;942:13992:159;;;-1:-1:-1;;;1050:58:93;;;;-1:-1:-1;;;;;942:13992:159;;;;1050:58:93;;;942:13992:159;;;;;;;;;1050:58:93;;942:13992:159;;1050:58:93;:::i;:::-;;;:::i;:::-;10732:3:219;:::i;:::-;10693:13;;10708:22;;;;;;;10156:657::o",
    "linkReferences": {
      "src/utils/structs/MarketConfig.sol": {
        "MarketConfig": [
          {
            "start": 561,
            "length": 20
          },
          {
            "start": 7003,
            "length": 20
          },
          {
            "start": 9012,
            "length": 20
          },
          {
            "start": 9828,
            "length": 20
          },
          {
            "start": 13655,
            "length": 20
          },
          {
            "start": 13918,
            "length": 20
          },
          {
            "start": 14043,
            "length": 20
          }
        ]
      }
    },
    "immutableReferences": {
      "31740": [
        {
          "start": 11953,
          "length": 32
        },
        {
          "start": 12253,
          "length": 32
        },
        {
          "start": 13182,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "getContractAllowListConfig(address)": "04c1ff07",
    "getContractMintLimit(address)": "23946f1f",
    "getContractMintsPerAddress(address,address)": "ca774e68",
    "getContractSellerStakingMinimum(address)": "9890cddf",
    "getContractTxLimit(address)": "fa5312c8",
    "getContractTxsPerAddress(address,address)": "2da45e8e",
    "getDirectSaleConfig(address)": "a01fa6a9",
    "initialize(address,address,address,address,address,address,address,address)": "8a29e2de",
    "mintDirectSale(address,address,uint256,uint8,bytes32[])": "d647ed3c",
    "owner()": "8da5cb5b",
    "prepareMintDirectSale(address,address,uint256,uint256,uint256,address[],uint8[])": "78c19898",
    "proxiableUUID()": "52d1902d",
    "renounceOwnership()": "715018a6",
    "setApprovedTokenRegistry(address)": "e4e87e3b",
    "setContractAllowListConfig(bytes32,uint256,address)": "0fc635b3",
    "setContractMintLimit(address,uint256)": "4cf5f910",
    "setContractSellerStakingMinimum(address,uint256,uint256)": "677b1984",
    "setContractTxLimit(address,uint256)": "9dbef5d1",
    "setMarketplaceSettings(address)": "176ab440",
    "setNetworkBeneficiary(address)": "3492e5a8",
    "setPayments(address)": "af231a58",
    "setRoyaltyEngine(address)": "21ede032",
    "setSpaceOperatorRegistry(address)": "7f358230",
    "transferOwnership(address)": "f2fde38b",
    "upgradeTo(address)": "3659cfe6",
    "upgradeToAndCall(address,bytes)": "4f1ef286"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"ContractMintLimitSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minimum\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTimestamp\",\"type\":\"uint256\"}],\"name\":\"ContractStakingMinimumSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"ContractTxLimitSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenIdStart\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenIdEnd\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"MintDirectSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_maxMints\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address payable[]\",\"name\":\"splitRecipients\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint8[]\",\"name\":\"splitRatios\",\"type\":\"uint8[]\"}],\"name\":\"PrepareMintDirectSale\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_root\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_endTimestamp\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"}],\"name\":\"SetContractAllowListConfig\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"}],\"name\":\"getContractAllowListConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"endTimestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct IRareMinter.AllowListConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"}],\"name\":\"getContractMintLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getContractMintsPerAddress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"}],\"name\":\"getContractSellerStakingMinimum\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTimestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct IRareMinter.StakingMinimum\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"}],\"name\":\"getContractTxLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getContractTxsPerAddress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"}],\"name\":\"getDirectSaleConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currencyAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxMints\",\"type\":\"uint256\"},{\"internalType\":\"address payable[]\",\"name\":\"splitRecipients\",\"type\":\"address[]\"},{\"internalType\":\"uint8[]\",\"name\":\"splitRatios\",\"type\":\"uint8[]\"}],\"internalType\":\"struct IRareMinter.DirectSaleConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_networkBeneficiary\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_marketplaceSettings\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spaceOperatorRegistry\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_royaltyEngine\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_payments\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_approvedTokenRegistry\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakingSettings\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakingRegistry\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_currencyAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_numMints\",\"type\":\"uint8\"},{\"internalType\":\"bytes32[]\",\"name\":\"_proof\",\"type\":\"bytes32[]\"}],\"name\":\"mintDirectSale\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_currencyAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxMints\",\"type\":\"uint256\"},{\"internalType\":\"address payable[]\",\"name\":\"_splitRecipients\",\"type\":\"address[]\"},{\"internalType\":\"uint8[]\",\"name\":\"_splitRatios\",\"type\":\"uint8[]\"}],\"name\":\"prepareMintDirectSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approvedTokenRegistry\",\"type\":\"address\"}],\"name\":\"setApprovedTokenRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_root\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_endTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"}],\"name\":\"setContractAllowListConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_limit\",\"type\":\"uint256\"}],\"name\":\"setContractMintLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minimum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTimestamp\",\"type\":\"uint256\"}],\"name\":\"setContractSellerStakingMinimum\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_limit\",\"type\":\"uint256\"}],\"name\":\"setContractTxLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_marketplaceSettings\",\"type\":\"address\"}],\"name\":\"setMarketplaceSettings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_networkBeneficiary\",\"type\":\"address\"}],\"name\":\"setNetworkBeneficiary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_payments\",\"type\":\"address\"}],\"name\":\"setPayments\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_royaltyEngine\",\"type\":\"address\"}],\"name\":\"setRoyaltyEngine\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spaceOperatorRegistry\",\"type\":\"address\"}],\"name\":\"setSpaceOperatorRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"SuperRareLabs Inc.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"getContractAllowListConfig(address)\":{\"params\":{\"_contractAddress\":\"address The address of the ERC721 contract\"},\"returns\":{\"_0\":\"AllowListConfig The allow list config\"}},\"getContractMintLimit(address)\":{\"params\":{\"_contractAddress\":\"address The address of the ERC721 contract\"},\"returns\":{\"_0\":\"uint256 The mint limit\"}},\"getContractMintsPerAddress(address,address)\":{\"params\":{\"_address\":\"address The address of the account to get the mints for\",\"_contractAddress\":\"address The address of the ERC721 contract\"},\"returns\":{\"_0\":\"uint256 The number of mints\"}},\"getContractSellerStakingMinimum(address)\":{\"params\":{\"_contractAddress\":\"address The address of the ERC721 contract\"},\"returns\":{\"_0\":\"StakingMinimum The staking minimum\"}},\"getContractTxLimit(address)\":{\"params\":{\"_contractAddress\":\"address The address of the ERC721 contract\"},\"returns\":{\"_0\":\"uint256 The tx limit\"}},\"getContractTxsPerAddress(address,address)\":{\"params\":{\"_address\":\"address The address of the account to get the txs for\",\"_contractAddress\":\"address The address of the ERC721 contract\"},\"returns\":{\"_0\":\"uint256 The number of txs\"}},\"getDirectSaleConfig(address)\":{\"params\":{\"_contractAddress\":\"address The address of the ERC721 contract\"},\"returns\":{\"_0\":\"DirectSaleConfig The direct sale config\"}},\"mintDirectSale(address,address,uint256,uint8,bytes32[])\":{\"params\":{\"_contractAddress\":\"address The address of the ERC721 contract\",\"_currencyAddress\":\"address The address of the currency\",\"_numMints\":\"uint8 The number of tokens to be minted\",\"_price\":\"uint256 The price to mint\",\"_proof\":\"bytes32[] The merkle proof for the allowlist if applicable, otherwise empty array\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"prepareMintDirectSale(address,address,uint256,uint256,uint256,address[],uint8[])\":{\"params\":{\"_contractAddress\":\"address The address of the ERC721 contract\",\"_currencyAddress\":\"address The address of the currency to accept\",\"_maxMints\":\"uint256 The max number of tokens to mint per transaction\",\"_price\":\"uint256 The price to mint each token\",\"_splitRatios\":\"uint8[] The ratios to split the sale with\",\"_splitRecipients\":\"address payable[] The addresses to split the sale with\"}},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setContractAllowListConfig(bytes32,uint256,address)\":{\"params\":{\"_contractAddress\":\"address The address of the ERC721 contract\",\"_endTimestamp\":\"uint256 The timestamp when the allow list ends\",\"_root\":\"bytes32 The root of the merkle tree\"}},\"setContractMintLimit(address,uint256)\":{\"params\":{\"_contractAddress\":\"address The address of the ERC721 contract\",\"_limit\":\"uint256 The limit to set\"}},\"setContractSellerStakingMinimum(address,uint256,uint256)\":{\"params\":{\"_contractAddress\":\"address The address of the ERC721 contract\",\"_endTimestamp\":\"uint256 The timestamp when the minimum ends\",\"_minimum\":\"uint256 The minimum to set\"}},\"setContractTxLimit(address,uint256)\":{\"params\":{\"_contractAddress\":\"address The address of the ERC721 contract\",\"_limit\":\"uint256 The limit to set\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"title\":\"RareMinter\",\"version\":1},\"userdoc\":{\"events\":{\"ContractMintLimitSet(address,uint256)\":{\"notice\":\"Event emitted when a contract is set to a mint limit\"},\"ContractStakingMinimumSet(address,uint256,uint256)\":{\"notice\":\"Event emitted when a contract staking minimum amount staked is set\"},\"ContractTxLimitSet(address,uint256)\":{\"notice\":\"Event emitted when a contract is set to a tx limit\"},\"MintDirectSale(address,address,address,uint256,uint256,address,uint256)\":{\"notice\":\"Event emitted when a contract is prepared for direct sale\"},\"PrepareMintDirectSale(address,address,address,uint256,uint256,uint256,address[],uint8[])\":{\"notice\":\"Event emitted when a contract is prepared for direct sale\"},\"SetContractAllowListConfig(bytes32,uint256,address)\":{\"notice\":\"Event emitted when a contract is set to an allow list config\"}},\"kind\":\"user\",\"methods\":{\"getContractAllowListConfig(address)\":{\"notice\":\"Gets the allow list config for a contract\"},\"getContractMintLimit(address)\":{\"notice\":\"Gets the mint limit for a contract\"},\"getContractMintsPerAddress(address,address)\":{\"notice\":\"Gets the number of mints per address for a contract\"},\"getContractSellerStakingMinimum(address)\":{\"notice\":\"Gets the staking minimum for the seller of a mint for a contract\"},\"getContractTxLimit(address)\":{\"notice\":\"Gets the tx limit for a contract\"},\"getContractTxsPerAddress(address,address)\":{\"notice\":\"Gets the number of txs per address for a contract\"},\"getDirectSaleConfig(address)\":{\"notice\":\"Gets the direct sale config for a contract\"},\"mintDirectSale(address,address,uint256,uint8,bytes32[])\":{\"notice\":\"Mints a token to the buyer\"},\"prepareMintDirectSale(address,address,uint256,uint256,uint256,address[],uint8[])\":{\"notice\":\"Prepares a minting contract for direct sales\"},\"setContractAllowListConfig(bytes32,uint256,address)\":{\"notice\":\"Sets the allow list config for a contract\"},\"setContractMintLimit(address,uint256)\":{\"notice\":\"Sets the mint limit for a contract\"},\"setContractSellerStakingMinimum(address,uint256,uint256)\":{\"notice\":\"Sets the staking minimum for the seller of a mint for a contract\"},\"setContractTxLimit(address,uint256)\":{\"notice\":\"Sets the tx limit for a contract\"}},\"notice\":\"The logic for all functions related to the RareMinter.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/collection/RareMinter.sol\":\"RareMinter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/buffer/=lib/buffer/\",\":@ensdomains/ens-contracts/=lib/ens-contracts/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/contracts/\",\":@uniswap/v3-core/contracts/=lib/v3-core/contracts/\",\":@uniswap/v3-periphery/=lib/v3-periphery/contracts/\",\":arachnid/solidity-stringutils/=lib/solidity-stringutils/\",\":ds-test/=lib/ds-test/src/\",\":ensdomains/ens-contracts/=lib/ensdomains/ens-contracts/contracts/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":rareprotocol/assets/=lib/assets/src/\",\":rareprotocol/aux/=src/\",\":royalty-guard/=lib/royalty-guard/src/royalty-guard/\",\":royalty-registry-solidity/=lib/royalty-registry-solidity/contracts/\",\":royalty-registry/=lib/royalty-registry-solidity/contracts/\",\":solmate/=lib/solmate/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC20Upgradeable.sol\":{\"keccak256\":\"0xe73087c5001a37cf7186b3709377c7ceb01a0d38fb908723d1464cea66b4958c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b835a1929ca2c7c978085e58f08f48855df8a82ef6a426ac71393cf032ea0fc5\",\"dweb:/ipfs/QmUMXRN9g8u9wm63wc7PMaSs7oG2nqnM1VVvktaWkvF68v\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9826c7edf276ff48b99ee217358393097c30448a71d345d287c2f6961bb1f159\",\"dweb:/ipfs/QmYXBTY9wDvffGU47yMRFJ1NFyKwpbj94VHzRzhsm6R7Gz\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33e8f8d863c6943ea046fcf4972b4e815c04ab06bad195dba1d93f8ebeb8420d\",\"dweb:/ipfs/QmTQzxQTuuzPDk3eqVmYy7hv2RCXM1yt1NtubXpRbzYjaj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025\",\"dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0\",\"dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x8a63ea9ec07788740e51046ca14c61f411aedb901e89749c9d55fa56ed43086a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3035ae3f172ed9e172e1ba4d83bdc70279f63be51ce9218c530132def66ff577\",\"dweb:/ipfs/QmTQ3zfC3YUNeY3KUVFiHgTWDuxfmcEMgpGC6HMoTpgZJL\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x41bbb2c41036ca64b2f6c9e973e8cfaa113ebc42af86702cd0d267f915a7e886\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6bf6699c55e82c7af6ae90b61ea9643ca0c905097da9a31269319f1b5a2a696a\",\"dweb:/ipfs/QmRJZa2UmWcRo6W8JnuomwzfjVtAS21QC8HKggxBhoPsU4\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xa6dfb97ce947b7c846b054ee7d45d12383359778f4f3743654ae0a34fa421b26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b97e7e5a77ea47c08ba422291df887eba76c80982f52a6e94a30106e9377a94f\",\"dweb:/ipfs/Qme7N2XRC7mcDxB8wZxNWPk6T8S2qsnmhAqXeUj4CNvsGD\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/royalty-registry-solidity/contracts/IRoyaltyEngineV1.sol\":{\"keccak256\":\"0xc66561df4db1dd5bc3d14e2ec1c5cf393db682b18989779acc41b3a4834d9d27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c342b761cb6656f04bc4cb40e4593aed5484efee9594a806dbd3a95fd6d757a9\",\"dweb:/ipfs/QmWsz6C36AhhSfBhfdfX3LhPabLkqGxa23s5iNfN4yJq7r\"]},\"src/collection/IERC721Mint.sol\":{\"keccak256\":\"0x4bd1a75a49203d7fe98c9ad7fd39a3a2d73ae16853f989f770ed6e11bd2c1370\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fea6f1aa42268af276f3c63bdd8cd84f9c9f9ea7bb0910369c62bd06d7c9d47d\",\"dweb:/ipfs/QmZ9jnaRgvZAZr5UFoMuh1dtSU1RbFjnE7zb9RGNc9fpWH\"]},\"src/collection/IRareMinter.sol\":{\"keccak256\":\"0x1186ab0626e92fe41cc1e0473953137aa7d3066dc9862f10f86ecb3b79f56406\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2b5587bc0c25a8aaca77ba7f3d7cf769d39e60342fb7de9ca0196f564abc69b\",\"dweb:/ipfs/QmSgHyabMp2WRTeCJjnZcMe8dBJAZGuN4NXWHLmDHEkPXm\"]},\"src/collection/RareMinter.sol\":{\"keccak256\":\"0x931911bd805456589621fb26171f0bb45a350a217ff48d6184ba8a8be906e296\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://081ee7f8de4c712984c67bbc9c36e24524d2fa65e15fbd090c4e8509557228ac\",\"dweb:/ipfs/QmZM37xdYqyRypoJyQaGPHmuVmgrqX3QrbJp9VRZDEwtAd\"]},\"src/marketplace/IMarketplaceSettings.sol\":{\"keccak256\":\"0xa42b0f448c52cc04ca1c3b013ecbf99b9b5d857e7ed37a8fe178669fab933083\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://00f697de6e1de92ccd4fd260ce9bde6fca290121f5f7e2b7d9cee8f718670ff0\",\"dweb:/ipfs/Qmbt7gXsaTG8WmeFaLSCeNy3ViZgLRgeNfwHpRwL1hia13\"]},\"src/marketplace/IStakingSettings.sol\":{\"keccak256\":\"0xb470dc177e9d6bf92f31fae722b38195c2de8c2121b9df3ec9391b7ce361f501\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82508cf251aa646341d5393251f15cb68524f4b2ddc0d327d3637d4592125fda\",\"dweb:/ipfs/QmURvsW8RLKwimfwA6Y5D3CqKAVGTSdqNWjHjhtTSFWGP4\"]},\"src/payments/IPayments.sol\":{\"keccak256\":\"0xd5370fe954b457c13045901acfe5aa8c4dc66885f913d2729aa7c65975e7fbbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da9318f1b4585578ca5606c320f093bb86682594c6cd8244f9be59650efcd38\",\"dweb:/ipfs/Qmaq1QFA45ZkPjqn1idCVGrUzCd5pbuUuw18N3Xk1Sewdc\"]},\"src/registry/interfaces/IApprovedTokenRegistry.sol\":{\"keccak256\":\"0xdb86d418bedb954ea79129631d734b42749d4a0ca00635ecdf3dfeb8e81fb60a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad677939c49f8a55f7a1c1e78b0abbe722744abc5c26b81eef5a20a578d415d2\",\"dweb:/ipfs/QmZL6aHq79B8TFPrc5Zrt7iLxuqkoJikhEJtq8hgk1aKMC\"]},\"src/registry/interfaces/ISpaceOperatorRegistry.sol\":{\"keccak256\":\"0x2b0899fa39f324d105f5b3b7fe6d0020374c5065d19aa87b74fd042f368b4ade\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88aaf406edb29325f05024f8f94b0eab31de5f08c02c9cdea053da6671df1d33\",\"dweb:/ipfs/QmSPXe7U4aCaLew2xJ3gmQqBWTf3QMvpxYV2XNq3e41gGT\"]},\"src/staking/registry/IRareStakingRegistry.sol\":{\"keccak256\":\"0x26458c277ad3b3280dbedd7dbfdfbaa8d2af5f6180959ef732cbcec78b6c2924\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5ba0ab87bedec5547531b79c123233dfcbdf9062a860845d242ae518e6ff8d6\",\"dweb:/ipfs/QmT4kZV7MjKwevN2ABFRD7tNnXRkUxJqNKyrXxthfWC5mR\"]},\"src/staking/token/IRarityPool.sol\":{\"keccak256\":\"0x8a1c433510ef5db8f4a8b2b298c6618a91e974f1ea6c280967c1d3c710e3794b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ade4d1308318773489621961a1b6e2ed76a0c8ed0686225e75100f73df91f14\",\"dweb:/ipfs/Qma1AxmUyfM8CbRN6MnWW6BVpYE9iByWQygCDvG3RunbqS\"]},\"src/utils/MarketUtils.sol\":{\"keccak256\":\"0xcffb924151286062619d08ceaf4d742c1c16111fad968864933bd3d05bec4875\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5e831ffeeb02a8de81b65284f80e937fc5bb9ec6f39de60993e8b4ec24e23da\",\"dweb:/ipfs/QmNuprBmoPbvvHMwTKAKkSLnnzw5j8X7yeXkYDu9cSWiHY\"]},\"src/utils/structs/MarketConfig.sol\":{\"keccak256\":\"0xb158a05edcb54b4a71d63db51d5f494576686aa7aa74688c5ae339dd085025f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6fb394a9a58e53d58a17b04d1d7f6bc6464766a522846d740aed4b07ab35d369\",\"dweb:/ipfs/QmePsh5LE7FY4jws3tep5PzA2xDL4EmmAwbQKBxGzrLtR6\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.18+commit.87f61d96"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousAdmin",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "beacon",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "BeaconUpgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "contractAddress",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "limit",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractMintLimitSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "contractAddress",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "minimum",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "endTimestamp",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractStakingMinimumSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "contractAddress",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "limit",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContractTxLimitSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_contractAddress",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_seller",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_buyer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_tokenIdStart",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_tokenIdEnd",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_price",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MintDirectSale",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_contractAddress",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_seller",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_price",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_startTime",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_maxMints",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address payable[]",
              "name": "splitRecipients",
              "type": "address[]",
              "indexed": false
            },
            {
              "internalType": "uint8[]",
              "name": "splitRatios",
              "type": "uint8[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PrepareMintDirectSale",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_root",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_endTimestamp",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "_contractAddress",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "SetContractAllowListConfig",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Upgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_contractAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getContractAllowListConfig",
          "outputs": [
            {
              "internalType": "struct IRareMinter.AllowListConfig",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "root",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "endTimestamp",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_contractAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getContractMintLimit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_contractAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_address",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getContractMintsPerAddress",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_contractAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getContractSellerStakingMinimum",
          "outputs": [
            {
              "internalType": "struct IRareMinter.StakingMinimum",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTimestamp",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_contractAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getContractTxLimit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_contractAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_address",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getContractTxsPerAddress",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_contractAddress",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDirectSaleConfig",
          "outputs": [
            {
              "internalType": "struct IRareMinter.DirectSaleConfig",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "seller",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "currencyAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxMints",
                  "type": "uint256"
                },
                {
                  "internalType": "address payable[]",
                  "name": "splitRecipients",
                  "type": "address[]"
                },
                {
                  "internalType": "uint8[]",
                  "name": "splitRatios",
                  "type": "uint8[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_networkBeneficiary",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_marketplaceSettings",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_spaceOperatorRegistry",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_royaltyEngine",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_payments",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_approvedTokenRegistry",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_stakingSettings",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_stakingRegistry",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_contractAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_currencyAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_price",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "_numMints",
              "type": "uint8"
            },
            {
              "internalType": "bytes32[]",
              "name": "_proof",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "mintDirectSale"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_contractAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_currencyAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_maxMints",
              "type": "uint256"
            },
            {
              "internalType": "address payable[]",
              "name": "_splitRecipients",
              "type": "address[]"
            },
            {
              "internalType": "uint8[]",
              "name": "_splitRatios",
              "type": "uint8[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "prepareMintDirectSale"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxiableUUID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_approvedTokenRegistry",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovedTokenRegistry"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_root",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "_endTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_contractAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractAllowListConfig"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_contractAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_limit",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractMintLimit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_contractAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_minimum",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_endTimestamp",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractSellerStakingMinimum"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_contractAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_limit",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setContractTxLimit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_marketplaceSettings",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMarketplaceSettings"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_networkBeneficiary",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setNetworkBeneficiary"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_payments",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPayments"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_royaltyEngine",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyEngine"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_spaceOperatorRegistry",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setSpaceOperatorRegistry"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "upgradeTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "upgradeToAndCall"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getContractAllowListConfig(address)": {
            "params": {
              "_contractAddress": "address The address of the ERC721 contract"
            },
            "returns": {
              "_0": "AllowListConfig The allow list config"
            }
          },
          "getContractMintLimit(address)": {
            "params": {
              "_contractAddress": "address The address of the ERC721 contract"
            },
            "returns": {
              "_0": "uint256 The mint limit"
            }
          },
          "getContractMintsPerAddress(address,address)": {
            "params": {
              "_address": "address The address of the account to get the mints for",
              "_contractAddress": "address The address of the ERC721 contract"
            },
            "returns": {
              "_0": "uint256 The number of mints"
            }
          },
          "getContractSellerStakingMinimum(address)": {
            "params": {
              "_contractAddress": "address The address of the ERC721 contract"
            },
            "returns": {
              "_0": "StakingMinimum The staking minimum"
            }
          },
          "getContractTxLimit(address)": {
            "params": {
              "_contractAddress": "address The address of the ERC721 contract"
            },
            "returns": {
              "_0": "uint256 The tx limit"
            }
          },
          "getContractTxsPerAddress(address,address)": {
            "params": {
              "_address": "address The address of the account to get the txs for",
              "_contractAddress": "address The address of the ERC721 contract"
            },
            "returns": {
              "_0": "uint256 The number of txs"
            }
          },
          "getDirectSaleConfig(address)": {
            "params": {
              "_contractAddress": "address The address of the ERC721 contract"
            },
            "returns": {
              "_0": "DirectSaleConfig The direct sale config"
            }
          },
          "mintDirectSale(address,address,uint256,uint8,bytes32[])": {
            "params": {
              "_contractAddress": "address The address of the ERC721 contract",
              "_currencyAddress": "address The address of the currency",
              "_numMints": "uint8 The number of tokens to be minted",
              "_price": "uint256 The price to mint",
              "_proof": "bytes32[] The merkle proof for the allowlist if applicable, otherwise empty array"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "prepareMintDirectSale(address,address,uint256,uint256,uint256,address[],uint8[])": {
            "params": {
              "_contractAddress": "address The address of the ERC721 contract",
              "_currencyAddress": "address The address of the currency to accept",
              "_maxMints": "uint256 The max number of tokens to mint per transaction",
              "_price": "uint256 The price to mint each token",
              "_splitRatios": "uint8[] The ratios to split the sale with",
              "_splitRecipients": "address payable[] The addresses to split the sale with"
            }
          },
          "proxiableUUID()": {
            "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "setContractAllowListConfig(bytes32,uint256,address)": {
            "params": {
              "_contractAddress": "address The address of the ERC721 contract",
              "_endTimestamp": "uint256 The timestamp when the allow list ends",
              "_root": "bytes32 The root of the merkle tree"
            }
          },
          "setContractMintLimit(address,uint256)": {
            "params": {
              "_contractAddress": "address The address of the ERC721 contract",
              "_limit": "uint256 The limit to set"
            }
          },
          "setContractSellerStakingMinimum(address,uint256,uint256)": {
            "params": {
              "_contractAddress": "address The address of the ERC721 contract",
              "_endTimestamp": "uint256 The timestamp when the minimum ends",
              "_minimum": "uint256 The minimum to set"
            }
          },
          "setContractTxLimit(address,uint256)": {
            "params": {
              "_contractAddress": "address The address of the ERC721 contract",
              "_limit": "uint256 The limit to set"
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "upgradeTo(address)": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          },
          "upgradeToAndCall(address,bytes)": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getContractAllowListConfig(address)": {
            "notice": "Gets the allow list config for a contract"
          },
          "getContractMintLimit(address)": {
            "notice": "Gets the mint limit for a contract"
          },
          "getContractMintsPerAddress(address,address)": {
            "notice": "Gets the number of mints per address for a contract"
          },
          "getContractSellerStakingMinimum(address)": {
            "notice": "Gets the staking minimum for the seller of a mint for a contract"
          },
          "getContractTxLimit(address)": {
            "notice": "Gets the tx limit for a contract"
          },
          "getContractTxsPerAddress(address,address)": {
            "notice": "Gets the number of txs per address for a contract"
          },
          "getDirectSaleConfig(address)": {
            "notice": "Gets the direct sale config for a contract"
          },
          "mintDirectSale(address,address,uint256,uint8,bytes32[])": {
            "notice": "Mints a token to the buyer"
          },
          "prepareMintDirectSale(address,address,uint256,uint256,uint256,address[],uint8[])": {
            "notice": "Prepares a minting contract for direct sales"
          },
          "setContractAllowListConfig(bytes32,uint256,address)": {
            "notice": "Sets the allow list config for a contract"
          },
          "setContractMintLimit(address,uint256)": {
            "notice": "Sets the mint limit for a contract"
          },
          "setContractSellerStakingMinimum(address,uint256,uint256)": {
            "notice": "Sets the staking minimum for the seller of a mint for a contract"
          },
          "setContractTxLimit(address,uint256)": {
            "notice": "Sets the tx limit for a contract"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ensdomains/buffer/=lib/buffer/",
        "@ensdomains/ens-contracts/=lib/ens-contracts/contracts/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@uniswap/v3-core/=lib/v3-core/contracts/",
        "@uniswap/v3-core/contracts/=lib/v3-core/contracts/",
        "@uniswap/v3-periphery/=lib/v3-periphery/contracts/",
        "arachnid/solidity-stringutils/=lib/solidity-stringutils/",
        "ds-test/=lib/ds-test/src/",
        "ensdomains/ens-contracts/=lib/ensdomains/ens-contracts/contracts/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        "rareprotocol/assets/=lib/assets/src/",
        "rareprotocol/aux/=src/",
        "royalty-guard/=lib/royalty-guard/src/royalty-guard/",
        "royalty-registry-solidity/=lib/royalty-registry-solidity/contracts/",
        "royalty-registry/=lib/royalty-registry-solidity/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/collection/RareMinter.sol": "RareMinter"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98",
        "urls": [
          "bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8",
          "dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC1967Upgradeable.sol": {
        "keccak256": "0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b",
        "urls": [
          "bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0",
          "dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC20Upgradeable.sol": {
        "keccak256": "0xe73087c5001a37cf7186b3709377c7ceb01a0d38fb908723d1464cea66b4958c",
        "urls": [
          "bzz-raw://b835a1929ca2c7c978085e58f08f48855df8a82ef6a426ac71393cf032ea0fc5",
          "dweb:/ipfs/QmUMXRN9g8u9wm63wc7PMaSs7oG2nqnM1VVvktaWkvF68v"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol": {
        "keccak256": "0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f",
        "urls": [
          "bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053",
          "dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
        "keccak256": "0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161",
        "urls": [
          "bzz-raw://9826c7edf276ff48b99ee217358393097c30448a71d345d287c2f6961bb1f159",
          "dweb:/ipfs/QmYXBTY9wDvffGU47yMRFJ1NFyKwpbj94VHzRzhsm6R7Gz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol": {
        "keccak256": "0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908",
        "urls": [
          "bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1",
          "dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad",
        "urls": [
          "bzz-raw://33e8f8d863c6943ea046fcf4972b4e815c04ab06bad195dba1d93f8ebeb8420d",
          "dweb:/ipfs/QmTQzxQTuuzPDk3eqVmYy7hv2RCXM1yt1NtubXpRbzYjaj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0",
        "urls": [
          "bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025",
          "dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f",
        "urls": [
          "bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f",
          "dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol": {
        "keccak256": "0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908",
        "urls": [
          "bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685",
          "dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0",
        "urls": [
          "bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1",
          "dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb",
        "urls": [
          "bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0",
          "dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x8a63ea9ec07788740e51046ca14c61f411aedb901e89749c9d55fa56ed43086a",
        "urls": [
          "bzz-raw://3035ae3f172ed9e172e1ba4d83bdc70279f63be51ce9218c530132def66ff577",
          "dweb:/ipfs/QmTQ3zfC3YUNeY3KUVFiHgTWDuxfmcEMgpGC6HMoTpgZJL"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x41bbb2c41036ca64b2f6c9e973e8cfaa113ebc42af86702cd0d267f915a7e886",
        "urls": [
          "bzz-raw://6bf6699c55e82c7af6ae90b61ea9643ca0c905097da9a31269319f1b5a2a696a",
          "dweb:/ipfs/QmRJZa2UmWcRo6W8JnuomwzfjVtAS21QC8HKggxBhoPsU4"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xa6dfb97ce947b7c846b054ee7d45d12383359778f4f3743654ae0a34fa421b26",
        "urls": [
          "bzz-raw://b97e7e5a77ea47c08ba422291df887eba76c80982f52a6e94a30106e9377a94f",
          "dweb:/ipfs/Qme7N2XRC7mcDxB8wZxNWPk6T8S2qsnmhAqXeUj4CNvsGD"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/royalty-registry-solidity/contracts/IRoyaltyEngineV1.sol": {
        "keccak256": "0xc66561df4db1dd5bc3d14e2ec1c5cf393db682b18989779acc41b3a4834d9d27",
        "urls": [
          "bzz-raw://c342b761cb6656f04bc4cb40e4593aed5484efee9594a806dbd3a95fd6d757a9",
          "dweb:/ipfs/QmWsz6C36AhhSfBhfdfX3LhPabLkqGxa23s5iNfN4yJq7r"
        ],
        "license": "MIT"
      },
      "src/collection/IERC721Mint.sol": {
        "keccak256": "0x4bd1a75a49203d7fe98c9ad7fd39a3a2d73ae16853f989f770ed6e11bd2c1370",
        "urls": [
          "bzz-raw://fea6f1aa42268af276f3c63bdd8cd84f9c9f9ea7bb0910369c62bd06d7c9d47d",
          "dweb:/ipfs/QmZ9jnaRgvZAZr5UFoMuh1dtSU1RbFjnE7zb9RGNc9fpWH"
        ],
        "license": "MIT"
      },
      "src/collection/IRareMinter.sol": {
        "keccak256": "0x1186ab0626e92fe41cc1e0473953137aa7d3066dc9862f10f86ecb3b79f56406",
        "urls": [
          "bzz-raw://f2b5587bc0c25a8aaca77ba7f3d7cf769d39e60342fb7de9ca0196f564abc69b",
          "dweb:/ipfs/QmSgHyabMp2WRTeCJjnZcMe8dBJAZGuN4NXWHLmDHEkPXm"
        ],
        "license": "MIT"
      },
      "src/collection/RareMinter.sol": {
        "keccak256": "0x931911bd805456589621fb26171f0bb45a350a217ff48d6184ba8a8be906e296",
        "urls": [
          "bzz-raw://081ee7f8de4c712984c67bbc9c36e24524d2fa65e15fbd090c4e8509557228ac",
          "dweb:/ipfs/QmZM37xdYqyRypoJyQaGPHmuVmgrqX3QrbJp9VRZDEwtAd"
        ],
        "license": "MIT"
      },
      "src/marketplace/IMarketplaceSettings.sol": {
        "keccak256": "0xa42b0f448c52cc04ca1c3b013ecbf99b9b5d857e7ed37a8fe178669fab933083",
        "urls": [
          "bzz-raw://00f697de6e1de92ccd4fd260ce9bde6fca290121f5f7e2b7d9cee8f718670ff0",
          "dweb:/ipfs/Qmbt7gXsaTG8WmeFaLSCeNy3ViZgLRgeNfwHpRwL1hia13"
        ],
        "license": "MIT"
      },
      "src/marketplace/IStakingSettings.sol": {
        "keccak256": "0xb470dc177e9d6bf92f31fae722b38195c2de8c2121b9df3ec9391b7ce361f501",
        "urls": [
          "bzz-raw://82508cf251aa646341d5393251f15cb68524f4b2ddc0d327d3637d4592125fda",
          "dweb:/ipfs/QmURvsW8RLKwimfwA6Y5D3CqKAVGTSdqNWjHjhtTSFWGP4"
        ],
        "license": "MIT"
      },
      "src/payments/IPayments.sol": {
        "keccak256": "0xd5370fe954b457c13045901acfe5aa8c4dc66885f913d2729aa7c65975e7fbbd",
        "urls": [
          "bzz-raw://9da9318f1b4585578ca5606c320f093bb86682594c6cd8244f9be59650efcd38",
          "dweb:/ipfs/Qmaq1QFA45ZkPjqn1idCVGrUzCd5pbuUuw18N3Xk1Sewdc"
        ],
        "license": "MIT"
      },
      "src/registry/interfaces/IApprovedTokenRegistry.sol": {
        "keccak256": "0xdb86d418bedb954ea79129631d734b42749d4a0ca00635ecdf3dfeb8e81fb60a",
        "urls": [
          "bzz-raw://ad677939c49f8a55f7a1c1e78b0abbe722744abc5c26b81eef5a20a578d415d2",
          "dweb:/ipfs/QmZL6aHq79B8TFPrc5Zrt7iLxuqkoJikhEJtq8hgk1aKMC"
        ],
        "license": "MIT"
      },
      "src/registry/interfaces/ISpaceOperatorRegistry.sol": {
        "keccak256": "0x2b0899fa39f324d105f5b3b7fe6d0020374c5065d19aa87b74fd042f368b4ade",
        "urls": [
          "bzz-raw://88aaf406edb29325f05024f8f94b0eab31de5f08c02c9cdea053da6671df1d33",
          "dweb:/ipfs/QmSPXe7U4aCaLew2xJ3gmQqBWTf3QMvpxYV2XNq3e41gGT"
        ],
        "license": "MIT"
      },
      "src/staking/registry/IRareStakingRegistry.sol": {
        "keccak256": "0x26458c277ad3b3280dbedd7dbfdfbaa8d2af5f6180959ef732cbcec78b6c2924",
        "urls": [
          "bzz-raw://e5ba0ab87bedec5547531b79c123233dfcbdf9062a860845d242ae518e6ff8d6",
          "dweb:/ipfs/QmT4kZV7MjKwevN2ABFRD7tNnXRkUxJqNKyrXxthfWC5mR"
        ],
        "license": "MIT"
      },
      "src/staking/token/IRarityPool.sol": {
        "keccak256": "0x8a1c433510ef5db8f4a8b2b298c6618a91e974f1ea6c280967c1d3c710e3794b",
        "urls": [
          "bzz-raw://8ade4d1308318773489621961a1b6e2ed76a0c8ed0686225e75100f73df91f14",
          "dweb:/ipfs/Qma1AxmUyfM8CbRN6MnWW6BVpYE9iByWQygCDvG3RunbqS"
        ],
        "license": "MIT"
      },
      "src/utils/MarketUtils.sol": {
        "keccak256": "0xcffb924151286062619d08ceaf4d742c1c16111fad968864933bd3d05bec4875",
        "urls": [
          "bzz-raw://b5e831ffeeb02a8de81b65284f80e937fc5bb9ec6f39de60993e8b4ec24e23da",
          "dweb:/ipfs/QmNuprBmoPbvvHMwTKAKkSLnnzw5j8X7yeXkYDu9cSWiHY"
        ],
        "license": "MIT"
      },
      "src/utils/structs/MarketConfig.sol": {
        "keccak256": "0xb158a05edcb54b4a71d63db51d5f494576686aa7aa74688c5ae339dd085025f1",
        "urls": [
          "bzz-raw://6fb394a9a58e53d58a17b04d1d7f6bc6464766a522846d740aed4b07ab35d369",
          "dweb:/ipfs/QmePsh5LE7FY4jws3tep5PzA2xDL4EmmAwbQKBxGzrLtR6"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/collection/RareMinter.sol",
    "id": 60364,
    "exportedSymbols": {
      "IERC721": [
        42442
      ],
      "IERC721Mint": [
        57991
      ],
      "IRareMinter": [
        58451
      ],
      "IRarityPool": [
        67326
      ],
      "Initializable": [
        31709
      ],
      "MarketConfig": [
        91077
      ],
      "MarketUtils": [
        90358
      ],
      "OwnableUpgradeable": [
        31172
      ],
      "RareMinter": [
        60363
      ],
      "ReentrancyGuardUpgradeable": [
        32056
      ],
      "UUPSUpgradeable": [
        31845
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:14903:159",
    "nodes": [
      {
        "id": 59374,
        "nodeType": "PragmaDirective",
        "src": "32:23:159",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".18"
        ]
      },
      {
        "id": 59376,
        "nodeType": "ImportDirective",
        "src": "57:72:159",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "file": "openzeppelin-contracts/token/ERC721/IERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 60364,
        "sourceUnit": 42443,
        "symbolAliases": [
          {
            "foreign": {
              "id": 59375,
              "name": "IERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42442,
              "src": "65:7:159",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 59378,
        "nodeType": "ImportDirective",
        "src": "130:95:159",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "file": "openzeppelin-contracts-upgradeable/proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 60364,
        "sourceUnit": 31710,
        "symbolAliases": [
          {
            "foreign": {
              "id": 59377,
              "name": "Initializable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31709,
              "src": "138:13:159",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 59380,
        "nodeType": "ImportDirective",
        "src": "226:100:159",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/access/OwnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 60364,
        "sourceUnit": 31173,
        "symbolAliases": [
          {
            "foreign": {
              "id": 59379,
              "name": "OwnableUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31172,
              "src": "234:18:159",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 59382,
        "nodeType": "ImportDirective",
        "src": "327:118:159",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 60364,
        "sourceUnit": 32057,
        "symbolAliases": [
          {
            "foreign": {
              "id": 59381,
              "name": "ReentrancyGuardUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32056,
              "src": "335:26:159",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 59384,
        "nodeType": "ImportDirective",
        "src": "446:99:159",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 60364,
        "sourceUnit": 31846,
        "symbolAliases": [
          {
            "foreign": {
              "id": 59383,
              "name": "UUPSUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31845,
              "src": "454:15:159",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 59386,
        "nodeType": "ImportDirective",
        "src": "547:63:159",
        "nodes": [],
        "absolutePath": "src/utils/structs/MarketConfig.sol",
        "file": "../utils/structs/MarketConfig.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 60364,
        "sourceUnit": 91078,
        "symbolAliases": [
          {
            "foreign": {
              "id": 59385,
              "name": "MarketConfig",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 91077,
              "src": "555:12:159",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 59388,
        "nodeType": "ImportDirective",
        "src": "611:53:159",
        "nodes": [],
        "absolutePath": "src/utils/MarketUtils.sol",
        "file": "../utils/MarketUtils.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 60364,
        "sourceUnit": 90359,
        "symbolAliases": [
          {
            "foreign": {
              "id": 59387,
              "name": "MarketUtils",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 90358,
              "src": "619:11:159",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 59390,
        "nodeType": "ImportDirective",
        "src": "665:61:159",
        "nodes": [],
        "absolutePath": "src/staking/token/IRarityPool.sol",
        "file": "../staking/token/IRarityPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 60364,
        "sourceUnit": 67327,
        "symbolAliases": [
          {
            "foreign": {
              "id": 59389,
              "name": "IRarityPool",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 67326,
              "src": "673:11:159",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 59392,
        "nodeType": "ImportDirective",
        "src": "727:46:159",
        "nodes": [],
        "absolutePath": "src/collection/IERC721Mint.sol",
        "file": "./IERC721Mint.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 60364,
        "sourceUnit": 57992,
        "symbolAliases": [
          {
            "foreign": {
              "id": 59391,
              "name": "IERC721Mint",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 57991,
              "src": "735:11:159",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 59394,
        "nodeType": "ImportDirective",
        "src": "774:46:159",
        "nodes": [],
        "absolutePath": "src/collection/IRareMinter.sol",
        "file": "./IRareMinter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 60364,
        "sourceUnit": 58452,
        "symbolAliases": [
          {
            "foreign": {
              "id": 59393,
              "name": "IRareMinter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 58451,
              "src": "782:11:159",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 60363,
        "nodeType": "ContractDefinition",
        "src": "942:13992:159",
        "nodes": [
          {
            "id": 59409,
            "nodeType": "UsingForDirective",
            "src": "1061:42:159",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 59406,
              "name": "MarketUtils",
              "nameLocations": [
                "1067:11:159"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 90358,
              "src": "1067:11:159"
            },
            "typeName": {
              "id": 59408,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 59407,
                "name": "MarketConfig.Config",
                "nameLocations": [
                  "1083:12:159",
                  "1096:6:159"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 90749,
                "src": "1083:19:159"
              },
              "referencedDeclaration": 90749,
              "src": "1083:19:159",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Config_$90749_storage_ptr",
                "typeString": "struct MarketConfig.Config"
              }
            }
          },
          {
            "id": 59413,
            "nodeType": "UsingForDirective",
            "src": "1106:43:159",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 59410,
              "name": "MarketConfig",
              "nameLocations": [
                "1112:12:159"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 91077,
              "src": "1112:12:159"
            },
            "typeName": {
              "id": 59412,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 59411,
                "name": "MarketConfig.Config",
                "nameLocations": [
                  "1129:12:159",
                  "1142:6:159"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 90749,
                "src": "1129:19:159"
              },
              "referencedDeclaration": 90749,
              "src": "1129:19:159",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Config_$90749_storage_ptr",
                "typeString": "struct MarketConfig.Config"
              }
            }
          },
          {
            "id": 59416,
            "nodeType": "VariableDeclaration",
            "src": "1385:40:159",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "marketConfig",
            "nameLocation": "1413:12:159",
            "scope": 60363,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Config_$90749_storage",
              "typeString": "struct MarketConfig.Config"
            },
            "typeName": {
              "id": 59415,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 59414,
                "name": "MarketConfig.Config",
                "nameLocations": [
                  "1385:12:159",
                  "1398:6:159"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 90749,
                "src": "1385:19:159"
              },
              "referencedDeclaration": 90749,
              "src": "1385:19:159",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Config_$90749_storage_ptr",
                "typeString": "struct MarketConfig.Config"
              }
            },
            "visibility": "private"
          },
          {
            "id": 59421,
            "nodeType": "VariableDeclaration",
            "src": "1485:62:159",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "directSaleConfigs",
            "nameLocation": "1530:17:159",
            "scope": 60363,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_DirectSaleConfig_$58236_storage_$",
              "typeString": "mapping(address => struct IRareMinter.DirectSaleConfig)"
            },
            "typeName": {
              "id": 59420,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 59417,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1493:7:159",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1485:36:159",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_DirectSaleConfig_$58236_storage_$",
                "typeString": "mapping(address => struct IRareMinter.DirectSaleConfig)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 59419,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 59418,
                  "name": "DirectSaleConfig",
                  "nameLocations": [
                    "1504:16:159"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58236,
                  "src": "1504:16:159"
                },
                "referencedDeclaration": 58236,
                "src": "1504:16:159",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_DirectSaleConfig_$58236_storage_ptr",
                  "typeString": "struct IRareMinter.DirectSaleConfig"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 59426,
            "nodeType": "VariableDeclaration",
            "src": "1606:66:159",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "contractAllowlistRoots",
            "nameLocation": "1650:22:159",
            "scope": 60363,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AllowListConfig_$58241_storage_$",
              "typeString": "mapping(address => struct IRareMinter.AllowListConfig)"
            },
            "typeName": {
              "id": 59425,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 59422,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1614:7:159",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1606:35:159",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AllowListConfig_$58241_storage_$",
                "typeString": "mapping(address => struct IRareMinter.AllowListConfig)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 59424,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 59423,
                  "name": "AllowListConfig",
                  "nameLocations": [
                    "1625:15:159"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58241,
                  "src": "1625:15:159"
                },
                "referencedDeclaration": 58241,
                "src": "1625:15:159",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_AllowListConfig_$58241_storage_ptr",
                  "typeString": "struct IRareMinter.AllowListConfig"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 59430,
            "nodeType": "VariableDeclaration",
            "src": "1759:53:159",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "contractMintLimit",
            "nameLocation": "1795:17:159",
            "scope": 60363,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 59429,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 59427,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1767:7:159",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1759:27:159",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 59428,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1778:7:159",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 59436,
            "nodeType": "VariableDeclaration",
            "src": "1876:79:159",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "contractMintsPerAddress",
            "nameLocation": "1932:23:159",
            "scope": 60363,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 59435,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 59431,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1884:7:159",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1876:47:159",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 59434,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 59432,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1903:7:159",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1895:27:159",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 59433,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1914:7:159",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 59440,
            "nodeType": "VariableDeclaration",
            "src": "2042:51:159",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "contractTxLimit",
            "nameLocation": "2078:15:159",
            "scope": 60363,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 59439,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 59437,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2050:7:159",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2042:27:159",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 59438,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2061:7:159",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 59446,
            "nodeType": "VariableDeclaration",
            "src": "2157:77:159",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "contractTxsPerAddress",
            "nameLocation": "2213:21:159",
            "scope": 60363,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 59445,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 59441,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2165:7:159",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2157:47:159",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 59444,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 59442,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2184:7:159",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "2176:27:159",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 59443,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2195:7:159",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 59451,
            "nodeType": "VariableDeclaration",
            "src": "2315:71:159",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "contractSellerStakingMinimum",
            "nameLocation": "2358:28:159",
            "scope": 60363,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingMinimum_$58246_storage_$",
              "typeString": "mapping(address => struct IRareMinter.StakingMinimum)"
            },
            "typeName": {
              "id": 59450,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 59447,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2323:7:159",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2315:34:159",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingMinimum_$58246_storage_$",
                "typeString": "mapping(address => struct IRareMinter.StakingMinimum)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 59449,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 59448,
                  "name": "StakingMinimum",
                  "nameLocations": [
                    "2334:14:159"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58246,
                  "src": "2334:14:159"
                },
                "referencedDeclaration": 58246,
                "src": "2334:14:159",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_StakingMinimum_$58246_storage_ptr",
                  "typeString": "struct IRareMinter.StakingMinimum"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 59490,
            "nodeType": "FunctionDefinition",
            "src": "2583:584:159",
            "nodes": [],
            "body": {
              "id": 59489,
              "nodeType": "Block",
              "src": "2878:289:159",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 59484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59472,
                      "name": "marketConfig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59416,
                      "src": "2884:12:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Config_$90749_storage",
                        "typeString": "struct MarketConfig.Config storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 59475,
                          "name": "_networkBeneficiary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59453,
                          "src": "2940:19:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 59476,
                          "name": "_marketplaceSettings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59455,
                          "src": "2967:20:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 59477,
                          "name": "_spaceOperatorRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59457,
                          "src": "2995:22:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 59478,
                          "name": "_royaltyEngine",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59459,
                          "src": "3025:14:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 59479,
                          "name": "_payments",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59461,
                          "src": "3047:9:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 59480,
                          "name": "_approvedTokenRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59463,
                          "src": "3064:22:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 59481,
                          "name": "_stakingSettings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59465,
                          "src": "3094:16:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 59482,
                          "name": "_stakingRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59467,
                          "src": "3118:16:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 59473,
                          "name": "MarketConfig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 91077,
                          "src": "2899:12:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_MarketConfig_$91077_$",
                            "typeString": "type(library MarketConfig)"
                          }
                        },
                        "id": 59474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2912:20:159",
                        "memberName": "generateMarketConfig",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 90910,
                        "src": "2899:33:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_delegatecall_pure$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$returns$_t_struct$_Config_$90749_memory_ptr_$",
                          "typeString": "function (address,address,address,address,address,address,address,address) pure returns (struct MarketConfig.Config memory)"
                        }
                      },
                      "id": 59483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2899:241:159",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Config_$90749_memory_ptr",
                        "typeString": "struct MarketConfig.Config memory"
                      }
                    },
                    "src": "2884:256:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Config_$90749_storage",
                      "typeString": "struct MarketConfig.Config storage ref"
                    }
                  },
                  "id": 59485,
                  "nodeType": "ExpressionStatement",
                  "src": "2884:256:159"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 59486,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31067,
                      "src": "3146:14:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 59487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3146:16:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59488,
                  "nodeType": "ExpressionStatement",
                  "src": "3146:16:159"
                }
              ]
            },
            "functionSelector": "8a29e2de",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 59470,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 59469,
                  "name": "initializer",
                  "nameLocations": [
                    "2866:11:159"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31611,
                  "src": "2866:11:159"
                },
                "nodeType": "ModifierInvocation",
                "src": "2866:11:159"
              }
            ],
            "name": "initialize",
            "nameLocation": "2592:10:159",
            "parameters": {
              "id": 59468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59453,
                  "mutability": "mutable",
                  "name": "_networkBeneficiary",
                  "nameLocation": "2616:19:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 59490,
                  "src": "2608:27:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59452,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2608:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59455,
                  "mutability": "mutable",
                  "name": "_marketplaceSettings",
                  "nameLocation": "2649:20:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 59490,
                  "src": "2641:28:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59454,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2641:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59457,
                  "mutability": "mutable",
                  "name": "_spaceOperatorRegistry",
                  "nameLocation": "2683:22:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 59490,
                  "src": "2675:30:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59456,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2675:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59459,
                  "mutability": "mutable",
                  "name": "_royaltyEngine",
                  "nameLocation": "2719:14:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 59490,
                  "src": "2711:22:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59458,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2711:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59461,
                  "mutability": "mutable",
                  "name": "_payments",
                  "nameLocation": "2747:9:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 59490,
                  "src": "2739:17:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59460,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2739:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59463,
                  "mutability": "mutable",
                  "name": "_approvedTokenRegistry",
                  "nameLocation": "2770:22:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 59490,
                  "src": "2762:30:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59462,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2762:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59465,
                  "mutability": "mutable",
                  "name": "_stakingSettings",
                  "nameLocation": "2806:16:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 59490,
                  "src": "2798:24:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59464,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2798:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59467,
                  "mutability": "mutable",
                  "name": "_stakingRegistry",
                  "nameLocation": "2836:16:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 59490,
                  "src": "2828:24:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59466,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2828:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2602:254:159"
            },
            "returnParameters": {
              "id": 59471,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2878:0:159"
            },
            "scope": 60363,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 59503,
            "nodeType": "FunctionDefinition",
            "src": "3375:156:159",
            "nodes": [],
            "body": {
              "id": 59502,
              "nodeType": "Block",
              "src": "3478:53:159",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 59498,
                      "name": "directSaleConfigs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59421,
                      "src": "3491:17:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_DirectSaleConfig_$58236_storage_$",
                        "typeString": "mapping(address => struct IRareMinter.DirectSaleConfig storage ref)"
                      }
                    },
                    "id": 59500,
                    "indexExpression": {
                      "id": 59499,
                      "name": "_contractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59492,
                      "src": "3509:16:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3491:35:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DirectSaleConfig_$58236_storage",
                      "typeString": "struct IRareMinter.DirectSaleConfig storage ref"
                    }
                  },
                  "functionReturnParameters": 59497,
                  "id": 59501,
                  "nodeType": "Return",
                  "src": "3484:42:159"
                }
              ]
            },
            "baseFunctions": [
              58325
            ],
            "functionSelector": "a01fa6a9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDirectSaleConfig",
            "nameLocation": "3384:19:159",
            "parameters": {
              "id": 59493,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59492,
                  "mutability": "mutable",
                  "name": "_contractAddress",
                  "nameLocation": "3412:16:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 59503,
                  "src": "3404:24:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59491,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3404:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3403:26:159"
            },
            "returnParameters": {
              "id": 59497,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59496,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59503,
                  "src": "3453:23:159",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DirectSaleConfig_$58236_memory_ptr",
                    "typeString": "struct IRareMinter.DirectSaleConfig"
                  },
                  "typeName": {
                    "id": 59495,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 59494,
                      "name": "DirectSaleConfig",
                      "nameLocations": [
                        "3453:16:159"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 58236,
                      "src": "3453:16:159"
                    },
                    "referencedDeclaration": 58236,
                    "src": "3453:16:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DirectSaleConfig_$58236_storage_ptr",
                      "typeString": "struct IRareMinter.DirectSaleConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3452:25:159"
            },
            "scope": 60363,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 59516,
            "nodeType": "FunctionDefinition",
            "src": "3535:167:159",
            "nodes": [],
            "body": {
              "id": 59515,
              "nodeType": "Block",
              "src": "3644:58:159",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 59511,
                      "name": "contractAllowlistRoots",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59426,
                      "src": "3657:22:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AllowListConfig_$58241_storage_$",
                        "typeString": "mapping(address => struct IRareMinter.AllowListConfig storage ref)"
                      }
                    },
                    "id": 59513,
                    "indexExpression": {
                      "id": 59512,
                      "name": "_contractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59505,
                      "src": "3680:16:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3657:40:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AllowListConfig_$58241_storage",
                      "typeString": "struct IRareMinter.AllowListConfig storage ref"
                    }
                  },
                  "functionReturnParameters": 59510,
                  "id": 59514,
                  "nodeType": "Return",
                  "src": "3650:47:159"
                }
              ]
            },
            "baseFunctions": [
              58334
            ],
            "functionSelector": "04c1ff07",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContractAllowListConfig",
            "nameLocation": "3544:26:159",
            "parameters": {
              "id": 59506,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59505,
                  "mutability": "mutable",
                  "name": "_contractAddress",
                  "nameLocation": "3579:16:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 59516,
                  "src": "3571:24:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59504,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3571:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3570:26:159"
            },
            "returnParameters": {
              "id": 59510,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59509,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59516,
                  "src": "3620:22:159",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AllowListConfig_$58241_memory_ptr",
                    "typeString": "struct IRareMinter.AllowListConfig"
                  },
                  "typeName": {
                    "id": 59508,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 59507,
                      "name": "AllowListConfig",
                      "nameLocations": [
                        "3620:15:159"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 58241,
                      "src": "3620:15:159"
                    },
                    "referencedDeclaration": 58241,
                    "src": "3620:15:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AllowListConfig_$58241_storage_ptr",
                      "typeString": "struct IRareMinter.AllowListConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3619:24:159"
            },
            "scope": 60363,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 59528,
            "nodeType": "FunctionDefinition",
            "src": "3706:141:159",
            "nodes": [],
            "body": {
              "id": 59527,
              "nodeType": "Block",
              "src": "3794:53:159",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 59523,
                      "name": "contractMintLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59430,
                      "src": "3807:17:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 59525,
                    "indexExpression": {
                      "id": 59524,
                      "name": "_contractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59518,
                      "src": "3825:16:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3807:35:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 59522,
                  "id": 59526,
                  "nodeType": "Return",
                  "src": "3800:42:159"
                }
              ]
            },
            "baseFunctions": [
              58342
            ],
            "functionSelector": "23946f1f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContractMintLimit",
            "nameLocation": "3715:20:159",
            "parameters": {
              "id": 59519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59518,
                  "mutability": "mutable",
                  "name": "_contractAddress",
                  "nameLocation": "3744:16:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 59528,
                  "src": "3736:24:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59517,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3736:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3735:26:159"
            },
            "returnParameters": {
              "id": 59522,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59521,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59528,
                  "src": "3785:7:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59520,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3785:7:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3784:9:159"
            },
            "scope": 60363,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 59544,
            "nodeType": "FunctionDefinition",
            "src": "3851:181:159",
            "nodes": [],
            "body": {
              "id": 59543,
              "nodeType": "Block",
              "src": "3963:69:159",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 59537,
                        "name": "contractMintsPerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59436,
                        "src": "3976:23:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 59539,
                      "indexExpression": {
                        "id": 59538,
                        "name": "_contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59530,
                        "src": "4000:16:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3976:41:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 59541,
                    "indexExpression": {
                      "id": 59540,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59532,
                      "src": "4018:8:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3976:51:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 59536,
                  "id": 59542,
                  "nodeType": "Return",
                  "src": "3969:58:159"
                }
              ]
            },
            "baseFunctions": [
              58352
            ],
            "functionSelector": "ca774e68",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContractMintsPerAddress",
            "nameLocation": "3860:26:159",
            "parameters": {
              "id": 59533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59530,
                  "mutability": "mutable",
                  "name": "_contractAddress",
                  "nameLocation": "3895:16:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 59544,
                  "src": "3887:24:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59529,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3887:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59532,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "3921:8:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 59544,
                  "src": "3913:16:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59531,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3913:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3886:44:159"
            },
            "returnParameters": {
              "id": 59536,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59535,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59544,
                  "src": "3954:7:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59534,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3954:7:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3953:9:159"
            },
            "scope": 60363,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 59556,
            "nodeType": "FunctionDefinition",
            "src": "4036:137:159",
            "nodes": [],
            "body": {
              "id": 59555,
              "nodeType": "Block",
              "src": "4122:51:159",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 59551,
                      "name": "contractTxLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59440,
                      "src": "4135:15:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 59553,
                    "indexExpression": {
                      "id": 59552,
                      "name": "_contractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59546,
                      "src": "4151:16:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4135:33:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 59550,
                  "id": 59554,
                  "nodeType": "Return",
                  "src": "4128:40:159"
                }
              ]
            },
            "baseFunctions": [
              58360
            ],
            "functionSelector": "fa5312c8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContractTxLimit",
            "nameLocation": "4045:18:159",
            "parameters": {
              "id": 59547,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59546,
                  "mutability": "mutable",
                  "name": "_contractAddress",
                  "nameLocation": "4072:16:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 59556,
                  "src": "4064:24:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59545,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4064:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4063:26:159"
            },
            "returnParameters": {
              "id": 59550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59549,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59556,
                  "src": "4113:7:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59548,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4113:7:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4112:9:159"
            },
            "scope": 60363,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 59572,
            "nodeType": "FunctionDefinition",
            "src": "4177:177:159",
            "nodes": [],
            "body": {
              "id": 59571,
              "nodeType": "Block",
              "src": "4287:67:159",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 59565,
                        "name": "contractTxsPerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59446,
                        "src": "4300:21:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 59567,
                      "indexExpression": {
                        "id": 59566,
                        "name": "_contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59558,
                        "src": "4322:16:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4300:39:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 59569,
                    "indexExpression": {
                      "id": 59568,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59560,
                      "src": "4340:8:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4300:49:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 59564,
                  "id": 59570,
                  "nodeType": "Return",
                  "src": "4293:56:159"
                }
              ]
            },
            "baseFunctions": [
              58370
            ],
            "functionSelector": "2da45e8e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContractTxsPerAddress",
            "nameLocation": "4186:24:159",
            "parameters": {
              "id": 59561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59558,
                  "mutability": "mutable",
                  "name": "_contractAddress",
                  "nameLocation": "4219:16:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 59572,
                  "src": "4211:24:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59557,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4211:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59560,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "4245:8:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 59572,
                  "src": "4237:16:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59559,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4237:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4210:44:159"
            },
            "returnParameters": {
              "id": 59564,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59563,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59572,
                  "src": "4278:7:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59562,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4278:7:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4277:9:159"
            },
            "scope": 60363,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 59585,
            "nodeType": "FunctionDefinition",
            "src": "4358:177:159",
            "nodes": [],
            "body": {
              "id": 59584,
              "nodeType": "Block",
              "src": "4471:64:159",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 59580,
                      "name": "contractSellerStakingMinimum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59451,
                      "src": "4484:28:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingMinimum_$58246_storage_$",
                        "typeString": "mapping(address => struct IRareMinter.StakingMinimum storage ref)"
                      }
                    },
                    "id": 59582,
                    "indexExpression": {
                      "id": 59581,
                      "name": "_contractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59574,
                      "src": "4513:16:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4484:46:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakingMinimum_$58246_storage",
                      "typeString": "struct IRareMinter.StakingMinimum storage ref"
                    }
                  },
                  "functionReturnParameters": 59579,
                  "id": 59583,
                  "nodeType": "Return",
                  "src": "4477:53:159"
                }
              ]
            },
            "baseFunctions": [
              58379
            ],
            "functionSelector": "9890cddf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getContractSellerStakingMinimum",
            "nameLocation": "4367:31:159",
            "parameters": {
              "id": 59575,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59574,
                  "mutability": "mutable",
                  "name": "_contractAddress",
                  "nameLocation": "4407:16:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 59585,
                  "src": "4399:24:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59573,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4399:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4398:26:159"
            },
            "returnParameters": {
              "id": 59579,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59578,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59585,
                  "src": "4448:21:159",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StakingMinimum_$58246_memory_ptr",
                    "typeString": "struct IRareMinter.StakingMinimum"
                  },
                  "typeName": {
                    "id": 59577,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 59576,
                      "name": "StakingMinimum",
                      "nameLocations": [
                        "4448:14:159"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 58246,
                      "src": "4448:14:159"
                    },
                    "referencedDeclaration": 58246,
                    "src": "4448:14:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakingMinimum_$58246_storage_ptr",
                      "typeString": "struct IRareMinter.StakingMinimum"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4447:23:159"
            },
            "scope": 60363,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 59644,
            "nodeType": "FunctionDefinition",
            "src": "4744:821:159",
            "nodes": [],
            "body": {
              "id": 59643,
              "nodeType": "Block",
              "src": "4999:566:159",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 59612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 59606,
                                  "name": "_contractAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 59587,
                                  "src": "5039:16:159",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 59605,
                                "name": "OwnableUpgradeable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31172,
                                "src": "5020:18:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_OwnableUpgradeable_$31172_$",
                                  "typeString": "type(contract OwnableUpgradeable)"
                                }
                              },
                              "id": 59607,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5020:36:159",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OwnableUpgradeable_$31172",
                                "typeString": "contract OwnableUpgradeable"
                              }
                            },
                            "id": 59608,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5057:5:159",
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31095,
                            "src": "5020:42:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 59609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5020:44:159",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 59610,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5068:3:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 59611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5072:6:159",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5068:10:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5020:58:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "707265706172654d696e7444697265637453616c653a3a4f6e6c79206d696e7420636f6e7472616374206f776e65722063616e207072657061726520746865206d696e74",
                        "id": 59613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5086:70:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_75c2822327aaeca4e16b662aa4f40c26389fdc8c8f50a0ffa0d95f2688991335",
                          "typeString": "literal_string \"prepareMintDirectSale::Only mint contract owner can prepare the mint\""
                        },
                        "value": "prepareMintDirectSale::Only mint contract owner can prepare the mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_75c2822327aaeca4e16b662aa4f40c26389fdc8c8f50a0ffa0d95f2688991335",
                          "typeString": "literal_string \"prepareMintDirectSale::Only mint contract owner can prepare the mint\""
                        }
                      ],
                      "id": 59604,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5005:7:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 59614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5005:157:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59615,
                  "nodeType": "ExpressionStatement",
                  "src": "5005:157:159"
                },
                {
                  "expression": {
                    "id": 59629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 59616,
                        "name": "directSaleConfigs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59421,
                        "src": "5168:17:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_DirectSaleConfig_$58236_storage_$",
                          "typeString": "mapping(address => struct IRareMinter.DirectSaleConfig storage ref)"
                        }
                      },
                      "id": 59618,
                      "indexExpression": {
                        "id": 59617,
                        "name": "_contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59587,
                        "src": "5186:16:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5168:35:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DirectSaleConfig_$58236_storage",
                        "typeString": "struct IRareMinter.DirectSaleConfig storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 59620,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5230:3:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 59621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5234:6:159",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5230:10:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 59622,
                          "name": "_currencyAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59589,
                          "src": "5248:16:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 59623,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59591,
                          "src": "5272:6:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 59624,
                          "name": "_startTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59593,
                          "src": "5286:10:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 59625,
                          "name": "_maxMints",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59595,
                          "src": "5304:9:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 59626,
                          "name": "_splitRecipients",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59598,
                          "src": "5321:16:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_payable_$dyn_calldata_ptr",
                            "typeString": "address payable[] calldata"
                          }
                        },
                        {
                          "id": 59627,
                          "name": "_splitRatios",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59601,
                          "src": "5345:12:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_calldata_ptr",
                            "typeString": "uint8[] calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_payable_$dyn_calldata_ptr",
                            "typeString": "address payable[] calldata"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_calldata_ptr",
                            "typeString": "uint8[] calldata"
                          }
                        ],
                        "id": 59619,
                        "name": "DirectSaleConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58236,
                        "src": "5206:16:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_DirectSaleConfig_$58236_storage_ptr_$",
                          "typeString": "type(struct IRareMinter.DirectSaleConfig storage pointer)"
                        }
                      },
                      "id": 59628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5206:157:159",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DirectSaleConfig_$58236_memory_ptr",
                        "typeString": "struct IRareMinter.DirectSaleConfig memory"
                      }
                    },
                    "src": "5168:195:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DirectSaleConfig_$58236_storage",
                      "typeString": "struct IRareMinter.DirectSaleConfig storage ref"
                    }
                  },
                  "id": 59630,
                  "nodeType": "ExpressionStatement",
                  "src": "5168:195:159"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 59632,
                        "name": "_contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59587,
                        "src": "5403:16:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 59633,
                        "name": "_currencyAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59589,
                        "src": "5427:16:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 59634,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5451:3:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 59635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5455:6:159",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5451:10:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 59636,
                        "name": "_price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59591,
                        "src": "5469:6:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 59637,
                        "name": "_startTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59593,
                        "src": "5483:10:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 59638,
                        "name": "_maxMints",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59595,
                        "src": "5501:9:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 59639,
                        "name": "_splitRecipients",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59598,
                        "src": "5518:16:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_calldata_ptr",
                          "typeString": "address payable[] calldata"
                        }
                      },
                      {
                        "id": 59640,
                        "name": "_splitRatios",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59601,
                        "src": "5542:12:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_calldata_ptr",
                          "typeString": "uint8[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_calldata_ptr",
                          "typeString": "address payable[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_calldata_ptr",
                          "typeString": "uint8[] calldata"
                        }
                      ],
                      "id": 59631,
                      "name": "PrepareMintDirectSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58267,
                      "src": "5374:21:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_address_payable_$dyn_memory_ptr_$_t_array$_t_uint8_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,uint256,address payable[] memory,uint8[] memory)"
                      }
                    },
                    "id": 59641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5374:186:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59642,
                  "nodeType": "EmitStatement",
                  "src": "5369:191:159"
                }
              ]
            },
            "baseFunctions": [
              58399
            ],
            "functionSelector": "78c19898",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "prepareMintDirectSale",
            "nameLocation": "4753:21:159",
            "parameters": {
              "id": 59602,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59587,
                  "mutability": "mutable",
                  "name": "_contractAddress",
                  "nameLocation": "4788:16:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 59644,
                  "src": "4780:24:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59586,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4780:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59589,
                  "mutability": "mutable",
                  "name": "_currencyAddress",
                  "nameLocation": "4818:16:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 59644,
                  "src": "4810:24:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59588,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4810:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59591,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "4848:6:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 59644,
                  "src": "4840:14:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59590,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4840:7:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59593,
                  "mutability": "mutable",
                  "name": "_startTime",
                  "nameLocation": "4868:10:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 59644,
                  "src": "4860:18:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59592,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4860:7:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59595,
                  "mutability": "mutable",
                  "name": "_maxMints",
                  "nameLocation": "4892:9:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 59644,
                  "src": "4884:17:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59594,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4884:7:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59598,
                  "mutability": "mutable",
                  "name": "_splitRecipients",
                  "nameLocation": "4934:16:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 59644,
                  "src": "4907:43:159",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_payable_$dyn_calldata_ptr",
                    "typeString": "address payable[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 59596,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4907:15:159",
                      "stateMutability": "payable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 59597,
                    "nodeType": "ArrayTypeName",
                    "src": "4907:17:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                      "typeString": "address payable[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59601,
                  "mutability": "mutable",
                  "name": "_splitRatios",
                  "nameLocation": "4973:12:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 59644,
                  "src": "4956:29:159",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint8_$dyn_calldata_ptr",
                    "typeString": "uint8[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 59599,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "4956:5:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 59600,
                    "nodeType": "ArrayTypeName",
                    "src": "4956:7:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                      "typeString": "uint8[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4774:215:159"
            },
            "returnParameters": {
              "id": 59603,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4999:0:159"
            },
            "scope": 60363,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 59681,
            "nodeType": "FunctionDefinition",
            "src": "5569:427:159",
            "nodes": [],
            "body": {
              "id": 59680,
              "nodeType": "Block",
              "src": "5678:318:159",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 59661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 59654,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5699:3:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 59655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5703:6:159",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5699:10:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 59657,
                                  "name": "_contractAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 59650,
                                  "src": "5732:16:159",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 59656,
                                "name": "OwnableUpgradeable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31172,
                                "src": "5713:18:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_OwnableUpgradeable_$31172_$",
                                  "typeString": "type(contract OwnableUpgradeable)"
                                }
                              },
                              "id": 59658,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5713:36:159",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OwnableUpgradeable_$31172",
                                "typeString": "contract OwnableUpgradeable"
                              }
                            },
                            "id": 59659,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5750:5:159",
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31095,
                            "src": "5713:42:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 59660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5713:44:159",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5699:58:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "736574436f6e7472616374416c6c6f774c697374436f6e6669673a3a4f6e6c7920636f6e7472616374206f776e65722063616e20736574",
                        "id": 59662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5765:57:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f413963347a79499e7f7f38fb4a52dd5ef6ecd1f9e956db69ded66ee64d8704",
                          "typeString": "literal_string \"setContractAllowListConfig::Only contract owner can set\""
                        },
                        "value": "setContractAllowListConfig::Only contract owner can set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f413963347a79499e7f7f38fb4a52dd5ef6ecd1f9e956db69ded66ee64d8704",
                          "typeString": "literal_string \"setContractAllowListConfig::Only contract owner can set\""
                        }
                      ],
                      "id": 59653,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5684:7:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 59663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5684:144:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59664,
                  "nodeType": "ExpressionStatement",
                  "src": "5684:144:159"
                },
                {
                  "expression": {
                    "id": 59672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 59665,
                        "name": "contractAllowlistRoots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59426,
                        "src": "5834:22:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AllowListConfig_$58241_storage_$",
                          "typeString": "mapping(address => struct IRareMinter.AllowListConfig storage ref)"
                        }
                      },
                      "id": 59667,
                      "indexExpression": {
                        "id": 59666,
                        "name": "_contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59650,
                        "src": "5857:16:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5834:40:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AllowListConfig_$58241_storage",
                        "typeString": "struct IRareMinter.AllowListConfig storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 59669,
                          "name": "_root",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59646,
                          "src": "5893:5:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 59670,
                          "name": "_endTimestamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59648,
                          "src": "5900:13:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 59668,
                        "name": "AllowListConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58241,
                        "src": "5877:15:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_AllowListConfig_$58241_storage_ptr_$",
                          "typeString": "type(struct IRareMinter.AllowListConfig storage pointer)"
                        }
                      },
                      "id": 59671,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5877:37:159",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AllowListConfig_$58241_memory_ptr",
                        "typeString": "struct IRareMinter.AllowListConfig memory"
                      }
                    },
                    "src": "5834:80:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AllowListConfig_$58241_storage",
                      "typeString": "struct IRareMinter.AllowListConfig storage ref"
                    }
                  },
                  "id": 59673,
                  "nodeType": "ExpressionStatement",
                  "src": "5834:80:159"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 59675,
                        "name": "_root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59646,
                        "src": "5952:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 59676,
                        "name": "_endTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59648,
                        "src": "5959:13:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 59677,
                        "name": "_contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59650,
                        "src": "5974:16:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 59674,
                      "name": "SetContractAllowListConfig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58293,
                      "src": "5925:26:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,uint256,address)"
                      }
                    },
                    "id": 59678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5925:66:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59679,
                  "nodeType": "EmitStatement",
                  "src": "5920:71:159"
                }
              ]
            },
            "baseFunctions": [
              58424
            ],
            "functionSelector": "0fc635b3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setContractAllowListConfig",
            "nameLocation": "5578:26:159",
            "parameters": {
              "id": 59651,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59646,
                  "mutability": "mutable",
                  "name": "_root",
                  "nameLocation": "5613:5:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 59681,
                  "src": "5605:13:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 59645,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5605:7:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59648,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "5628:13:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 59681,
                  "src": "5620:21:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59647,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5620:7:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59650,
                  "mutability": "mutable",
                  "name": "_contractAddress",
                  "nameLocation": "5651:16:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 59681,
                  "src": "5643:24:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59649,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5643:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5604:64:159"
            },
            "returnParameters": {
              "id": 59652,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5678:0:159"
            },
            "scope": 60363,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 59712,
            "nodeType": "FunctionDefinition",
            "src": "6000:337:159",
            "nodes": [],
            "body": {
              "id": 59711,
              "nodeType": "Block",
              "src": "6081:256:159",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 59696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 59689,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6102:3:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 59690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6106:6:159",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6102:10:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 59692,
                                  "name": "_contractAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 59683,
                                  "src": "6135:16:159",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 59691,
                                "name": "OwnableUpgradeable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31172,
                                "src": "6116:18:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_OwnableUpgradeable_$31172_$",
                                  "typeString": "type(contract OwnableUpgradeable)"
                                }
                              },
                              "id": 59693,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6116:36:159",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OwnableUpgradeable_$31172",
                                "typeString": "contract OwnableUpgradeable"
                              }
                            },
                            "id": 59694,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6153:5:159",
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31095,
                            "src": "6116:42:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 59695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6116:44:159",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6102:58:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "736574436f6e74726163744d696e744c696d69743a3a4f6e6c7920636f6e7472616374206f776e65722063616e20736574",
                        "id": 59697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6168:51:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f4b97d3e9779d97c7a5d858c8d8cee4831fedc7621f8e8d0a9f7e54a51a6428a",
                          "typeString": "literal_string \"setContractMintLimit::Only contract owner can set\""
                        },
                        "value": "setContractMintLimit::Only contract owner can set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f4b97d3e9779d97c7a5d858c8d8cee4831fedc7621f8e8d0a9f7e54a51a6428a",
                          "typeString": "literal_string \"setContractMintLimit::Only contract owner can set\""
                        }
                      ],
                      "id": 59688,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6087:7:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 59698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6087:138:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59699,
                  "nodeType": "ExpressionStatement",
                  "src": "6087:138:159"
                },
                {
                  "expression": {
                    "id": 59704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 59700,
                        "name": "contractMintLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59430,
                        "src": "6231:17:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 59702,
                      "indexExpression": {
                        "id": 59701,
                        "name": "_contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59683,
                        "src": "6249:16:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6231:35:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 59703,
                      "name": "_limit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59685,
                      "src": "6269:6:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6231:44:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 59705,
                  "nodeType": "ExpressionStatement",
                  "src": "6231:44:159"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 59707,
                        "name": "_contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59683,
                        "src": "6307:16:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 59708,
                        "name": "_limit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59685,
                        "src": "6325:6:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 59706,
                      "name": "ContractMintLimitSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58300,
                      "src": "6286:20:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 59709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6286:46:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59710,
                  "nodeType": "EmitStatement",
                  "src": "6281:51:159"
                }
              ]
            },
            "baseFunctions": [
              58432
            ],
            "functionSelector": "4cf5f910",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setContractMintLimit",
            "nameLocation": "6009:20:159",
            "parameters": {
              "id": 59686,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59683,
                  "mutability": "mutable",
                  "name": "_contractAddress",
                  "nameLocation": "6038:16:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 59712,
                  "src": "6030:24:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59682,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6030:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59685,
                  "mutability": "mutable",
                  "name": "_limit",
                  "nameLocation": "6064:6:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 59712,
                  "src": "6056:14:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59684,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6056:7:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6029:42:159"
            },
            "returnParameters": {
              "id": 59687,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6081:0:159"
            },
            "scope": 60363,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 59743,
            "nodeType": "FunctionDefinition",
            "src": "6341:329:159",
            "nodes": [],
            "body": {
              "id": 59742,
              "nodeType": "Block",
              "src": "6420:250:159",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 59727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 59720,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6441:3:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 59721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6445:6:159",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6441:10:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 59723,
                                  "name": "_contractAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 59714,
                                  "src": "6474:16:159",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 59722,
                                "name": "OwnableUpgradeable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31172,
                                "src": "6455:18:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_OwnableUpgradeable_$31172_$",
                                  "typeString": "type(contract OwnableUpgradeable)"
                                }
                              },
                              "id": 59724,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6455:36:159",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OwnableUpgradeable_$31172",
                                "typeString": "contract OwnableUpgradeable"
                              }
                            },
                            "id": 59725,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6492:5:159",
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31095,
                            "src": "6455:42:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 59726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6455:44:159",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6441:58:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "736574436f6e747261637454784c696d69743a3a4f6e6c7920636f6e7472616374206f776e65722063616e20736574",
                        "id": 59728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6507:49:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c0b11ecf6959abdeffe985866336d059b333e526f31daa4ae3ec86e5cd5a5cb0",
                          "typeString": "literal_string \"setContractTxLimit::Only contract owner can set\""
                        },
                        "value": "setContractTxLimit::Only contract owner can set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c0b11ecf6959abdeffe985866336d059b333e526f31daa4ae3ec86e5cd5a5cb0",
                          "typeString": "literal_string \"setContractTxLimit::Only contract owner can set\""
                        }
                      ],
                      "id": 59719,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6426:7:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 59729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6426:136:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59730,
                  "nodeType": "ExpressionStatement",
                  "src": "6426:136:159"
                },
                {
                  "expression": {
                    "id": 59735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 59731,
                        "name": "contractTxLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59440,
                        "src": "6568:15:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 59733,
                      "indexExpression": {
                        "id": 59732,
                        "name": "_contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59714,
                        "src": "6584:16:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6568:33:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 59734,
                      "name": "_limit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59716,
                      "src": "6604:6:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6568:42:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 59736,
                  "nodeType": "ExpressionStatement",
                  "src": "6568:42:159"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 59738,
                        "name": "_contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59714,
                        "src": "6640:16:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 59739,
                        "name": "_limit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59716,
                        "src": "6658:6:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 59737,
                      "name": "ContractTxLimitSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58307,
                      "src": "6621:18:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 59740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6621:44:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59741,
                  "nodeType": "EmitStatement",
                  "src": "6616:49:159"
                }
              ]
            },
            "baseFunctions": [
              58440
            ],
            "functionSelector": "9dbef5d1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setContractTxLimit",
            "nameLocation": "6350:18:159",
            "parameters": {
              "id": 59717,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59714,
                  "mutability": "mutable",
                  "name": "_contractAddress",
                  "nameLocation": "6377:16:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 59743,
                  "src": "6369:24:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59713,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6369:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59716,
                  "mutability": "mutable",
                  "name": "_limit",
                  "nameLocation": "6403:6:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 59743,
                  "src": "6395:14:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59715,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6395:7:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6368:42:159"
            },
            "returnParameters": {
              "id": 59718,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6420:0:159"
            },
            "scope": 60363,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 59793,
            "nodeType": "FunctionDefinition",
            "src": "6674:554:159",
            "nodes": [],
            "body": {
              "id": 59792,
              "nodeType": "Block",
              "src": "6791:437:159",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 59760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 59753,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6812:3:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 59754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6816:6:159",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6812:10:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 59756,
                                  "name": "_contractAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 59745,
                                  "src": "6845:16:159",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 59755,
                                "name": "OwnableUpgradeable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31172,
                                "src": "6826:18:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_OwnableUpgradeable_$31172_$",
                                  "typeString": "type(contract OwnableUpgradeable)"
                                }
                              },
                              "id": 59757,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6826:36:159",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OwnableUpgradeable_$31172",
                                "typeString": "contract OwnableUpgradeable"
                              }
                            },
                            "id": 59758,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6863:5:159",
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31095,
                            "src": "6826:42:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 59759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6826:44:159",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6812:58:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "736574436f6e747261637453656c6c65725374616b696e674d696e696d756d3a3a4f6e6c7920636f6e7472616374206f776e65722063616e20736574",
                        "id": 59761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6878:62:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c6042e57b55fcc2aa0ac12389ee0fd06fe66b4ab15598e6b73599ecb96f0de79",
                          "typeString": "literal_string \"setContractSellerStakingMinimum::Only contract owner can set\""
                        },
                        "value": "setContractSellerStakingMinimum::Only contract owner can set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c6042e57b55fcc2aa0ac12389ee0fd06fe66b4ab15598e6b73599ecb96f0de79",
                          "typeString": "literal_string \"setContractSellerStakingMinimum::Only contract owner can set\""
                        }
                      ],
                      "id": 59752,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6797:7:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 59762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6797:149:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59763,
                  "nodeType": "ExpressionStatement",
                  "src": "6797:149:159"
                },
                {
                  "assignments": [
                    59765
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59765,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "6960:4:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 59792,
                      "src": "6952:12:159",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 59764,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6952:7:159",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59772,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 59769,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7021:3:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 59770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7025:6:159",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7021:10:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 59766,
                          "name": "marketConfig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59416,
                          "src": "6967:12:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Config_$90749_storage",
                            "typeString": "struct MarketConfig.Config storage ref"
                          }
                        },
                        "id": 59767,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6980:15:159",
                        "memberName": "stakingRegistry",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 90748,
                        "src": "6967:28:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRareStakingRegistry_$65219",
                          "typeString": "contract IRareStakingRegistry"
                        }
                      },
                      "id": 59768,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6996:24:159",
                      "memberName": "getStakingAddressForUser",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65148,
                      "src": "6967:53:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) view external returns (address)"
                      }
                    },
                    "id": 59771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6967:65:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6952:80:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 59779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 59774,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59765,
                          "src": "7046:4:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 59777,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7062:1:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 59776,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7054:7:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 59775,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7054:7:159",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 59778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7054:10:159",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7046:18:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "736574436f6e747261637453656c6c65725374616b696e674d696e696d756d3a3a53656c6c657220646f6573206e6f742068617665206120706f6f6c",
                        "id": 59780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7066:62:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_298834011cfab410288fe02d9ac24eac03a3d8207a39966a5244d98dfe63e512",
                          "typeString": "literal_string \"setContractSellerStakingMinimum::Seller does not have a pool\""
                        },
                        "value": "setContractSellerStakingMinimum::Seller does not have a pool"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_298834011cfab410288fe02d9ac24eac03a3d8207a39966a5244d98dfe63e512",
                          "typeString": "literal_string \"setContractSellerStakingMinimum::Seller does not have a pool\""
                        }
                      ],
                      "id": 59773,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7038:7:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 59781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7038:91:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59782,
                  "nodeType": "ExpressionStatement",
                  "src": "7038:91:159"
                },
                {
                  "expression": {
                    "id": 59790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 59783,
                        "name": "contractSellerStakingMinimum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59451,
                        "src": "7135:28:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingMinimum_$58246_storage_$",
                          "typeString": "mapping(address => struct IRareMinter.StakingMinimum storage ref)"
                        }
                      },
                      "id": 59785,
                      "indexExpression": {
                        "id": 59784,
                        "name": "_contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59745,
                        "src": "7164:16:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7135:46:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakingMinimum_$58246_storage",
                        "typeString": "struct IRareMinter.StakingMinimum storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 59787,
                          "name": "_minimum",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59747,
                          "src": "7199:8:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 59788,
                          "name": "_endTimestamp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59749,
                          "src": "7209:13:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 59786,
                        "name": "StakingMinimum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58246,
                        "src": "7184:14:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_StakingMinimum_$58246_storage_ptr_$",
                          "typeString": "type(struct IRareMinter.StakingMinimum storage pointer)"
                        }
                      },
                      "id": 59789,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7184:39:159",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakingMinimum_$58246_memory_ptr",
                        "typeString": "struct IRareMinter.StakingMinimum memory"
                      }
                    },
                    "src": "7135:88:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakingMinimum_$58246_storage",
                      "typeString": "struct IRareMinter.StakingMinimum storage ref"
                    }
                  },
                  "id": 59791,
                  "nodeType": "ExpressionStatement",
                  "src": "7135:88:159"
                }
              ]
            },
            "baseFunctions": [
              58450
            ],
            "functionSelector": "677b1984",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setContractSellerStakingMinimum",
            "nameLocation": "6683:31:159",
            "parameters": {
              "id": 59750,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59745,
                  "mutability": "mutable",
                  "name": "_contractAddress",
                  "nameLocation": "6723:16:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 59793,
                  "src": "6715:24:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59744,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6715:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59747,
                  "mutability": "mutable",
                  "name": "_minimum",
                  "nameLocation": "6749:8:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 59793,
                  "src": "6741:16:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59746,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6741:7:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59749,
                  "mutability": "mutable",
                  "name": "_endTimestamp",
                  "nameLocation": "6767:13:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 59793,
                  "src": "6759:21:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59748,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6759:7:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6714:67:159"
            },
            "returnParameters": {
              "id": 59751,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6791:0:159"
            },
            "scope": 60363,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 60090,
            "nodeType": "FunctionDefinition",
            "src": "7232:3662:159",
            "nodes": [],
            "body": {
              "id": 60089,
              "nodeType": "Block",
              "src": "7422:3472:159",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    59811
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59811,
                      "mutability": "mutable",
                      "name": "directSaleConfig",
                      "nameLocation": "7452:16:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 60089,
                      "src": "7428:40:159",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DirectSaleConfig_$58236_memory_ptr",
                        "typeString": "struct IRareMinter.DirectSaleConfig"
                      },
                      "typeName": {
                        "id": 59810,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 59809,
                          "name": "DirectSaleConfig",
                          "nameLocations": [
                            "7428:16:159"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 58236,
                          "src": "7428:16:159"
                        },
                        "referencedDeclaration": 58236,
                        "src": "7428:16:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DirectSaleConfig_$58236_storage_ptr",
                          "typeString": "struct IRareMinter.DirectSaleConfig"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59815,
                  "initialValue": {
                    "baseExpression": {
                      "id": 59812,
                      "name": "directSaleConfigs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59421,
                      "src": "7471:17:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_DirectSaleConfig_$58236_storage_$",
                        "typeString": "mapping(address => struct IRareMinter.DirectSaleConfig storage ref)"
                      }
                    },
                    "id": 59814,
                    "indexExpression": {
                      "id": 59813,
                      "name": "_contractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59795,
                      "src": "7489:16:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7471:35:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DirectSaleConfig_$58236_storage",
                      "typeString": "struct IRareMinter.DirectSaleConfig storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7428:78:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 59823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 59817,
                            "name": "directSaleConfig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59811,
                            "src": "7567:16:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DirectSaleConfig_$58236_memory_ptr",
                              "typeString": "struct IRareMinter.DirectSaleConfig memory"
                            }
                          },
                          "id": 59818,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7584:6:159",
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 58221,
                          "src": "7567:23:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 59821,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7602:1:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 59820,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7594:7:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 59819,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7594:7:159",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 59822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7594:10:159",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7567:37:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d696e7444697265637453616c653a3a436f6e7472616374206e6f7420707265706172656420666f72206469726563742073616c65",
                        "id": 59824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7606:55:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2125a524fb44a0fe1cce74e7b5fa8ec1345380c41861fad83d96908e953e0c16",
                          "typeString": "literal_string \"mintDirectSale::Contract not prepared for direct sale\""
                        },
                        "value": "mintDirectSale::Contract not prepared for direct sale"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2125a524fb44a0fe1cce74e7b5fa8ec1345380c41861fad83d96908e953e0c16",
                          "typeString": "literal_string \"mintDirectSale::Contract not prepared for direct sale\""
                        }
                      ],
                      "id": 59816,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7559:7:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 59825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7559:103:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59826,
                  "nodeType": "ExpressionStatement",
                  "src": "7559:103:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59828,
                        "name": "_contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59795,
                        "src": "7732:16:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 59829,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7750:3:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 59830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7754:6:159",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7750:10:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 59831,
                        "name": "_proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59804,
                        "src": "7762:6:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[] calldata"
                        }
                      ],
                      "id": 59827,
                      "name": "_enforceContractAllowList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60288,
                      "src": "7706:25:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,bytes32[] memory) view"
                      }
                    },
                    "id": 59832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7706:63:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59833,
                  "nodeType": "ExpressionStatement",
                  "src": "7706:63:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59835,
                        "name": "_contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59795,
                        "src": "7845:16:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 59836,
                          "name": "directSaleConfig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59811,
                          "src": "7863:16:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DirectSaleConfig_$58236_memory_ptr",
                            "typeString": "struct IRareMinter.DirectSaleConfig memory"
                          }
                        },
                        "id": 59837,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7880:6:159",
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 58221,
                        "src": "7863:23:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 59834,
                      "name": "_enforceContractSellerStakingMinimum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60236,
                      "src": "7808:36:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) view"
                      }
                    },
                    "id": 59838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7808:79:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59839,
                  "nodeType": "ExpressionStatement",
                  "src": "7808:79:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 59843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 59841,
                          "name": "_numMints",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59801,
                          "src": "7924:9:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 59842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7936:1:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7924:13:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d696e7444697265637453616c653a3a4d696e7473206d7573742062652067726561746572207468616e2030",
                        "id": 59844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7939:46:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_28b9147c0f34a92e3627b303d0445d105c82d179fb4f0322809b8ae297a9bfc8",
                          "typeString": "literal_string \"mintDirectSale::Mints must be greater than 0\""
                        },
                        "value": "mintDirectSale::Mints must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_28b9147c0f34a92e3627b303d0445d105c82d179fb4f0322809b8ae297a9bfc8",
                          "typeString": "literal_string \"mintDirectSale::Mints must be greater than 0\""
                        }
                      ],
                      "id": 59840,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7916:7:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 59845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7916:70:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59846,
                  "nodeType": "ExpressionStatement",
                  "src": "7916:70:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 59865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 59852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 59848,
                              "name": "contractMintLimit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59430,
                              "src": "8041:17:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 59850,
                            "indexExpression": {
                              "id": 59849,
                              "name": "_contractAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59795,
                              "src": "8059:16:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8041:35:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 59851,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8080:1:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8041:40:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 59864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 59860,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 59853,
                                  "name": "contractMintsPerAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 59436,
                                  "src": "8093:23:159",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                    "typeString": "mapping(address => mapping(address => uint256))"
                                  }
                                },
                                "id": 59855,
                                "indexExpression": {
                                  "id": 59854,
                                  "name": "_contractAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 59795,
                                  "src": "8117:16:159",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8093:41:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 59858,
                              "indexExpression": {
                                "expression": {
                                  "id": 59856,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "8135:3:159",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 59857,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8139:6:159",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "8135:10:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8093:53:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 59859,
                              "name": "_numMints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59801,
                              "src": "8149:9:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "src": "8093:65:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 59861,
                              "name": "contractMintLimit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59430,
                              "src": "8162:17:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 59863,
                            "indexExpression": {
                              "id": 59862,
                              "name": "_contractAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59795,
                              "src": "8180:16:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8162:35:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8093:104:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8041:156:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d696e7444697265637453616c653a3a4578636565646564206d696e74206c696d697420666f722061646472657373",
                        "id": 59866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8205:49:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f761a68a787963046bcdbf005db8e0d045ae9b5b713000782de8f6f877fad46",
                          "typeString": "literal_string \"mintDirectSale::Exceeded mint limit for address\""
                        },
                        "value": "mintDirectSale::Exceeded mint limit for address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f761a68a787963046bcdbf005db8e0d045ae9b5b713000782de8f6f877fad46",
                          "typeString": "literal_string \"mintDirectSale::Exceeded mint limit for address\""
                        }
                      ],
                      "id": 59847,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8026:7:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 59867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8026:234:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59868,
                  "nodeType": "ExpressionStatement",
                  "src": "8026:234:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 59887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 59874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 59870,
                              "name": "contractTxLimit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59440,
                              "src": "8313:15:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 59872,
                            "indexExpression": {
                              "id": 59871,
                              "name": "_contractAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59795,
                              "src": "8329:16:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8313:33:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 59873,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8350:1:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8313:38:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 59886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 59882,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 59875,
                                  "name": "contractTxsPerAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 59446,
                                  "src": "8363:21:159",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                    "typeString": "mapping(address => mapping(address => uint256))"
                                  }
                                },
                                "id": 59877,
                                "indexExpression": {
                                  "id": 59876,
                                  "name": "_contractAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 59795,
                                  "src": "8385:16:159",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8363:39:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 59880,
                              "indexExpression": {
                                "expression": {
                                  "id": 59878,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "8403:3:159",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 59879,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8407:6:159",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "8403:10:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8363:51:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 59881,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8417:1:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "8363:55:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 59883,
                              "name": "contractTxLimit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59440,
                              "src": "8422:15:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 59885,
                            "indexExpression": {
                              "id": 59884,
                              "name": "_contractAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59795,
                              "src": "8438:16:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8422:33:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8363:92:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8313:142:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d696e7444697265637453616c653a3a4578636565646564207472616e73616374696f6e206c696d697420666f722061646472657373",
                        "id": 59888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8463:56:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ffaf3cbb3304b91776d5f8a0dfbf529f19d51fa7b0abc0166bebd36d9264d0fb",
                          "typeString": "literal_string \"mintDirectSale::Exceeded transaction limit for address\""
                        },
                        "value": "mintDirectSale::Exceeded transaction limit for address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ffaf3cbb3304b91776d5f8a0dfbf529f19d51fa7b0abc0166bebd36d9264d0fb",
                          "typeString": "literal_string \"mintDirectSale::Exceeded transaction limit for address\""
                        }
                      ],
                      "id": 59869,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8298:7:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 59889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8298:227:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59890,
                  "nodeType": "ExpressionStatement",
                  "src": "8298:227:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 59900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 59895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 59892,
                              "name": "directSaleConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59811,
                              "src": "8570:16:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DirectSaleConfig_$58236_memory_ptr",
                                "typeString": "struct IRareMinter.DirectSaleConfig memory"
                              }
                            },
                            "id": 59893,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8587:8:159",
                            "memberName": "maxMints",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 58229,
                            "src": "8570:25:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 59894,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8599:1:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8570:30:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 59899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 59896,
                            "name": "_numMints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59801,
                            "src": "8604:9:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "expression": {
                              "id": 59897,
                              "name": "directSaleConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59811,
                              "src": "8617:16:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DirectSaleConfig_$58236_memory_ptr",
                                "typeString": "struct IRareMinter.DirectSaleConfig memory"
                              }
                            },
                            "id": 59898,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8634:8:159",
                            "memberName": "maxMints",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 58229,
                            "src": "8617:25:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8604:38:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8570:72:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d696e7444697265637453616c653a3a4d696e7473206d757374206265206c657373207468616e206d61784d696e7420696620656e61626c6564",
                        "id": 59901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8650:60:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd3b49452a50810df512ac43685da0b6ac42eed56f1eafca18223fd91f9f6ab5",
                          "typeString": "literal_string \"mintDirectSale::Mints must be less than maxMint if enabled\""
                        },
                        "value": "mintDirectSale::Mints must be less than maxMint if enabled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bd3b49452a50810df512ac43685da0b6ac42eed56f1eafca18223fd91f9f6ab5",
                          "typeString": "literal_string \"mintDirectSale::Mints must be less than maxMint if enabled\""
                        }
                      ],
                      "id": 59891,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8555:7:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 59902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8555:161:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59903,
                  "nodeType": "ExpressionStatement",
                  "src": "8555:161:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 59909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 59905,
                            "name": "directSaleConfig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59811,
                            "src": "8754:16:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DirectSaleConfig_$58236_memory_ptr",
                              "typeString": "struct IRareMinter.DirectSaleConfig memory"
                            }
                          },
                          "id": 59906,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8771:9:159",
                          "memberName": "startTime",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 58227,
                          "src": "8754:26:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 59907,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "8784:5:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 59908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8790:9:159",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "8784:15:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8754:45:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d696e7444697265637453616c653a3a53616c6520686173206e6f742073746172746564",
                        "id": 59910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8801:38:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_75ae3b39876373e0b12bb51aa7a56df20da8ee14404bd6cc8a9017ff8c9b4165",
                          "typeString": "literal_string \"mintDirectSale::Sale has not started\""
                        },
                        "value": "mintDirectSale::Sale has not started"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_75ae3b39876373e0b12bb51aa7a56df20da8ee14404bd6cc8a9017ff8c9b4165",
                          "typeString": "literal_string \"mintDirectSale::Sale has not started\""
                        }
                      ],
                      "id": 59904,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8746:7:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 59911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8746:94:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59912,
                  "nodeType": "ExpressionStatement",
                  "src": "8746:94:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 59917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 59914,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59799,
                          "src": "8874:6:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 59915,
                            "name": "directSaleConfig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59811,
                            "src": "8884:16:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DirectSaleConfig_$58236_memory_ptr",
                              "typeString": "struct IRareMinter.DirectSaleConfig memory"
                            }
                          },
                          "id": 59916,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8901:5:159",
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 58225,
                          "src": "8884:22:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8874:32:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d696e7444697265637453616c653a3a507269636520646f6573206e6f74206d61746368207265717569726564207072696365",
                        "id": 59918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8908:53:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_69010a9000e17fd75ba35f641abd6e0713df3b9630ad13876d0e5c847d86fb6e",
                          "typeString": "literal_string \"mintDirectSale::Price does not match required price\""
                        },
                        "value": "mintDirectSale::Price does not match required price"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_69010a9000e17fd75ba35f641abd6e0713df3b9630ad13876d0e5c847d86fb6e",
                          "typeString": "literal_string \"mintDirectSale::Price does not match required price\""
                        }
                      ],
                      "id": 59913,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8866:7:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 59919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8866:96:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59920,
                  "nodeType": "ExpressionStatement",
                  "src": "8866:96:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59924,
                        "name": "_currencyAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59797,
                        "src": "9039:16:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 59921,
                        "name": "marketConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59416,
                        "src": "9000:12:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$90749_storage",
                          "typeString": "struct MarketConfig.Config storage ref"
                        }
                      },
                      "id": 59923,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9013:25:159",
                      "memberName": "checkIfCurrencyIsApproved",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 89566,
                      "src": "9000:38:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Config_$90749_storage_ptr_$_t_address_$returns$__$attached_to$_t_struct$_Config_$90749_storage_ptr_$",
                        "typeString": "function (struct MarketConfig.Config storage pointer,address) view"
                      }
                    },
                    "id": 59925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9000:56:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59926,
                  "nodeType": "ExpressionStatement",
                  "src": "9000:56:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 59931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 59928,
                            "name": "directSaleConfig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59811,
                            "src": "9106:16:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DirectSaleConfig_$58236_memory_ptr",
                              "typeString": "struct IRareMinter.DirectSaleConfig memory"
                            }
                          },
                          "id": 59929,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9123:15:159",
                          "memberName": "currencyAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 58223,
                          "src": "9106:32:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 59930,
                          "name": "_currencyAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59797,
                          "src": "9142:16:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9106:52:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d696e7444697265637453616c653a3a43757272656e637920646f6573206e6f74206d617463682072657175697265642063757272656e6379",
                        "id": 59932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9166:59:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fb0a29c92f900227038644fbfcef2687a32c5a8ee969f4c0c9129749be1e70da",
                          "typeString": "literal_string \"mintDirectSale::Currency does not match required currency\""
                        },
                        "value": "mintDirectSale::Currency does not match required currency"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fb0a29c92f900227038644fbfcef2687a32c5a8ee969f4c0c9129749be1e70da",
                          "typeString": "literal_string \"mintDirectSale::Currency does not match required currency\""
                        }
                      ],
                      "id": 59927,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9091:7:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 59933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9091:140:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59934,
                  "nodeType": "ExpressionStatement",
                  "src": "9091:140:159"
                },
                {
                  "assignments": [
                    59936
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59936,
                      "mutability": "mutable",
                      "name": "totalPrice",
                      "nameLocation": "9246:10:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 60089,
                      "src": "9238:18:159",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 59935,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9238:7:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59940,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 59939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 59937,
                      "name": "_numMints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59801,
                      "src": "9259:9:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 59938,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59799,
                      "src": "9271:6:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9259:18:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9238:39:159"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 59944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 59941,
                        "name": "directSaleConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59811,
                        "src": "9307:16:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DirectSaleConfig_$58236_memory_ptr",
                          "typeString": "struct IRareMinter.DirectSaleConfig memory"
                        }
                      },
                      "id": 59942,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9324:5:159",
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58225,
                      "src": "9307:22:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 59943,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9333:1:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9307:27:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 59963,
                  "nodeType": "IfStatement",
                  "src": "9303:230:159",
                  "trueBody": {
                    "id": 59962,
                    "nodeType": "Block",
                    "src": "9336:197:159",
                    "statements": [
                      {
                        "assignments": [
                          59946
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 59946,
                            "mutability": "mutable",
                            "name": "requiredAmount",
                            "nameLocation": "9352:14:159",
                            "nodeType": "VariableDeclaration",
                            "scope": 59962,
                            "src": "9344:22:159",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 59945,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9344:7:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 59954,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 59953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 59947,
                            "name": "totalPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59936,
                            "src": "9369:10:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 59951,
                                "name": "totalPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59936,
                                "src": "9439:10:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 59948,
                                  "name": "marketConfig",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 59416,
                                  "src": "9382:12:159",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Config_$90749_storage",
                                    "typeString": "struct MarketConfig.Config storage ref"
                                  }
                                },
                                "id": 59949,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9395:19:159",
                                "memberName": "marketplaceSettings",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 90730,
                                "src": "9382:32:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IMarketplaceSettings_$60693",
                                  "typeString": "contract IMarketplaceSettings"
                                }
                              },
                              "id": 59950,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9415:23:159",
                              "memberName": "calculateMarketplaceFee",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 60647,
                              "src": "9382:56:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256) view external returns (uint256)"
                              }
                            },
                            "id": 59952,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9382:68:159",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9369:81:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9344:106:159"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 59958,
                              "name": "_currencyAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59797,
                              "src": "9493:16:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 59959,
                              "name": "requiredAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59946,
                              "src": "9511:14:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 59955,
                              "name": "MarketUtils",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 90358,
                              "src": "9458:11:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_MarketUtils_$90358_$",
                                "typeString": "type(library MarketUtils)"
                              }
                            },
                            "id": 59957,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9470:22:159",
                            "memberName": "checkAmountAndTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 89809,
                            "src": "9458:34:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 59960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9458:68:159",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 59961,
                        "nodeType": "ExpressionStatement",
                        "src": "9458:68:159"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 59968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 59964,
                        "name": "contractMintLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59430,
                        "src": "9580:17:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 59966,
                      "indexExpression": {
                        "id": 59965,
                        "name": "_contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59795,
                        "src": "9598:16:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9580:35:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 59967,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9618:1:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9580:39:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 59979,
                  "nodeType": "IfStatement",
                  "src": "9576:126:159",
                  "trueBody": {
                    "id": 59978,
                    "nodeType": "Block",
                    "src": "9621:81:159",
                    "statements": [
                      {
                        "expression": {
                          "id": 59976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 59969,
                                "name": "contractMintsPerAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59436,
                                "src": "9629:23:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 59973,
                              "indexExpression": {
                                "id": 59970,
                                "name": "_contractAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59795,
                                "src": "9653:16:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9629:41:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 59974,
                            "indexExpression": {
                              "expression": {
                                "id": 59971,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9671:3:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 59972,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9675:6:159",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9671:10:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9629:53:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 59975,
                            "name": "_numMints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59801,
                            "src": "9686:9:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "9629:66:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 59977,
                        "nodeType": "ExpressionStatement",
                        "src": "9629:66:159"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 59984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 59980,
                        "name": "contractTxLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59440,
                        "src": "9747:15:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 59982,
                      "indexExpression": {
                        "id": 59981,
                        "name": "_contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59795,
                        "src": "9763:16:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9747:33:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 59983,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9783:1:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9747:37:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 59995,
                  "nodeType": "IfStatement",
                  "src": "9743:114:159",
                  "trueBody": {
                    "id": 59994,
                    "nodeType": "Block",
                    "src": "9786:71:159",
                    "statements": [
                      {
                        "expression": {
                          "id": 59992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 59985,
                                "name": "contractTxsPerAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59446,
                                "src": "9794:21:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 59989,
                              "indexExpression": {
                                "id": 59986,
                                "name": "_contractAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59795,
                                "src": "9816:16:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9794:39:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 59990,
                            "indexExpression": {
                              "expression": {
                                "id": 59987,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9834:3:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 59988,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9838:6:159",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9834:10:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9794:51:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 59991,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9849:1:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "9794:56:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 59993,
                        "nodeType": "ExpressionStatement",
                        "src": "9794:56:159"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    59997
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59997,
                      "mutability": "mutable",
                      "name": "tokenIdStart",
                      "nameLocation": "9891:12:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 60089,
                      "src": "9883:20:159",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 59996,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9883:7:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60005,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 60002,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9943:3:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 60003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9947:6:159",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9943:10:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 59999,
                            "name": "_contractAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59795,
                            "src": "9918:16:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 59998,
                          "name": "IERC721Mint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 57991,
                          "src": "9906:11:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC721Mint_$57991_$",
                            "typeString": "type(contract IERC721Mint)"
                          }
                        },
                        "id": 60000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9906:29:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721Mint_$57991",
                          "typeString": "contract IERC721Mint"
                        }
                      },
                      "id": 60001,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9936:6:159",
                      "memberName": "mintTo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57990,
                      "src": "9906:36:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) external returns (uint256)"
                      }
                    },
                    "id": 60004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9906:48:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9883:71:159"
                },
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 60013,
                        "nodeType": "Block",
                        "src": "10090:2:159",
                        "statements": []
                      },
                      "errorName": "",
                      "id": 60014,
                      "nodeType": "TryCatchClause",
                      "src": "10090:2:159"
                    },
                    {
                      "block": {
                        "id": 60015,
                        "nodeType": "Block",
                        "src": "10099:2:159",
                        "statements": []
                      },
                      "errorName": "",
                      "id": 60016,
                      "nodeType": "TryCatchClause",
                      "src": "10093:8:159"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "id": 60009,
                        "name": "_contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59795,
                        "src": "10052:16:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 60010,
                        "name": "tokenIdStart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59997,
                        "src": "10070:12:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 60011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10084:4:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 60006,
                          "name": "marketConfig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59416,
                          "src": "10003:12:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Config_$90749_storage",
                            "typeString": "struct MarketConfig.Config storage ref"
                          }
                        },
                        "id": 60007,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10016:19:159",
                        "memberName": "marketplaceSettings",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 90730,
                        "src": "10003:32:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IMarketplaceSettings_$60693",
                          "typeString": "contract IMarketplaceSettings"
                        }
                      },
                      "id": 60008,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10036:15:159",
                      "memberName": "markERC721Token",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60685,
                      "src": "10003:48:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (address,uint256,bool) external"
                      }
                    },
                    "id": 60012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10003:86:159",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60017,
                  "nodeType": "TryStatement",
                  "src": "9999:102:159"
                },
                {
                  "body": {
                    "id": 60050,
                    "nodeType": "Block",
                    "src": "10146:235:159",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 60032,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "10250:3:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 60033,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10254:6:159",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10250:10:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 60029,
                                  "name": "_contractAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 59795,
                                  "src": "10225:16:159",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 60028,
                                "name": "IERC721Mint",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 57991,
                                "src": "10213:11:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Mint_$57991_$",
                                  "typeString": "type(contract IERC721Mint)"
                                }
                              },
                              "id": 60030,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10213:29:159",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721Mint_$57991",
                                "typeString": "contract IERC721Mint"
                              }
                            },
                            "id": 60031,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10243:6:159",
                            "memberName": "mintTo",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 57990,
                            "src": "10213:36:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) external returns (uint256)"
                            }
                          },
                          "id": 60034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10213:48:159",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 60035,
                        "nodeType": "ExpressionStatement",
                        "src": "10213:48:159"
                      },
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 60045,
                              "nodeType": "Block",
                              "src": "10364:2:159",
                              "statements": []
                            },
                            "errorName": "",
                            "id": 60046,
                            "nodeType": "TryCatchClause",
                            "src": "10364:2:159"
                          },
                          {
                            "block": {
                              "id": 60047,
                              "nodeType": "Block",
                              "src": "10373:2:159",
                              "statements": []
                            },
                            "errorName": "",
                            "id": 60048,
                            "nodeType": "TryCatchClause",
                            "src": "10367:8:159"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "id": 60039,
                              "name": "_contractAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59795,
                              "src": "10322:16:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 60042,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 60040,
                                "name": "tokenIdStart",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59997,
                                "src": "10340:12:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 60041,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60019,
                                "src": "10355:1:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10340:16:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 60043,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10358:4:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 60036,
                                "name": "marketConfig",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59416,
                                "src": "10273:12:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Config_$90749_storage",
                                  "typeString": "struct MarketConfig.Config storage ref"
                                }
                              },
                              "id": 60037,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10286:19:159",
                              "memberName": "marketplaceSettings",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 90730,
                              "src": "10273:32:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IMarketplaceSettings_$60693",
                                "typeString": "contract IMarketplaceSettings"
                              }
                            },
                            "id": 60038,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10306:15:159",
                            "memberName": "markERC721Token",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 60685,
                            "src": "10273:48:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (address,uint256,bool) external"
                            }
                          },
                          "id": 60044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10273:90:159",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 60049,
                        "nodeType": "TryStatement",
                        "src": "10269:106:159"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 60024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 60022,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60019,
                      "src": "10126:1:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 60023,
                      "name": "_numMints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59801,
                      "src": "10130:9:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "10126:13:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 60051,
                  "initializationExpression": {
                    "assignments": [
                      60019
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 60019,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "10119:1:159",
                        "nodeType": "VariableDeclaration",
                        "scope": 60051,
                        "src": "10111:9:159",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 60018,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10111:7:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 60021,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 60020,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10123:1:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10111:13:159"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 60026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "10141:3:159",
                      "subExpression": {
                        "id": 60025,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60019,
                        "src": "10141:1:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 60027,
                    "nodeType": "ExpressionStatement",
                    "src": "10141:3:159"
                  },
                  "nodeType": "ForStatement",
                  "src": "10106:275:159"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 60055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 60052,
                        "name": "directSaleConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59811,
                        "src": "10413:16:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DirectSaleConfig_$58236_memory_ptr",
                          "typeString": "struct IRareMinter.DirectSaleConfig memory"
                        }
                      },
                      "id": 60053,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10430:5:159",
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58225,
                      "src": "10413:22:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 60054,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10439:1:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "10413:27:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 60072,
                  "nodeType": "IfStatement",
                  "src": "10409:282:159",
                  "trueBody": {
                    "id": 60071,
                    "nodeType": "Block",
                    "src": "10442:249:159",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 60059,
                              "name": "_contractAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59795,
                              "src": "10479:16:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 60060,
                              "name": "tokenIdStart",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59997,
                              "src": "10505:12:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 60061,
                              "name": "_currencyAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59797,
                              "src": "10527:16:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 60062,
                              "name": "totalPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59936,
                              "src": "10553:10:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 60063,
                                "name": "directSaleConfig",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59811,
                                "src": "10573:16:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DirectSaleConfig_$58236_memory_ptr",
                                  "typeString": "struct IRareMinter.DirectSaleConfig memory"
                                }
                              },
                              "id": 60064,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10590:6:159",
                              "memberName": "seller",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 58221,
                              "src": "10573:23:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 60065,
                                "name": "directSaleConfig",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59811,
                                "src": "10606:16:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DirectSaleConfig_$58236_memory_ptr",
                                  "typeString": "struct IRareMinter.DirectSaleConfig memory"
                                }
                              },
                              "id": 60066,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10623:15:159",
                              "memberName": "splitRecipients",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 58232,
                              "src": "10606:32:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                                "typeString": "address payable[] memory"
                              }
                            },
                            {
                              "expression": {
                                "id": 60067,
                                "name": "directSaleConfig",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 59811,
                                "src": "10648:16:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DirectSaleConfig_$58236_memory_ptr",
                                  "typeString": "struct IRareMinter.DirectSaleConfig memory"
                                }
                              },
                              "id": 60068,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10665:11:159",
                              "memberName": "splitRatios",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 58235,
                              "src": "10648:28:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                                "typeString": "uint8[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                                "typeString": "address payable[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                                "typeString": "uint8[] memory"
                              }
                            ],
                            "expression": {
                              "id": 60056,
                              "name": "marketConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59416,
                              "src": "10450:12:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Config_$90749_storage",
                                "typeString": "struct MarketConfig.Config storage ref"
                              }
                            },
                            "id": 60058,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10463:6:159",
                            "memberName": "payout",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 90270,
                            "src": "10450:19:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Config_$90749_storage_ptr_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_address_$_t_array$_t_address_payable_$dyn_memory_ptr_$_t_array$_t_uint8_$dyn_memory_ptr_$returns$__$attached_to$_t_struct$_Config_$90749_storage_ptr_$",
                              "typeString": "function (struct MarketConfig.Config storage pointer,address,uint256,address,uint256,address,address payable[] memory,uint8[] memory)"
                            }
                          },
                          "id": 60069,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10450:234:159",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 60070,
                        "nodeType": "ExpressionStatement",
                        "src": "10450:234:159"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 60074,
                        "name": "_contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59795,
                        "src": "10724:16:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 60075,
                          "name": "directSaleConfig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59811,
                          "src": "10748:16:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DirectSaleConfig_$58236_memory_ptr",
                            "typeString": "struct IRareMinter.DirectSaleConfig memory"
                          }
                        },
                        "id": 60076,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10765:6:159",
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 58221,
                        "src": "10748:23:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 60077,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10779:3:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 60078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10783:6:159",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10779:10:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 60079,
                        "name": "tokenIdStart",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59997,
                        "src": "10797:12:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 60084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 60082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 60080,
                            "name": "tokenIdStart",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59997,
                            "src": "10817:12:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 60081,
                            "name": "_numMints",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 59801,
                            "src": "10832:9:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "10817:24:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 60083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10844:1:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "10817:28:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 60085,
                        "name": "_currencyAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59797,
                        "src": "10853:16:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 60086,
                        "name": "_price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59799,
                        "src": "10877:6:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 60073,
                      "name": "MintDirectSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58284,
                      "src": "10702:14:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,address,uint256)"
                      }
                    },
                    "id": 60087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10702:187:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60088,
                  "nodeType": "EmitStatement",
                  "src": "10697:192:159"
                }
              ]
            },
            "baseFunctions": [
              58414
            ],
            "functionSelector": "d647ed3c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 59807,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 59806,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "7409:12:159"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32016,
                  "src": "7409:12:159"
                },
                "nodeType": "ModifierInvocation",
                "src": "7409:12:159"
              }
            ],
            "name": "mintDirectSale",
            "nameLocation": "7241:14:159",
            "parameters": {
              "id": 59805,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59795,
                  "mutability": "mutable",
                  "name": "_contractAddress",
                  "nameLocation": "7269:16:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 60090,
                  "src": "7261:24:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59794,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7261:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59797,
                  "mutability": "mutable",
                  "name": "_currencyAddress",
                  "nameLocation": "7299:16:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 60090,
                  "src": "7291:24:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59796,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7291:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59799,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "7329:6:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 60090,
                  "src": "7321:14:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59798,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7321:7:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59801,
                  "mutability": "mutable",
                  "name": "_numMints",
                  "nameLocation": "7347:9:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 60090,
                  "src": "7341:15:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 59800,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "7341:5:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59804,
                  "mutability": "mutable",
                  "name": "_proof",
                  "nameLocation": "7381:6:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 60090,
                  "src": "7362:25:159",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 59802,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "7362:7:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 59803,
                    "nodeType": "ArrayTypeName",
                    "src": "7362:9:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7255:136:159"
            },
            "returnParameters": {
              "id": 59808,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7422:0:159"
            },
            "scope": 60363,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 60100,
            "nodeType": "FunctionDefinition",
            "src": "11136:66:159",
            "nodes": [],
            "body": {
              "id": 60099,
              "nodeType": "Block",
              "src": "11200:2:159",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              31839
            ],
            "documentation": {
              "id": 60091,
              "nodeType": "StructuredDocumentation",
              "src": "11102:31:159",
              "text": "@inheritdoc UUPSUpgradeable"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 60097,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 60096,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "11190:9:159"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31086,
                  "src": "11190:9:159"
                },
                "nodeType": "ModifierInvocation",
                "src": "11190:9:159"
              }
            ],
            "name": "_authorizeUpgrade",
            "nameLocation": "11145:17:159",
            "overrides": {
              "id": 60095,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11181:8:159"
            },
            "parameters": {
              "id": 60094,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60093,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 60100,
                  "src": "11163:7:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60092,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11163:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11162:9:159"
            },
            "returnParameters": {
              "id": 60098,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11200:0:159"
            },
            "scope": 60363,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 60114,
            "nodeType": "FunctionDefinition",
            "src": "11408:148:159",
            "nodes": [],
            "body": {
              "id": 60113,
              "nodeType": "Block",
              "src": "11487:69:159",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60110,
                        "name": "_networkBeneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60102,
                        "src": "11531:19:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 60107,
                        "name": "marketConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59416,
                        "src": "11493:12:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$90749_storage",
                          "typeString": "struct MarketConfig.Config storage ref"
                        }
                      },
                      "id": 60109,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11506:24:159",
                      "memberName": "updateNetworkBeneficiary",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 90929,
                      "src": "11493:37:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_Config_$90749_storage_ptr_$_t_address_$returns$__$attached_to$_t_struct$_Config_$90749_storage_ptr_$",
                        "typeString": "function (struct MarketConfig.Config storage pointer,address)"
                      }
                    },
                    "id": 60111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11493:58:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60112,
                  "nodeType": "ExpressionStatement",
                  "src": "11493:58:159"
                }
              ]
            },
            "functionSelector": "3492e5a8",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 60105,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 60104,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "11477:9:159"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31086,
                  "src": "11477:9:159"
                },
                "nodeType": "ModifierInvocation",
                "src": "11477:9:159"
              }
            ],
            "name": "setNetworkBeneficiary",
            "nameLocation": "11417:21:159",
            "parameters": {
              "id": 60103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60102,
                  "mutability": "mutable",
                  "name": "_networkBeneficiary",
                  "nameLocation": "11447:19:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 60114,
                  "src": "11439:27:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60101,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11439:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11438:29:159"
            },
            "returnParameters": {
              "id": 60106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11487:0:159"
            },
            "scope": 60363,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 60128,
            "nodeType": "FunctionDefinition",
            "src": "11560:152:159",
            "nodes": [],
            "body": {
              "id": 60127,
              "nodeType": "Block",
              "src": "11641:71:159",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60124,
                        "name": "_marketplaceSettings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60116,
                        "src": "11686:20:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 60121,
                        "name": "marketConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59416,
                        "src": "11647:12:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$90749_storage",
                          "typeString": "struct MarketConfig.Config storage ref"
                        }
                      },
                      "id": 60123,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11660:25:159",
                      "memberName": "updateMarketplaceSettings",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 90950,
                      "src": "11647:38:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_Config_$90749_storage_ptr_$_t_address_$returns$__$attached_to$_t_struct$_Config_$90749_storage_ptr_$",
                        "typeString": "function (struct MarketConfig.Config storage pointer,address)"
                      }
                    },
                    "id": 60125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11647:60:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60126,
                  "nodeType": "ExpressionStatement",
                  "src": "11647:60:159"
                }
              ]
            },
            "functionSelector": "176ab440",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 60119,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 60118,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "11631:9:159"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31086,
                  "src": "11631:9:159"
                },
                "nodeType": "ModifierInvocation",
                "src": "11631:9:159"
              }
            ],
            "name": "setMarketplaceSettings",
            "nameLocation": "11569:22:159",
            "parameters": {
              "id": 60117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60116,
                  "mutability": "mutable",
                  "name": "_marketplaceSettings",
                  "nameLocation": "11600:20:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 60128,
                  "src": "11592:28:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60115,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11592:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11591:30:159"
            },
            "returnParameters": {
              "id": 60120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11641:0:159"
            },
            "scope": 60363,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 60142,
            "nodeType": "FunctionDefinition",
            "src": "11716:160:159",
            "nodes": [],
            "body": {
              "id": 60141,
              "nodeType": "Block",
              "src": "11801:75:159",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60138,
                        "name": "_spaceOperatorRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60130,
                        "src": "11848:22:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 60135,
                        "name": "marketConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59416,
                        "src": "11807:12:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$90749_storage",
                          "typeString": "struct MarketConfig.Config storage ref"
                        }
                      },
                      "id": 60137,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11820:27:159",
                      "memberName": "updateSpaceOperatorRegistry",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 90971,
                      "src": "11807:40:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_Config_$90749_storage_ptr_$_t_address_$returns$__$attached_to$_t_struct$_Config_$90749_storage_ptr_$",
                        "typeString": "function (struct MarketConfig.Config storage pointer,address)"
                      }
                    },
                    "id": 60139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11807:64:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60140,
                  "nodeType": "ExpressionStatement",
                  "src": "11807:64:159"
                }
              ]
            },
            "functionSelector": "7f358230",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 60133,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 60132,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "11791:9:159"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31086,
                  "src": "11791:9:159"
                },
                "nodeType": "ModifierInvocation",
                "src": "11791:9:159"
              }
            ],
            "name": "setSpaceOperatorRegistry",
            "nameLocation": "11725:24:159",
            "parameters": {
              "id": 60131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60130,
                  "mutability": "mutable",
                  "name": "_spaceOperatorRegistry",
                  "nameLocation": "11758:22:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 60142,
                  "src": "11750:30:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60129,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11750:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11749:32:159"
            },
            "returnParameters": {
              "id": 60134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11801:0:159"
            },
            "scope": 60363,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 60156,
            "nodeType": "FunctionDefinition",
            "src": "11880:128:159",
            "nodes": [],
            "body": {
              "id": 60155,
              "nodeType": "Block",
              "src": "11949:59:159",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60152,
                        "name": "_royaltyEngine",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60144,
                        "src": "11988:14:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 60149,
                        "name": "marketConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59416,
                        "src": "11955:12:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$90749_storage",
                          "typeString": "struct MarketConfig.Config storage ref"
                        }
                      },
                      "id": 60151,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11968:19:159",
                      "memberName": "updateRoyaltyEngine",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 90992,
                      "src": "11955:32:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_Config_$90749_storage_ptr_$_t_address_$returns$__$attached_to$_t_struct$_Config_$90749_storage_ptr_$",
                        "typeString": "function (struct MarketConfig.Config storage pointer,address)"
                      }
                    },
                    "id": 60153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11955:48:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60154,
                  "nodeType": "ExpressionStatement",
                  "src": "11955:48:159"
                }
              ]
            },
            "functionSelector": "21ede032",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 60147,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 60146,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "11939:9:159"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31086,
                  "src": "11939:9:159"
                },
                "nodeType": "ModifierInvocation",
                "src": "11939:9:159"
              }
            ],
            "name": "setRoyaltyEngine",
            "nameLocation": "11889:16:159",
            "parameters": {
              "id": 60145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60144,
                  "mutability": "mutable",
                  "name": "_royaltyEngine",
                  "nameLocation": "11914:14:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 60156,
                  "src": "11906:22:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60143,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11906:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11905:24:159"
            },
            "returnParameters": {
              "id": 60148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11949:0:159"
            },
            "scope": 60363,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 60170,
            "nodeType": "FunctionDefinition",
            "src": "12012:108:159",
            "nodes": [],
            "body": {
              "id": 60169,
              "nodeType": "Block",
              "src": "12071:49:159",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60166,
                        "name": "_payments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60158,
                        "src": "12105:9:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 60163,
                        "name": "marketConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59416,
                        "src": "12077:12:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$90749_storage",
                          "typeString": "struct MarketConfig.Config storage ref"
                        }
                      },
                      "id": 60165,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12090:14:159",
                      "memberName": "updatePayments",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 91013,
                      "src": "12077:27:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_Config_$90749_storage_ptr_$_t_address_$returns$__$attached_to$_t_struct$_Config_$90749_storage_ptr_$",
                        "typeString": "function (struct MarketConfig.Config storage pointer,address)"
                      }
                    },
                    "id": 60167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12077:38:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60168,
                  "nodeType": "ExpressionStatement",
                  "src": "12077:38:159"
                }
              ]
            },
            "functionSelector": "af231a58",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 60161,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 60160,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "12061:9:159"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31086,
                  "src": "12061:9:159"
                },
                "nodeType": "ModifierInvocation",
                "src": "12061:9:159"
              }
            ],
            "name": "setPayments",
            "nameLocation": "12021:11:159",
            "parameters": {
              "id": 60159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60158,
                  "mutability": "mutable",
                  "name": "_payments",
                  "nameLocation": "12041:9:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 60170,
                  "src": "12033:17:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60157,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12033:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12032:19:159"
            },
            "returnParameters": {
              "id": 60162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12071:0:159"
            },
            "scope": 60363,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 60184,
            "nodeType": "FunctionDefinition",
            "src": "12124:160:159",
            "nodes": [],
            "body": {
              "id": 60183,
              "nodeType": "Block",
              "src": "12209:75:159",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60180,
                        "name": "_approvedTokenRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60172,
                        "src": "12256:22:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 60177,
                        "name": "marketConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59416,
                        "src": "12215:12:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$90749_storage",
                          "typeString": "struct MarketConfig.Config storage ref"
                        }
                      },
                      "id": 60179,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12228:27:159",
                      "memberName": "updateApprovedTokenRegistry",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 91034,
                      "src": "12215:40:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_delegatecall_nonpayable$_t_struct$_Config_$90749_storage_ptr_$_t_address_$returns$__$attached_to$_t_struct$_Config_$90749_storage_ptr_$",
                        "typeString": "function (struct MarketConfig.Config storage pointer,address)"
                      }
                    },
                    "id": 60181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12215:64:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60182,
                  "nodeType": "ExpressionStatement",
                  "src": "12215:64:159"
                }
              ]
            },
            "functionSelector": "e4e87e3b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 60175,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 60174,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "12199:9:159"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31086,
                  "src": "12199:9:159"
                },
                "nodeType": "ModifierInvocation",
                "src": "12199:9:159"
              }
            ],
            "name": "setApprovedTokenRegistry",
            "nameLocation": "12133:24:159",
            "parameters": {
              "id": 60173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60172,
                  "mutability": "mutable",
                  "name": "_approvedTokenRegistry",
                  "nameLocation": "12166:22:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 60184,
                  "src": "12158:30:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60171,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12158:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12157:32:159"
            },
            "returnParameters": {
              "id": 60176,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12209:0:159"
            },
            "scope": 60363,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 60236,
            "nodeType": "FunctionDefinition",
            "src": "12695:671:159",
            "nodes": [],
            "body": {
              "id": 60235,
              "nodeType": "Block",
              "src": "12799:567:159",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 60197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 60192,
                          "name": "contractSellerStakingMinimum",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59451,
                          "src": "12809:28:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingMinimum_$58246_storage_$",
                            "typeString": "mapping(address => struct IRareMinter.StakingMinimum storage ref)"
                          }
                        },
                        "id": 60194,
                        "indexExpression": {
                          "id": 60193,
                          "name": "_contractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60187,
                          "src": "12838:16:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12809:46:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingMinimum_$58246_storage",
                          "typeString": "struct IRareMinter.StakingMinimum storage ref"
                        }
                      },
                      "id": 60195,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12856:6:159",
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58243,
                      "src": "12809:53:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 60196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12866:1:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "12809:58:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 60200,
                  "nodeType": "IfStatement",
                  "src": "12805:85:159",
                  "trueBody": {
                    "id": 60199,
                    "nodeType": "Block",
                    "src": "12869:21:159",
                    "statements": [
                      {
                        "functionReturnParameters": 60191,
                        "id": 60198,
                        "nodeType": "Return",
                        "src": "12877:7:159"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 60207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 60201,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "12943:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 60202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12949:9:159",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "12943:15:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 60203,
                          "name": "contractSellerStakingMinimum",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59451,
                          "src": "12962:28:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingMinimum_$58246_storage_$",
                            "typeString": "mapping(address => struct IRareMinter.StakingMinimum storage ref)"
                          }
                        },
                        "id": 60205,
                        "indexExpression": {
                          "id": 60204,
                          "name": "_contractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60187,
                          "src": "12991:16:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12962:46:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingMinimum_$58246_storage",
                          "typeString": "struct IRareMinter.StakingMinimum storage ref"
                        }
                      },
                      "id": 60206,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13009:12:159",
                      "memberName": "endTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58245,
                      "src": "12962:59:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12943:78:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 60210,
                  "nodeType": "IfStatement",
                  "src": "12939:105:159",
                  "trueBody": {
                    "id": 60209,
                    "nodeType": "Block",
                    "src": "13023:21:159",
                    "statements": [
                      {
                        "functionReturnParameters": 60191,
                        "id": 60208,
                        "nodeType": "Return",
                        "src": "13031:7:159"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    60212
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60212,
                      "mutability": "mutable",
                      "name": "amountStaked",
                      "nameLocation": "13057:12:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 60235,
                      "src": "13049:20:159",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 60211,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13049:7:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60224,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 60221,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13178:3:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 60222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13182:6:159",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13178:10:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 60217,
                                "name": "_address",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60189,
                                "src": "13138:8:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 60214,
                                  "name": "marketConfig",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 59416,
                                  "src": "13084:12:159",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Config_$90749_storage",
                                    "typeString": "struct MarketConfig.Config storage ref"
                                  }
                                },
                                "id": 60215,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "13097:15:159",
                                "memberName": "stakingRegistry",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 90748,
                                "src": "13084:28:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IRareStakingRegistry_$65219",
                                  "typeString": "contract IRareStakingRegistry"
                                }
                              },
                              "id": 60216,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13113:24:159",
                              "memberName": "getStakingAddressForUser",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 65148,
                              "src": "13084:53:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                                "typeString": "function (address) view external returns (address)"
                              }
                            },
                            "id": 60218,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13084:63:159",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 60213,
                          "name": "IRarityPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67326,
                          "src": "13072:11:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IRarityPool_$67326_$",
                            "typeString": "type(contract IRarityPool)"
                          }
                        },
                        "id": 60219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13072:76:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRarityPool_$67326",
                          "typeString": "contract IRarityPool"
                        }
                      },
                      "id": 60220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13156:21:159",
                      "memberName": "getAmountStakedByUser",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 67220,
                      "src": "13072:105:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 60223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13072:117:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13049:140:159"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 60231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 60226,
                          "name": "amountStaked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60212,
                          "src": "13210:12:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 60227,
                              "name": "contractSellerStakingMinimum",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 59451,
                              "src": "13226:28:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_StakingMinimum_$58246_storage_$",
                                "typeString": "mapping(address => struct IRareMinter.StakingMinimum storage ref)"
                              }
                            },
                            "id": 60229,
                            "indexExpression": {
                              "id": 60228,
                              "name": "_contractAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60187,
                              "src": "13255:16:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13226:46:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_StakingMinimum_$58246_storage",
                              "typeString": "struct IRareMinter.StakingMinimum storage ref"
                            }
                          },
                          "id": 60230,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13273:6:159",
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 58243,
                          "src": "13226:53:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13210:69:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5f656e666f726365436f6e747261637453656c6c65725374616b696e674d696e696d756d3a3a41646472657373206e6f74206f6e207374616b656420656e6f756768",
                        "id": 60232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13287:68:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_276e8a32e543ba178d5e3b2b488ab20427dc19cc36f71c5e2dcb88f59a052563",
                          "typeString": "literal_string \"_enforceContractSellerStakingMinimum::Address not on staked enough\""
                        },
                        "value": "_enforceContractSellerStakingMinimum::Address not on staked enough"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_276e8a32e543ba178d5e3b2b488ab20427dc19cc36f71c5e2dcb88f59a052563",
                          "typeString": "literal_string \"_enforceContractSellerStakingMinimum::Address not on staked enough\""
                        }
                      ],
                      "id": 60225,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13195:7:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 60233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13195:166:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60234,
                  "nodeType": "ExpressionStatement",
                  "src": "13195:166:159"
                }
              ]
            },
            "documentation": {
              "id": 60185,
              "nodeType": "StructuredDocumentation",
              "src": "12493:199:159",
              "text": "@notice Checks to see if the address is on the contract allow list\n @param _contractAddress address The address of the ERC721 contract\n @param _address address The address of the seller"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_enforceContractSellerStakingMinimum",
            "nameLocation": "12704:36:159",
            "parameters": {
              "id": 60190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60187,
                  "mutability": "mutable",
                  "name": "_contractAddress",
                  "nameLocation": "12749:16:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 60236,
                  "src": "12741:24:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60186,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12741:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60189,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "12775:8:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 60236,
                  "src": "12767:16:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60188,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12767:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12740:44:159"
            },
            "returnParameters": {
              "id": 60191,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12799:0:159"
            },
            "scope": 60363,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 60288,
            "nodeType": "FunctionDefinition",
            "src": "13598:595:159",
            "nodes": [],
            "body": {
              "id": 60287,
              "nodeType": "Block",
              "src": "13732:461:159",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    60248
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60248,
                      "mutability": "mutable",
                      "name": "root",
                      "nameLocation": "13746:4:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 60287,
                      "src": "13738:12:159",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 60247,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "13738:7:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60253,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 60249,
                        "name": "contractAllowlistRoots",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59426,
                        "src": "13753:22:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AllowListConfig_$58241_storage_$",
                          "typeString": "mapping(address => struct IRareMinter.AllowListConfig storage ref)"
                        }
                      },
                      "id": 60251,
                      "indexExpression": {
                        "id": 60250,
                        "name": "_contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60239,
                        "src": "13776:16:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "13753:40:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AllowListConfig_$58241_storage",
                        "typeString": "struct IRareMinter.AllowListConfig storage ref"
                      }
                    },
                    "id": 60252,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "13794:4:159",
                    "memberName": "root",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 58238,
                    "src": "13753:45:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13738:60:159"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 60259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 60254,
                      "name": "root",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60248,
                      "src": "13846:4:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 60257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13862:1:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 60256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "13854:7:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 60255,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "13854:7:159",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 60258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13854:10:159",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "13846:18:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 60262,
                  "nodeType": "IfStatement",
                  "src": "13842:45:159",
                  "trueBody": {
                    "id": 60261,
                    "nodeType": "Block",
                    "src": "13866:21:159",
                    "statements": [
                      {
                        "functionReturnParameters": 60246,
                        "id": 60260,
                        "nodeType": "Return",
                        "src": "13874:7:159"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 60269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 60263,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "13946:5:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 60264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13952:9:159",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "13946:15:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 60265,
                          "name": "contractAllowlistRoots",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59426,
                          "src": "13965:22:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_AllowListConfig_$58241_storage_$",
                            "typeString": "mapping(address => struct IRareMinter.AllowListConfig storage ref)"
                          }
                        },
                        "id": 60267,
                        "indexExpression": {
                          "id": 60266,
                          "name": "_contractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60239,
                          "src": "13988:16:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13965:40:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AllowListConfig_$58241_storage",
                          "typeString": "struct IRareMinter.AllowListConfig storage ref"
                        }
                      },
                      "id": 60268,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14006:12:159",
                      "memberName": "endTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58240,
                      "src": "13965:53:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13946:72:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 60272,
                  "nodeType": "IfStatement",
                  "src": "13942:99:159",
                  "trueBody": {
                    "id": 60271,
                    "nodeType": "Block",
                    "src": "14020:21:159",
                    "statements": [
                      {
                        "functionReturnParameters": 60246,
                        "id": 60270,
                        "nodeType": "Return",
                        "src": "14028:7:159"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 60278,
                                    "name": "_address",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 60241,
                                    "src": "14101:8:159",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 60276,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "14084:3:159",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 60277,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "14088:12:159",
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "14084:16:159",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 60279,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14084:26:159",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 60275,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "14074:9:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 60280,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14074:37:159",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 60281,
                            "name": "root",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60248,
                            "src": "14113:4:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 60282,
                            "name": "_proof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60244,
                            "src": "14119:6:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          ],
                          "id": 60274,
                          "name": "_verifyProof",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60332,
                          "src": "14061:12:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes32_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (bytes32,bytes32,bytes32[] memory) view returns (bool)"
                          }
                        },
                        "id": 60283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14061:65:159",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5f656e666f726365416c6c6f774c69737465643a3a41646472657373206e6f74206f6e20616c6c6f77206c697374",
                        "id": 60284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14134:48:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_319c668e6e65f12f7b522f9d2d8da3b016d8dbc129d95637411d5e9d570662d2",
                          "typeString": "literal_string \"_enforceAllowListed::Address not on allow list\""
                        },
                        "value": "_enforceAllowListed::Address not on allow list"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_319c668e6e65f12f7b522f9d2d8da3b016d8dbc129d95637411d5e9d570662d2",
                          "typeString": "literal_string \"_enforceAllowListed::Address not on allow list\""
                        }
                      ],
                      "id": 60273,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14046:7:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 60285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14046:142:159",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60286,
                  "nodeType": "ExpressionStatement",
                  "src": "14046:142:159"
                }
              ]
            },
            "documentation": {
              "id": 60237,
              "nodeType": "StructuredDocumentation",
              "src": "13370:225:159",
              "text": "@notice Checks to see if the address is on the contract allow list\n @param _contractAddress address The address of the ERC721 contract\n @param _address address The address of to be checked against the allow list"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_enforceContractAllowList",
            "nameLocation": "13607:25:159",
            "parameters": {
              "id": 60245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60239,
                  "mutability": "mutable",
                  "name": "_contractAddress",
                  "nameLocation": "13646:16:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 60288,
                  "src": "13638:24:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60238,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13638:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60241,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "13676:8:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 60288,
                  "src": "13668:16:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60240,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13668:7:159",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60244,
                  "mutability": "mutable",
                  "name": "_proof",
                  "nameLocation": "13707:6:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 60288,
                  "src": "13690:23:159",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 60242,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "13690:7:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 60243,
                    "nodeType": "ArrayTypeName",
                    "src": "13690:9:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13632:85:159"
            },
            "returnParameters": {
              "id": 60246,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13732:0:159"
            },
            "scope": 60363,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 60332,
            "nodeType": "FunctionDefinition",
            "src": "14335:292:159",
            "nodes": [],
            "body": {
              "id": 60331,
              "nodeType": "Block",
              "src": "14441:186:159",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    60302
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 60302,
                      "mutability": "mutable",
                      "name": "currentHash",
                      "nameLocation": "14455:11:159",
                      "nodeType": "VariableDeclaration",
                      "scope": 60331,
                      "src": "14447:19:159",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 60301,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "14447:7:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 60304,
                  "initialValue": {
                    "id": 60303,
                    "name": "_leaf",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 60291,
                    "src": "14469:5:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14447:27:159"
                },
                {
                  "body": {
                    "id": 60325,
                    "nodeType": "Block",
                    "src": "14525:64:159",
                    "statements": [
                      {
                        "expression": {
                          "id": 60323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 60316,
                            "name": "currentHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60302,
                            "src": "14533:11:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 60318,
                                "name": "currentHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60302,
                                "src": "14559:11:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 60319,
                                  "name": "_proof",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60296,
                                  "src": "14572:6:159",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                    "typeString": "bytes32[] memory"
                                  }
                                },
                                "id": 60321,
                                "indexExpression": {
                                  "id": 60320,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60306,
                                  "src": "14579:1:159",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "14572:9:159",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 60317,
                              "name": "_parentHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60362,
                              "src": "14547:11:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                                "typeString": "function (bytes32,bytes32) pure returns (bytes32)"
                              }
                            },
                            "id": 60322,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14547:35:159",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "14533:49:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 60324,
                        "nodeType": "ExpressionStatement",
                        "src": "14533:49:159"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 60312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 60309,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60306,
                      "src": "14501:1:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 60310,
                        "name": "_proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60296,
                        "src": "14505:6:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 60311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14512:6:159",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "14505:13:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14501:17:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 60326,
                  "initializationExpression": {
                    "assignments": [
                      60306
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 60306,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "14494:1:159",
                        "nodeType": "VariableDeclaration",
                        "scope": 60326,
                        "src": "14486:9:159",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 60305,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14486:7:159",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 60308,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 60307,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14498:1:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "14486:13:159"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 60314,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "14520:3:159",
                      "subExpression": {
                        "id": 60313,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60306,
                        "src": "14520:1:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 60315,
                    "nodeType": "ExpressionStatement",
                    "src": "14520:3:159"
                  },
                  "nodeType": "ForStatement",
                  "src": "14481:108:159"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 60329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 60327,
                      "name": "currentHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60302,
                      "src": "14602:11:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 60328,
                      "name": "_root",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60293,
                      "src": "14617:5:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "14602:20:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 60300,
                  "id": 60330,
                  "nodeType": "Return",
                  "src": "14595:27:159"
                }
              ]
            },
            "documentation": {
              "id": 60289,
              "nodeType": "StructuredDocumentation",
              "src": "14197:135:159",
              "text": "@notice Verify a proof of inclusion\n @param _leaf bytes32 The leaf to verify\n @param _proof bytes32[] The proof to verify"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_verifyProof",
            "nameLocation": "14344:12:159",
            "parameters": {
              "id": 60297,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60291,
                  "mutability": "mutable",
                  "name": "_leaf",
                  "nameLocation": "14365:5:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 60332,
                  "src": "14357:13:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 60290,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14357:7:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60293,
                  "mutability": "mutable",
                  "name": "_root",
                  "nameLocation": "14380:5:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 60332,
                  "src": "14372:13:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 60292,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14372:7:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60296,
                  "mutability": "mutable",
                  "name": "_proof",
                  "nameLocation": "14404:6:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 60332,
                  "src": "14387:23:159",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 60294,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "14387:7:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 60295,
                    "nodeType": "ArrayTypeName",
                    "src": "14387:9:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14356:55:159"
            },
            "returnParameters": {
              "id": 60300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60299,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 60332,
                  "src": "14435:4:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 60298,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14435:4:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14434:6:159"
            },
            "scope": 60363,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 60362,
            "nodeType": "FunctionDefinition",
            "src": "14761:171:159",
            "nodes": [],
            "body": {
              "id": 60361,
              "nodeType": "Block",
              "src": "14836:96:159",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "id": 60344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 60342,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60335,
                        "src": "14849:1:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "id": 60343,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60337,
                        "src": "14854:1:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "src": "14849:6:159",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 60355,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60337,
                              "src": "14921:1:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 60356,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60335,
                              "src": "14924:1:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 60353,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "14904:3:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 60354,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "14908:12:159",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "14904:16:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 60357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14904:22:159",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 60352,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "14894:9:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 60358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14894:33:159",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 60359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "14849:78:159",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 60348,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60335,
                              "src": "14885:1:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 60349,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60337,
                              "src": "14888:1:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 60346,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "14868:3:159",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 60347,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "14872:12:159",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "14868:16:159",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 60350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14868:22:159",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 60345,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "14858:9:159",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 60351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14858:33:159",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 60341,
                  "id": 60360,
                  "nodeType": "Return",
                  "src": "14842:85:159"
                }
              ]
            },
            "documentation": {
              "id": 60333,
              "nodeType": "StructuredDocumentation",
              "src": "14631:127:159",
              "text": "@notice Calculate the parent hash of two nodes\n @param a bytes32 The first node\n @param b bytes32 The second node"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_parentHash",
            "nameLocation": "14770:11:159",
            "parameters": {
              "id": 60338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60335,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "14790:1:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 60362,
                  "src": "14782:9:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 60334,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14782:7:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60337,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "14801:1:159",
                  "nodeType": "VariableDeclaration",
                  "scope": 60362,
                  "src": "14793:9:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 60336,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14793:7:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14781:22:159"
            },
            "returnParameters": {
              "id": 60341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60340,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 60362,
                  "src": "14827:7:159",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 60339,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14827:7:159",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14826:9:159"
            },
            "scope": 60363,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 59396,
              "name": "Initializable",
              "nameLocations": [
                "965:13:159"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31709,
              "src": "965:13:159"
            },
            "id": 59397,
            "nodeType": "InheritanceSpecifier",
            "src": "965:13:159"
          },
          {
            "baseName": {
              "id": 59398,
              "name": "IRareMinter",
              "nameLocations": [
                "980:11:159"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 58451,
              "src": "980:11:159"
            },
            "id": 59399,
            "nodeType": "InheritanceSpecifier",
            "src": "980:11:159"
          },
          {
            "baseName": {
              "id": 59400,
              "name": "OwnableUpgradeable",
              "nameLocations": [
                "993:18:159"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31172,
              "src": "993:18:159"
            },
            "id": 59401,
            "nodeType": "InheritanceSpecifier",
            "src": "993:18:159"
          },
          {
            "baseName": {
              "id": 59402,
              "name": "ReentrancyGuardUpgradeable",
              "nameLocations": [
                "1013:26:159"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 32056,
              "src": "1013:26:159"
            },
            "id": 59403,
            "nodeType": "InheritanceSpecifier",
            "src": "1013:26:159"
          },
          {
            "baseName": {
              "id": 59404,
              "name": "UUPSUpgradeable",
              "nameLocations": [
                "1041:15:159"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31845,
              "src": "1041:15:159"
            },
            "id": 59405,
            "nodeType": "InheritanceSpecifier",
            "src": "1041:15:159"
          }
        ],
        "canonicalName": "RareMinter",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 59395,
          "nodeType": "StructuredDocumentation",
          "src": "822:120:159",
          "text": "@author SuperRareLabs Inc.\n @title RareMinter\n @notice The logic for all functions related to the RareMinter."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          60363,
          31845,
          31530,
          31193,
          31206,
          32056,
          31172,
          35526,
          58451,
          31709
        ],
        "name": "RareMinter",
        "nameLocation": "951:10:159",
        "scope": 60364,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 159
}