{"abi":[{"type":"function","name":"ENS_SETTER_ROLE","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"STAKING_CONFIG_SETTER_ROLE","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"STAKING_INFO_SETTER_ROLE","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"STAKING_STAT_SETTER_ADMIN_ROLE","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"STAKING_STAT_SETTER_ROLE","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"SWAP_POOL_SETTER_ROLE","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"decreaseAmountStaked","inputs":[{"name":"_staker","type":"address","internalType":"address"},{"name":"_stakedOn","type":"address","internalType":"address"},{"name":"_amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getDefaultPayee","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getDeflationaryPercentage","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getDiscountPercentage","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getPeriodLength","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getRareAddress","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getRewardAccumulatorAddressForUser","inputs":[{"name":"_user","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getStakingAddressForUser","inputs":[{"name":"_user","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getStakingInfoForUser","inputs":[{"name":"_user","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"tuple","internalType":"struct IRareStakingRegistry.Info","components":[{"name":"name","type":"string","internalType":"string"},{"name":"symbol","type":"string","internalType":"string"},{"name":"stakingAddress","type":"address","internalType":"address"},{"name":"rewardAddress","type":"address","internalType":"address"}]}],"stateMutability":"view"},{"type":"function","name":"getSwapPool","inputs":[{"name":"_token","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getTotalAmountStakedByUser","inputs":[{"name":"_user","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getTotalAmountStakedOnUser","inputs":[{"name":"_user","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getUsersForStakingAddresses","inputs":[{"name":"_stakingAddrs","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"getWethAddress","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"increaseAmountStaked","inputs":[{"name":"_staker","type":"address","internalType":"address"},{"name":"_stakedOn","type":"address","internalType":"address"},{"name":"_amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setDefaultPayee","inputs":[{"name":"_payee","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setDeflationaryPercentage","inputs":[{"name":"_percentage","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setDiscountPercentage","inputs":[{"name":"_percentage","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setPeriodLength","inputs":[{"name":"_periodLength","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setResolver","inputs":[{"name":"_resolver","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setReverseRegistrar","inputs":[{"name":"_reverseRegistrar","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setStakingAddresses","inputs":[{"name":"_user","type":"address","internalType":"address"},{"name":"_stakingAddress","type":"address","internalType":"address"},{"name":"_rewardSwapAddress","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setSwapPool","inputs":[{"name":"_uniswapPool","type":"address","internalType":"address"},{"name":"_token","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transferRareFrom","inputs":[{"name":"_from","type":"address","internalType":"address"},{"name":"_to","type":"address","internalType":"address"},{"name":"_amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"DefaultPayeeUpdated","inputs":[{"name":"_payee","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"DeflationaryPercentageUpdated","inputs":[{"name":"_percentage","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"DiscountPercentageUpdated","inputs":[{"name":"_percentage","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"PeriodLengthUpdated","inputs":[{"name":"_periodLength","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ResolverUpdated","inputs":[{"name":"_resolver","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"ReverseRegistrarUpdated","inputs":[{"name":"_percentage","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"SetSwapPool","inputs":[{"name":"_uniswapPool","type":"address","indexed":false,"internalType":"address"},{"name":"_token","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"error","name":"InsufficientRareAllowance","inputs":[]},{"type":"error","name":"InvalidPool","inputs":[]},{"type":"error","name":"PercentageBeyondLimit","inputs":[]},{"type":"error","name":"PeriodLengthBeyondLimit","inputs":[]},{"type":"error","name":"RenouncingAdmin","inputs":[]},{"type":"error","name":"StakingContractAlreadyExists","inputs":[]},{"type":"error","name":"Unauthorized","inputs":[]},{"type":"error","name":"ZeroAddressUnsupported","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"ENS_SETTER_ROLE()":"c2544987","STAKING_CONFIG_SETTER_ROLE()":"a4303a45","STAKING_INFO_SETTER_ROLE()":"265718b4","STAKING_STAT_SETTER_ADMIN_ROLE()":"29b4a590","STAKING_STAT_SETTER_ROLE()":"66951bc1","SWAP_POOL_SETTER_ROLE()":"363227e5","decreaseAmountStaked(address,address,uint256)":"cac7c65c","getDefaultPayee()":"10da95e6","getDeflationaryPercentage()":"f7ef8ead","getDiscountPercentage()":"111029b9","getPeriodLength()":"8469ddc7","getRareAddress()":"2210d525","getRewardAccumulatorAddressForUser(address)":"e286ef33","getStakingAddressForUser(address)":"81d0606b","getStakingInfoForUser(address)":"f24bd8a6","getSwapPool(address)":"039bcf8e","getTotalAmountStakedByUser(address)":"06c571d5","getTotalAmountStakedOnUser(address)":"3d867d95","getUsersForStakingAddresses(address[])":"18ab58ac","getWethAddress()":"23a7b42a","increaseAmountStaked(address,address,uint256)":"2608ff35","setDefaultPayee(address)":"99247be7","setDeflationaryPercentage(uint256)":"cb8af2b5","setDiscountPercentage(uint256)":"b3428d15","setPeriodLength(uint256)":"1c5633d7","setResolver(address)":"4e543b26","setReverseRegistrar(address)":"557499ba","setStakingAddresses(address,address,address)":"76a250a7","setSwapPool(address,address)":"46ccbb40","transferRareFrom(address,address,uint256)":"81910e33"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InsufficientRareAllowance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPool\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PercentageBeyondLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PeriodLengthBeyondLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RenouncingAdmin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StakingContractAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddressUnsupported\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_payee\",\"type\":\"address\"}],\"name\":\"DefaultPayeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_percentage\",\"type\":\"uint256\"}],\"name\":\"DeflationaryPercentageUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_percentage\",\"type\":\"uint256\"}],\"name\":\"DiscountPercentageUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_periodLength\",\"type\":\"uint256\"}],\"name\":\"PeriodLengthUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_resolver\",\"type\":\"address\"}],\"name\":\"ResolverUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_percentage\",\"type\":\"address\"}],\"name\":\"ReverseRegistrarUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_uniswapPool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"SetSwapPool\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ENS_SETTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKING_CONFIG_SETTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKING_INFO_SETTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKING_STAT_SETTER_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKING_STAT_SETTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SWAP_POOL_SETTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakedOn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"decreaseAmountStaked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultPayee\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeflationaryPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDiscountPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPeriodLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRareAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getRewardAccumulatorAddressForUser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getStakingAddressForUser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getStakingInfoForUser\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"stakingAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardAddress\",\"type\":\"address\"}],\"internalType\":\"struct IRareStakingRegistry.Info\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getSwapPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getTotalAmountStakedByUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getTotalAmountStakedOnUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_stakingAddrs\",\"type\":\"address[]\"}],\"name\":\"getUsersForStakingAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWethAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakedOn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"increaseAmountStaked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_payee\",\"type\":\"address\"}],\"name\":\"setDefaultPayee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_percentage\",\"type\":\"uint256\"}],\"name\":\"setDeflationaryPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_percentage\",\"type\":\"uint256\"}],\"name\":\"setDiscountPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_periodLength\",\"type\":\"uint256\"}],\"name\":\"setPeriodLength\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_resolver\",\"type\":\"address\"}],\"name\":\"setResolver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reverseRegistrar\",\"type\":\"address\"}],\"name\":\"setReverseRegistrar\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakingAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardSwapAddress\",\"type\":\"address\"}],\"name\":\"setStakingAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_uniswapPool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setSwapPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferRareFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"koloz, charlescrain\",\"kind\":\"dev\",\"methods\":{\"ENS_SETTER_ROLE()\":{\"returns\":{\"_0\":\"bytes32 value of the ens setter role.\"}},\"STAKING_CONFIG_SETTER_ROLE()\":{\"returns\":{\"_0\":\"bytes32 value of the staking config setter role.\"}},\"STAKING_INFO_SETTER_ROLE()\":{\"returns\":{\"_0\":\"bytes32 value of the staking info setter role.\"}},\"STAKING_STAT_SETTER_ADMIN_ROLE()\":{\"returns\":{\"_0\":\"bytes32 value of the staking stat setter admin role.\"}},\"STAKING_STAT_SETTER_ROLE()\":{\"returns\":{\"_0\":\"bytes32 value of the stat setter role.\"}},\"SWAP_POOL_SETTER_ROLE()\":{\"returns\":{\"_0\":\"bytes32 value of the swap pool setter role.\"}},\"decreaseAmountStaked(address,address,uint256)\":{\"params\":{\"_amount\":\"The amount of $RARE that has been unstaked.\",\"_stakedOn\":\"The user who was being staked on.\",\"_staker\":\"The user who is unstaking.\"}},\"getDefaultPayee()\":{\"returns\":{\"_0\":\"address to send rewards to.\"}},\"getDeflationaryPercentage()\":{\"returns\":{\"_0\":\"uint256 deflationary percentage.\"}},\"getDiscountPercentage()\":{\"returns\":{\"_0\":\"uint256  discount percentage.\"}},\"getPeriodLength()\":{\"returns\":{\"_0\":\"uint256 period length.\"}},\"getRareAddress()\":{\"returns\":{\"_0\":\"address Address of $RARE (the staking token to be used).\"}},\"getRewardAccumulatorAddressForUser(address)\":{\"params\":{\"_user\":\"Address of user being queried.\"},\"returns\":{\"_0\":\"address Reward accumulator address.\"}},\"getStakingAddressForUser(address)\":{\"params\":{\"_user\":\"Address of user being queried.\"},\"returns\":{\"_0\":\"address staking address.\"}},\"getStakingInfoForUser(address)\":{\"params\":{\"_user\":\"Address of user being queried.\"},\"returns\":{\"_0\":\"Info struct containing name, symbol, staking address, and reward accumulator address.\"}},\"getSwapPool(address)\":{\"returns\":{\"_0\":\"address of the swap pool associated with the token.\"}},\"getTotalAmountStakedByUser(address)\":{\"params\":{\"_user\":\"Address of the user staking.\"},\"returns\":{\"_0\":\"uint256 Amount of rare the user is staking.\"}},\"getTotalAmountStakedOnUser(address)\":{\"params\":{\"_user\":\"Address of the user being staked on.\"},\"returns\":{\"_0\":\"uint256 Amount of rare being staked on the user.\"}},\"getUsersForStakingAddresses(address[])\":{\"params\":{\"_stakingAddrs\":\"Addresses of staking contracts being queried.\"}},\"getWethAddress()\":{\"returns\":{\"_0\":\"address Address of Wrapped Ethereum.\"}},\"increaseAmountStaked(address,address,uint256)\":{\"params\":{\"_amount\":\"The amount of $RARE that has been staked.\",\"_stakedOn\":\"The user who is being staked on.\",\"_staker\":\"The user who is staking.\"}},\"setDefaultPayee(address)\":{\"params\":{\"_payee\":\"Address of the account to be the new default payee.\"}},\"setDeflationaryPercentage(uint256)\":{\"params\":{\"_percentage\":\"The new deflactionary percentage.\"}},\"setDiscountPercentage(uint256)\":{\"params\":{\"_percentage\":\"The new discount percentage.\"}},\"setPeriodLength(uint256)\":{\"params\":{\"_periodLength\":\"The new period start.\"}},\"setResolver(address)\":{\"params\":{\"_resolver\":\"The new period start.\"}},\"setReverseRegistrar(address)\":{\"params\":{\"_reverseRegistrar\":\"The new period start.\"}},\"setStakingAddresses(address,address,address)\":{\"params\":{\"_rewardSwapAddress\":\"Address of the reward swap contract.\",\"_stakingAddress\":\"Address of the staking pool contract.\",\"_user\":\"Address of the target whose staking address is being set.\"}},\"setSwapPool(address,address)\":{\"params\":{\"_token\":\"Address of  ERC20 contract.\",\"_uniswapPool\":\"Address of  uniswap pool.\"}},\"transferRareFrom(address,address,uint256)\":{\"params\":{\"_amount\":\"uint256 amount to transfer.\",\"_from\":\"Address to transfer the tokens from.\",\"_to\":\"Address to transfer the tokens to.\"}}},\"title\":\"IRareStakingRegistry\",\"version\":1},\"userdoc\":{\"errors\":{\"InsufficientRareAllowance()\":[{\"notice\":\"Error emitted in {transferRareFrom} when a user performs an action that requires moving $RARE but has not made enough allowance for the registry.\"}],\"InvalidPool()\":[{\"notice\":\"Emitted via {setSwapPool} if the pool doesn't match the token and pairs with WETH.\"}],\"PercentageBeyondLimit()\":[{\"notice\":\"Emitted when a percentage is beyond the specified limit.\"}],\"PeriodLengthBeyondLimit()\":[{\"notice\":\"Emitted when a Period Length is beyond the specified limit.\"}],\"RenouncingAdmin()\":[{\"notice\":\"Emitted when renouncing the admin role and no other account has the role.\"}],\"StakingContractAlreadyExists()\":[{\"notice\":\"Emitted via {setStakingAddress} if the user already has a staking address.\"}],\"Unauthorized()\":[{\"notice\":\"Emitted when guarded functions are called by users without the necessary permissions.\"}],\"ZeroAddressUnsupported()\":[{\"notice\":\"Emitted when Zero address provided where it is not allowed.\"}]},\"events\":{\"DefaultPayeeUpdated(address)\":{\"notice\":\"Emitted via {setDefaultPayee} when the defaultPayee is updated.\"},\"DeflationaryPercentageUpdated(uint256)\":{\"notice\":\"Emitted via {setDeflationaryPercentage} when the deflationaryPercentage is updated.\"},\"DiscountPercentageUpdated(uint256)\":{\"notice\":\"Emitted via {setDiscountPercentage} when the discountedPercent is updated.\"},\"PeriodLengthUpdated(uint256)\":{\"notice\":\"Emitted via {setPeriodLength} when the periodLength is updated.\"},\"ResolverUpdated(address)\":{\"notice\":\"Emitted via {setResolver} when the ENS resolver is updated.\"},\"ReverseRegistrarUpdated(address)\":{\"notice\":\"Emitted via {setReverseRegistrar} when the ENS reverse registrar is updated.\"},\"SetSwapPool(address,address)\":{\"notice\":\"Emitted via {setSwapPool} when a new swap pool has been set.\"}},\"kind\":\"user\",\"methods\":{\"ENS_SETTER_ROLE()\":{\"notice\":\"Bytes32 representation of the role used for updating the ENS resolvers.\"},\"STAKING_CONFIG_SETTER_ROLE()\":{\"notice\":\"Bytes32 representation of the role used for period length, deflationary percentages, and the default payee.\"},\"STAKING_INFO_SETTER_ROLE()\":{\"notice\":\"Bytes32 representation of the role used for setting the staking address of a user.\"},\"STAKING_STAT_SETTER_ADMIN_ROLE()\":{\"notice\":\"Bytes32 representation of the admin role for granting the ability to set amount staked for a single user/total amount staked on a user.\"},\"STAKING_STAT_SETTER_ROLE()\":{\"notice\":\"Bytes32 representation of the role used for updating the amount being staked on a user/amount a user is staking globally.\"},\"SWAP_POOL_SETTER_ROLE()\":{\"notice\":\"Bytes32 representation of the role used for updating uniswap pools.\"},\"decreaseAmountStaked(address,address,uint256)\":{\"notice\":\"Decrease the amount staked when a user unstakes.\"},\"getDefaultPayee()\":{\"notice\":\"Get the address for sending rewards if there are no stakers.\"},\"getDeflationaryPercentage()\":{\"notice\":\"Get the unstake deflationary percentage.\"},\"getDiscountPercentage()\":{\"notice\":\"Get reward swap discount percentage.\"},\"getPeriodLength()\":{\"notice\":\"Get the round period length.\"},\"getRareAddress()\":{\"notice\":\"Retrieve the address of $RARE.\"},\"getRewardAccumulatorAddressForUser(address)\":{\"notice\":\"Retrieves the reward accumulator address for a given user.\"},\"getStakingAddressForUser(address)\":{\"notice\":\"Retrieves the staking address for a given user.\"},\"getStakingInfoForUser(address)\":{\"notice\":\"Retrieves the staking info for a given user.\"},\"getSwapPool(address)\":{\"notice\":\"Get the swap pool address for the ERC20 token.\"},\"getTotalAmountStakedByUser(address)\":{\"notice\":\"Retrieves the total amount of rare staked by a given user.\"},\"getTotalAmountStakedOnUser(address)\":{\"notice\":\"Retrieves the total amount of rare being staked on a given user.\"},\"getUsersForStakingAddresses(address[])\":{\"notice\":\"Query the users for the following staking addresseses.\"},\"getWethAddress()\":{\"notice\":\"Retrieve the address of Wrapped Ethereum.\"},\"increaseAmountStaked(address,address,uint256)\":{\"notice\":\"Increase amount staked when a user stakes.\"},\"setDefaultPayee(address)\":{\"notice\":\"Set the default payee.\"},\"setDeflationaryPercentage(uint256)\":{\"notice\":\"Set the unstake deflationary percentage.\"},\"setDiscountPercentage(uint256)\":{\"notice\":\"Set the reward swap discount percentage.\"},\"setPeriodLength(uint256)\":{\"notice\":\"Set the round period length time.\"},\"setResolver(address)\":{\"notice\":\"Set the ENS resolver address.\"},\"setReverseRegistrar(address)\":{\"notice\":\"Set the ENS reverse registrar address.\"},\"setStakingAddresses(address,address,address)\":{\"notice\":\"Set staking addresses for a target.\"},\"setSwapPool(address,address)\":{\"notice\":\"Set the uniswap pool address for the given ERC20 token.\"},\"transferRareFrom(address,address,uint256)\":{\"notice\":\"Pools to transfer $RARE tokens, usually into pools. This is so users only need to approve the registry when staking or performing reward swaps.\"}},\"notice\":\"The Staking Registry interface containing all functions, events, etc.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/staking/registry/IRareStakingRegistry.sol\":\"IRareStakingRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/buffer/=lib/buffer/\",\":@ensdomains/ens-contracts/=lib/ens-contracts/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/contracts/\",\":@uniswap/v3-core/contracts/=lib/v3-core/contracts/\",\":@uniswap/v3-periphery/=lib/v3-periphery/contracts/\",\":arachnid/solidity-stringutils/=lib/solidity-stringutils/\",\":ds-test/=lib/ds-test/src/\",\":ensdomains/ens-contracts/=lib/ensdomains/ens-contracts/contracts/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":rareprotocol/assets/=lib/assets/src/\",\":rareprotocol/aux/=src/\",\":royalty-guard/=lib/royalty-guard/src/royalty-guard/\",\":royalty-registry-solidity/=lib/royalty-registry-solidity/contracts/\",\":royalty-registry/=lib/royalty-registry-solidity/contracts/\",\":solmate/=lib/solmate/src/\"],\"viaIR\":true},\"sources\":{\"src/staking/registry/IRareStakingRegistry.sol\":{\"keccak256\":\"0x26458c277ad3b3280dbedd7dbfdfbaa8d2af5f6180959ef732cbcec78b6c2924\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5ba0ab87bedec5547531b79c123233dfcbdf9062a860845d242ae518e6ff8d6\",\"dweb:/ipfs/QmT4kZV7MjKwevN2ABFRD7tNnXRkUxJqNKyrXxthfWC5mR\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.18+commit.87f61d96"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"InsufficientRareAllowance"},{"inputs":[],"type":"error","name":"InvalidPool"},{"inputs":[],"type":"error","name":"PercentageBeyondLimit"},{"inputs":[],"type":"error","name":"PeriodLengthBeyondLimit"},{"inputs":[],"type":"error","name":"RenouncingAdmin"},{"inputs":[],"type":"error","name":"StakingContractAlreadyExists"},{"inputs":[],"type":"error","name":"Unauthorized"},{"inputs":[],"type":"error","name":"ZeroAddressUnsupported"},{"inputs":[{"internalType":"address","name":"_payee","type":"address","indexed":false}],"type":"event","name":"DefaultPayeeUpdated","anonymous":false},{"inputs":[{"internalType":"uint256","name":"_percentage","type":"uint256","indexed":false}],"type":"event","name":"DeflationaryPercentageUpdated","anonymous":false},{"inputs":[{"internalType":"uint256","name":"_percentage","type":"uint256","indexed":false}],"type":"event","name":"DiscountPercentageUpdated","anonymous":false},{"inputs":[{"internalType":"uint256","name":"_periodLength","type":"uint256","indexed":false}],"type":"event","name":"PeriodLengthUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"_resolver","type":"address","indexed":false}],"type":"event","name":"ResolverUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"_percentage","type":"address","indexed":false}],"type":"event","name":"ReverseRegistrarUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"_uniswapPool","type":"address","indexed":false},{"internalType":"address","name":"_token","type":"address","indexed":false}],"type":"event","name":"SetSwapPool","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"ENS_SETTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"STAKING_CONFIG_SETTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"STAKING_INFO_SETTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"STAKING_STAT_SETTER_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"STAKING_STAT_SETTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"SWAP_POOL_SETTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"_staker","type":"address"},{"internalType":"address","name":"_stakedOn","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"decreaseAmountStaked"},{"inputs":[],"stateMutability":"view","type":"function","name":"getDefaultPayee","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getDeflationaryPercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getDiscountPercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getPeriodLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getRareAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"stateMutability":"view","type":"function","name":"getRewardAccumulatorAddressForUser","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"stateMutability":"view","type":"function","name":"getStakingAddressForUser","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"stateMutability":"view","type":"function","name":"getStakingInfoForUser","outputs":[{"internalType":"struct IRareStakingRegistry.Info","name":"","type":"tuple","components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"address","name":"stakingAddress","type":"address"},{"internalType":"address","name":"rewardAddress","type":"address"}]}]},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"stateMutability":"view","type":"function","name":"getSwapPool","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"stateMutability":"view","type":"function","name":"getTotalAmountStakedByUser","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"stateMutability":"view","type":"function","name":"getTotalAmountStakedOnUser","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address[]","name":"_stakingAddrs","type":"address[]"}],"stateMutability":"view","type":"function","name":"getUsersForStakingAddresses","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getWethAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"_staker","type":"address"},{"internalType":"address","name":"_stakedOn","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"increaseAmountStaked"},{"inputs":[{"internalType":"address","name":"_payee","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setDefaultPayee"},{"inputs":[{"internalType":"uint256","name":"_percentage","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setDeflationaryPercentage"},{"inputs":[{"internalType":"uint256","name":"_percentage","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setDiscountPercentage"},{"inputs":[{"internalType":"uint256","name":"_periodLength","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setPeriodLength"},{"inputs":[{"internalType":"address","name":"_resolver","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setResolver"},{"inputs":[{"internalType":"address","name":"_reverseRegistrar","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setReverseRegistrar"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"address","name":"_stakingAddress","type":"address"},{"internalType":"address","name":"_rewardSwapAddress","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setStakingAddresses"},{"inputs":[{"internalType":"address","name":"_uniswapPool","type":"address"},{"internalType":"address","name":"_token","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setSwapPool"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transferRareFrom"}],"devdoc":{"kind":"dev","methods":{"ENS_SETTER_ROLE()":{"returns":{"_0":"bytes32 value of the ens setter role."}},"STAKING_CONFIG_SETTER_ROLE()":{"returns":{"_0":"bytes32 value of the staking config setter role."}},"STAKING_INFO_SETTER_ROLE()":{"returns":{"_0":"bytes32 value of the staking info setter role."}},"STAKING_STAT_SETTER_ADMIN_ROLE()":{"returns":{"_0":"bytes32 value of the staking stat setter admin role."}},"STAKING_STAT_SETTER_ROLE()":{"returns":{"_0":"bytes32 value of the stat setter role."}},"SWAP_POOL_SETTER_ROLE()":{"returns":{"_0":"bytes32 value of the swap pool setter role."}},"decreaseAmountStaked(address,address,uint256)":{"params":{"_amount":"The amount of $RARE that has been unstaked.","_stakedOn":"The user who was being staked on.","_staker":"The user who is unstaking."}},"getDefaultPayee()":{"returns":{"_0":"address to send rewards to."}},"getDeflationaryPercentage()":{"returns":{"_0":"uint256 deflationary percentage."}},"getDiscountPercentage()":{"returns":{"_0":"uint256  discount percentage."}},"getPeriodLength()":{"returns":{"_0":"uint256 period length."}},"getRareAddress()":{"returns":{"_0":"address Address of $RARE (the staking token to be used)."}},"getRewardAccumulatorAddressForUser(address)":{"params":{"_user":"Address of user being queried."},"returns":{"_0":"address Reward accumulator address."}},"getStakingAddressForUser(address)":{"params":{"_user":"Address of user being queried."},"returns":{"_0":"address staking address."}},"getStakingInfoForUser(address)":{"params":{"_user":"Address of user being queried."},"returns":{"_0":"Info struct containing name, symbol, staking address, and reward accumulator address."}},"getSwapPool(address)":{"returns":{"_0":"address of the swap pool associated with the token."}},"getTotalAmountStakedByUser(address)":{"params":{"_user":"Address of the user staking."},"returns":{"_0":"uint256 Amount of rare the user is staking."}},"getTotalAmountStakedOnUser(address)":{"params":{"_user":"Address of the user being staked on."},"returns":{"_0":"uint256 Amount of rare being staked on the user."}},"getUsersForStakingAddresses(address[])":{"params":{"_stakingAddrs":"Addresses of staking contracts being queried."}},"getWethAddress()":{"returns":{"_0":"address Address of Wrapped Ethereum."}},"increaseAmountStaked(address,address,uint256)":{"params":{"_amount":"The amount of $RARE that has been staked.","_stakedOn":"The user who is being staked on.","_staker":"The user who is staking."}},"setDefaultPayee(address)":{"params":{"_payee":"Address of the account to be the new default payee."}},"setDeflationaryPercentage(uint256)":{"params":{"_percentage":"The new deflactionary percentage."}},"setDiscountPercentage(uint256)":{"params":{"_percentage":"The new discount percentage."}},"setPeriodLength(uint256)":{"params":{"_periodLength":"The new period start."}},"setResolver(address)":{"params":{"_resolver":"The new period start."}},"setReverseRegistrar(address)":{"params":{"_reverseRegistrar":"The new period start."}},"setStakingAddresses(address,address,address)":{"params":{"_rewardSwapAddress":"Address of the reward swap contract.","_stakingAddress":"Address of the staking pool contract.","_user":"Address of the target whose staking address is being set."}},"setSwapPool(address,address)":{"params":{"_token":"Address of  ERC20 contract.","_uniswapPool":"Address of  uniswap pool."}},"transferRareFrom(address,address,uint256)":{"params":{"_amount":"uint256 amount to transfer.","_from":"Address to transfer the tokens from.","_to":"Address to transfer the tokens to."}}},"version":1},"userdoc":{"kind":"user","methods":{"ENS_SETTER_ROLE()":{"notice":"Bytes32 representation of the role used for updating the ENS resolvers."},"STAKING_CONFIG_SETTER_ROLE()":{"notice":"Bytes32 representation of the role used for period length, deflationary percentages, and the default payee."},"STAKING_INFO_SETTER_ROLE()":{"notice":"Bytes32 representation of the role used for setting the staking address of a user."},"STAKING_STAT_SETTER_ADMIN_ROLE()":{"notice":"Bytes32 representation of the admin role for granting the ability to set amount staked for a single user/total amount staked on a user."},"STAKING_STAT_SETTER_ROLE()":{"notice":"Bytes32 representation of the role used for updating the amount being staked on a user/amount a user is staking globally."},"SWAP_POOL_SETTER_ROLE()":{"notice":"Bytes32 representation of the role used for updating uniswap pools."},"decreaseAmountStaked(address,address,uint256)":{"notice":"Decrease the amount staked when a user unstakes."},"getDefaultPayee()":{"notice":"Get the address for sending rewards if there are no stakers."},"getDeflationaryPercentage()":{"notice":"Get the unstake deflationary percentage."},"getDiscountPercentage()":{"notice":"Get reward swap discount percentage."},"getPeriodLength()":{"notice":"Get the round period length."},"getRareAddress()":{"notice":"Retrieve the address of $RARE."},"getRewardAccumulatorAddressForUser(address)":{"notice":"Retrieves the reward accumulator address for a given user."},"getStakingAddressForUser(address)":{"notice":"Retrieves the staking address for a given user."},"getStakingInfoForUser(address)":{"notice":"Retrieves the staking info for a given user."},"getSwapPool(address)":{"notice":"Get the swap pool address for the ERC20 token."},"getTotalAmountStakedByUser(address)":{"notice":"Retrieves the total amount of rare staked by a given user."},"getTotalAmountStakedOnUser(address)":{"notice":"Retrieves the total amount of rare being staked on a given user."},"getUsersForStakingAddresses(address[])":{"notice":"Query the users for the following staking addresseses."},"getWethAddress()":{"notice":"Retrieve the address of Wrapped Ethereum."},"increaseAmountStaked(address,address,uint256)":{"notice":"Increase amount staked when a user stakes."},"setDefaultPayee(address)":{"notice":"Set the default payee."},"setDeflationaryPercentage(uint256)":{"notice":"Set the unstake deflationary percentage."},"setDiscountPercentage(uint256)":{"notice":"Set the reward swap discount percentage."},"setPeriodLength(uint256)":{"notice":"Set the round period length time."},"setResolver(address)":{"notice":"Set the ENS resolver address."},"setReverseRegistrar(address)":{"notice":"Set the ENS reverse registrar address."},"setStakingAddresses(address,address,address)":{"notice":"Set staking addresses for a target."},"setSwapPool(address,address)":{"notice":"Set the uniswap pool address for the given ERC20 token."},"transferRareFrom(address,address,uint256)":{"notice":"Pools to transfer $RARE tokens, usually into pools. This is so users only need to approve the registry when staking or performing reward swaps."}},"version":1}},"settings":{"remappings":["@ensdomains/buffer/=lib/buffer/","@ensdomains/ens-contracts/=lib/ens-contracts/contracts/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@uniswap/v3-core/=lib/v3-core/contracts/","@uniswap/v3-core/contracts/=lib/v3-core/contracts/","@uniswap/v3-periphery/=lib/v3-periphery/contracts/","arachnid/solidity-stringutils/=lib/solidity-stringutils/","ds-test/=lib/ds-test/src/","ensdomains/ens-contracts/=lib/ensdomains/ens-contracts/contracts/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/","rareprotocol/assets/=lib/assets/src/","rareprotocol/aux/=src/","royalty-guard/=lib/royalty-guard/src/royalty-guard/","royalty-registry-solidity/=lib/royalty-registry-solidity/contracts/","royalty-registry/=lib/royalty-registry-solidity/contracts/","solmate/=lib/solmate/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/staking/registry/IRareStakingRegistry.sol":"IRareStakingRegistry"},"evmVersion":"paris","libraries":{},"viaIR":true},"sources":{"src/staking/registry/IRareStakingRegistry.sol":{"keccak256":"0x26458c277ad3b3280dbedd7dbfdfbaa8d2af5f6180959ef732cbcec78b6c2924","urls":["bzz-raw://e5ba0ab87bedec5547531b79c123233dfcbdf9062a860845d242ae518e6ff8d6","dweb:/ipfs/QmT4kZV7MjKwevN2ABFRD7tNnXRkUxJqNKyrXxthfWC5mR"],"license":"MIT"}},"version":1},"id":40}
