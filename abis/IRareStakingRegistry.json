{
  "abi": [
    {
      "inputs": [],
      "name": "InsufficientRareAllowance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidPool",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PercentageBeyondLimit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PeriodLengthBeyondLimit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "StakingContractAlreadyExists",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Unauthorized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroAddressUnsupported",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_percentage",
          "type": "uint256"
        }
      ],
      "name": "ClaimerPercentageUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_payee",
          "type": "address"
        }
      ],
      "name": "DefaultPayeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_percentage",
          "type": "uint256"
        }
      ],
      "name": "DeflationaryPercentageUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_percentage",
          "type": "uint256"
        }
      ],
      "name": "DiscountPercentageUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_periodLength",
          "type": "uint256"
        }
      ],
      "name": "PeriodLengthUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_resolver",
          "type": "address"
        }
      ],
      "name": "ResolverUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_percentage",
          "type": "address"
        }
      ],
      "name": "ReverseRegistrarUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_uniswapPool",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "SetSwapPool",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_percentage",
          "type": "uint256"
        }
      ],
      "name": "StakeePercentageUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ENS_SETTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STAKING_CONFIG_SETTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STAKING_INFO_SETTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STAKING_STAT_SETTER_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STAKING_STAT_SETTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SWAP_POOL_SETTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_staker",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_stakedOn",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "decreaseAmountStaked",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllStakedOn",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllStakers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllStakingContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getClaimerPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultPayee",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDeflationaryPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDiscountPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPeriodLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRareAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getStakeePercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getStakingInfoForUser",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "stakingAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "rewardAddress",
              "type": "address"
            }
          ],
          "internalType": "struct IRareStakingRegistry.Info",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getSwapPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getTotalAmountStakedByUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getTotalAmountStakedOnUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_stakingAddrs",
          "type": "address[]"
        }
      ],
      "name": "getUsersForStakingAddresses",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getWethAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_staker",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_stakedOn",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "increaseAmountStaked",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_claimerPercentage",
          "type": "uint256"
        }
      ],
      "name": "setClaimerPercentage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_payee",
          "type": "address"
        }
      ],
      "name": "setDefaultPayee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_percentage",
          "type": "uint256"
        }
      ],
      "name": "setDeflationaryPercentage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_percentage",
          "type": "uint256"
        }
      ],
      "name": "setDiscountPercentage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_periodLength",
          "type": "uint256"
        }
      ],
      "name": "setPeriodLength",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_resolver",
          "type": "address"
        }
      ],
      "name": "setResolver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_reverseRegistrar",
          "type": "address"
        }
      ],
      "name": "setReverseRegistrar",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_stakeePercentage",
          "type": "uint256"
        }
      ],
      "name": "setStakeePercentage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_stakingAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rewardSwapAddress",
          "type": "address"
        }
      ],
      "name": "setStakingAddresses",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_uniswapPool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "setSwapPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transferRareTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "ENS_SETTER_ROLE()": "c2544987",
    "STAKING_CONFIG_SETTER_ROLE()": "a4303a45",
    "STAKING_INFO_SETTER_ROLE()": "265718b4",
    "STAKING_STAT_SETTER_ADMIN_ROLE()": "29b4a590",
    "STAKING_STAT_SETTER_ROLE()": "66951bc1",
    "SWAP_POOL_SETTER_ROLE()": "363227e5",
    "decreaseAmountStaked(address,address,uint256)": "cac7c65c",
    "getAllStakedOn()": "afda0dda",
    "getAllStakers()": "6e4f88c8",
    "getAllStakingContracts()": "b3a96ead",
    "getClaimerPercentage(address)": "d8f03c7f",
    "getDefaultPayee()": "10da95e6",
    "getDeflationaryPercentage()": "f7ef8ead",
    "getDiscountPercentage()": "111029b9",
    "getPeriodLength()": "8469ddc7",
    "getRareAddress()": "2210d525",
    "getStakeePercentage(address)": "399ebbe5",
    "getStakingInfoForUser(address)": "f24bd8a6",
    "getSwapPool(address)": "039bcf8e",
    "getTotalAmountStakedByUser(address)": "06c571d5",
    "getTotalAmountStakedOnUser(address)": "3d867d95",
    "getUsersForStakingAddresses(address[])": "18ab58ac",
    "getWethAddress()": "23a7b42a",
    "increaseAmountStaked(address,address,uint256)": "2608ff35",
    "setClaimerPercentage(uint256)": "125cb67c",
    "setDefaultPayee(address)": "99247be7",
    "setDeflationaryPercentage(uint256)": "cb8af2b5",
    "setDiscountPercentage(uint256)": "b3428d15",
    "setPeriodLength(uint256)": "1c5633d7",
    "setResolver(address)": "4e543b26",
    "setReverseRegistrar(address)": "557499ba",
    "setStakeePercentage(uint256)": "562b94c4",
    "setStakingAddresses(address,address,address)": "76a250a7",
    "setSwapPool(address,address)": "46ccbb40",
    "transferRareTo(address,address,uint256)": "7d6380b7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InsufficientRareAllowance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPool\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PercentageBeyondLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PeriodLengthBeyondLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StakingContractAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddressUnsupported\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_percentage\",\"type\":\"uint256\"}],\"name\":\"ClaimerPercentageUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_payee\",\"type\":\"address\"}],\"name\":\"DefaultPayeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_percentage\",\"type\":\"uint256\"}],\"name\":\"DeflationaryPercentageUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_percentage\",\"type\":\"uint256\"}],\"name\":\"DiscountPercentageUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_periodLength\",\"type\":\"uint256\"}],\"name\":\"PeriodLengthUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_resolver\",\"type\":\"address\"}],\"name\":\"ResolverUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_percentage\",\"type\":\"address\"}],\"name\":\"ReverseRegistrarUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_uniswapPool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"SetSwapPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_percentage\",\"type\":\"uint256\"}],\"name\":\"StakeePercentageUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ENS_SETTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKING_CONFIG_SETTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKING_INFO_SETTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKING_STAT_SETTER_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKING_STAT_SETTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SWAP_POOL_SETTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakedOn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"decreaseAmountStaked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllStakedOn\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllStakers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllStakingContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getClaimerPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultPayee\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeflationaryPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDiscountPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPeriodLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRareAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getStakeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getStakingInfoForUser\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"stakingAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardAddress\",\"type\":\"address\"}],\"internalType\":\"struct IRareStakingRegistry.Info\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getSwapPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getTotalAmountStakedByUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getTotalAmountStakedOnUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_stakingAddrs\",\"type\":\"address[]\"}],\"name\":\"getUsersForStakingAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWethAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakedOn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"increaseAmountStaked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimerPercentage\",\"type\":\"uint256\"}],\"name\":\"setClaimerPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_payee\",\"type\":\"address\"}],\"name\":\"setDefaultPayee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_percentage\",\"type\":\"uint256\"}],\"name\":\"setDeflationaryPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_percentage\",\"type\":\"uint256\"}],\"name\":\"setDiscountPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_periodLength\",\"type\":\"uint256\"}],\"name\":\"setPeriodLength\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_resolver\",\"type\":\"address\"}],\"name\":\"setResolver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reverseRegistrar\",\"type\":\"address\"}],\"name\":\"setReverseRegistrar\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_stakeePercentage\",\"type\":\"uint256\"}],\"name\":\"setStakeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakingAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardSwapAddress\",\"type\":\"address\"}],\"name\":\"setStakingAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_uniswapPool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setSwapPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferRareTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"koloz, charlescrain\",\"kind\":\"dev\",\"methods\":{\"ENS_SETTER_ROLE()\":{\"returns\":{\"_0\":\"bytes32 value of the ens setter role.\"}},\"STAKING_CONFIG_SETTER_ROLE()\":{\"returns\":{\"_0\":\"bytes32 value of the staking config setter role.\"}},\"STAKING_INFO_SETTER_ROLE()\":{\"returns\":{\"_0\":\"bytes32 value of the staking info setter role.\"}},\"STAKING_STAT_SETTER_ADMIN_ROLE()\":{\"returns\":{\"_0\":\"bytes32 value of the staking stat setter admin role.\"}},\"STAKING_STAT_SETTER_ROLE()\":{\"returns\":{\"_0\":\"bytes32 value of the stat setter role.\"}},\"SWAP_POOL_SETTER_ROLE()\":{\"returns\":{\"_0\":\"bytes32 value of the swap pool setter role.\"}},\"decreaseAmountStaked(address,address,uint256)\":{\"params\":{\"_amount\":\"The amount of $RARE that has been unstaked.\",\"_stakedOn\":\"The user who was being staked on.\",\"_staker\":\"The user who is unstaking.\"}},\"getAllStakedOn()\":{\"returns\":{\"_0\":\"list of addresses of all the users who are being staked on.\"}},\"getAllStakers()\":{\"returns\":{\"_0\":\"list of addresses of all the users who are currently staking.\"}},\"getAllStakingContracts()\":{\"returns\":{\"_0\":\"list of contracts users can use to stake.\"}},\"getClaimerPercentage(address)\":{\"params\":{\"_user\":\"Address of the user reawards are being claimed for.\"},\"returns\":{\"_0\":\"uint256 claimer percentage.\"}},\"getDefaultPayee()\":{\"returns\":{\"_0\":\"address to send rewards to.\"}},\"getDeflationaryPercentage()\":{\"returns\":{\"_0\":\"uint256 deflationary percentage.\"}},\"getDiscountPercentage()\":{\"returns\":{\"_0\":\"uint256  discount percentage.\"}},\"getPeriodLength()\":{\"returns\":{\"_0\":\"uint256 period length.\"}},\"getRareAddress()\":{\"returns\":{\"_0\":\"address Address of $RARE (the staking token to be used).\"}},\"getStakeePercentage(address)\":{\"params\":{\"_user\":\"Address of the user being staked on.\"},\"returns\":{\"_0\":\"uint256 stakee percentage.\"}},\"getStakingInfoForUser(address)\":{\"params\":{\"_user\":\"Address of user being queried.\"},\"returns\":{\"_0\":\"Info struct containing name, symbol, and staking address.\"}},\"getSwapPool(address)\":{\"returns\":{\"_0\":\"address of the swap pool associated with the token.\"}},\"getTotalAmountStakedByUser(address)\":{\"params\":{\"_user\":\"Address of the user staking.\"},\"returns\":{\"_0\":\"uint256 Amount of rare the user is staking.\"}},\"getTotalAmountStakedOnUser(address)\":{\"params\":{\"_user\":\"Address of the user being staked on.\"},\"returns\":{\"_0\":\"uint256 Amount of rare being staked on the user.\"}},\"getUsersForStakingAddresses(address[])\":{\"params\":{\"_stakingAddrs\":\"Addresses of staking contracts being queried.\"}},\"getWethAddress()\":{\"returns\":{\"_0\":\"address Address of Wrapped Ethereum.\"}},\"increaseAmountStaked(address,address,uint256)\":{\"params\":{\"_amount\":\"The amount of $RARE that has been staked.\",\"_stakedOn\":\"The user who is being staked on.\",\"_staker\":\"The user who is staking.\"}},\"setClaimerPercentage(uint256)\":{\"params\":{\"_claimerPercentage\":\"The new stakee percentage.\"}},\"setDefaultPayee(address)\":{\"params\":{\"_payee\":\"Address of the account to be the new default payee.\"}},\"setDeflationaryPercentage(uint256)\":{\"params\":{\"_percentage\":\"The new deflactionary percentage.\"}},\"setDiscountPercentage(uint256)\":{\"params\":{\"_percentage\":\"The new discount percentage.\"}},\"setPeriodLength(uint256)\":{\"params\":{\"_periodLength\":\"The new period start.\"}},\"setResolver(address)\":{\"params\":{\"_resolver\":\"The new period start.\"}},\"setReverseRegistrar(address)\":{\"params\":{\"_reverseRegistrar\":\"The new period start.\"}},\"setStakeePercentage(uint256)\":{\"params\":{\"_stakeePercentage\":\"The new stakee percentage.\"}},\"setStakingAddresses(address,address,address)\":{\"params\":{\"_rewardSwapAddress\":\"Address of the reward swap contract.\",\"_stakingAddress\":\"Address of the staking pool contract.\",\"_user\":\"Address of the target whose staking address is being set.\"}},\"setSwapPool(address,address)\":{\"params\":{\"_token\":\"Address of  ERC20 contract.\",\"_uniswapPool\":\"Address of  uniswap pool.\"}},\"transferRareTo(address,address,uint256)\":{\"params\":{\"_amount\":\"uint256 amount to transfer.\",\"_from\":\"Address to transfer the tokens from.\",\"_to\":\"Address to transfer the tokens to.\"}}},\"title\":\"IRareStakingRegistry\",\"version\":1},\"userdoc\":{\"errors\":{\"InsufficientRareAllowance()\":[{\"notice\":\"Error emitted in {transferRareTo} when a user performs an action that requires moving $RARE but has not made enough allowance for the registry.\"}],\"InvalidPool()\":[{\"notice\":\"Emitted via {setSwapPool} if the pool doesn't match the token and pairs with WETH.\"}],\"PercentageBeyondLimit()\":[{\"notice\":\"Emitted when a percentage is beyond the specified limit.\"}],\"PeriodLengthBeyondLimit()\":[{\"notice\":\"Emitted when a Period Length is beyond the specified limit.\"}],\"StakingContractAlreadyExists()\":[{\"notice\":\"Emitted via {setStakingAddress} if the user already has a staking address.\"}],\"Unauthorized()\":[{\"notice\":\"Emitted when guarded functions are called by users without the necessary permissions.\"}],\"ZeroAddressUnsupported()\":[{\"notice\":\"Emitted when Zero address provided where it is not allowed.\"}]},\"events\":{\"ClaimerPercentageUpdated(address,uint256)\":{\"notice\":\"Emitted via {setClaimerPercentage} when the stakee update's their percentage.\"},\"DefaultPayeeUpdated(address)\":{\"notice\":\"Emitted via {setDefaultPayee} when the defaultPayee is updated.\"},\"DeflationaryPercentageUpdated(uint256)\":{\"notice\":\"Emitted via {setDeflationaryPercentage} when the deflationaryPercentage is updated.\"},\"DiscountPercentageUpdated(uint256)\":{\"notice\":\"Emitted via {setDiscountPercentage} when the discountedPercent is updated.\"},\"PeriodLengthUpdated(uint256)\":{\"notice\":\"Emitted via {setPeriodLength} when the periodLength is updated.\"},\"ResolverUpdated(address)\":{\"notice\":\"Emitted via {setResolver} when the ENS resolver is updated.\"},\"ReverseRegistrarUpdated(address)\":{\"notice\":\"Emitted via {setReverseRegistrar} when the ENS reverse registrar is updated.\"},\"SetSwapPool(address,address)\":{\"notice\":\"Emitted via {setSwapPool} when a new swap pool has been set.\"},\"StakeePercentageUpdated(address,uint256)\":{\"notice\":\"Emitted via {setStakeePercentage} when the stakee update's their percentage.\"}},\"kind\":\"user\",\"methods\":{\"ENS_SETTER_ROLE()\":{\"notice\":\"Bytes32 representation of the role used for updating the ENS resolvers.\"},\"STAKING_CONFIG_SETTER_ROLE()\":{\"notice\":\"Bytes32 representation of the role used for period length, deflationary percentages, and the default payee.\"},\"STAKING_INFO_SETTER_ROLE()\":{\"notice\":\"Bytes32 representation of the role used for setting the staking address of a user.\"},\"STAKING_STAT_SETTER_ADMIN_ROLE()\":{\"notice\":\"Bytes32 representation of the admin role for granting the ability to set amount staked for a single user/total amount staked on a user.\"},\"STAKING_STAT_SETTER_ROLE()\":{\"notice\":\"Bytes32 representation of the role used for updating the amount being staked on a user/amount a user is staking globally.\"},\"SWAP_POOL_SETTER_ROLE()\":{\"notice\":\"Bytes32 representation of the role used for updating uniswap pools.\"},\"decreaseAmountStaked(address,address,uint256)\":{\"notice\":\"Decrease the amount staked when a user unstakes.\"},\"getAllStakedOn()\":{\"notice\":\"Retrieves a list of all the users being staked on.\"},\"getAllStakers()\":{\"notice\":\"Retrieves a list of all the users participating in staking.\"},\"getAllStakingContracts()\":{\"notice\":\"Retrieves a list of all the ERC20 staking contracts.\"},\"getClaimerPercentage(address)\":{\"notice\":\"Get the claimer percentage.\"},\"getDefaultPayee()\":{\"notice\":\"Get the address for sending rewards if there are no stakers.\"},\"getDeflationaryPercentage()\":{\"notice\":\"Get the unstake deflationary percentage.\"},\"getDiscountPercentage()\":{\"notice\":\"Get reward swap discount percentage.\"},\"getPeriodLength()\":{\"notice\":\"Get the round period length.\"},\"getRareAddress()\":{\"notice\":\"Retrieve the address of $RARE.\"},\"getStakeePercentage(address)\":{\"notice\":\"Get the stakee percentage.\"},\"getStakingInfoForUser(address)\":{\"notice\":\"Retrieves the staking info for a given user.\"},\"getSwapPool(address)\":{\"notice\":\"Get the swap pool address for the ERC20 token.\"},\"getTotalAmountStakedByUser(address)\":{\"notice\":\"Retrieves the total amount of rare staked by a given user.\"},\"getTotalAmountStakedOnUser(address)\":{\"notice\":\"Retrieves the total amount of rare being staked on a given user.\"},\"getUsersForStakingAddresses(address[])\":{\"notice\":\"Query the users for the following staking addresseses.\"},\"getWethAddress()\":{\"notice\":\"Retrieve the address of Wrapped Ethereum.\"},\"increaseAmountStaked(address,address,uint256)\":{\"notice\":\"Increase amount staked when a user stakes.\"},\"setClaimerPercentage(uint256)\":{\"notice\":\"Set claimer percentage.\"},\"setDefaultPayee(address)\":{\"notice\":\"Set the default payee.\"},\"setDeflationaryPercentage(uint256)\":{\"notice\":\"Set the unstake deflationary percentage.\"},\"setDiscountPercentage(uint256)\":{\"notice\":\"Set the reward swap discount percentage.\"},\"setPeriodLength(uint256)\":{\"notice\":\"Set the round period length time.\"},\"setResolver(address)\":{\"notice\":\"Set the ENS resolver address.\"},\"setReverseRegistrar(address)\":{\"notice\":\"Set the ENS reverse registrar address.\"},\"setStakeePercentage(uint256)\":{\"notice\":\"Set stakee percentage.\"},\"setStakingAddresses(address,address,address)\":{\"notice\":\"Set staking addresses for a target.\"},\"setSwapPool(address,address)\":{\"notice\":\"Set the uniswap pool address for the given ERC20 token.\"},\"transferRareTo(address,address,uint256)\":{\"notice\":\"Pools to transfer $RARE tokens, usually into pools. This is so users only need to approve the registry when staking or performing reward swaps.\"}},\"notice\":\"The Staking Registry interface containing all functions, events, etc.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/staking/registry/IRareStakingRegistry.sol\":\"IRareStakingRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/buffer/=lib/buffer/\",\":@ensdomains/ens-contracts/=lib/ens-contracts/contracts/\",\":@manifoldxyz/libraries-solidity/=lib/royalty-registry-solidity/lib/libraries-solidity/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/royalty-registry-solidity/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/royalty-registry-solidity/lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/contracts/\",\":@uniswap/v3-core/contracts/=lib/v3-core/contracts/\",\":@uniswap/v3-periphery/=lib/v3-periphery/contracts/\",\":arachnid/solidity-stringutils/=lib/solidity-stringutils/\",\":assets/=lib/assets/\",\":aux/=lib/aux/\",\":buffer/=lib/buffer/contracts/\",\":create2-helpers/=lib/royalty-registry-solidity/lib/create2-helpers/\",\":create2-scripts/=lib/royalty-registry-solidity/lib/create2-helpers/script/\",\":ds-test/=lib/ds-test/src/\",\":ens-contracts/=lib/ens-contracts/contracts/\",\":ensdomains/ens-contracts/=lib/ensdomains/ens-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":libraries-solidity/=lib/royalty-registry-solidity/lib/libraries-solidity/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":rareprotocol/assets/=lib/assets/src/\",\":rareprotocol/aux/=lib/aux/src/\",\":royalty-guard/=lib/aux/lib/royalty-guard/src/\",\":royalty-registry-solidity/=lib/royalty-registry-solidity/contracts/\",\":royalty-registry/=lib/royalty-registry-solidity/contracts/\",\":solidity-stringutils/=lib/solidity-stringutils/\",\":solmate/=lib/solmate/src/\",\":v3-core/=lib/v3-core/\",\":v3-periphery/=lib/v3-periphery/contracts/\"]},\"sources\":{\"src/staking/registry/IRareStakingRegistry.sol\":{\"keccak256\":\"0xc77c14fe766b3a8d5fc985a6f3abdd9e338aa6b9671b22caf06c9664aefda981\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e470d3b77fbac141c826ed2cf9e4829642a282e55b50e8f6fb35be8a630a8fa5\",\"dweb:/ipfs/Qmd54NwkoeHyVxMTMmmJzo5PrjNeh8DuFRRjy4LXaDevAP\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientRareAllowance"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidPool"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PercentageBeyondLimit"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PeriodLengthBeyondLimit"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "StakingContractAlreadyExists"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Unauthorized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroAddressUnsupported"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_percentage",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ClaimerPercentageUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_payee",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultPayeeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_percentage",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DeflationaryPercentageUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_percentage",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DiscountPercentageUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_periodLength",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PeriodLengthUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_resolver",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ResolverUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_percentage",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ReverseRegistrarUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_uniswapPool",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "_token",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetSwapPool",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_percentage",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StakeePercentageUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ENS_SETTER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "STAKING_CONFIG_SETTER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "STAKING_INFO_SETTER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "STAKING_STAT_SETTER_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "STAKING_STAT_SETTER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SWAP_POOL_SETTER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_staker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_stakedOn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAmountStaked"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllStakedOn",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllStakers",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllStakingContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getClaimerPercentage",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultPayee",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDeflationaryPercentage",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDiscountPercentage",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPeriodLength",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRareAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakeePercentage",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakingInfoForUser",
          "outputs": [
            {
              "internalType": "struct IRareStakingRegistry.Info",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "symbol",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "stakingAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "rewardAddress",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSwapPool",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTotalAmountStakedByUser",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTotalAmountStakedOnUser",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "_stakingAddrs",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUsersForStakingAddresses",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getWethAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_staker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_stakedOn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAmountStaked"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_claimerPercentage",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setClaimerPercentage"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_payee",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultPayee"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_percentage",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDeflationaryPercentage"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_percentage",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDiscountPercentage"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_periodLength",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPeriodLength"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_resolver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setResolver"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_reverseRegistrar",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setReverseRegistrar"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_stakeePercentage",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setStakeePercentage"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_stakingAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_rewardSwapAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setStakingAddresses"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_uniswapPool",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setSwapPool"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferRareTo"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "ENS_SETTER_ROLE()": {
            "returns": {
              "_0": "bytes32 value of the ens setter role."
            }
          },
          "STAKING_CONFIG_SETTER_ROLE()": {
            "returns": {
              "_0": "bytes32 value of the staking config setter role."
            }
          },
          "STAKING_INFO_SETTER_ROLE()": {
            "returns": {
              "_0": "bytes32 value of the staking info setter role."
            }
          },
          "STAKING_STAT_SETTER_ADMIN_ROLE()": {
            "returns": {
              "_0": "bytes32 value of the staking stat setter admin role."
            }
          },
          "STAKING_STAT_SETTER_ROLE()": {
            "returns": {
              "_0": "bytes32 value of the stat setter role."
            }
          },
          "SWAP_POOL_SETTER_ROLE()": {
            "returns": {
              "_0": "bytes32 value of the swap pool setter role."
            }
          },
          "decreaseAmountStaked(address,address,uint256)": {
            "params": {
              "_amount": "The amount of $RARE that has been unstaked.",
              "_stakedOn": "The user who was being staked on.",
              "_staker": "The user who is unstaking."
            }
          },
          "getAllStakedOn()": {
            "returns": {
              "_0": "list of addresses of all the users who are being staked on."
            }
          },
          "getAllStakers()": {
            "returns": {
              "_0": "list of addresses of all the users who are currently staking."
            }
          },
          "getAllStakingContracts()": {
            "returns": {
              "_0": "list of contracts users can use to stake."
            }
          },
          "getClaimerPercentage(address)": {
            "params": {
              "_user": "Address of the user reawards are being claimed for."
            },
            "returns": {
              "_0": "uint256 claimer percentage."
            }
          },
          "getDefaultPayee()": {
            "returns": {
              "_0": "address to send rewards to."
            }
          },
          "getDeflationaryPercentage()": {
            "returns": {
              "_0": "uint256 deflationary percentage."
            }
          },
          "getDiscountPercentage()": {
            "returns": {
              "_0": "uint256  discount percentage."
            }
          },
          "getPeriodLength()": {
            "returns": {
              "_0": "uint256 period length."
            }
          },
          "getRareAddress()": {
            "returns": {
              "_0": "address Address of $RARE (the staking token to be used)."
            }
          },
          "getStakeePercentage(address)": {
            "params": {
              "_user": "Address of the user being staked on."
            },
            "returns": {
              "_0": "uint256 stakee percentage."
            }
          },
          "getStakingInfoForUser(address)": {
            "params": {
              "_user": "Address of user being queried."
            },
            "returns": {
              "_0": "Info struct containing name, symbol, and staking address."
            }
          },
          "getSwapPool(address)": {
            "returns": {
              "_0": "address of the swap pool associated with the token."
            }
          },
          "getTotalAmountStakedByUser(address)": {
            "params": {
              "_user": "Address of the user staking."
            },
            "returns": {
              "_0": "uint256 Amount of rare the user is staking."
            }
          },
          "getTotalAmountStakedOnUser(address)": {
            "params": {
              "_user": "Address of the user being staked on."
            },
            "returns": {
              "_0": "uint256 Amount of rare being staked on the user."
            }
          },
          "getUsersForStakingAddresses(address[])": {
            "params": {
              "_stakingAddrs": "Addresses of staking contracts being queried."
            }
          },
          "getWethAddress()": {
            "returns": {
              "_0": "address Address of Wrapped Ethereum."
            }
          },
          "increaseAmountStaked(address,address,uint256)": {
            "params": {
              "_amount": "The amount of $RARE that has been staked.",
              "_stakedOn": "The user who is being staked on.",
              "_staker": "The user who is staking."
            }
          },
          "setClaimerPercentage(uint256)": {
            "params": {
              "_claimerPercentage": "The new stakee percentage."
            }
          },
          "setDefaultPayee(address)": {
            "params": {
              "_payee": "Address of the account to be the new default payee."
            }
          },
          "setDeflationaryPercentage(uint256)": {
            "params": {
              "_percentage": "The new deflactionary percentage."
            }
          },
          "setDiscountPercentage(uint256)": {
            "params": {
              "_percentage": "The new discount percentage."
            }
          },
          "setPeriodLength(uint256)": {
            "params": {
              "_periodLength": "The new period start."
            }
          },
          "setResolver(address)": {
            "params": {
              "_resolver": "The new period start."
            }
          },
          "setReverseRegistrar(address)": {
            "params": {
              "_reverseRegistrar": "The new period start."
            }
          },
          "setStakeePercentage(uint256)": {
            "params": {
              "_stakeePercentage": "The new stakee percentage."
            }
          },
          "setStakingAddresses(address,address,address)": {
            "params": {
              "_rewardSwapAddress": "Address of the reward swap contract.",
              "_stakingAddress": "Address of the staking pool contract.",
              "_user": "Address of the target whose staking address is being set."
            }
          },
          "setSwapPool(address,address)": {
            "params": {
              "_token": "Address of  ERC20 contract.",
              "_uniswapPool": "Address of  uniswap pool."
            }
          },
          "transferRareTo(address,address,uint256)": {
            "params": {
              "_amount": "uint256 amount to transfer.",
              "_from": "Address to transfer the tokens from.",
              "_to": "Address to transfer the tokens to."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "ENS_SETTER_ROLE()": {
            "notice": "Bytes32 representation of the role used for updating the ENS resolvers."
          },
          "STAKING_CONFIG_SETTER_ROLE()": {
            "notice": "Bytes32 representation of the role used for period length, deflationary percentages, and the default payee."
          },
          "STAKING_INFO_SETTER_ROLE()": {
            "notice": "Bytes32 representation of the role used for setting the staking address of a user."
          },
          "STAKING_STAT_SETTER_ADMIN_ROLE()": {
            "notice": "Bytes32 representation of the admin role for granting the ability to set amount staked for a single user/total amount staked on a user."
          },
          "STAKING_STAT_SETTER_ROLE()": {
            "notice": "Bytes32 representation of the role used for updating the amount being staked on a user/amount a user is staking globally."
          },
          "SWAP_POOL_SETTER_ROLE()": {
            "notice": "Bytes32 representation of the role used for updating uniswap pools."
          },
          "decreaseAmountStaked(address,address,uint256)": {
            "notice": "Decrease the amount staked when a user unstakes."
          },
          "getAllStakedOn()": {
            "notice": "Retrieves a list of all the users being staked on."
          },
          "getAllStakers()": {
            "notice": "Retrieves a list of all the users participating in staking."
          },
          "getAllStakingContracts()": {
            "notice": "Retrieves a list of all the ERC20 staking contracts."
          },
          "getClaimerPercentage(address)": {
            "notice": "Get the claimer percentage."
          },
          "getDefaultPayee()": {
            "notice": "Get the address for sending rewards if there are no stakers."
          },
          "getDeflationaryPercentage()": {
            "notice": "Get the unstake deflationary percentage."
          },
          "getDiscountPercentage()": {
            "notice": "Get reward swap discount percentage."
          },
          "getPeriodLength()": {
            "notice": "Get the round period length."
          },
          "getRareAddress()": {
            "notice": "Retrieve the address of $RARE."
          },
          "getStakeePercentage(address)": {
            "notice": "Get the stakee percentage."
          },
          "getStakingInfoForUser(address)": {
            "notice": "Retrieves the staking info for a given user."
          },
          "getSwapPool(address)": {
            "notice": "Get the swap pool address for the ERC20 token."
          },
          "getTotalAmountStakedByUser(address)": {
            "notice": "Retrieves the total amount of rare staked by a given user."
          },
          "getTotalAmountStakedOnUser(address)": {
            "notice": "Retrieves the total amount of rare being staked on a given user."
          },
          "getUsersForStakingAddresses(address[])": {
            "notice": "Query the users for the following staking addresseses."
          },
          "getWethAddress()": {
            "notice": "Retrieve the address of Wrapped Ethereum."
          },
          "increaseAmountStaked(address,address,uint256)": {
            "notice": "Increase amount staked when a user stakes."
          },
          "setClaimerPercentage(uint256)": {
            "notice": "Set claimer percentage."
          },
          "setDefaultPayee(address)": {
            "notice": "Set the default payee."
          },
          "setDeflationaryPercentage(uint256)": {
            "notice": "Set the unstake deflationary percentage."
          },
          "setDiscountPercentage(uint256)": {
            "notice": "Set the reward swap discount percentage."
          },
          "setPeriodLength(uint256)": {
            "notice": "Set the round period length time."
          },
          "setResolver(address)": {
            "notice": "Set the ENS resolver address."
          },
          "setReverseRegistrar(address)": {
            "notice": "Set the ENS reverse registrar address."
          },
          "setStakeePercentage(uint256)": {
            "notice": "Set stakee percentage."
          },
          "setStakingAddresses(address,address,address)": {
            "notice": "Set staking addresses for a target."
          },
          "setSwapPool(address,address)": {
            "notice": "Set the uniswap pool address for the given ERC20 token."
          },
          "transferRareTo(address,address,uint256)": {
            "notice": "Pools to transfer $RARE tokens, usually into pools. This is so users only need to approve the registry when staking or performing reward swaps."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/buffer/=lib/buffer/",
        ":@ensdomains/ens-contracts/=lib/ens-contracts/contracts/",
        ":@manifoldxyz/libraries-solidity/=lib/royalty-registry-solidity/lib/libraries-solidity/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@openzeppelin/contracts-upgradeable/=lib/royalty-registry-solidity/lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/royalty-registry-solidity/lib/openzeppelin-contracts/contracts/",
        ":@uniswap/v3-core/=lib/v3-core/contracts/",
        ":@uniswap/v3-core/contracts/=lib/v3-core/contracts/",
        ":@uniswap/v3-periphery/=lib/v3-periphery/contracts/",
        ":arachnid/solidity-stringutils/=lib/solidity-stringutils/",
        ":assets/=lib/assets/",
        ":aux/=lib/aux/",
        ":buffer/=lib/buffer/contracts/",
        ":create2-helpers/=lib/royalty-registry-solidity/lib/create2-helpers/",
        ":create2-scripts/=lib/royalty-registry-solidity/lib/create2-helpers/script/",
        ":ds-test/=lib/ds-test/src/",
        ":ens-contracts/=lib/ens-contracts/contracts/",
        ":ensdomains/ens-contracts/=lib/ensdomains/ens-contracts/contracts/",
        ":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":libraries-solidity/=lib/royalty-registry-solidity/lib/libraries-solidity/contracts/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":rareprotocol/assets/=lib/assets/src/",
        ":rareprotocol/aux/=lib/aux/src/",
        ":royalty-guard/=lib/aux/lib/royalty-guard/src/",
        ":royalty-registry-solidity/=lib/royalty-registry-solidity/contracts/",
        ":royalty-registry/=lib/royalty-registry-solidity/contracts/",
        ":solidity-stringutils/=lib/solidity-stringutils/",
        ":solmate/=lib/solmate/src/",
        ":v3-core/=lib/v3-core/",
        ":v3-periphery/=lib/v3-periphery/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/staking/registry/IRareStakingRegistry.sol": "IRareStakingRegistry"
      },
      "libraries": {}
    },
    "sources": {
      "src/staking/registry/IRareStakingRegistry.sol": {
        "keccak256": "0xc77c14fe766b3a8d5fc985a6f3abdd9e338aa6b9671b22caf06c9664aefda981",
        "urls": [
          "bzz-raw://e470d3b77fbac141c826ed2cf9e4829642a282e55b50e8f6fb35be8a630a8fa5",
          "dweb:/ipfs/Qmd54NwkoeHyVxMTMmmJzo5PrjNeh8DuFRRjy4LXaDevAP"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/staking/registry/IRareStakingRegistry.sol",
    "id": 47377,
    "exportedSymbols": {
      "IRareStakingRegistry": [
        47376
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:11568:111",
    "nodes": [
      {
        "id": 47045,
        "nodeType": "PragmaDirective",
        "src": "32:23:111",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 47376,
        "nodeType": "ContractDefinition",
        "src": "203:11396:111",
        "nodes": [
          {
            "id": 47055,
            "nodeType": "StructDefinition",
            "src": "601:108:111",
            "nodes": [],
            "canonicalName": "IRareStakingRegistry.Info",
            "members": [
              {
                "constant": false,
                "id": 47048,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "626:4:111",
                "nodeType": "VariableDeclaration",
                "scope": 47055,
                "src": "619:11:111",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 47047,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "619:6:111",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47050,
                "mutability": "mutable",
                "name": "symbol",
                "nameLocation": "643:6:111",
                "nodeType": "VariableDeclaration",
                "scope": 47055,
                "src": "636:13:111",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 47049,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "636:6:111",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47052,
                "mutability": "mutable",
                "name": "stakingAddress",
                "nameLocation": "663:14:111",
                "nodeType": "VariableDeclaration",
                "scope": 47055,
                "src": "655:22:111",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 47051,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "655:7:111",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 47054,
                "mutability": "mutable",
                "name": "rewardAddress",
                "nameLocation": "691:13:111",
                "nodeType": "VariableDeclaration",
                "scope": 47055,
                "src": "683:21:111",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 47053,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "683:7:111",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Info",
            "nameLocation": "608:4:111",
            "scope": 47376,
            "visibility": "public"
          },
          {
            "id": 47062,
            "nodeType": "EventDefinition",
            "src": "1000:74:111",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 47056,
              "nodeType": "StructuredDocumentation",
              "src": "909:88:111",
              "text": "@notice Emitted via {setStakeePercentage} when the stakee update's their percentage."
            },
            "eventSelector": "fc84a428923edfa3baecab93b8c5a4f4e5fca6af7ecf147d9880cfb2abfa1247",
            "name": "StakeePercentageUpdated",
            "nameLocation": "1006:23:111",
            "parameters": {
              "id": 47061,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47058,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "1046:5:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47062,
                  "src": "1030:21:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47057,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1030:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47060,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_percentage",
                  "nameLocation": "1061:11:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47062,
                  "src": "1053:19:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47059,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1053:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1029:44:111"
            }
          },
          {
            "id": 47069,
            "nodeType": "EventDefinition",
            "src": "1170:75:111",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 47063,
              "nodeType": "StructuredDocumentation",
              "src": "1078:89:111",
              "text": "@notice Emitted via {setClaimerPercentage} when the stakee update's their percentage."
            },
            "eventSelector": "0b30ce602b0c5b380fbf2ceb9d0103e4c8dabd60aaf250251e75635e1b516576",
            "name": "ClaimerPercentageUpdated",
            "nameLocation": "1176:24:111",
            "parameters": {
              "id": 47068,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47065,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "1217:5:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47069,
                  "src": "1201:21:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47064,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1201:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47067,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_percentage",
                  "nameLocation": "1232:11:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47069,
                  "src": "1224:19:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47066,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1224:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1200:44:111"
            }
          },
          {
            "id": 47074,
            "nodeType": "EventDefinition",
            "src": "1327:42:111",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 47070,
              "nodeType": "StructuredDocumentation",
              "src": "1249:75:111",
              "text": "@notice Emitted via {setDefaultPayee} when the defaultPayee is updated."
            },
            "eventSelector": "a37a7d6d9546ebba206b7200fd6814cc4885bd05277f43db31703508086bac5b",
            "name": "DefaultPayeeUpdated",
            "nameLocation": "1333:19:111",
            "parameters": {
              "id": 47073,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47072,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_payee",
                  "nameLocation": "1361:6:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47074,
                  "src": "1353:14:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47071,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1353:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1352:16:111"
            }
          },
          {
            "id": 47079,
            "nodeType": "EventDefinition",
            "src": "1471:57:111",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 47075,
              "nodeType": "StructuredDocumentation",
              "src": "1373:95:111",
              "text": "@notice Emitted via {setDeflationaryPercentage} when the deflationaryPercentage is updated."
            },
            "eventSelector": "392bc62c14254761a14ce86ad9820d13103f5f490089391c7ecf162afd5d68f9",
            "name": "DeflationaryPercentageUpdated",
            "nameLocation": "1477:29:111",
            "parameters": {
              "id": 47078,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47077,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_percentage",
                  "nameLocation": "1515:11:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47079,
                  "src": "1507:19:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47076,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1507:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1506:21:111"
            }
          },
          {
            "id": 47084,
            "nodeType": "EventDefinition",
            "src": "1621:53:111",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 47080,
              "nodeType": "StructuredDocumentation",
              "src": "1532:86:111",
              "text": "@notice Emitted via {setDiscountPercentage} when the discountedPercent is updated."
            },
            "eventSelector": "8edc85bde8568f5dc6d7febb4820920db680537ad498b90d003e63d93a3988a1",
            "name": "DiscountPercentageUpdated",
            "nameLocation": "1627:25:111",
            "parameters": {
              "id": 47083,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47082,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_percentage",
                  "nameLocation": "1661:11:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47084,
                  "src": "1653:19:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47081,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1653:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1652:21:111"
            }
          },
          {
            "id": 47089,
            "nodeType": "EventDefinition",
            "src": "1756:49:111",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 47085,
              "nodeType": "StructuredDocumentation",
              "src": "1678:75:111",
              "text": "@notice Emitted via {setPeriodLength} when the periodLength is updated."
            },
            "eventSelector": "439c9ef273bcbea625a0b7b93955ba4d4963bc26fdeaafe7dd6e674779464105",
            "name": "PeriodLengthUpdated",
            "nameLocation": "1762:19:111",
            "parameters": {
              "id": 47088,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47087,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_periodLength",
                  "nameLocation": "1790:13:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47089,
                  "src": "1782:21:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47086,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1782:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1781:23:111"
            }
          },
          {
            "id": 47094,
            "nodeType": "EventDefinition",
            "src": "1900:51:111",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 47090,
              "nodeType": "StructuredDocumentation",
              "src": "1809:88:111",
              "text": "@notice Emitted via {setReverseRegistrar} when the ENS reverse registrar is updated."
            },
            "eventSelector": "d192c0b229b00473ccb6ccfebf6642805bca1dcdf2d9fb4fd102c7dc7ea4ce23",
            "name": "ReverseRegistrarUpdated",
            "nameLocation": "1906:23:111",
            "parameters": {
              "id": 47093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47092,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_percentage",
                  "nameLocation": "1938:11:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47094,
                  "src": "1930:19:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47091,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1930:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1929:21:111"
            }
          },
          {
            "id": 47099,
            "nodeType": "EventDefinition",
            "src": "2029:41:111",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 47095,
              "nodeType": "StructuredDocumentation",
              "src": "1955:71:111",
              "text": "@notice Emitted via {setResolver} when the ENS resolver is updated."
            },
            "eventSelector": "15cd6d20bba01b3fcb790c73829dd07412cbdf689ef818c96a2505889f3736a2",
            "name": "ResolverUpdated",
            "nameLocation": "2035:15:111",
            "parameters": {
              "id": 47098,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47097,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_resolver",
                  "nameLocation": "2059:9:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47099,
                  "src": "2051:17:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47096,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2051:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2050:19:111"
            }
          },
          {
            "id": 47106,
            "nodeType": "EventDefinition",
            "src": "2149:56:111",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 47100,
              "nodeType": "StructuredDocumentation",
              "src": "2074:72:111",
              "text": "@notice Emitted via {setSwapPool} when a new swap pool has been set."
            },
            "eventSelector": "90b58464d7ad372751038449eef244602d2be9c82abdab06596a7677272cd427",
            "name": "SetSwapPool",
            "nameLocation": "2155:11:111",
            "parameters": {
              "id": 47105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47102,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_uniswapPool",
                  "nameLocation": "2175:12:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47106,
                  "src": "2167:20:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47101,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2167:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47104,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2197:6:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47106,
                  "src": "2189:14:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47103,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2189:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2166:38:111"
            }
          },
          {
            "id": 47109,
            "nodeType": "ErrorDefinition",
            "src": "2510:21:111",
            "nodes": [],
            "documentation": {
              "id": 47107,
              "nodeType": "StructuredDocumentation",
              "src": "2410:97:111",
              "text": "@notice Emitted when guarded functions are called by users without the necessary permissions."
            },
            "errorSelector": "82b42900",
            "name": "Unauthorized",
            "nameLocation": "2516:12:111",
            "parameters": {
              "id": 47108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2528:2:111"
            }
          },
          {
            "id": 47112,
            "nodeType": "ErrorDefinition",
            "src": "2632:20:111",
            "nodes": [],
            "documentation": {
              "id": 47110,
              "nodeType": "StructuredDocumentation",
              "src": "2535:94:111",
              "text": "@notice Emitted via {setSwapPool} if the pool doesn't match the token and pairs with WETH."
            },
            "errorSelector": "2083cd40",
            "name": "InvalidPool",
            "nameLocation": "2638:11:111",
            "parameters": {
              "id": 47111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2649:2:111"
            }
          },
          {
            "id": 47115,
            "nodeType": "ErrorDefinition",
            "src": "2745:37:111",
            "nodes": [],
            "documentation": {
              "id": 47113,
              "nodeType": "StructuredDocumentation",
              "src": "2656:86:111",
              "text": "@notice Emitted via {setStakingAddress} if the user already has a staking address."
            },
            "errorSelector": "67d3e6b6",
            "name": "StakingContractAlreadyExists",
            "nameLocation": "2751:28:111",
            "parameters": {
              "id": 47114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2779:2:111"
            }
          },
          {
            "id": 47118,
            "nodeType": "ErrorDefinition",
            "src": "2860:31:111",
            "nodes": [],
            "documentation": {
              "id": 47116,
              "nodeType": "StructuredDocumentation",
              "src": "2786:71:111",
              "text": "@notice Emitted when Zero address provided where it is not allowed."
            },
            "errorSelector": "78279125",
            "name": "ZeroAddressUnsupported",
            "nameLocation": "2866:22:111",
            "parameters": {
              "id": 47117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2888:2:111"
            }
          },
          {
            "id": 47121,
            "nodeType": "ErrorDefinition",
            "src": "3053:34:111",
            "nodes": [],
            "documentation": {
              "id": 47119,
              "nodeType": "StructuredDocumentation",
              "src": "2895:155:111",
              "text": "@notice Error emitted in {transferRareTo} when a user performs an action that requires moving $RARE but has not made enough allowance for the registry."
            },
            "errorSelector": "43439826",
            "name": "InsufficientRareAllowance",
            "nameLocation": "3059:25:111",
            "parameters": {
              "id": 47120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3084:2:111"
            }
          },
          {
            "id": 47124,
            "nodeType": "ErrorDefinition",
            "src": "3162:30:111",
            "nodes": [],
            "documentation": {
              "id": 47122,
              "nodeType": "StructuredDocumentation",
              "src": "3091:68:111",
              "text": "@notice Emitted when a percentage is beyond the specified limit."
            },
            "errorSelector": "cd34f162",
            "name": "PercentageBeyondLimit",
            "nameLocation": "3168:21:111",
            "parameters": {
              "id": 47123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3189:2:111"
            }
          },
          {
            "id": 47127,
            "nodeType": "ErrorDefinition",
            "src": "3270:32:111",
            "nodes": [],
            "documentation": {
              "id": 47125,
              "nodeType": "StructuredDocumentation",
              "src": "3196:71:111",
              "text": "@notice Emitted when a Period Length is beyond the specified limit."
            },
            "errorSelector": "cfc848e4",
            "name": "PeriodLengthBeyondLimit",
            "nameLocation": "3276:23:111",
            "parameters": {
              "id": 47126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3299:2:111"
            }
          },
          {
            "id": 47137,
            "nodeType": "FunctionDefinition",
            "src": "3738:108:111",
            "nodes": [],
            "documentation": {
              "id": 47128,
              "nodeType": "StructuredDocumentation",
              "src": "3516:219:111",
              "text": "@notice Increase amount staked when a user stakes.\n @param _staker The user who is staking.\n @param _stakedOn The user who is being staked on.\n @param _amount The amount of $RARE that has been staked."
            },
            "functionSelector": "2608ff35",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "increaseAmountStaked",
            "nameLocation": "3747:20:111",
            "parameters": {
              "id": 47135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47130,
                  "mutability": "mutable",
                  "name": "_staker",
                  "nameLocation": "3781:7:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47137,
                  "src": "3773:15:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47129,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3773:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47132,
                  "mutability": "mutable",
                  "name": "_stakedOn",
                  "nameLocation": "3802:9:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47137,
                  "src": "3794:17:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47131,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3794:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47134,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3825:7:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47137,
                  "src": "3817:15:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47133,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3817:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3767:69:111"
            },
            "returnParameters": {
              "id": 47136,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3845:0:111"
            },
            "scope": 47376,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47147,
            "nodeType": "FunctionDefinition",
            "src": "4083:108:111",
            "nodes": [],
            "documentation": {
              "id": 47138,
              "nodeType": "StructuredDocumentation",
              "src": "3850:230:111",
              "text": "@notice Decrease the amount staked when a user unstakes.\n @param _staker The user who is unstaking.\n @param _stakedOn The user who was being staked on.\n @param _amount The amount of $RARE that has been unstaked."
            },
            "functionSelector": "cac7c65c",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseAmountStaked",
            "nameLocation": "4092:20:111",
            "parameters": {
              "id": 47145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47140,
                  "mutability": "mutable",
                  "name": "_staker",
                  "nameLocation": "4126:7:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47147,
                  "src": "4118:15:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47139,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4118:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47142,
                  "mutability": "mutable",
                  "name": "_stakedOn",
                  "nameLocation": "4147:9:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47147,
                  "src": "4139:17:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47141,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4139:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47144,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4170:7:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47147,
                  "src": "4162:15:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47143,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4162:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4112:69:111"
            },
            "returnParameters": {
              "id": 47146,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4190:0:111"
            },
            "scope": 47376,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47157,
            "nodeType": "FunctionDefinition",
            "src": "4458:122:111",
            "nodes": [],
            "documentation": {
              "id": 47148,
              "nodeType": "StructuredDocumentation",
              "src": "4195:260:111",
              "text": "@notice Set staking addresses for a target.\n @param _user Address of the target whose staking address is being set.\n @param _stakingAddress Address of the staking pool contract.\n @param _rewardSwapAddress Address of the reward swap contract."
            },
            "functionSelector": "76a250a7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setStakingAddresses",
            "nameLocation": "4467:19:111",
            "parameters": {
              "id": 47155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47150,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "4500:5:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47157,
                  "src": "4492:13:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47149,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4492:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47152,
                  "mutability": "mutable",
                  "name": "_stakingAddress",
                  "nameLocation": "4519:15:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47157,
                  "src": "4511:23:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47151,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4511:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47154,
                  "mutability": "mutable",
                  "name": "_rewardSwapAddress",
                  "nameLocation": "4548:18:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47157,
                  "src": "4540:26:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47153,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4540:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4486:84:111"
            },
            "returnParameters": {
              "id": 47156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4579:0:111"
            },
            "scope": 47376,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47163,
            "nodeType": "FunctionDefinition",
            "src": "4693:50:111",
            "nodes": [],
            "documentation": {
              "id": 47158,
              "nodeType": "StructuredDocumentation",
              "src": "4584:106:111",
              "text": "@notice Set the default payee.\n @param _payee Address of the account to be the new default payee."
            },
            "functionSelector": "99247be7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setDefaultPayee",
            "nameLocation": "4702:15:111",
            "parameters": {
              "id": 47161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47160,
                  "mutability": "mutable",
                  "name": "_payee",
                  "nameLocation": "4726:6:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47163,
                  "src": "4718:14:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47159,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4718:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4717:16:111"
            },
            "returnParameters": {
              "id": 47162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4742:0:111"
            },
            "scope": 47376,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47169,
            "nodeType": "FunctionDefinition",
            "src": "4856:61:111",
            "nodes": [],
            "documentation": {
              "id": 47164,
              "nodeType": "StructuredDocumentation",
              "src": "4747:106:111",
              "text": "@notice Set the reward swap discount percentage.\n @param _percentage The new discount percentage."
            },
            "functionSelector": "b3428d15",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setDiscountPercentage",
            "nameLocation": "4865:21:111",
            "parameters": {
              "id": 47167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47166,
                  "mutability": "mutable",
                  "name": "_percentage",
                  "nameLocation": "4895:11:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47169,
                  "src": "4887:19:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47165,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4887:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4886:21:111"
            },
            "returnParameters": {
              "id": 47168,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4916:0:111"
            },
            "scope": 47376,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47175,
            "nodeType": "FunctionDefinition",
            "src": "5035:65:111",
            "nodes": [],
            "documentation": {
              "id": 47170,
              "nodeType": "StructuredDocumentation",
              "src": "4921:111:111",
              "text": "@notice Set the unstake deflationary percentage.\n @param _percentage The new deflactionary percentage."
            },
            "functionSelector": "cb8af2b5",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setDeflationaryPercentage",
            "nameLocation": "5044:25:111",
            "parameters": {
              "id": 47173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47172,
                  "mutability": "mutable",
                  "name": "_percentage",
                  "nameLocation": "5078:11:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47175,
                  "src": "5070:19:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47171,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5070:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5069:21:111"
            },
            "returnParameters": {
              "id": 47174,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5099:0:111"
            },
            "scope": 47376,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47181,
            "nodeType": "FunctionDefinition",
            "src": "5201:57:111",
            "nodes": [],
            "documentation": {
              "id": 47176,
              "nodeType": "StructuredDocumentation",
              "src": "5104:94:111",
              "text": "@notice Set the round period length time.\n @param _periodLength The new period start."
            },
            "functionSelector": "1c5633d7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setPeriodLength",
            "nameLocation": "5210:15:111",
            "parameters": {
              "id": 47179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47178,
                  "mutability": "mutable",
                  "name": "_periodLength",
                  "nameLocation": "5234:13:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47181,
                  "src": "5226:21:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47177,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5226:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5225:23:111"
            },
            "returnParameters": {
              "id": 47180,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5257:0:111"
            },
            "scope": 47376,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47187,
            "nodeType": "FunctionDefinition",
            "src": "5368:65:111",
            "nodes": [],
            "documentation": {
              "id": 47182,
              "nodeType": "StructuredDocumentation",
              "src": "5262:103:111",
              "text": "@notice Set the ENS reverse registrar address.\n @param _reverseRegistrar The new period start."
            },
            "functionSelector": "557499ba",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setReverseRegistrar",
            "nameLocation": "5377:19:111",
            "parameters": {
              "id": 47185,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47184,
                  "mutability": "mutable",
                  "name": "_reverseRegistrar",
                  "nameLocation": "5405:17:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47187,
                  "src": "5397:25:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47183,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5397:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5396:27:111"
            },
            "returnParameters": {
              "id": 47186,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5432:0:111"
            },
            "scope": 47376,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47193,
            "nodeType": "FunctionDefinition",
            "src": "5526:49:111",
            "nodes": [],
            "documentation": {
              "id": 47188,
              "nodeType": "StructuredDocumentation",
              "src": "5437:86:111",
              "text": "@notice Set the ENS resolver address.\n @param _resolver The new period start."
            },
            "functionSelector": "4e543b26",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setResolver",
            "nameLocation": "5535:11:111",
            "parameters": {
              "id": 47191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47190,
                  "mutability": "mutable",
                  "name": "_resolver",
                  "nameLocation": "5555:9:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47193,
                  "src": "5547:17:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47189,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5547:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5546:19:111"
            },
            "returnParameters": {
              "id": 47192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5574:0:111"
            },
            "scope": 47376,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47201,
            "nodeType": "FunctionDefinition",
            "src": "5749:68:111",
            "nodes": [],
            "documentation": {
              "id": 47194,
              "nodeType": "StructuredDocumentation",
              "src": "5579:167:111",
              "text": "@notice Set the uniswap pool address for the given ERC20 token.\n @param _uniswapPool Address of  uniswap pool.\n @param _token Address of  ERC20 contract."
            },
            "functionSelector": "46ccbb40",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setSwapPool",
            "nameLocation": "5758:11:111",
            "parameters": {
              "id": 47199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47196,
                  "mutability": "mutable",
                  "name": "_uniswapPool",
                  "nameLocation": "5778:12:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47201,
                  "src": "5770:20:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47195,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5770:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47198,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "5800:6:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47201,
                  "src": "5792:14:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47197,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5792:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5769:38:111"
            },
            "returnParameters": {
              "id": 47200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5816:0:111"
            },
            "scope": 47376,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47207,
            "nodeType": "FunctionDefinition",
            "src": "5916:65:111",
            "nodes": [],
            "documentation": {
              "id": 47202,
              "nodeType": "StructuredDocumentation",
              "src": "5821:92:111",
              "text": "@notice Set stakee percentage.\n @param _stakeePercentage The new stakee percentage."
            },
            "functionSelector": "562b94c4",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setStakeePercentage",
            "nameLocation": "5925:19:111",
            "parameters": {
              "id": 47205,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47204,
                  "mutability": "mutable",
                  "name": "_stakeePercentage",
                  "nameLocation": "5953:17:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47207,
                  "src": "5945:25:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47203,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5945:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5944:27:111"
            },
            "returnParameters": {
              "id": 47206,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5980:0:111"
            },
            "scope": 47376,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47213,
            "nodeType": "FunctionDefinition",
            "src": "6082:67:111",
            "nodes": [],
            "documentation": {
              "id": 47208,
              "nodeType": "StructuredDocumentation",
              "src": "5985:94:111",
              "text": "@notice Set claimer percentage.\n @param _claimerPercentage The new stakee percentage."
            },
            "functionSelector": "125cb67c",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setClaimerPercentage",
            "nameLocation": "6091:20:111",
            "parameters": {
              "id": 47211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47210,
                  "mutability": "mutable",
                  "name": "_claimerPercentage",
                  "nameLocation": "6120:18:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47213,
                  "src": "6112:26:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47209,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6112:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6111:28:111"
            },
            "returnParameters": {
              "id": 47212,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6148:0:111"
            },
            "scope": 47376,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47223,
            "nodeType": "FunctionDefinition",
            "src": "6468:94:111",
            "nodes": [],
            "documentation": {
              "id": 47214,
              "nodeType": "StructuredDocumentation",
              "src": "6153:312:111",
              "text": "@notice Pools to transfer $RARE tokens, usually into pools. This is so users only need to approve the registry when staking or performing reward swaps.\n @param _from Address to transfer the tokens from.\n @param _to Address to transfer the tokens to.\n @param _amount uint256 amount to transfer."
            },
            "functionSelector": "7d6380b7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferRareTo",
            "nameLocation": "6477:14:111",
            "parameters": {
              "id": 47221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47216,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "6505:5:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47223,
                  "src": "6497:13:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47215,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6497:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47218,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "6524:3:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47223,
                  "src": "6516:11:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47217,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6516:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47220,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "6541:7:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47223,
                  "src": "6533:15:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47219,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6533:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6491:61:111"
            },
            "returnParameters": {
              "id": 47222,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6561:0:111"
            },
            "scope": 47376,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47229,
            "nodeType": "FunctionDefinition",
            "src": "6892:59:111",
            "nodes": [],
            "documentation": {
              "id": 47224,
              "nodeType": "StructuredDocumentation",
              "src": "6775:114:111",
              "text": "@notice Get the address for sending rewards if there are no stakers.\n @return address to send rewards to."
            },
            "functionSelector": "10da95e6",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getDefaultPayee",
            "nameLocation": "6901:15:111",
            "parameters": {
              "id": 47225,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6916:2:111"
            },
            "returnParameters": {
              "id": 47228,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47227,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47229,
                  "src": "6942:7:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47226,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6942:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6941:9:111"
            },
            "scope": 47376,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47237,
            "nodeType": "FunctionDefinition",
            "src": "7082:69:111",
            "nodes": [],
            "documentation": {
              "id": 47230,
              "nodeType": "StructuredDocumentation",
              "src": "6955:124:111",
              "text": "@notice Get the swap pool address for the ERC20 token.\n @return address of the swap pool associated with the token."
            },
            "functionSelector": "039bcf8e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getSwapPool",
            "nameLocation": "7091:11:111",
            "parameters": {
              "id": 47233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47232,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "7111:6:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47237,
                  "src": "7103:14:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47231,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7103:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7102:16:111"
            },
            "returnParameters": {
              "id": 47236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47235,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47237,
                  "src": "7142:7:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47234,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7142:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7141:9:111"
            },
            "scope": 47376,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47243,
            "nodeType": "FunctionDefinition",
            "src": "7271:58:111",
            "nodes": [],
            "documentation": {
              "id": 47238,
              "nodeType": "StructuredDocumentation",
              "src": "7155:113:111",
              "text": "@notice Retrieve the address of $RARE.\n @return address Address of $RARE (the staking token to be used)."
            },
            "functionSelector": "2210d525",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getRareAddress",
            "nameLocation": "7280:14:111",
            "parameters": {
              "id": 47239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7294:2:111"
            },
            "returnParameters": {
              "id": 47242,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47241,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47243,
                  "src": "7320:7:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47240,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7320:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7319:9:111"
            },
            "scope": 47376,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47249,
            "nodeType": "FunctionDefinition",
            "src": "7440:58:111",
            "nodes": [],
            "documentation": {
              "id": 47244,
              "nodeType": "StructuredDocumentation",
              "src": "7333:104:111",
              "text": "@notice Retrieve the address of Wrapped Ethereum.\n @return address Address of Wrapped Ethereum."
            },
            "functionSelector": "23a7b42a",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getWethAddress",
            "nameLocation": "7449:14:111",
            "parameters": {
              "id": 47245,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7463:2:111"
            },
            "returnParameters": {
              "id": 47248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47247,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47249,
                  "src": "7489:7:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47246,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7489:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7488:9:111"
            },
            "scope": 47376,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47255,
            "nodeType": "FunctionDefinition",
            "src": "7597:65:111",
            "nodes": [],
            "documentation": {
              "id": 47250,
              "nodeType": "StructuredDocumentation",
              "src": "7502:92:111",
              "text": "@notice Get reward swap discount percentage.\n @return uint256  discount percentage."
            },
            "functionSelector": "111029b9",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getDiscountPercentage",
            "nameLocation": "7606:21:111",
            "parameters": {
              "id": 47251,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7627:2:111"
            },
            "returnParameters": {
              "id": 47254,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47253,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47255,
                  "src": "7653:7:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47252,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7653:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7652:9:111"
            },
            "scope": 47376,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47261,
            "nodeType": "FunctionDefinition",
            "src": "7768:69:111",
            "nodes": [],
            "documentation": {
              "id": 47256,
              "nodeType": "StructuredDocumentation",
              "src": "7666:99:111",
              "text": "@notice Get the unstake deflationary percentage.\n @return uint256 deflationary percentage."
            },
            "functionSelector": "f7ef8ead",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getDeflationaryPercentage",
            "nameLocation": "7777:25:111",
            "parameters": {
              "id": 47257,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7802:2:111"
            },
            "returnParameters": {
              "id": 47260,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47259,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47261,
                  "src": "7828:7:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47258,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7828:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7827:9:111"
            },
            "scope": 47376,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47269,
            "nodeType": "FunctionDefinition",
            "src": "7979:76:111",
            "nodes": [],
            "documentation": {
              "id": 47262,
              "nodeType": "StructuredDocumentation",
              "src": "7841:135:111",
              "text": "@notice Get the stakee percentage.\n @param _user Address of the user being staked on.\n @return uint256 stakee percentage."
            },
            "functionSelector": "399ebbe5",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getStakeePercentage",
            "nameLocation": "7988:19:111",
            "parameters": {
              "id": 47265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47264,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "8016:5:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47269,
                  "src": "8008:13:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47263,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8008:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8007:15:111"
            },
            "returnParameters": {
              "id": 47268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47267,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47269,
                  "src": "8046:7:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47266,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8046:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8045:9:111"
            },
            "scope": 47376,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47277,
            "nodeType": "FunctionDefinition",
            "src": "8214:77:111",
            "nodes": [],
            "documentation": {
              "id": 47270,
              "nodeType": "StructuredDocumentation",
              "src": "8059:152:111",
              "text": "@notice Get the claimer percentage.\n @param _user Address of the user reawards are being claimed for.\n @return uint256 claimer percentage."
            },
            "functionSelector": "d8f03c7f",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getClaimerPercentage",
            "nameLocation": "8223:20:111",
            "parameters": {
              "id": 47273,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47272,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "8252:5:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47277,
                  "src": "8244:13:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47271,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8244:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8243:15:111"
            },
            "returnParameters": {
              "id": 47276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47275,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47277,
                  "src": "8282:7:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47274,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8282:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8281:9:111"
            },
            "scope": 47376,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47283,
            "nodeType": "FunctionDefinition",
            "src": "8375:59:111",
            "nodes": [],
            "documentation": {
              "id": 47278,
              "nodeType": "StructuredDocumentation",
              "src": "8295:77:111",
              "text": "@notice Get the round period length.\n @return uint256 period length."
            },
            "functionSelector": "8469ddc7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPeriodLength",
            "nameLocation": "8384:15:111",
            "parameters": {
              "id": 47279,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8399:2:111"
            },
            "returnParameters": {
              "id": 47282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47281,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47283,
                  "src": "8425:7:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47280,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8425:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8424:9:111"
            },
            "scope": 47376,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47292,
            "nodeType": "FunctionDefinition",
            "src": "8619:82:111",
            "nodes": [],
            "documentation": {
              "id": 47284,
              "nodeType": "StructuredDocumentation",
              "src": "8438:178:111",
              "text": "@notice Retrieves the staking info for a given user.\n @param _user Address of user being queried.\n @return Info struct containing name, symbol, and staking address."
            },
            "functionSelector": "f24bd8a6",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getStakingInfoForUser",
            "nameLocation": "8628:21:111",
            "parameters": {
              "id": 47287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47286,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "8658:5:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47292,
                  "src": "8650:13:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47285,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8650:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8649:15:111"
            },
            "returnParameters": {
              "id": 47291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47290,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47292,
                  "src": "8688:11:111",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Info_$47055_memory_ptr",
                    "typeString": "struct IRareStakingRegistry.Info"
                  },
                  "typeName": {
                    "id": 47289,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 47288,
                      "name": "Info",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 47055,
                      "src": "8688:4:111"
                    },
                    "referencedDeclaration": 47055,
                    "src": "8688:4:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Info_$47055_storage_ptr",
                      "typeString": "struct IRareStakingRegistry.Info"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8687:13:111"
            },
            "scope": 47376,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47300,
            "nodeType": "FunctionDefinition",
            "src": "8884:83:111",
            "nodes": [],
            "documentation": {
              "id": 47293,
              "nodeType": "StructuredDocumentation",
              "src": "8705:176:111",
              "text": "@notice Retrieves the total amount of rare staked by a given user.\n @param _user Address of the user staking.\n @return uint256 Amount of rare the user is staking."
            },
            "functionSelector": "06c571d5",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalAmountStakedByUser",
            "nameLocation": "8893:26:111",
            "parameters": {
              "id": 47296,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47295,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "8928:5:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47300,
                  "src": "8920:13:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47294,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8920:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8919:15:111"
            },
            "returnParameters": {
              "id": 47299,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47298,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47300,
                  "src": "8958:7:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47297,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8958:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8957:9:111"
            },
            "scope": 47376,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47308,
            "nodeType": "FunctionDefinition",
            "src": "9169:83:111",
            "nodes": [],
            "documentation": {
              "id": 47301,
              "nodeType": "StructuredDocumentation",
              "src": "8971:195:111",
              "text": "@notice Retrieves the total amount of rare being staked on a given user.\n @param _user Address of the user being staked on.\n @return uint256 Amount of rare being staked on the user."
            },
            "functionSelector": "3d867d95",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalAmountStakedOnUser",
            "nameLocation": "9178:26:111",
            "parameters": {
              "id": 47304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47303,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "9213:5:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47308,
                  "src": "9205:13:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47302,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9205:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9204:15:111"
            },
            "returnParameters": {
              "id": 47307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47306,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47308,
                  "src": "9243:7:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47305,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9243:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9242:9:111"
            },
            "scope": 47376,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47315,
            "nodeType": "FunctionDefinition",
            "src": "9379:75:111",
            "nodes": [],
            "documentation": {
              "id": 47309,
              "nodeType": "StructuredDocumentation",
              "src": "9256:120:111",
              "text": "@notice Retrieves a list of all the ERC20 staking contracts.\n @return list of contracts users can use to stake."
            },
            "functionSelector": "b3a96ead",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAllStakingContracts",
            "nameLocation": "9388:22:111",
            "parameters": {
              "id": 47310,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9410:2:111"
            },
            "returnParameters": {
              "id": 47314,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47313,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47315,
                  "src": "9436:16:111",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 47311,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "9436:7:111",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 47312,
                    "nodeType": "ArrayTypeName",
                    "src": "9436:9:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9435:18:111"
            },
            "scope": 47376,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47322,
            "nodeType": "FunctionDefinition",
            "src": "9608:66:111",
            "nodes": [],
            "documentation": {
              "id": 47316,
              "nodeType": "StructuredDocumentation",
              "src": "9458:147:111",
              "text": "@notice Retrieves a list of all the users participating in staking.\n @return list of addresses of all the users who are currently staking."
            },
            "functionSelector": "6e4f88c8",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAllStakers",
            "nameLocation": "9617:13:111",
            "parameters": {
              "id": 47317,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9630:2:111"
            },
            "returnParameters": {
              "id": 47321,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47320,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47322,
                  "src": "9656:16:111",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 47318,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "9656:7:111",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 47319,
                    "nodeType": "ArrayTypeName",
                    "src": "9656:9:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9655:18:111"
            },
            "scope": 47376,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47329,
            "nodeType": "FunctionDefinition",
            "src": "9817:67:111",
            "nodes": [],
            "documentation": {
              "id": 47323,
              "nodeType": "StructuredDocumentation",
              "src": "9678:136:111",
              "text": "@notice Retrieves a list of all the users being staked on.\n @return list of addresses of all the users who are being staked on."
            },
            "functionSelector": "afda0dda",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAllStakedOn",
            "nameLocation": "9826:14:111",
            "parameters": {
              "id": 47324,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9840:2:111"
            },
            "returnParameters": {
              "id": 47328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47327,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47329,
                  "src": "9866:16:111",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 47325,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "9866:7:111",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 47326,
                    "nodeType": "ArrayTypeName",
                    "src": "9866:9:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9865:18:111"
            },
            "scope": 47376,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47339,
            "nodeType": "FunctionDefinition",
            "src": "10030:112:111",
            "nodes": [],
            "documentation": {
              "id": 47330,
              "nodeType": "StructuredDocumentation",
              "src": "9888:139:111",
              "text": "@notice Query the users for the following staking addresseses.\n @param _stakingAddrs Addresses of staking contracts being queried."
            },
            "functionSelector": "18ab58ac",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getUsersForStakingAddresses",
            "nameLocation": "10039:27:111",
            "parameters": {
              "id": 47334,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47333,
                  "mutability": "mutable",
                  "name": "_stakingAddrs",
                  "nameLocation": "10086:13:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 47339,
                  "src": "10067:32:111",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 47331,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "10067:7:111",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 47332,
                    "nodeType": "ArrayTypeName",
                    "src": "10067:9:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10066:34:111"
            },
            "returnParameters": {
              "id": 47338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47337,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47339,
                  "src": "10124:16:111",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 47335,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "10124:7:111",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 47336,
                    "nodeType": "ArrayTypeName",
                    "src": "10124:9:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10123:18:111"
            },
            "scope": 47376,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47345,
            "nodeType": "FunctionDefinition",
            "src": "10304:68:111",
            "nodes": [],
            "documentation": {
              "id": 47340,
              "nodeType": "StructuredDocumentation",
              "src": "10146:155:111",
              "text": "@notice Bytes32 representation of the role used for setting the staking address of a user.\n @return bytes32 value of the staking info setter role."
            },
            "functionSelector": "265718b4",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "STAKING_INFO_SETTER_ROLE",
            "nameLocation": "10313:24:111",
            "parameters": {
              "id": 47341,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10337:2:111"
            },
            "returnParameters": {
              "id": 47344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47343,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47345,
                  "src": "10363:7:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 47342,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10363:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10362:9:111"
            },
            "scope": 47376,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47351,
            "nodeType": "FunctionDefinition",
            "src": "10593:74:111",
            "nodes": [],
            "documentation": {
              "id": 47346,
              "nodeType": "StructuredDocumentation",
              "src": "10376:214:111",
              "text": "@notice Bytes32 representation of the admin role for granting the ability to set amount staked for a single user/total amount staked on a user.\n @return bytes32 value of the staking stat setter admin role."
            },
            "functionSelector": "29b4a590",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "STAKING_STAT_SETTER_ADMIN_ROLE",
            "nameLocation": "10602:30:111",
            "parameters": {
              "id": 47347,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10632:2:111"
            },
            "returnParameters": {
              "id": 47350,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47349,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47351,
                  "src": "10658:7:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 47348,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10658:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10657:9:111"
            },
            "scope": 47376,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47357,
            "nodeType": "FunctionDefinition",
            "src": "10860:68:111",
            "nodes": [],
            "documentation": {
              "id": 47352,
              "nodeType": "StructuredDocumentation",
              "src": "10671:186:111",
              "text": "@notice Bytes32 representation of the role used for updating the amount being staked on a user/amount a user is staking globally.\n @return bytes32 value of the stat setter role."
            },
            "functionSelector": "66951bc1",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "STAKING_STAT_SETTER_ROLE",
            "nameLocation": "10869:24:111",
            "parameters": {
              "id": 47353,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10893:2:111"
            },
            "returnParameters": {
              "id": 47356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47355,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47357,
                  "src": "10919:7:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 47354,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10919:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10918:9:111"
            },
            "scope": 47376,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47363,
            "nodeType": "FunctionDefinition",
            "src": "11117:70:111",
            "nodes": [],
            "documentation": {
              "id": 47358,
              "nodeType": "StructuredDocumentation",
              "src": "10932:182:111",
              "text": "@notice Bytes32 representation of the role used for period length, deflationary percentages, and the default payee.\n @return bytes32 value of the staking config setter role."
            },
            "functionSelector": "a4303a45",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "STAKING_CONFIG_SETTER_ROLE",
            "nameLocation": "11126:26:111",
            "parameters": {
              "id": 47359,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11152:2:111"
            },
            "returnParameters": {
              "id": 47362,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47361,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47363,
                  "src": "11178:7:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 47360,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11178:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11177:9:111"
            },
            "scope": 47376,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47369,
            "nodeType": "FunctionDefinition",
            "src": "11329:59:111",
            "nodes": [],
            "documentation": {
              "id": 47364,
              "nodeType": "StructuredDocumentation",
              "src": "11191:135:111",
              "text": "@notice Bytes32 representation of the role used for updating the ENS resolvers.\n @return bytes32 value of the ens setter role."
            },
            "functionSelector": "c2544987",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "ENS_SETTER_ROLE",
            "nameLocation": "11338:15:111",
            "parameters": {
              "id": 47365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11353:2:111"
            },
            "returnParameters": {
              "id": 47368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47367,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47369,
                  "src": "11379:7:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 47366,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11379:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11378:9:111"
            },
            "scope": 47376,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47375,
            "nodeType": "FunctionDefinition",
            "src": "11532:65:111",
            "nodes": [],
            "documentation": {
              "id": 47370,
              "nodeType": "StructuredDocumentation",
              "src": "11392:137:111",
              "text": "@notice Bytes32 representation of the role used for updating uniswap pools.\n @return bytes32 value of the swap pool setter role."
            },
            "functionSelector": "363227e5",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "SWAP_POOL_SETTER_ROLE",
            "nameLocation": "11541:21:111",
            "parameters": {
              "id": 47371,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11562:2:111"
            },
            "returnParameters": {
              "id": 47374,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47373,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47375,
                  "src": "11588:7:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 47372,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11588:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11587:9:111"
            },
            "scope": 47376,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IRareStakingRegistry",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 47046,
          "nodeType": "StructuredDocumentation",
          "src": "57:146:111",
          "text": "@author koloz, charlescrain\n @title IRareStakingRegistry\n @notice The Staking Registry interface containing all functions, events, etc."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          47376
        ],
        "name": "IRareStakingRegistry",
        "nameLocation": "213:20:111",
        "scope": 47377,
        "usedErrors": [
          47109,
          47112,
          47115,
          47118,
          47121,
          47124,
          47127
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 111
}