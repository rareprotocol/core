{
  "abi": [
    {
      "inputs": [],
      "name": "InsufficientRareAllowance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidPool",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PercentageBeyondLimit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PeriodLengthBeyondLimit",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RenouncingAdmin",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "StakingContractAlreadyExists",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Unauthorized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroAddressUnsupported",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_payee",
          "type": "address"
        }
      ],
      "name": "DefaultPayeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_percentage",
          "type": "uint256"
        }
      ],
      "name": "DeflationaryPercentageUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_percentage",
          "type": "uint256"
        }
      ],
      "name": "DiscountPercentageUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_periodLength",
          "type": "uint256"
        }
      ],
      "name": "PeriodLengthUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_resolver",
          "type": "address"
        }
      ],
      "name": "ResolverUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_percentage",
          "type": "address"
        }
      ],
      "name": "ReverseRegistrarUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_uniswapPool",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "SetSwapPool",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ENS_SETTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STAKING_CONFIG_SETTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STAKING_INFO_SETTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STAKING_STAT_SETTER_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "STAKING_STAT_SETTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SWAP_POOL_SETTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_staker",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_stakedOn",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "decreaseAmountStaked",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllStakedOn",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllStakers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllStakingContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultPayee",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDeflationaryPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDiscountPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPeriodLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRareAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getRewardAccumulatorAddressForUser",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getStakingAddressForUser",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getStakingInfoForUser",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "stakingAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "rewardAddress",
              "type": "address"
            }
          ],
          "internalType": "struct IRareStakingRegistry.Info",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getSwapPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getTotalAmountStakedByUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getTotalAmountStakedOnUser",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_stakingAddrs",
          "type": "address[]"
        }
      ],
      "name": "getUsersForStakingAddresses",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getWethAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_staker",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_stakedOn",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "increaseAmountStaked",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_payee",
          "type": "address"
        }
      ],
      "name": "setDefaultPayee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_percentage",
          "type": "uint256"
        }
      ],
      "name": "setDeflationaryPercentage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_percentage",
          "type": "uint256"
        }
      ],
      "name": "setDiscountPercentage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_periodLength",
          "type": "uint256"
        }
      ],
      "name": "setPeriodLength",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_resolver",
          "type": "address"
        }
      ],
      "name": "setResolver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_reverseRegistrar",
          "type": "address"
        }
      ],
      "name": "setReverseRegistrar",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_stakingAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rewardSwapAddress",
          "type": "address"
        }
      ],
      "name": "setStakingAddresses",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_uniswapPool",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "setSwapPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transferRareFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "ENS_SETTER_ROLE()": "c2544987",
    "STAKING_CONFIG_SETTER_ROLE()": "a4303a45",
    "STAKING_INFO_SETTER_ROLE()": "265718b4",
    "STAKING_STAT_SETTER_ADMIN_ROLE()": "29b4a590",
    "STAKING_STAT_SETTER_ROLE()": "66951bc1",
    "SWAP_POOL_SETTER_ROLE()": "363227e5",
    "decreaseAmountStaked(address,address,uint256)": "cac7c65c",
    "getAllStakedOn()": "afda0dda",
    "getAllStakers()": "6e4f88c8",
    "getAllStakingContracts()": "b3a96ead",
    "getDefaultPayee()": "10da95e6",
    "getDeflationaryPercentage()": "f7ef8ead",
    "getDiscountPercentage()": "111029b9",
    "getPeriodLength()": "8469ddc7",
    "getRareAddress()": "2210d525",
    "getRewardAccumulatorAddressForUser(address)": "e286ef33",
    "getStakingAddressForUser(address)": "81d0606b",
    "getStakingInfoForUser(address)": "f24bd8a6",
    "getSwapPool(address)": "039bcf8e",
    "getTotalAmountStakedByUser(address)": "06c571d5",
    "getTotalAmountStakedOnUser(address)": "3d867d95",
    "getUsersForStakingAddresses(address[])": "18ab58ac",
    "getWethAddress()": "23a7b42a",
    "increaseAmountStaked(address,address,uint256)": "2608ff35",
    "setDefaultPayee(address)": "99247be7",
    "setDeflationaryPercentage(uint256)": "cb8af2b5",
    "setDiscountPercentage(uint256)": "b3428d15",
    "setPeriodLength(uint256)": "1c5633d7",
    "setResolver(address)": "4e543b26",
    "setReverseRegistrar(address)": "557499ba",
    "setStakingAddresses(address,address,address)": "76a250a7",
    "setSwapPool(address,address)": "46ccbb40",
    "transferRareFrom(address,address,uint256)": "81910e33"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InsufficientRareAllowance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPool\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PercentageBeyondLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PeriodLengthBeyondLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RenouncingAdmin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StakingContractAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddressUnsupported\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_payee\",\"type\":\"address\"}],\"name\":\"DefaultPayeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_percentage\",\"type\":\"uint256\"}],\"name\":\"DeflationaryPercentageUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_percentage\",\"type\":\"uint256\"}],\"name\":\"DiscountPercentageUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_periodLength\",\"type\":\"uint256\"}],\"name\":\"PeriodLengthUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_resolver\",\"type\":\"address\"}],\"name\":\"ResolverUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_percentage\",\"type\":\"address\"}],\"name\":\"ReverseRegistrarUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_uniswapPool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"SetSwapPool\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ENS_SETTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKING_CONFIG_SETTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKING_INFO_SETTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKING_STAT_SETTER_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKING_STAT_SETTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SWAP_POOL_SETTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakedOn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"decreaseAmountStaked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllStakedOn\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllStakers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllStakingContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultPayee\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeflationaryPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDiscountPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPeriodLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRareAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getRewardAccumulatorAddressForUser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getStakingAddressForUser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getStakingInfoForUser\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"stakingAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardAddress\",\"type\":\"address\"}],\"internalType\":\"struct IRareStakingRegistry.Info\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getSwapPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getTotalAmountStakedByUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getTotalAmountStakedOnUser\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_stakingAddrs\",\"type\":\"address[]\"}],\"name\":\"getUsersForStakingAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWethAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakedOn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"increaseAmountStaked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_payee\",\"type\":\"address\"}],\"name\":\"setDefaultPayee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_percentage\",\"type\":\"uint256\"}],\"name\":\"setDeflationaryPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_percentage\",\"type\":\"uint256\"}],\"name\":\"setDiscountPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_periodLength\",\"type\":\"uint256\"}],\"name\":\"setPeriodLength\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_resolver\",\"type\":\"address\"}],\"name\":\"setResolver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reverseRegistrar\",\"type\":\"address\"}],\"name\":\"setReverseRegistrar\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakingAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardSwapAddress\",\"type\":\"address\"}],\"name\":\"setStakingAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_uniswapPool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setSwapPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferRareFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"koloz, charlescrain\",\"kind\":\"dev\",\"methods\":{\"ENS_SETTER_ROLE()\":{\"returns\":{\"_0\":\"bytes32 value of the ens setter role.\"}},\"STAKING_CONFIG_SETTER_ROLE()\":{\"returns\":{\"_0\":\"bytes32 value of the staking config setter role.\"}},\"STAKING_INFO_SETTER_ROLE()\":{\"returns\":{\"_0\":\"bytes32 value of the staking info setter role.\"}},\"STAKING_STAT_SETTER_ADMIN_ROLE()\":{\"returns\":{\"_0\":\"bytes32 value of the staking stat setter admin role.\"}},\"STAKING_STAT_SETTER_ROLE()\":{\"returns\":{\"_0\":\"bytes32 value of the stat setter role.\"}},\"SWAP_POOL_SETTER_ROLE()\":{\"returns\":{\"_0\":\"bytes32 value of the swap pool setter role.\"}},\"decreaseAmountStaked(address,address,uint256)\":{\"params\":{\"_amount\":\"The amount of $RARE that has been unstaked.\",\"_stakedOn\":\"The user who was being staked on.\",\"_staker\":\"The user who is unstaking.\"}},\"getAllStakedOn()\":{\"returns\":{\"_0\":\"list of addresses of all the users who are being staked on.\"}},\"getAllStakers()\":{\"returns\":{\"_0\":\"list of addresses of all the users who are currently staking.\"}},\"getAllStakingContracts()\":{\"returns\":{\"_0\":\"list of contracts users can use to stake.\"}},\"getDefaultPayee()\":{\"returns\":{\"_0\":\"address to send rewards to.\"}},\"getDeflationaryPercentage()\":{\"returns\":{\"_0\":\"uint256 deflationary percentage.\"}},\"getDiscountPercentage()\":{\"returns\":{\"_0\":\"uint256  discount percentage.\"}},\"getPeriodLength()\":{\"returns\":{\"_0\":\"uint256 period length.\"}},\"getRareAddress()\":{\"returns\":{\"_0\":\"address Address of $RARE (the staking token to be used).\"}},\"getRewardAccumulatorAddressForUser(address)\":{\"params\":{\"_user\":\"Address of user being queried.\"},\"returns\":{\"_0\":\"address Reward accumulator address.\"}},\"getStakingAddressForUser(address)\":{\"params\":{\"_user\":\"Address of user being queried.\"},\"returns\":{\"_0\":\"address staking address.\"}},\"getStakingInfoForUser(address)\":{\"params\":{\"_user\":\"Address of user being queried.\"},\"returns\":{\"_0\":\"Info struct containing name, symbol, staking address, and reward accumulator address.\"}},\"getSwapPool(address)\":{\"returns\":{\"_0\":\"address of the swap pool associated with the token.\"}},\"getTotalAmountStakedByUser(address)\":{\"params\":{\"_user\":\"Address of the user staking.\"},\"returns\":{\"_0\":\"uint256 Amount of rare the user is staking.\"}},\"getTotalAmountStakedOnUser(address)\":{\"params\":{\"_user\":\"Address of the user being staked on.\"},\"returns\":{\"_0\":\"uint256 Amount of rare being staked on the user.\"}},\"getUsersForStakingAddresses(address[])\":{\"params\":{\"_stakingAddrs\":\"Addresses of staking contracts being queried.\"}},\"getWethAddress()\":{\"returns\":{\"_0\":\"address Address of Wrapped Ethereum.\"}},\"increaseAmountStaked(address,address,uint256)\":{\"params\":{\"_amount\":\"The amount of $RARE that has been staked.\",\"_stakedOn\":\"The user who is being staked on.\",\"_staker\":\"The user who is staking.\"}},\"setDefaultPayee(address)\":{\"params\":{\"_payee\":\"Address of the account to be the new default payee.\"}},\"setDeflationaryPercentage(uint256)\":{\"params\":{\"_percentage\":\"The new deflactionary percentage.\"}},\"setDiscountPercentage(uint256)\":{\"params\":{\"_percentage\":\"The new discount percentage.\"}},\"setPeriodLength(uint256)\":{\"params\":{\"_periodLength\":\"The new period start.\"}},\"setResolver(address)\":{\"params\":{\"_resolver\":\"The new period start.\"}},\"setReverseRegistrar(address)\":{\"params\":{\"_reverseRegistrar\":\"The new period start.\"}},\"setStakingAddresses(address,address,address)\":{\"params\":{\"_rewardSwapAddress\":\"Address of the reward swap contract.\",\"_stakingAddress\":\"Address of the staking pool contract.\",\"_user\":\"Address of the target whose staking address is being set.\"}},\"setSwapPool(address,address)\":{\"params\":{\"_token\":\"Address of  ERC20 contract.\",\"_uniswapPool\":\"Address of  uniswap pool.\"}},\"transferRareFrom(address,address,uint256)\":{\"params\":{\"_amount\":\"uint256 amount to transfer.\",\"_from\":\"Address to transfer the tokens from.\",\"_to\":\"Address to transfer the tokens to.\"}}},\"title\":\"IRareStakingRegistry\",\"version\":1},\"userdoc\":{\"errors\":{\"InsufficientRareAllowance()\":[{\"notice\":\"Error emitted in {transferRareFrom} when a user performs an action that requires moving $RARE but has not made enough allowance for the registry.\"}],\"InvalidPool()\":[{\"notice\":\"Emitted via {setSwapPool} if the pool doesn't match the token and pairs with WETH.\"}],\"PercentageBeyondLimit()\":[{\"notice\":\"Emitted when a percentage is beyond the specified limit.\"}],\"PeriodLengthBeyondLimit()\":[{\"notice\":\"Emitted when a Period Length is beyond the specified limit.\"}],\"RenouncingAdmin()\":[{\"notice\":\"Emitted when renouncing the admin role and no other account has the role.\"}],\"StakingContractAlreadyExists()\":[{\"notice\":\"Emitted via {setStakingAddress} if the user already has a staking address.\"}],\"Unauthorized()\":[{\"notice\":\"Emitted when guarded functions are called by users without the necessary permissions.\"}],\"ZeroAddressUnsupported()\":[{\"notice\":\"Emitted when Zero address provided where it is not allowed.\"}]},\"events\":{\"DefaultPayeeUpdated(address)\":{\"notice\":\"Emitted via {setDefaultPayee} when the defaultPayee is updated.\"},\"DeflationaryPercentageUpdated(uint256)\":{\"notice\":\"Emitted via {setDeflationaryPercentage} when the deflationaryPercentage is updated.\"},\"DiscountPercentageUpdated(uint256)\":{\"notice\":\"Emitted via {setDiscountPercentage} when the discountedPercent is updated.\"},\"PeriodLengthUpdated(uint256)\":{\"notice\":\"Emitted via {setPeriodLength} when the periodLength is updated.\"},\"ResolverUpdated(address)\":{\"notice\":\"Emitted via {setResolver} when the ENS resolver is updated.\"},\"ReverseRegistrarUpdated(address)\":{\"notice\":\"Emitted via {setReverseRegistrar} when the ENS reverse registrar is updated.\"},\"SetSwapPool(address,address)\":{\"notice\":\"Emitted via {setSwapPool} when a new swap pool has been set.\"}},\"kind\":\"user\",\"methods\":{\"ENS_SETTER_ROLE()\":{\"notice\":\"Bytes32 representation of the role used for updating the ENS resolvers.\"},\"STAKING_CONFIG_SETTER_ROLE()\":{\"notice\":\"Bytes32 representation of the role used for period length, deflationary percentages, and the default payee.\"},\"STAKING_INFO_SETTER_ROLE()\":{\"notice\":\"Bytes32 representation of the role used for setting the staking address of a user.\"},\"STAKING_STAT_SETTER_ADMIN_ROLE()\":{\"notice\":\"Bytes32 representation of the admin role for granting the ability to set amount staked for a single user/total amount staked on a user.\"},\"STAKING_STAT_SETTER_ROLE()\":{\"notice\":\"Bytes32 representation of the role used for updating the amount being staked on a user/amount a user is staking globally.\"},\"SWAP_POOL_SETTER_ROLE()\":{\"notice\":\"Bytes32 representation of the role used for updating uniswap pools.\"},\"decreaseAmountStaked(address,address,uint256)\":{\"notice\":\"Decrease the amount staked when a user unstakes.\"},\"getAllStakedOn()\":{\"notice\":\"Retrieves a list of all the users being staked on.\"},\"getAllStakers()\":{\"notice\":\"Retrieves a list of all the users participating in staking.\"},\"getAllStakingContracts()\":{\"notice\":\"Retrieves a list of all the ERC20 staking contracts.\"},\"getDefaultPayee()\":{\"notice\":\"Get the address for sending rewards if there are no stakers.\"},\"getDeflationaryPercentage()\":{\"notice\":\"Get the unstake deflationary percentage.\"},\"getDiscountPercentage()\":{\"notice\":\"Get reward swap discount percentage.\"},\"getPeriodLength()\":{\"notice\":\"Get the round period length.\"},\"getRareAddress()\":{\"notice\":\"Retrieve the address of $RARE.\"},\"getRewardAccumulatorAddressForUser(address)\":{\"notice\":\"Retrieves the reward accumulator address for a given user.\"},\"getStakingAddressForUser(address)\":{\"notice\":\"Retrieves the staking address for a given user.\"},\"getStakingInfoForUser(address)\":{\"notice\":\"Retrieves the staking info for a given user.\"},\"getSwapPool(address)\":{\"notice\":\"Get the swap pool address for the ERC20 token.\"},\"getTotalAmountStakedByUser(address)\":{\"notice\":\"Retrieves the total amount of rare staked by a given user.\"},\"getTotalAmountStakedOnUser(address)\":{\"notice\":\"Retrieves the total amount of rare being staked on a given user.\"},\"getUsersForStakingAddresses(address[])\":{\"notice\":\"Query the users for the following staking addresseses.\"},\"getWethAddress()\":{\"notice\":\"Retrieve the address of Wrapped Ethereum.\"},\"increaseAmountStaked(address,address,uint256)\":{\"notice\":\"Increase amount staked when a user stakes.\"},\"setDefaultPayee(address)\":{\"notice\":\"Set the default payee.\"},\"setDeflationaryPercentage(uint256)\":{\"notice\":\"Set the unstake deflationary percentage.\"},\"setDiscountPercentage(uint256)\":{\"notice\":\"Set the reward swap discount percentage.\"},\"setPeriodLength(uint256)\":{\"notice\":\"Set the round period length time.\"},\"setResolver(address)\":{\"notice\":\"Set the ENS resolver address.\"},\"setReverseRegistrar(address)\":{\"notice\":\"Set the ENS reverse registrar address.\"},\"setStakingAddresses(address,address,address)\":{\"notice\":\"Set staking addresses for a target.\"},\"setSwapPool(address,address)\":{\"notice\":\"Set the uniswap pool address for the given ERC20 token.\"},\"transferRareFrom(address,address,uint256)\":{\"notice\":\"Pools to transfer $RARE tokens, usually into pools. This is so users only need to approve the registry when staking or performing reward swaps.\"}},\"notice\":\"The Staking Registry interface containing all functions, events, etc.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/staking/registry/IRareStakingRegistry.sol\":\"IRareStakingRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/buffer/=lib/buffer/\",\":@ensdomains/ens-contracts/=lib/ens-contracts/contracts/\",\":@manifoldxyz/libraries-solidity/=lib/royalty-registry-solidity/lib/libraries-solidity/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/royalty-registry-solidity/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/royalty-registry-solidity/lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/contracts/\",\":@uniswap/v3-core/contracts/=lib/v3-core/contracts/\",\":@uniswap/v3-periphery/=lib/v3-periphery/contracts/\",\":arachnid/solidity-stringutils/=lib/solidity-stringutils/\",\":assets/=lib/assets/\",\":aux/=lib/aux/\",\":buffer/=lib/buffer/contracts/\",\":create2-helpers/=lib/royalty-registry-solidity/lib/create2-helpers/\",\":create2-scripts/=lib/royalty-registry-solidity/lib/create2-helpers/script/\",\":ds-test/=lib/ds-test/src/\",\":ens-contracts/=lib/ens-contracts/contracts/\",\":ensdomains/ens-contracts/=lib/ensdomains/ens-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":libraries-solidity/=lib/royalty-registry-solidity/lib/libraries-solidity/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":rareprotocol/assets/=lib/assets/src/\",\":rareprotocol/aux/=lib/aux/src/\",\":royalty-guard/=lib/aux/lib/royalty-guard/src/\",\":royalty-registry-solidity/=lib/royalty-registry-solidity/contracts/\",\":royalty-registry/=lib/royalty-registry-solidity/contracts/\",\":solidity-stringutils/=lib/solidity-stringutils/\",\":solmate/=lib/solmate/src/\",\":v3-core/=lib/v3-core/\",\":v3-periphery/=lib/v3-periphery/contracts/\"]},\"sources\":{\"src/staking/registry/IRareStakingRegistry.sol\":{\"keccak256\":\"0x7f519bcba60e795d874922758990fa58ec3236d2fe2ebbd711b7ab69ff33d2bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dd4520b8cc904c6fb54c30c6bca6547f86e1310fddc754aa9dd6b678b0d86b2\",\"dweb:/ipfs/QmayVh5w3fuYnAw6qurtWo6CB7yTc6WojguAVMExjnr1Mk\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.18+commit.87f61d96"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientRareAllowance"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidPool"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PercentageBeyondLimit"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PeriodLengthBeyondLimit"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RenouncingAdmin"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "StakingContractAlreadyExists"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Unauthorized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroAddressUnsupported"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_payee",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DefaultPayeeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_percentage",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DeflationaryPercentageUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_percentage",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DiscountPercentageUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_periodLength",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PeriodLengthUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_resolver",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ResolverUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_percentage",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ReverseRegistrarUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_uniswapPool",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "_token",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetSwapPool",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ENS_SETTER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "STAKING_CONFIG_SETTER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "STAKING_INFO_SETTER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "STAKING_STAT_SETTER_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "STAKING_STAT_SETTER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SWAP_POOL_SETTER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_staker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_stakedOn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAmountStaked"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllStakedOn",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllStakers",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllStakingContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultPayee",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDeflationaryPercentage",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDiscountPercentage",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPeriodLength",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRareAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRewardAccumulatorAddressForUser",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakingAddressForUser",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakingInfoForUser",
          "outputs": [
            {
              "internalType": "struct IRareStakingRegistry.Info",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "symbol",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "stakingAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "rewardAddress",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSwapPool",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTotalAmountStakedByUser",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTotalAmountStakedOnUser",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "_stakingAddrs",
              "type": "address[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUsersForStakingAddresses",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getWethAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_staker",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_stakedOn",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAmountStaked"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_payee",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultPayee"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_percentage",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDeflationaryPercentage"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_percentage",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDiscountPercentage"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_periodLength",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPeriodLength"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_resolver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setResolver"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_reverseRegistrar",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setReverseRegistrar"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_stakingAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_rewardSwapAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setStakingAddresses"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_uniswapPool",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setSwapPool"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferRareFrom"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "ENS_SETTER_ROLE()": {
            "returns": {
              "_0": "bytes32 value of the ens setter role."
            }
          },
          "STAKING_CONFIG_SETTER_ROLE()": {
            "returns": {
              "_0": "bytes32 value of the staking config setter role."
            }
          },
          "STAKING_INFO_SETTER_ROLE()": {
            "returns": {
              "_0": "bytes32 value of the staking info setter role."
            }
          },
          "STAKING_STAT_SETTER_ADMIN_ROLE()": {
            "returns": {
              "_0": "bytes32 value of the staking stat setter admin role."
            }
          },
          "STAKING_STAT_SETTER_ROLE()": {
            "returns": {
              "_0": "bytes32 value of the stat setter role."
            }
          },
          "SWAP_POOL_SETTER_ROLE()": {
            "returns": {
              "_0": "bytes32 value of the swap pool setter role."
            }
          },
          "decreaseAmountStaked(address,address,uint256)": {
            "params": {
              "_amount": "The amount of $RARE that has been unstaked.",
              "_stakedOn": "The user who was being staked on.",
              "_staker": "The user who is unstaking."
            }
          },
          "getAllStakedOn()": {
            "returns": {
              "_0": "list of addresses of all the users who are being staked on."
            }
          },
          "getAllStakers()": {
            "returns": {
              "_0": "list of addresses of all the users who are currently staking."
            }
          },
          "getAllStakingContracts()": {
            "returns": {
              "_0": "list of contracts users can use to stake."
            }
          },
          "getDefaultPayee()": {
            "returns": {
              "_0": "address to send rewards to."
            }
          },
          "getDeflationaryPercentage()": {
            "returns": {
              "_0": "uint256 deflationary percentage."
            }
          },
          "getDiscountPercentage()": {
            "returns": {
              "_0": "uint256  discount percentage."
            }
          },
          "getPeriodLength()": {
            "returns": {
              "_0": "uint256 period length."
            }
          },
          "getRareAddress()": {
            "returns": {
              "_0": "address Address of $RARE (the staking token to be used)."
            }
          },
          "getRewardAccumulatorAddressForUser(address)": {
            "params": {
              "_user": "Address of user being queried."
            },
            "returns": {
              "_0": "address Reward accumulator address."
            }
          },
          "getStakingAddressForUser(address)": {
            "params": {
              "_user": "Address of user being queried."
            },
            "returns": {
              "_0": "address staking address."
            }
          },
          "getStakingInfoForUser(address)": {
            "params": {
              "_user": "Address of user being queried."
            },
            "returns": {
              "_0": "Info struct containing name, symbol, staking address, and reward accumulator address."
            }
          },
          "getSwapPool(address)": {
            "returns": {
              "_0": "address of the swap pool associated with the token."
            }
          },
          "getTotalAmountStakedByUser(address)": {
            "params": {
              "_user": "Address of the user staking."
            },
            "returns": {
              "_0": "uint256 Amount of rare the user is staking."
            }
          },
          "getTotalAmountStakedOnUser(address)": {
            "params": {
              "_user": "Address of the user being staked on."
            },
            "returns": {
              "_0": "uint256 Amount of rare being staked on the user."
            }
          },
          "getUsersForStakingAddresses(address[])": {
            "params": {
              "_stakingAddrs": "Addresses of staking contracts being queried."
            }
          },
          "getWethAddress()": {
            "returns": {
              "_0": "address Address of Wrapped Ethereum."
            }
          },
          "increaseAmountStaked(address,address,uint256)": {
            "params": {
              "_amount": "The amount of $RARE that has been staked.",
              "_stakedOn": "The user who is being staked on.",
              "_staker": "The user who is staking."
            }
          },
          "setDefaultPayee(address)": {
            "params": {
              "_payee": "Address of the account to be the new default payee."
            }
          },
          "setDeflationaryPercentage(uint256)": {
            "params": {
              "_percentage": "The new deflactionary percentage."
            }
          },
          "setDiscountPercentage(uint256)": {
            "params": {
              "_percentage": "The new discount percentage."
            }
          },
          "setPeriodLength(uint256)": {
            "params": {
              "_periodLength": "The new period start."
            }
          },
          "setResolver(address)": {
            "params": {
              "_resolver": "The new period start."
            }
          },
          "setReverseRegistrar(address)": {
            "params": {
              "_reverseRegistrar": "The new period start."
            }
          },
          "setStakingAddresses(address,address,address)": {
            "params": {
              "_rewardSwapAddress": "Address of the reward swap contract.",
              "_stakingAddress": "Address of the staking pool contract.",
              "_user": "Address of the target whose staking address is being set."
            }
          },
          "setSwapPool(address,address)": {
            "params": {
              "_token": "Address of  ERC20 contract.",
              "_uniswapPool": "Address of  uniswap pool."
            }
          },
          "transferRareFrom(address,address,uint256)": {
            "params": {
              "_amount": "uint256 amount to transfer.",
              "_from": "Address to transfer the tokens from.",
              "_to": "Address to transfer the tokens to."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "ENS_SETTER_ROLE()": {
            "notice": "Bytes32 representation of the role used for updating the ENS resolvers."
          },
          "STAKING_CONFIG_SETTER_ROLE()": {
            "notice": "Bytes32 representation of the role used for period length, deflationary percentages, and the default payee."
          },
          "STAKING_INFO_SETTER_ROLE()": {
            "notice": "Bytes32 representation of the role used for setting the staking address of a user."
          },
          "STAKING_STAT_SETTER_ADMIN_ROLE()": {
            "notice": "Bytes32 representation of the admin role for granting the ability to set amount staked for a single user/total amount staked on a user."
          },
          "STAKING_STAT_SETTER_ROLE()": {
            "notice": "Bytes32 representation of the role used for updating the amount being staked on a user/amount a user is staking globally."
          },
          "SWAP_POOL_SETTER_ROLE()": {
            "notice": "Bytes32 representation of the role used for updating uniswap pools."
          },
          "decreaseAmountStaked(address,address,uint256)": {
            "notice": "Decrease the amount staked when a user unstakes."
          },
          "getAllStakedOn()": {
            "notice": "Retrieves a list of all the users being staked on."
          },
          "getAllStakers()": {
            "notice": "Retrieves a list of all the users participating in staking."
          },
          "getAllStakingContracts()": {
            "notice": "Retrieves a list of all the ERC20 staking contracts."
          },
          "getDefaultPayee()": {
            "notice": "Get the address for sending rewards if there are no stakers."
          },
          "getDeflationaryPercentage()": {
            "notice": "Get the unstake deflationary percentage."
          },
          "getDiscountPercentage()": {
            "notice": "Get reward swap discount percentage."
          },
          "getPeriodLength()": {
            "notice": "Get the round period length."
          },
          "getRareAddress()": {
            "notice": "Retrieve the address of $RARE."
          },
          "getRewardAccumulatorAddressForUser(address)": {
            "notice": "Retrieves the reward accumulator address for a given user."
          },
          "getStakingAddressForUser(address)": {
            "notice": "Retrieves the staking address for a given user."
          },
          "getStakingInfoForUser(address)": {
            "notice": "Retrieves the staking info for a given user."
          },
          "getSwapPool(address)": {
            "notice": "Get the swap pool address for the ERC20 token."
          },
          "getTotalAmountStakedByUser(address)": {
            "notice": "Retrieves the total amount of rare staked by a given user."
          },
          "getTotalAmountStakedOnUser(address)": {
            "notice": "Retrieves the total amount of rare being staked on a given user."
          },
          "getUsersForStakingAddresses(address[])": {
            "notice": "Query the users for the following staking addresseses."
          },
          "getWethAddress()": {
            "notice": "Retrieve the address of Wrapped Ethereum."
          },
          "increaseAmountStaked(address,address,uint256)": {
            "notice": "Increase amount staked when a user stakes."
          },
          "setDefaultPayee(address)": {
            "notice": "Set the default payee."
          },
          "setDeflationaryPercentage(uint256)": {
            "notice": "Set the unstake deflationary percentage."
          },
          "setDiscountPercentage(uint256)": {
            "notice": "Set the reward swap discount percentage."
          },
          "setPeriodLength(uint256)": {
            "notice": "Set the round period length time."
          },
          "setResolver(address)": {
            "notice": "Set the ENS resolver address."
          },
          "setReverseRegistrar(address)": {
            "notice": "Set the ENS reverse registrar address."
          },
          "setStakingAddresses(address,address,address)": {
            "notice": "Set staking addresses for a target."
          },
          "setSwapPool(address,address)": {
            "notice": "Set the uniswap pool address for the given ERC20 token."
          },
          "transferRareFrom(address,address,uint256)": {
            "notice": "Pools to transfer $RARE tokens, usually into pools. This is so users only need to approve the registry when staking or performing reward swaps."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/buffer/=lib/buffer/",
        ":@ensdomains/ens-contracts/=lib/ens-contracts/contracts/",
        ":@manifoldxyz/libraries-solidity/=lib/royalty-registry-solidity/lib/libraries-solidity/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@openzeppelin/contracts-upgradeable/=lib/royalty-registry-solidity/lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/royalty-registry-solidity/lib/openzeppelin-contracts/contracts/",
        ":@uniswap/v3-core/=lib/v3-core/contracts/",
        ":@uniswap/v3-core/contracts/=lib/v3-core/contracts/",
        ":@uniswap/v3-periphery/=lib/v3-periphery/contracts/",
        ":arachnid/solidity-stringutils/=lib/solidity-stringutils/",
        ":assets/=lib/assets/",
        ":aux/=lib/aux/",
        ":buffer/=lib/buffer/contracts/",
        ":create2-helpers/=lib/royalty-registry-solidity/lib/create2-helpers/",
        ":create2-scripts/=lib/royalty-registry-solidity/lib/create2-helpers/script/",
        ":ds-test/=lib/ds-test/src/",
        ":ens-contracts/=lib/ens-contracts/contracts/",
        ":ensdomains/ens-contracts/=lib/ensdomains/ens-contracts/contracts/",
        ":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":libraries-solidity/=lib/royalty-registry-solidity/lib/libraries-solidity/contracts/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":rareprotocol/assets/=lib/assets/src/",
        ":rareprotocol/aux/=lib/aux/src/",
        ":royalty-guard/=lib/aux/lib/royalty-guard/src/",
        ":royalty-registry-solidity/=lib/royalty-registry-solidity/contracts/",
        ":royalty-registry/=lib/royalty-registry-solidity/contracts/",
        ":solidity-stringutils/=lib/solidity-stringutils/",
        ":solmate/=lib/solmate/src/",
        ":v3-core/=lib/v3-core/",
        ":v3-periphery/=lib/v3-periphery/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/staking/registry/IRareStakingRegistry.sol": "IRareStakingRegistry"
      },
      "libraries": {}
    },
    "sources": {
      "src/staking/registry/IRareStakingRegistry.sol": {
        "keccak256": "0x7f519bcba60e795d874922758990fa58ec3236d2fe2ebbd711b7ab69ff33d2bd",
        "urls": [
          "bzz-raw://3dd4520b8cc904c6fb54c30c6bca6547f86e1310fddc754aa9dd6b678b0d86b2",
          "dweb:/ipfs/QmayVh5w3fuYnAw6qurtWo6CB7yTc6WojguAVMExjnr1Mk"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/staking/registry/IRareStakingRegistry.sol",
    "id": 55634,
    "exportedSymbols": {
      "IRareStakingRegistry": [
        55633
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:11094:140",
    "nodes": [
      {
        "id": 55325,
        "nodeType": "PragmaDirective",
        "src": "32:23:140",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 55633,
        "nodeType": "ContractDefinition",
        "src": "203:10922:140",
        "nodes": [
          {
            "id": 55335,
            "nodeType": "StructDefinition",
            "src": "601:108:140",
            "nodes": [],
            "canonicalName": "IRareStakingRegistry.Info",
            "members": [
              {
                "constant": false,
                "id": 55328,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "626:4:140",
                "nodeType": "VariableDeclaration",
                "scope": 55335,
                "src": "619:11:140",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 55327,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "619:6:140",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 55330,
                "mutability": "mutable",
                "name": "symbol",
                "nameLocation": "643:6:140",
                "nodeType": "VariableDeclaration",
                "scope": 55335,
                "src": "636:13:140",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 55329,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "636:6:140",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 55332,
                "mutability": "mutable",
                "name": "stakingAddress",
                "nameLocation": "663:14:140",
                "nodeType": "VariableDeclaration",
                "scope": 55335,
                "src": "655:22:140",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 55331,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "655:7:140",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 55334,
                "mutability": "mutable",
                "name": "rewardAddress",
                "nameLocation": "691:13:140",
                "nodeType": "VariableDeclaration",
                "scope": 55335,
                "src": "683:21:140",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 55333,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "683:7:140",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Info",
            "nameLocation": "608:4:140",
            "scope": 55633,
            "visibility": "public"
          },
          {
            "id": 55340,
            "nodeType": "EventDefinition",
            "src": "987:42:140",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 55336,
              "nodeType": "StructuredDocumentation",
              "src": "909:75:140",
              "text": "@notice Emitted via {setDefaultPayee} when the defaultPayee is updated."
            },
            "eventSelector": "a37a7d6d9546ebba206b7200fd6814cc4885bd05277f43db31703508086bac5b",
            "name": "DefaultPayeeUpdated",
            "nameLocation": "993:19:140",
            "parameters": {
              "id": 55339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55338,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_payee",
                  "nameLocation": "1021:6:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 55340,
                  "src": "1013:14:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55337,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1013:7:140",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1012:16:140"
            }
          },
          {
            "id": 55345,
            "nodeType": "EventDefinition",
            "src": "1131:57:140",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 55341,
              "nodeType": "StructuredDocumentation",
              "src": "1033:95:140",
              "text": "@notice Emitted via {setDeflationaryPercentage} when the deflationaryPercentage is updated."
            },
            "eventSelector": "392bc62c14254761a14ce86ad9820d13103f5f490089391c7ecf162afd5d68f9",
            "name": "DeflationaryPercentageUpdated",
            "nameLocation": "1137:29:140",
            "parameters": {
              "id": 55344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55343,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_percentage",
                  "nameLocation": "1175:11:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 55345,
                  "src": "1167:19:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55342,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1167:7:140",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1166:21:140"
            }
          },
          {
            "id": 55350,
            "nodeType": "EventDefinition",
            "src": "1281:53:140",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 55346,
              "nodeType": "StructuredDocumentation",
              "src": "1192:86:140",
              "text": "@notice Emitted via {setDiscountPercentage} when the discountedPercent is updated."
            },
            "eventSelector": "8edc85bde8568f5dc6d7febb4820920db680537ad498b90d003e63d93a3988a1",
            "name": "DiscountPercentageUpdated",
            "nameLocation": "1287:25:140",
            "parameters": {
              "id": 55349,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55348,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_percentage",
                  "nameLocation": "1321:11:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 55350,
                  "src": "1313:19:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55347,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1313:7:140",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1312:21:140"
            }
          },
          {
            "id": 55355,
            "nodeType": "EventDefinition",
            "src": "1416:49:140",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 55351,
              "nodeType": "StructuredDocumentation",
              "src": "1338:75:140",
              "text": "@notice Emitted via {setPeriodLength} when the periodLength is updated."
            },
            "eventSelector": "439c9ef273bcbea625a0b7b93955ba4d4963bc26fdeaafe7dd6e674779464105",
            "name": "PeriodLengthUpdated",
            "nameLocation": "1422:19:140",
            "parameters": {
              "id": 55354,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55353,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_periodLength",
                  "nameLocation": "1450:13:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 55355,
                  "src": "1442:21:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55352,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1442:7:140",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1441:23:140"
            }
          },
          {
            "id": 55360,
            "nodeType": "EventDefinition",
            "src": "1560:51:140",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 55356,
              "nodeType": "StructuredDocumentation",
              "src": "1469:88:140",
              "text": "@notice Emitted via {setReverseRegistrar} when the ENS reverse registrar is updated."
            },
            "eventSelector": "d192c0b229b00473ccb6ccfebf6642805bca1dcdf2d9fb4fd102c7dc7ea4ce23",
            "name": "ReverseRegistrarUpdated",
            "nameLocation": "1566:23:140",
            "parameters": {
              "id": 55359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55358,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_percentage",
                  "nameLocation": "1598:11:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 55360,
                  "src": "1590:19:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55357,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1590:7:140",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1589:21:140"
            }
          },
          {
            "id": 55365,
            "nodeType": "EventDefinition",
            "src": "1689:41:140",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 55361,
              "nodeType": "StructuredDocumentation",
              "src": "1615:71:140",
              "text": "@notice Emitted via {setResolver} when the ENS resolver is updated."
            },
            "eventSelector": "15cd6d20bba01b3fcb790c73829dd07412cbdf689ef818c96a2505889f3736a2",
            "name": "ResolverUpdated",
            "nameLocation": "1695:15:140",
            "parameters": {
              "id": 55364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55363,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_resolver",
                  "nameLocation": "1719:9:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 55365,
                  "src": "1711:17:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55362,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1711:7:140",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1710:19:140"
            }
          },
          {
            "id": 55372,
            "nodeType": "EventDefinition",
            "src": "1809:56:140",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 55366,
              "nodeType": "StructuredDocumentation",
              "src": "1734:72:140",
              "text": "@notice Emitted via {setSwapPool} when a new swap pool has been set."
            },
            "eventSelector": "90b58464d7ad372751038449eef244602d2be9c82abdab06596a7677272cd427",
            "name": "SetSwapPool",
            "nameLocation": "1815:11:140",
            "parameters": {
              "id": 55371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55368,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_uniswapPool",
                  "nameLocation": "1835:12:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 55372,
                  "src": "1827:20:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55367,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1827:7:140",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55370,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1857:6:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 55372,
                  "src": "1849:14:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55369,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1849:7:140",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1826:38:140"
            }
          },
          {
            "id": 55375,
            "nodeType": "ErrorDefinition",
            "src": "2170:21:140",
            "nodes": [],
            "documentation": {
              "id": 55373,
              "nodeType": "StructuredDocumentation",
              "src": "2070:97:140",
              "text": "@notice Emitted when guarded functions are called by users without the necessary permissions."
            },
            "errorSelector": "82b42900",
            "name": "Unauthorized",
            "nameLocation": "2176:12:140",
            "parameters": {
              "id": 55374,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2188:2:140"
            }
          },
          {
            "id": 55378,
            "nodeType": "ErrorDefinition",
            "src": "2292:20:140",
            "nodes": [],
            "documentation": {
              "id": 55376,
              "nodeType": "StructuredDocumentation",
              "src": "2195:94:140",
              "text": "@notice Emitted via {setSwapPool} if the pool doesn't match the token and pairs with WETH."
            },
            "errorSelector": "2083cd40",
            "name": "InvalidPool",
            "nameLocation": "2298:11:140",
            "parameters": {
              "id": 55377,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2309:2:140"
            }
          },
          {
            "id": 55381,
            "nodeType": "ErrorDefinition",
            "src": "2405:37:140",
            "nodes": [],
            "documentation": {
              "id": 55379,
              "nodeType": "StructuredDocumentation",
              "src": "2316:86:140",
              "text": "@notice Emitted via {setStakingAddress} if the user already has a staking address."
            },
            "errorSelector": "67d3e6b6",
            "name": "StakingContractAlreadyExists",
            "nameLocation": "2411:28:140",
            "parameters": {
              "id": 55380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2439:2:140"
            }
          },
          {
            "id": 55384,
            "nodeType": "ErrorDefinition",
            "src": "2520:31:140",
            "nodes": [],
            "documentation": {
              "id": 55382,
              "nodeType": "StructuredDocumentation",
              "src": "2446:71:140",
              "text": "@notice Emitted when Zero address provided where it is not allowed."
            },
            "errorSelector": "78279125",
            "name": "ZeroAddressUnsupported",
            "nameLocation": "2526:22:140",
            "parameters": {
              "id": 55383,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2548:2:140"
            }
          },
          {
            "id": 55387,
            "nodeType": "ErrorDefinition",
            "src": "2715:34:140",
            "nodes": [],
            "documentation": {
              "id": 55385,
              "nodeType": "StructuredDocumentation",
              "src": "2555:157:140",
              "text": "@notice Error emitted in {transferRareFrom} when a user performs an action that requires moving $RARE but has not made enough allowance for the registry."
            },
            "errorSelector": "43439826",
            "name": "InsufficientRareAllowance",
            "nameLocation": "2721:25:140",
            "parameters": {
              "id": 55386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2746:2:140"
            }
          },
          {
            "id": 55390,
            "nodeType": "ErrorDefinition",
            "src": "2824:30:140",
            "nodes": [],
            "documentation": {
              "id": 55388,
              "nodeType": "StructuredDocumentation",
              "src": "2753:68:140",
              "text": "@notice Emitted when a percentage is beyond the specified limit."
            },
            "errorSelector": "cd34f162",
            "name": "PercentageBeyondLimit",
            "nameLocation": "2830:21:140",
            "parameters": {
              "id": 55389,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2851:2:140"
            }
          },
          {
            "id": 55393,
            "nodeType": "ErrorDefinition",
            "src": "2932:32:140",
            "nodes": [],
            "documentation": {
              "id": 55391,
              "nodeType": "StructuredDocumentation",
              "src": "2858:71:140",
              "text": "@notice Emitted when a Period Length is beyond the specified limit."
            },
            "errorSelector": "cfc848e4",
            "name": "PeriodLengthBeyondLimit",
            "nameLocation": "2938:23:140",
            "parameters": {
              "id": 55392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2961:2:140"
            }
          },
          {
            "id": 55396,
            "nodeType": "ErrorDefinition",
            "src": "3056:24:140",
            "nodes": [],
            "documentation": {
              "id": 55394,
              "nodeType": "StructuredDocumentation",
              "src": "2968:85:140",
              "text": "@notice Emitted when renouncing the admin role and no other account has the role."
            },
            "errorSelector": "794e8478",
            "name": "RenouncingAdmin",
            "nameLocation": "3062:15:140",
            "parameters": {
              "id": 55395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3077:2:140"
            }
          },
          {
            "id": 55406,
            "nodeType": "FunctionDefinition",
            "src": "3516:108:140",
            "nodes": [],
            "documentation": {
              "id": 55397,
              "nodeType": "StructuredDocumentation",
              "src": "3294:219:140",
              "text": "@notice Increase amount staked when a user stakes.\n @param _staker The user who is staking.\n @param _stakedOn The user who is being staked on.\n @param _amount The amount of $RARE that has been staked."
            },
            "functionSelector": "2608ff35",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "increaseAmountStaked",
            "nameLocation": "3525:20:140",
            "parameters": {
              "id": 55404,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55399,
                  "mutability": "mutable",
                  "name": "_staker",
                  "nameLocation": "3559:7:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 55406,
                  "src": "3551:15:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55398,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3551:7:140",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55401,
                  "mutability": "mutable",
                  "name": "_stakedOn",
                  "nameLocation": "3580:9:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 55406,
                  "src": "3572:17:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55400,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3572:7:140",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55403,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3603:7:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 55406,
                  "src": "3595:15:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55402,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3595:7:140",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3545:69:140"
            },
            "returnParameters": {
              "id": 55405,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3623:0:140"
            },
            "scope": 55633,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 55416,
            "nodeType": "FunctionDefinition",
            "src": "3861:108:140",
            "nodes": [],
            "documentation": {
              "id": 55407,
              "nodeType": "StructuredDocumentation",
              "src": "3628:230:140",
              "text": "@notice Decrease the amount staked when a user unstakes.\n @param _staker The user who is unstaking.\n @param _stakedOn The user who was being staked on.\n @param _amount The amount of $RARE that has been unstaked."
            },
            "functionSelector": "cac7c65c",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseAmountStaked",
            "nameLocation": "3870:20:140",
            "parameters": {
              "id": 55414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55409,
                  "mutability": "mutable",
                  "name": "_staker",
                  "nameLocation": "3904:7:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 55416,
                  "src": "3896:15:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55408,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3896:7:140",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55411,
                  "mutability": "mutable",
                  "name": "_stakedOn",
                  "nameLocation": "3925:9:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 55416,
                  "src": "3917:17:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55410,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3917:7:140",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55413,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3948:7:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 55416,
                  "src": "3940:15:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55412,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3940:7:140",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3890:69:140"
            },
            "returnParameters": {
              "id": 55415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3968:0:140"
            },
            "scope": 55633,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 55426,
            "nodeType": "FunctionDefinition",
            "src": "4236:122:140",
            "nodes": [],
            "documentation": {
              "id": 55417,
              "nodeType": "StructuredDocumentation",
              "src": "3973:260:140",
              "text": "@notice Set staking addresses for a target.\n @param _user Address of the target whose staking address is being set.\n @param _stakingAddress Address of the staking pool contract.\n @param _rewardSwapAddress Address of the reward swap contract."
            },
            "functionSelector": "76a250a7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setStakingAddresses",
            "nameLocation": "4245:19:140",
            "parameters": {
              "id": 55424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55419,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "4278:5:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 55426,
                  "src": "4270:13:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55418,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4270:7:140",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55421,
                  "mutability": "mutable",
                  "name": "_stakingAddress",
                  "nameLocation": "4297:15:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 55426,
                  "src": "4289:23:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55420,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4289:7:140",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55423,
                  "mutability": "mutable",
                  "name": "_rewardSwapAddress",
                  "nameLocation": "4326:18:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 55426,
                  "src": "4318:26:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55422,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4318:7:140",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4264:84:140"
            },
            "returnParameters": {
              "id": 55425,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4357:0:140"
            },
            "scope": 55633,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 55432,
            "nodeType": "FunctionDefinition",
            "src": "4471:50:140",
            "nodes": [],
            "documentation": {
              "id": 55427,
              "nodeType": "StructuredDocumentation",
              "src": "4362:106:140",
              "text": "@notice Set the default payee.\n @param _payee Address of the account to be the new default payee."
            },
            "functionSelector": "99247be7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setDefaultPayee",
            "nameLocation": "4480:15:140",
            "parameters": {
              "id": 55430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55429,
                  "mutability": "mutable",
                  "name": "_payee",
                  "nameLocation": "4504:6:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 55432,
                  "src": "4496:14:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55428,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4496:7:140",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4495:16:140"
            },
            "returnParameters": {
              "id": 55431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4520:0:140"
            },
            "scope": 55633,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 55438,
            "nodeType": "FunctionDefinition",
            "src": "4634:61:140",
            "nodes": [],
            "documentation": {
              "id": 55433,
              "nodeType": "StructuredDocumentation",
              "src": "4525:106:140",
              "text": "@notice Set the reward swap discount percentage.\n @param _percentage The new discount percentage."
            },
            "functionSelector": "b3428d15",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setDiscountPercentage",
            "nameLocation": "4643:21:140",
            "parameters": {
              "id": 55436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55435,
                  "mutability": "mutable",
                  "name": "_percentage",
                  "nameLocation": "4673:11:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 55438,
                  "src": "4665:19:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55434,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4665:7:140",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4664:21:140"
            },
            "returnParameters": {
              "id": 55437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4694:0:140"
            },
            "scope": 55633,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 55444,
            "nodeType": "FunctionDefinition",
            "src": "4813:65:140",
            "nodes": [],
            "documentation": {
              "id": 55439,
              "nodeType": "StructuredDocumentation",
              "src": "4699:111:140",
              "text": "@notice Set the unstake deflationary percentage.\n @param _percentage The new deflactionary percentage."
            },
            "functionSelector": "cb8af2b5",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setDeflationaryPercentage",
            "nameLocation": "4822:25:140",
            "parameters": {
              "id": 55442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55441,
                  "mutability": "mutable",
                  "name": "_percentage",
                  "nameLocation": "4856:11:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 55444,
                  "src": "4848:19:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55440,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4848:7:140",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4847:21:140"
            },
            "returnParameters": {
              "id": 55443,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4877:0:140"
            },
            "scope": 55633,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 55450,
            "nodeType": "FunctionDefinition",
            "src": "4979:57:140",
            "nodes": [],
            "documentation": {
              "id": 55445,
              "nodeType": "StructuredDocumentation",
              "src": "4882:94:140",
              "text": "@notice Set the round period length time.\n @param _periodLength The new period start."
            },
            "functionSelector": "1c5633d7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setPeriodLength",
            "nameLocation": "4988:15:140",
            "parameters": {
              "id": 55448,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55447,
                  "mutability": "mutable",
                  "name": "_periodLength",
                  "nameLocation": "5012:13:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 55450,
                  "src": "5004:21:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55446,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5004:7:140",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5003:23:140"
            },
            "returnParameters": {
              "id": 55449,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5035:0:140"
            },
            "scope": 55633,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 55456,
            "nodeType": "FunctionDefinition",
            "src": "5146:65:140",
            "nodes": [],
            "documentation": {
              "id": 55451,
              "nodeType": "StructuredDocumentation",
              "src": "5040:103:140",
              "text": "@notice Set the ENS reverse registrar address.\n @param _reverseRegistrar The new period start."
            },
            "functionSelector": "557499ba",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setReverseRegistrar",
            "nameLocation": "5155:19:140",
            "parameters": {
              "id": 55454,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55453,
                  "mutability": "mutable",
                  "name": "_reverseRegistrar",
                  "nameLocation": "5183:17:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 55456,
                  "src": "5175:25:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55452,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5175:7:140",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5174:27:140"
            },
            "returnParameters": {
              "id": 55455,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5210:0:140"
            },
            "scope": 55633,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 55462,
            "nodeType": "FunctionDefinition",
            "src": "5304:49:140",
            "nodes": [],
            "documentation": {
              "id": 55457,
              "nodeType": "StructuredDocumentation",
              "src": "5215:86:140",
              "text": "@notice Set the ENS resolver address.\n @param _resolver The new period start."
            },
            "functionSelector": "4e543b26",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setResolver",
            "nameLocation": "5313:11:140",
            "parameters": {
              "id": 55460,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55459,
                  "mutability": "mutable",
                  "name": "_resolver",
                  "nameLocation": "5333:9:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 55462,
                  "src": "5325:17:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55458,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5325:7:140",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5324:19:140"
            },
            "returnParameters": {
              "id": 55461,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5352:0:140"
            },
            "scope": 55633,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 55470,
            "nodeType": "FunctionDefinition",
            "src": "5527:68:140",
            "nodes": [],
            "documentation": {
              "id": 55463,
              "nodeType": "StructuredDocumentation",
              "src": "5357:167:140",
              "text": "@notice Set the uniswap pool address for the given ERC20 token.\n @param _uniswapPool Address of  uniswap pool.\n @param _token Address of  ERC20 contract."
            },
            "functionSelector": "46ccbb40",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setSwapPool",
            "nameLocation": "5536:11:140",
            "parameters": {
              "id": 55468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55465,
                  "mutability": "mutable",
                  "name": "_uniswapPool",
                  "nameLocation": "5556:12:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 55470,
                  "src": "5548:20:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55464,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5548:7:140",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55467,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "5578:6:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 55470,
                  "src": "5570:14:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55466,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5570:7:140",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5547:38:140"
            },
            "returnParameters": {
              "id": 55469,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5594:0:140"
            },
            "scope": 55633,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 55480,
            "nodeType": "FunctionDefinition",
            "src": "5914:96:140",
            "nodes": [],
            "documentation": {
              "id": 55471,
              "nodeType": "StructuredDocumentation",
              "src": "5599:312:140",
              "text": "@notice Pools to transfer $RARE tokens, usually into pools. This is so users only need to approve the registry when staking or performing reward swaps.\n @param _from Address to transfer the tokens from.\n @param _to Address to transfer the tokens to.\n @param _amount uint256 amount to transfer."
            },
            "functionSelector": "81910e33",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferRareFrom",
            "nameLocation": "5923:16:140",
            "parameters": {
              "id": 55478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55473,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "5953:5:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 55480,
                  "src": "5945:13:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55472,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5945:7:140",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55475,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "5972:3:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 55480,
                  "src": "5964:11:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55474,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5964:7:140",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55477,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5989:7:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 55480,
                  "src": "5981:15:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55476,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5981:7:140",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5939:61:140"
            },
            "returnParameters": {
              "id": 55479,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6009:0:140"
            },
            "scope": 55633,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 55486,
            "nodeType": "FunctionDefinition",
            "src": "6340:59:140",
            "nodes": [],
            "documentation": {
              "id": 55481,
              "nodeType": "StructuredDocumentation",
              "src": "6223:114:140",
              "text": "@notice Get the address for sending rewards if there are no stakers.\n @return address to send rewards to."
            },
            "functionSelector": "10da95e6",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getDefaultPayee",
            "nameLocation": "6349:15:140",
            "parameters": {
              "id": 55482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6364:2:140"
            },
            "returnParameters": {
              "id": 55485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55484,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55486,
                  "src": "6390:7:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55483,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6390:7:140",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6389:9:140"
            },
            "scope": 55633,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 55494,
            "nodeType": "FunctionDefinition",
            "src": "6530:69:140",
            "nodes": [],
            "documentation": {
              "id": 55487,
              "nodeType": "StructuredDocumentation",
              "src": "6403:124:140",
              "text": "@notice Get the swap pool address for the ERC20 token.\n @return address of the swap pool associated with the token."
            },
            "functionSelector": "039bcf8e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getSwapPool",
            "nameLocation": "6539:11:140",
            "parameters": {
              "id": 55490,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55489,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "6559:6:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 55494,
                  "src": "6551:14:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55488,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6551:7:140",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6550:16:140"
            },
            "returnParameters": {
              "id": 55493,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55492,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55494,
                  "src": "6590:7:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55491,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6590:7:140",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6589:9:140"
            },
            "scope": 55633,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 55500,
            "nodeType": "FunctionDefinition",
            "src": "6719:58:140",
            "nodes": [],
            "documentation": {
              "id": 55495,
              "nodeType": "StructuredDocumentation",
              "src": "6603:113:140",
              "text": "@notice Retrieve the address of $RARE.\n @return address Address of $RARE (the staking token to be used)."
            },
            "functionSelector": "2210d525",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getRareAddress",
            "nameLocation": "6728:14:140",
            "parameters": {
              "id": 55496,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6742:2:140"
            },
            "returnParameters": {
              "id": 55499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55498,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55500,
                  "src": "6768:7:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55497,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6768:7:140",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6767:9:140"
            },
            "scope": 55633,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 55506,
            "nodeType": "FunctionDefinition",
            "src": "6888:58:140",
            "nodes": [],
            "documentation": {
              "id": 55501,
              "nodeType": "StructuredDocumentation",
              "src": "6781:104:140",
              "text": "@notice Retrieve the address of Wrapped Ethereum.\n @return address Address of Wrapped Ethereum."
            },
            "functionSelector": "23a7b42a",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getWethAddress",
            "nameLocation": "6897:14:140",
            "parameters": {
              "id": 55502,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6911:2:140"
            },
            "returnParameters": {
              "id": 55505,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55504,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55506,
                  "src": "6937:7:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55503,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6937:7:140",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6936:9:140"
            },
            "scope": 55633,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 55512,
            "nodeType": "FunctionDefinition",
            "src": "7045:65:140",
            "nodes": [],
            "documentation": {
              "id": 55507,
              "nodeType": "StructuredDocumentation",
              "src": "6950:92:140",
              "text": "@notice Get reward swap discount percentage.\n @return uint256  discount percentage."
            },
            "functionSelector": "111029b9",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getDiscountPercentage",
            "nameLocation": "7054:21:140",
            "parameters": {
              "id": 55508,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7075:2:140"
            },
            "returnParameters": {
              "id": 55511,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55510,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55512,
                  "src": "7101:7:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55509,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7101:7:140",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7100:9:140"
            },
            "scope": 55633,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 55518,
            "nodeType": "FunctionDefinition",
            "src": "7216:69:140",
            "nodes": [],
            "documentation": {
              "id": 55513,
              "nodeType": "StructuredDocumentation",
              "src": "7114:99:140",
              "text": "@notice Get the unstake deflationary percentage.\n @return uint256 deflationary percentage."
            },
            "functionSelector": "f7ef8ead",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getDeflationaryPercentage",
            "nameLocation": "7225:25:140",
            "parameters": {
              "id": 55514,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7250:2:140"
            },
            "returnParameters": {
              "id": 55517,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55516,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55518,
                  "src": "7276:7:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55515,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7276:7:140",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7275:9:140"
            },
            "scope": 55633,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 55524,
            "nodeType": "FunctionDefinition",
            "src": "7369:59:140",
            "nodes": [],
            "documentation": {
              "id": 55519,
              "nodeType": "StructuredDocumentation",
              "src": "7289:77:140",
              "text": "@notice Get the round period length.\n @return uint256 period length."
            },
            "functionSelector": "8469ddc7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPeriodLength",
            "nameLocation": "7378:15:140",
            "parameters": {
              "id": 55520,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7393:2:140"
            },
            "returnParameters": {
              "id": 55523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55522,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55524,
                  "src": "7419:7:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55521,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7419:7:140",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7418:9:140"
            },
            "scope": 55633,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 55533,
            "nodeType": "FunctionDefinition",
            "src": "7641:82:140",
            "nodes": [],
            "documentation": {
              "id": 55525,
              "nodeType": "StructuredDocumentation",
              "src": "7432:206:140",
              "text": "@notice Retrieves the staking info for a given user.\n @param _user Address of user being queried.\n @return Info struct containing name, symbol, staking address, and reward accumulator address."
            },
            "functionSelector": "f24bd8a6",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getStakingInfoForUser",
            "nameLocation": "7650:21:140",
            "parameters": {
              "id": 55528,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55527,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "7680:5:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 55533,
                  "src": "7672:13:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55526,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7672:7:140",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7671:15:140"
            },
            "returnParameters": {
              "id": 55532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55531,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55533,
                  "src": "7710:11:140",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Info_$55335_memory_ptr",
                    "typeString": "struct IRareStakingRegistry.Info"
                  },
                  "typeName": {
                    "id": 55530,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 55529,
                      "name": "Info",
                      "nameLocations": [
                        "7710:4:140"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55335,
                      "src": "7710:4:140"
                    },
                    "referencedDeclaration": 55335,
                    "src": "7710:4:140",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Info_$55335_storage_ptr",
                      "typeString": "struct IRareStakingRegistry.Info"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7709:13:140"
            },
            "scope": 55633,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 55541,
            "nodeType": "FunctionDefinition",
            "src": "7878:81:140",
            "nodes": [],
            "documentation": {
              "id": 55534,
              "nodeType": "StructuredDocumentation",
              "src": "7727:148:140",
              "text": "@notice Retrieves the staking address for a given user.\n @param _user Address of user being queried.\n @return address staking address."
            },
            "functionSelector": "81d0606b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getStakingAddressForUser",
            "nameLocation": "7887:24:140",
            "parameters": {
              "id": 55537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55536,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "7920:5:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 55541,
                  "src": "7912:13:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55535,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7912:7:140",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7911:15:140"
            },
            "returnParameters": {
              "id": 55540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55539,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55541,
                  "src": "7950:7:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55538,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7950:7:140",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7949:9:140"
            },
            "scope": 55633,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 55549,
            "nodeType": "FunctionDefinition",
            "src": "8136:91:140",
            "nodes": [],
            "documentation": {
              "id": 55542,
              "nodeType": "StructuredDocumentation",
              "src": "7963:170:140",
              "text": "@notice Retrieves the reward accumulator address for a given user.\n @param _user Address of user being queried.\n @return address Reward accumulator address."
            },
            "functionSelector": "e286ef33",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getRewardAccumulatorAddressForUser",
            "nameLocation": "8145:34:140",
            "parameters": {
              "id": 55545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55544,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "8188:5:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 55549,
                  "src": "8180:13:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55543,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8180:7:140",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8179:15:140"
            },
            "returnParameters": {
              "id": 55548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55547,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55549,
                  "src": "8218:7:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55546,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8218:7:140",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8217:9:140"
            },
            "scope": 55633,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 55557,
            "nodeType": "FunctionDefinition",
            "src": "8410:83:140",
            "nodes": [],
            "documentation": {
              "id": 55550,
              "nodeType": "StructuredDocumentation",
              "src": "8231:176:140",
              "text": "@notice Retrieves the total amount of rare staked by a given user.\n @param _user Address of the user staking.\n @return uint256 Amount of rare the user is staking."
            },
            "functionSelector": "06c571d5",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalAmountStakedByUser",
            "nameLocation": "8419:26:140",
            "parameters": {
              "id": 55553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55552,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "8454:5:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 55557,
                  "src": "8446:13:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55551,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8446:7:140",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8445:15:140"
            },
            "returnParameters": {
              "id": 55556,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55555,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55557,
                  "src": "8484:7:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55554,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8484:7:140",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8483:9:140"
            },
            "scope": 55633,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 55565,
            "nodeType": "FunctionDefinition",
            "src": "8695:83:140",
            "nodes": [],
            "documentation": {
              "id": 55558,
              "nodeType": "StructuredDocumentation",
              "src": "8497:195:140",
              "text": "@notice Retrieves the total amount of rare being staked on a given user.\n @param _user Address of the user being staked on.\n @return uint256 Amount of rare being staked on the user."
            },
            "functionSelector": "3d867d95",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTotalAmountStakedOnUser",
            "nameLocation": "8704:26:140",
            "parameters": {
              "id": 55561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55560,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "8739:5:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 55565,
                  "src": "8731:13:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55559,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8731:7:140",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8730:15:140"
            },
            "returnParameters": {
              "id": 55564,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55563,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55565,
                  "src": "8769:7:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55562,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8769:7:140",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8768:9:140"
            },
            "scope": 55633,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 55572,
            "nodeType": "FunctionDefinition",
            "src": "8905:75:140",
            "nodes": [],
            "documentation": {
              "id": 55566,
              "nodeType": "StructuredDocumentation",
              "src": "8782:120:140",
              "text": "@notice Retrieves a list of all the ERC20 staking contracts.\n @return list of contracts users can use to stake."
            },
            "functionSelector": "b3a96ead",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAllStakingContracts",
            "nameLocation": "8914:22:140",
            "parameters": {
              "id": 55567,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8936:2:140"
            },
            "returnParameters": {
              "id": 55571,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55570,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55572,
                  "src": "8962:16:140",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 55568,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "8962:7:140",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 55569,
                    "nodeType": "ArrayTypeName",
                    "src": "8962:9:140",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8961:18:140"
            },
            "scope": 55633,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 55579,
            "nodeType": "FunctionDefinition",
            "src": "9134:66:140",
            "nodes": [],
            "documentation": {
              "id": 55573,
              "nodeType": "StructuredDocumentation",
              "src": "8984:147:140",
              "text": "@notice Retrieves a list of all the users participating in staking.\n @return list of addresses of all the users who are currently staking."
            },
            "functionSelector": "6e4f88c8",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAllStakers",
            "nameLocation": "9143:13:140",
            "parameters": {
              "id": 55574,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9156:2:140"
            },
            "returnParameters": {
              "id": 55578,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55577,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55579,
                  "src": "9182:16:140",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 55575,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "9182:7:140",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 55576,
                    "nodeType": "ArrayTypeName",
                    "src": "9182:9:140",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9181:18:140"
            },
            "scope": 55633,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 55586,
            "nodeType": "FunctionDefinition",
            "src": "9343:67:140",
            "nodes": [],
            "documentation": {
              "id": 55580,
              "nodeType": "StructuredDocumentation",
              "src": "9204:136:140",
              "text": "@notice Retrieves a list of all the users being staked on.\n @return list of addresses of all the users who are being staked on."
            },
            "functionSelector": "afda0dda",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAllStakedOn",
            "nameLocation": "9352:14:140",
            "parameters": {
              "id": 55581,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9366:2:140"
            },
            "returnParameters": {
              "id": 55585,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55584,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55586,
                  "src": "9392:16:140",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 55582,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "9392:7:140",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 55583,
                    "nodeType": "ArrayTypeName",
                    "src": "9392:9:140",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9391:18:140"
            },
            "scope": 55633,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 55596,
            "nodeType": "FunctionDefinition",
            "src": "9556:112:140",
            "nodes": [],
            "documentation": {
              "id": 55587,
              "nodeType": "StructuredDocumentation",
              "src": "9414:139:140",
              "text": "@notice Query the users for the following staking addresseses.\n @param _stakingAddrs Addresses of staking contracts being queried."
            },
            "functionSelector": "18ab58ac",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getUsersForStakingAddresses",
            "nameLocation": "9565:27:140",
            "parameters": {
              "id": 55591,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55590,
                  "mutability": "mutable",
                  "name": "_stakingAddrs",
                  "nameLocation": "9612:13:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 55596,
                  "src": "9593:32:140",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 55588,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "9593:7:140",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 55589,
                    "nodeType": "ArrayTypeName",
                    "src": "9593:9:140",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9592:34:140"
            },
            "returnParameters": {
              "id": 55595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55594,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55596,
                  "src": "9650:16:140",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 55592,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "9650:7:140",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 55593,
                    "nodeType": "ArrayTypeName",
                    "src": "9650:9:140",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9649:18:140"
            },
            "scope": 55633,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 55602,
            "nodeType": "FunctionDefinition",
            "src": "9830:68:140",
            "nodes": [],
            "documentation": {
              "id": 55597,
              "nodeType": "StructuredDocumentation",
              "src": "9672:155:140",
              "text": "@notice Bytes32 representation of the role used for setting the staking address of a user.\n @return bytes32 value of the staking info setter role."
            },
            "functionSelector": "265718b4",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "STAKING_INFO_SETTER_ROLE",
            "nameLocation": "9839:24:140",
            "parameters": {
              "id": 55598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9863:2:140"
            },
            "returnParameters": {
              "id": 55601,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55600,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55602,
                  "src": "9889:7:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 55599,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9889:7:140",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9888:9:140"
            },
            "scope": 55633,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 55608,
            "nodeType": "FunctionDefinition",
            "src": "10119:74:140",
            "nodes": [],
            "documentation": {
              "id": 55603,
              "nodeType": "StructuredDocumentation",
              "src": "9902:214:140",
              "text": "@notice Bytes32 representation of the admin role for granting the ability to set amount staked for a single user/total amount staked on a user.\n @return bytes32 value of the staking stat setter admin role."
            },
            "functionSelector": "29b4a590",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "STAKING_STAT_SETTER_ADMIN_ROLE",
            "nameLocation": "10128:30:140",
            "parameters": {
              "id": 55604,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10158:2:140"
            },
            "returnParameters": {
              "id": 55607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55606,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55608,
                  "src": "10184:7:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 55605,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10184:7:140",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10183:9:140"
            },
            "scope": 55633,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 55614,
            "nodeType": "FunctionDefinition",
            "src": "10386:68:140",
            "nodes": [],
            "documentation": {
              "id": 55609,
              "nodeType": "StructuredDocumentation",
              "src": "10197:186:140",
              "text": "@notice Bytes32 representation of the role used for updating the amount being staked on a user/amount a user is staking globally.\n @return bytes32 value of the stat setter role."
            },
            "functionSelector": "66951bc1",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "STAKING_STAT_SETTER_ROLE",
            "nameLocation": "10395:24:140",
            "parameters": {
              "id": 55610,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10419:2:140"
            },
            "returnParameters": {
              "id": 55613,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55612,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55614,
                  "src": "10445:7:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 55611,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10445:7:140",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10444:9:140"
            },
            "scope": 55633,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 55620,
            "nodeType": "FunctionDefinition",
            "src": "10643:70:140",
            "nodes": [],
            "documentation": {
              "id": 55615,
              "nodeType": "StructuredDocumentation",
              "src": "10458:182:140",
              "text": "@notice Bytes32 representation of the role used for period length, deflationary percentages, and the default payee.\n @return bytes32 value of the staking config setter role."
            },
            "functionSelector": "a4303a45",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "STAKING_CONFIG_SETTER_ROLE",
            "nameLocation": "10652:26:140",
            "parameters": {
              "id": 55616,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10678:2:140"
            },
            "returnParameters": {
              "id": 55619,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55618,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55620,
                  "src": "10704:7:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 55617,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10704:7:140",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10703:9:140"
            },
            "scope": 55633,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 55626,
            "nodeType": "FunctionDefinition",
            "src": "10855:59:140",
            "nodes": [],
            "documentation": {
              "id": 55621,
              "nodeType": "StructuredDocumentation",
              "src": "10717:135:140",
              "text": "@notice Bytes32 representation of the role used for updating the ENS resolvers.\n @return bytes32 value of the ens setter role."
            },
            "functionSelector": "c2544987",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "ENS_SETTER_ROLE",
            "nameLocation": "10864:15:140",
            "parameters": {
              "id": 55622,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10879:2:140"
            },
            "returnParameters": {
              "id": 55625,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55624,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55626,
                  "src": "10905:7:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 55623,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10905:7:140",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10904:9:140"
            },
            "scope": 55633,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 55632,
            "nodeType": "FunctionDefinition",
            "src": "11058:65:140",
            "nodes": [],
            "documentation": {
              "id": 55627,
              "nodeType": "StructuredDocumentation",
              "src": "10918:137:140",
              "text": "@notice Bytes32 representation of the role used for updating uniswap pools.\n @return bytes32 value of the swap pool setter role."
            },
            "functionSelector": "363227e5",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "SWAP_POOL_SETTER_ROLE",
            "nameLocation": "11067:21:140",
            "parameters": {
              "id": 55628,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11088:2:140"
            },
            "returnParameters": {
              "id": 55631,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55630,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 55632,
                  "src": "11114:7:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 55629,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11114:7:140",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11113:9:140"
            },
            "scope": 55633,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IRareStakingRegistry",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 55326,
          "nodeType": "StructuredDocumentation",
          "src": "57:146:140",
          "text": "@author koloz, charlescrain\n @title IRareStakingRegistry\n @notice The Staking Registry interface containing all functions, events, etc."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          55633
        ],
        "name": "IRareStakingRegistry",
        "nameLocation": "213:20:140",
        "scope": 55634,
        "usedErrors": [
          55375,
          55378,
          55381,
          55384,
          55387,
          55390,
          55393,
          55396
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 140
}