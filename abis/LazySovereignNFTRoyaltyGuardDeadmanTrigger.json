{
  "abi": [
    {
      "inputs": [],
      "name": "CantAddToOFFList",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "DeadmanTriggerStillActive",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MustBeAdmin",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Unauthorized",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_updater",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_addedAddr",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "enum IRoyaltyGuard.ListType",
          "name": "_ListType",
          "type": "uint8"
        }
      ],
      "name": "AddressAddedToList",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_updater",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_removedAddr",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "enum IRoyaltyGuard.ListType",
          "name": "_ListType",
          "type": "uint8"
        }
      ],
      "name": "AddressRemovedList",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "ContractDisabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_activator",
          "type": "address"
        }
      ],
      "name": "DeadmanTriggerActivated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_updater",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_oldDatetime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_newDatetime",
          "type": "uint256"
        }
      ],
      "name": "DeadmanTriggerDatetimeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_updater",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum IRoyaltyGuard.ListType",
          "name": "_listType",
          "type": "uint8"
        }
      ],
      "name": "ListCleared",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_updater",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "enum IRoyaltyGuard.ListType",
          "name": "_oldListType",
          "type": "uint8"
        },
        {
          "indexed": true,
          "internalType": "enum IRoyaltyGuard.ListType",
          "name": "_newListType",
          "type": "uint8"
        }
      ],
      "name": "ListTypeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        }
      ],
      "name": "MetadataLocked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        }
      ],
      "name": "MetadataUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "numberOfTokens",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        }
      ],
      "name": "PrepareMint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "metadataUri",
          "type": "string"
        }
      ],
      "name": "TokenURIUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "activateDeadmanListTrigger",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IRoyaltyGuard.ListType",
          "name": "_listType",
          "type": "uint8"
        },
        {
          "internalType": "address[]",
          "name": "_addrs",
          "type": "address[]"
        }
      ],
      "name": "batchAddAddressToRoyaltyList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IRoyaltyGuard.ListType",
          "name": "_listType",
          "type": "uint8"
        },
        {
          "internalType": "address[]",
          "name": "_addrs",
          "type": "address[]"
        }
      ],
      "name": "batchRemoveAddressToRoyaltyList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IRoyaltyGuard.ListType",
          "name": "_listType",
          "type": "uint8"
        }
      ],
      "name": "clearList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "deleteToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disableContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDeadmanTriggerAvailableDatetime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDefaultRoyaltyReceiver",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getInUseList",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IRoyaltyGuard.ListType",
          "name": "_listType",
          "type": "uint8"
        }
      ],
      "name": "getList",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getListType",
      "outputs": [
        {
          "internalType": "enum IRoyaltyGuard.ListType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMintConfig",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "numberOfTokens",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "baseURI",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "lockedMetadata",
              "type": "bool"
            }
          ],
          "internalType": "struct LazySovereignNFT.MintConfig",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "hasAdminPermission",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_creator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_maxTokens",
          "type": "uint256"
        }
      ],
      "name": "init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isApprovedMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isOperatorInList",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "mintTo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_numberOfTokens",
          "type": "uint256"
        }
      ],
      "name": "prepareMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_numberOfTokens",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_minter",
          "type": "address"
        }
      ],
      "name": "prepareMintWithMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_salePrice",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "royaltyAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_numYears",
          "type": "uint256"
        }
      ],
      "name": "setDeadmanListTriggerRenewalDuration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "setDefaultRoyaltyReceiver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_minter",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isMinter",
          "type": "bool"
        }
      ],
      "name": "setMinterApproval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "setRoyaltyReceiverForToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IRoyaltyGuard.ListType",
          "name": "_newListType",
          "type": "uint8"
        }
      ],
      "name": "toggleListType",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenCreator",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        }
      ],
      "name": "updateBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_metadataUri",
          "type": "string"
        }
      ],
      "name": "updateTokenURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6080806040523461001657613551908161001c8239f35b600080fdfe60406080815260048036101561001457600080fd5b600090813560e01c8063012cf1e8146121ac57806301ffc9a7146120d457806306fdde031461202a578063081812fc14612009578063095ea7b314611dec5780630de54ba014611d9d57806318160ddd14611d7d57806318e97fd114611b995780632042748614611b6557806321c4a5d814611aae57806323b872dd14611a895780632a55205a146119f65780632ce878da146119835780633403c4e91461195a5780633a3d146f1461191b5780633ebc82c5146118d957806340c1a064146118af57806342842e0e1461187b57806342966c681461185f578063472a6638146117c057806353df5c7c1461175e5780635aec8d62146116b65780635edc7c19146111ae5780636297c16c146111305780636352211e146110fe57806370a082311461106a578063715018a61461100d578063717392ed14610fed578063755edd1714610daa57806387bc793f14610d82578063894ba83314610d345780638da5cb5b14610d0b578063931688cb14610b3e5780639338bb5d14610aa557806395d89b41146109c05780639e860f2a146108bb578063a22cb4651461075d578063ab69607a1461073e578063b390ac2514610705578063b88d4fde1461067c578063b9fbd25c146105fd578063bc7194551461054f578063c87b56dd14610513578063e8315742146104f3578063e985e9c5146104a5578063eab851181461044a578063ee07080514610427578063efc32cd4146103d8578063f2fde38b146103415763ff6e8c8f1461024657600080fd5b3461033d57610254366123a6565b6033546001600160a01b0396908716330361032e57600384101561031b57831561030c575090610285913691612bde565b93835b8551811015610308576102b061029d84612c44565b836102a8848a612c5e565b511690612ca0565b5082826102bd8389612c5e565b5116337f14155f749dc3f9cd2bf890d6d3a47069f77ae35befcee11c8b1a3ba41cba15368880a460001981146102f557600101610288565b634e487b7160e01b855260118452602485fd5b8480f35b51632de777a160e11b81528490fd5b634e487b7160e01b865260218552602486fd5b51635c510c8360e11b81528490fd5b5080fd5b508290346103d45760203660031901126103d45761035d6122a5565b916103666124bd565b6001600160a01b03831615610382578361037f84612515565b80f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b82843461033d578060031936011261033d576103f26122a5565b906103fb6124bd565b602435835260fd602052822080546001600160a01b0319166001600160a01b0390921691909117905580f35b82843461033d578160031936011261033d5760209060ff80541690519015158152f35b82843461033d57602036600319011261033d5760209061049c61046b6122a5565b61047a60ff6101095416612c44565b6001600160a01b03909116600090815260019091016020526040902054151590565b90519015158152f35b82843461033d578060031936011261033d5760ff816020936104c56122a5565b6104cd6122d6565b6001600160a01b039182168352609c875283832091168252855220549151911615158152f35b82843461033d578160031936011261033d57602090610100549051908152f35b5091903461054c57602036600319011261054c57506105356105489235612f37565b9051918291602083526020830190612280565b0390f35b80fd5b5082346103d45760203660031901126103d45781359160038310156105f9576033546001600160a01b031633036105eb575061058a82612c44565b805490848155816105cd575b50507f7efc19cf93d497a6a56103ea89a39d51c0cad74a817ed3cd0ecaff9823d4da249051806105c733948261237d565b0390a280f35b845260208420908101905b81811015610596578481556001016105d8565b9051635c510c8360e11b8152fd5b8380fd5b508290346103d45760603660031901126103d45780356001600160401b0381116105f95761065b916106319136910161231b565b919061063b6122c0565b926106446124bd565b61065260ff80541615612ec3565b6024359161327f565b6001600160a01b031682526101026020528120805460ff1916600117905580f35b503461033d57608036600319011261033d576106966122a5565b9061069f6122d6565b91604435606435936001600160401b0385116107015736602386011215610701576106d96106fc9486602461037f98369301359101612486565b926106ec6106e784336127c6565b6126ed565b6106f783838361288e565b612abb565b6127a2565b8580fd5b5082346103d45736600319011261033d5780356001600160401b0381116103d45761037f916107369136910161231b565b6106446124bd565b82843461033d578160031936011261033d5760209060fc549051908152f35b5082346103d45761076d366122ec565b919060ff6101095416600381101561031b57600181036108715750600180865261010860209081528387206001600160a01b038416600090815292019052604090205415610862575b6001600160a01b0316923384146108205750338452609c6020528084208385526020526107f1828286209060ff801983541691151516179055565b5190151581527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b6020606492519162461bcd60e51b8352820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152fd5b81516282b42960e81b81528490fd5b6002036107b657600285526101086020526108a782862060018060a01b0383169060019160005201602052604060002054151590565b156107b65781516282b42960e81b81528490fd5b503461033d576108ca366123a6565b6033546001600160a01b0396908716330361032e5750906108ec913691612bde565b93600382101590816109ad5782610901578480f35b845b865181101561099d5761092b61091885612c44565b83610923848b612c5e565b511690612d13565b508282610938838a612c5e565b51169061098a578490337fc72e29af1b34de3dec3a764b4ca4d85b9c380ab33b9b268d29b6e7008bd0ed958980a4600019811461097757600101610903565b634e487b7160e01b865260118552602486fd5b634e487b7160e01b875260218652602487fd5b5050505050905080388080808480f35b634e487b7160e01b855260218452602485fd5b82843461033d578160031936011261033d57805190826098546109e2816125d0565b80855291600191808316908115610a7d5750600114610a20575b505050610a0e8261054894038361244a565b51918291602083526020830190612280565b9450609885527f2237a976fa961f5921fd19f2b03c925c725d77b20ce8f790c19709c03de4d8145b828610610a6557505050610a0e82602061054895820101946109fc565b80546020878701810191909152909501948101610a48565b610548975086935060209250610a0e94915060ff191682840152151560051b820101946109fc565b50503461054c578060031936011261054c57818051610ac3816123fe565b8281526060602082015201528051610ada816123fe565b610105548152815191610af783610af08161260a565b038461244a565b60208201928352610b3160ff6101075416918084019215158352606081519586956020875251602087015251918501526080840190612280565b9051151560608301520390f35b503461033d576020806003193601126103d4576001600160401b03908235828111610d0757610b70903690850161231b565b939092610b7b6124bd565b60ff6101075416610cbb578411610ca8575061010690610ba484610b9f84546125d0565b612e63565b8490601f8511600114610c11575094610c00918486977f1c306e70c05992619e2128ad1ef88df75f36c9476282e59f51401b2abaa42e4e9791610c06575b508560011b906000198760031b1c19161790555b5192839283612f0f565b0390a180f35b905084013538610be2565b90601f1985168387526000805160206134fc8339815191529287905b828210610c9057505091610c009391867f1c306e70c05992619e2128ad1ef88df75f36c9476282e59f51401b2abaa42e4e98999410610c76575b5050600185811b019055610bf6565b850135600019600388901b60f8161c191690553880610c67565b80600185968294968a01358155019501930190610c2d565b634e487b7160e01b855260419052602484fd5b5060849186519162461bcd60e51b8352820152602160248201527f757064617465426173655552493a3a6d65746164617461206973206c6f636b656044820152601960fa1b6064820152fd5b8480fd5b82843461033d578160031936011261033d5760335490516001600160a01b039091168152602090f35b823461054c578060031936011261054c57610d4d6124bd565b600160ff1960ff54161760ff55337f793bc6423dd0257d64f9d47db72fd4b2162f4541aa41740ba1c5fb5e2cd41bcd8280a280f35b82843461033d578160031936011261033d576105489060ff610109541690519182918261237d565b50913461033d57602092836003193601126103d457610dc76122a5565b92610dd660ff80541615612ec3565b6033546001600160a01b039190821633148015610fd8575b15610f7c5760fc548260fb541692610104966001885401809855610100548811610f3b57865191610e1e8361242f565b8483528116958615610efa57506106fc8794939289610edd93610e5f610e5983600052609960205260018060a01b0360406000205416151590565b15613233565b600082815260996020526040902054610e82906001600160a01b03161515610e59565b898752609a8d528787206001815401905581875260998d52818888209a6001600160601b0360a01b9b818d825416179055887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a461299f565b86825260fe88528282205560fd8752209182541617905551908152f35b6064908a808a519262461bcd60e51b845283015260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152fd5b6064868a808a519262461bcd60e51b845283015260248201527f5f637265617465546f6b656e3a3a6578636565646564206d6178546f6b656e736044820152fd5b835162461bcd60e51b8152808401879052603060248201527f6c617a794d696e743a3a6f6e6c79206f776e6572206f7220617070726f76656460448201526f081b5a5b9d195c8818d85b881b5a5b9d60821b6064820152608490fd5b50338152610102865260ff8482205416610dee565b82843461033d578160031936011261033d5760209061010a549051908152f35b823461054c578060031936011261054c576110266124bd565b603380546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461033d57602036600319011261033d576001600160a01b0361108c6122a5565b169081156110a9576020848085858152609a845220549051908152f35b608490602085519162461bcd60e51b8352820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152fd5b5091903461054c57602036600319011261054c575061111f602092356125aa565b90516001600160a01b039091168152f35b508290346103d45760203660031901126103d457803591611150836125aa565b336001600160a01b039091160361116b578361037f84612b46565b906020606492519162461bcd60e51b8352820152601f60248201527f4d75737420626520746865206f776e6572206f662074686520746f6b656e2e006044820152fd5b503461033d57608036600319011261033d576001600160401b039281358481116105f9576111df903690840161231b565b9290602435868111610701576111f8903690840161231b565b6112039791976122c0565b9387549860ff94858b60081c16159889809a6116aa575b8015611694575b1561163a5760ff19808d1660019081178d559b9c999a998a611629575b506001600160a01b038916156115e6579161129191611281898f6112999796600a60fc558254168255606435610100555460081c1661127c81612e03565b612e03565b61128a33612515565b3691612486565b933691612486565b906112ad858b5460081c1661127c81612e03565b82518481116115d357806112c26097546125d0565b94601f95868111611562575b506020908d8784116001146114e357926114d8575b5050600019600383901b1c1916908a1b176097555b81519384116114c5575061130d6098546125d0565b828111611462575b5060209183116001146113d657918061138a959492611362948b926113cb575b5050600019600383901b1c191690881b176098555b875460081c1661135981612e03565b61127c81612e03565b60fb80546001600160a01b0319166001600160a01b0383161790556113856124bd565b612515565b611392578280f35b825461ff0019168355519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a138808280f35b015190503880611335565b609889528792917f2237a976fa961f5921fd19f2b03c925c725d77b20ce8f790c19709c03de4d81491601f1984168b5b81811061144a5750916113629593918561138a9998969410611431575b505050811b0160985561134a565b015160001960f88460031b161c19169055388080611423565b8284015185558b969094019360209384019301611406565b60988a527f2237a976fa961f5921fd19f2b03c925c725d77b20ce8f790c19709c03de4d8148380860160051c820192602087106114bc575b0160051c019089905b8281106114b1575050611315565b8b81550189906114a3565b9250819261149a565b634e487b7160e01b8a5260419052602489fd5b0151905038806112e3565b91908d9450601f198416609784527f354a83ed9988f79f6038d4c7a7dadbad8af32f4ad6df893e0e5807a1b1944ff9935b81811061154a57508411611531575b505050811b016097556112f8565b015160001960f88460031b161c19169055388080611523565b8284015185558f969094019360209384019301611514565b90915060978d527f354a83ed9988f79f6038d4c7a7dadbad8af32f4ad6df893e0e5807a1b1944ff98680850160051c820192602086106115ca575b859493910160051c909101908d908f5b8382106115bc575050506112ce565b81558594508e91018f6115ad565b9250819261159d565b634e487b7160e01b8b526041825260248bfd5b8a5162461bcd60e51b8152602081870152601e60248201527f63726561746f722063616e6e6f74206265206e756c6c206164647265737300006044820152606490fd5b61ffff1916610101178d553861123e565b885162461bcd60e51b8152602081860152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b15801561122157506001878d1614611221565b506001878d161061121a565b5082346103d457826003193601126103d45761010a54421061175157506101099081549060ff821690600382101561173e57508390337f12282389323caf08dd4e02c490ef05bc7edb56967c085742687aad3cc81aa15f8380a460ff19169055337f60faf76514baf225c418dfc1e3c75bed0bd280f0436999e12cb0a73acb0f9a468280a280f35b634e487b7160e01b855260219052602484fd5b5163807a684760e01b8152fd5b82843461033d578160031936011261033d577fb634b0cb94234b05eabb1438717e0e645bfd84788ae1263682242327563cde5e9061179a6124bd565b5160208152806117ac6020820161260a565b0390a1610107805460ff1916600117905580f35b508290346103d45760203660031901126103d45780359160038310156105f9576033546001600160a01b0316330361185257506101099182549160ff831690600382101561183f5750908060ff92337f12282389323caf08dd4e02c490ef05bc7edb56967c085742687aad3cc81aa15f8880a4169060ff191617905580f35b634e487b7160e01b865260219052602485fd5b51635c510c8360e11b8152fd5b503461033d57602036600319011261033d5761037f9035612b46565b82843461033d576106fc61037f9161189236612348565b9192519261189f8461242f565b8684526106ec6106e784336127c6565b82843461033d57602036600319011261033d5760335490516001600160a01b039091168152602090f35b823461054c57602036600319011261054c5761037f6118f66122a5565b6118fe6124bd565b60018060a01b03166001600160601b0360a01b60fb54161760fb55565b82843461033d57602036600319011261033d5760209160ff9082906001600160a01b036119466122a5565b168152610102855220541690519015158152f35b82843461033d578160031936011261033d5760fb5490516001600160a01b039091168152602090f35b50503461054c578060031936011261054c576119a460ff6101095416612c44565b9180519182845490818152602080910195835280832092905b8282106119df5761054886866119d5828b038361244a565b5191829182612219565b8354875295860195600193840193909101906119bd565b5091903461054c578160031936011261054c578235815260fd60205281812054602435906001600160a01b039081168015611a7d57925b60fe602052848120548015611a7357925b838102938185041490151715611a605750835192168252606490046020820152f35b634e487b7160e01b815260118652602490fd5b5060fc5492611a3e565b508060fb541692611a2d565b823461054c5761037f611a9b36612348565b91611aa96106e784336127c6565b61288e565b5082346103d45760203660031901126103d4576033548235906001600160a01b03163303611b57576301e1338090818102918183041490151715611b4457420191824211611b31575061010a907f6e948191a35d69000746799fef50c705bbdc93bd5a7577e9e9eb879c04bdebc982549180519283528460208401523392a25580f35b634e487b7160e01b845260119052602483fd5b634e487b7160e01b845260118352602484fd5b5051635c510c8360e11b8152fd5b82843461033d57602036600319011261033d57602090611b836122a5565b60018060a01b0380603354169116149051908152f35b503461033d578260031936011261033d578035906001600160401b0390602435828111610d0757611bcd903690830161231b565b929091611bd86124bd565b60ff6101075416611d2f578486526020906101038252878720928511611d1c5750611c0382546125d0565b601f8111611cd9575b508590601f8511600114611c685750956105c7918487987f931f495b9a8e5d8e61946ea5d61e021f636cfe213a801f97589c18c152e408bd979891610c0657508560011b906000198760031b1c19161790555192839283612f0f565b90601f1985168388528288209288905b828210611cc1575050916105c79391867f931f495b9a8e5d8e61946ea5d61e021f636cfe213a801f97589c18c152e408bd98999a9410610c76575050600185811b019055610bf6565b80600185968294968a01358155019501930190611c78565b828752818720601f860160051c810191838710611d12575b601f0160051c01905b818110611d075750611c0c565b878155600101611cfa565b9091508190611cf1565b634e487b7160e01b875260419052602486fd5b608490602088519162461bcd60e51b8352820152602260248201527f757064617465546f6b656e5552493a3a6d65746164617461206973206c6f636b604482015261195960f21b6064820152fd5b82843461033d578160031936011261033d57602090610104549051908152f35b82843461033d5761037f90611db1366122ec565b9190611dbb6124bd565b611dc960ff80541615612ec3565b60018060a01b0316845261010260205283209060ff801983541691151516179055565b508290346103d457816003193601126103d457611e076122a5565b906024359260ff61010954166003811015611ff65760018103611faf5750600180865261010860209081528287206001600160a01b038616600090815292019052604090205415611fa3575b6001600160a01b03918280611e67876125aa565b16941693808514611f5657803314908115611f37575b5015611ecf5750838552609b602052842080546001600160a01b03191683179055611ea7836125aa565b167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b6020608492519162461bcd60e51b8352820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152fd5b90508652609c60205281862033875260205260ff828720541687611e7d565b506020608492519162461bcd60e51b8352820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152fd5b516282b42960e81b8152fd5b600203611e535760028552610108602052611fe581862060018060a01b0385169060019160005201602052604060002054151590565b15611e5357516282b42960e81b8152fd5b634e487b7160e01b865260218352602486fd5b5091903461054c57602036600319011261054c575061111f602092356126af565b82843461033d578160031936011261033d578051908260975461204c816125d0565b80855291600191808316908115610a7d575060011461207757505050610a0e8261054894038361244a565b9450609785527f354a83ed9988f79f6038d4c7a7dadbad8af32f4ad6df893e0e5807a1b1944ff95b8286106120bc57505050610a0e82602061054895820101946109fc565b8054602087870181019190915290950194810161209f565b508290346103d45760203660031901126103d45735906001600160e01b031982168083036105f9576020935063fa31a45b60e01b811492831561219b575b8315612123575b5050519015158152f35b919250631030681960e21b81149190821561218a575b8215612161575b508115612151575b50908380612119565b61215b91506134b7565b83612148565b90915063152a902d60e11b14801561217b575b9084612140565b50612185816134b7565b612174565b6301ffc9a760e01b81149250612139565b6301ffc9a760e01b82149350612112565b5082346103d457602091826003193601126105f9573560038110156105f9576121d490612c44565b9281518093808654928381520195835280832092905b8282106122025761054886866119d5828b038361244a565b8354875295860195600193840193909101906121ea565b6020908160408183019282815285518094520193019160005b828110612240575050505090565b83516001600160a01b031685529381019392810192600101612232565b60005b8381106122705750506000910152565b8181015183820152602001612260565b906020916122998151809281855285808601910161225d565b601f01601f1916010190565b600435906001600160a01b03821682036122bb57565b600080fd5b604435906001600160a01b03821682036122bb57565b602435906001600160a01b03821682036122bb57565b60409060031901126122bb576004356001600160a01b03811681036122bb579060243580151581036122bb5790565b9181601f840112156122bb578235916001600160401b0383116122bb57602083818601950101116122bb57565b60609060031901126122bb576001600160a01b039060043582811681036122bb579160243590811681036122bb579060443590565b9190602083019260038210156123905752565b634e487b7160e01b600052602160045260246000fd5b60406003198201126122bb5760043560038110156122bb57916024356001600160401b03928382116122bb57806023830112156122bb5781600401359384116122bb5760248460051b830101116122bb576024019190565b606081019081106001600160401b0382111761241957604052565b634e487b7160e01b600052604160045260246000fd5b602081019081106001600160401b0382111761241957604052565b90601f801991011681019081106001600160401b0382111761241957604052565b6001600160401b03811161241957601f01601f191660200190565b9291926124928261246b565b916124a0604051938461244a565b8294818452818301116122bb578281602093846000960137010152565b6033546001600160a01b031633036124d157565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b603380546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b1561256557565b60405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606490fd5b6000908152609960205260409020546001600160a01b03166125cd81151561255e565b90565b90600182811c92168015612600575b60208310146125ea57565b634e487b7160e01b600052602260045260246000fd5b91607f16916125df565b9060009161010690815461261d816125d0565b8083529260019180831690811561268a575060011461263d575b50505050565b90929394506000526000805160206134fc833981519152916000925b8484106126725750506020925001019038808080612637565b80546020858501810191909152909301928101612659565b92505050602093945060ff929192191683830152151560051b01019038808080612637565b6000818152609960205260409020546126d2906001600160a01b0316151561255e565b6000908152609b60205260409020546001600160a01b031690565b156126f457565b60405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608490fd5b60809060208152603260208201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60608201520190565b156127a957565b60405162461bcd60e51b8152806127c26004820161274f565b0390fd5b906001600160a01b0380806127da846125aa565b1693169183831493841561280d575b5083156127f7575b50505090565b612803919293506126af565b16143880806127f1565b909350600052609c60205260406000208260005260205260ff6040600020541692386127e9565b1561283b57565b60405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608490fd5b906128b69161289c846125aa565b6001600160a01b0393918416928492909183168414612834565b1691821561294e57816128d3916128cc866125aa565b1614612834565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6000848152609b602052604081206001600160601b0360a01b90818154169055838252609a6020526040822060001981540190558482526040822060018154019055858252609960205284604083209182541617905580a4565b60405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b9192600092909190803b15612ab1576129ed946040518092630a85bd0160e11b9485835233600484015287602484015260448301526080606483015281878160209a8b966084830190612280565b03926001600160a01b03165af1849181612a71575b50612a60575050503d600014612a58573d612a1c8161246b565b90612a2a604051928361244a565b81528091833d92013e5b80519182612a555760405162461bcd60e51b8152806127c26004820161274f565b01fd5b506060612a34565b6001600160e01b0319161492509050565b9091508581813d8311612aaa575b612a89818361244a565b81010312610d0757516001600160e01b031981168103610d07579038612a02565b503d612a7f565b5050915050600190565b9293600093909291803b15612b3b57948491612b159660405180948193630a85bd0160e11b9788845233600485015260018060a01b0380921660248501526044840152608060648401528260209b8c976084830190612280565b0393165af1849181612a715750612a60575050503d600014612a58573d612a1c8161246b565b505050915050600190565b612b536106e782336127c6565b612b5c816125aa565b50612b66816125aa565b6000828152609b6020908152604080832080546001600160a01b03199081169091556001600160a01b03909416808452609a83528184208054600019019055858452609990925282208054909316909255907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8280a4565b9092916001600160401b038411612419578360051b6040519260208094612c078285018261244a565b80978152019181019283116122bb57905b828210612c255750505050565b81356001600160a01b03811681036122bb578152908301908301612c18565b600381101561239057600052610108602052604060002090565b8051821015612c725760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b8054821015612c725760005260206000200190600090565b6000828152600182016020526040902054612d0c57805490680100000000000000008210156124195782612cf5612cde846001809601855584612c88565b819391549060031b91821b91600019901b19161790565b905580549260005201602052604060002055600190565b5050600090565b90600182019060009281845282602052604084205490811515600014612dfc5760001991808301818111612de857825490848201918211612dd457808203612d9f575b50505080548015612d8b57820191612d6e8383612c88565b909182549160031b1b191690555582526020526040812055600190565b634e487b7160e01b86526031600452602486fd5b612dbf612daf612cde9386612c88565b90549060031b1c92839286612c88565b90558652846020526040862055388080612d56565b634e487b7160e01b88526011600452602488fd5b634e487b7160e01b87526011600452602487fd5b5050505090565b15612e0a57565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b601f8111612e6f575050565b60009061010682526000805160206134fc833981519152906020601f850160051c83019410612eb9575b601f0160051c01915b828110612eae57505050565b818155600101612ea2565b9092508290612e99565b15612eca57565b60405162461bcd60e51b815260206004820152601e60248201527f436f6e7472616374206d757374206e6f742062652064697361626c65642e00006044820152606490fd5b90918060409360208452816020850152848401376000828201840152601f01601f1916010190565b60009080825261010390602090828252604092612f56848620546125d0565b61318b575092839281907a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000858181101561317e575b50506d04ee2d6d415b85acef810000000080861015613170575b50662386f26fc1000080861015613161575b506305f5e10080861015613152575b5061271080861015613143575b506064851015613133575b600a80951015613129575b6001948584019686602161300f612ffa8b61246b565b9a61300787519c8d61244a565b808c5261246b565b8a89019790601f19013689378a0101905b6130fa575b50505051948593826101069081549161303d836125d0565b928981169081156130d95750600114613092575b50505050600693928261307e64173539b7b760d91b93602f60f81b6125cd9996525180938684019061225d565b01918201520360191981018452018261244a565b815292935090916000805160206134fc8339815191525b8282106130c357505084010190828161307e6125cd613051565b80548983018501528896509083019087016130a9565b60ff1916858a0152505050801515028501019150828161307e6125cd613051565b600019019082906f181899199a1a9b1b9c1cb0b131b232b360811b8282061a8353049087826130205750613025565b9160010191612fe4565b9193606460029104940191612fd9565b60049193950494019138612fce565b60089193950494019138612fc1565b60109193950494019138612fb2565b849193950494019138612fa0565b0494509150813880612f86565b90849392935282528083209051928391818154906131a8826125d0565b8086529260019280841690811561320f57506001146131d2575b505050506125cd9250038261244a565b815285812095935091905b8183106131f75750506125cd9350820101388080806131c2565b855487840185015294850194869450918301916131dd565b93505050506125cd94925060ff191682840152151560051b820101388080806131c2565b1561323a57565b60405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606490fd5b929190610100548211613473576101045461341457604051936132a1856123fe565b8285526132af368383612486565b6020908082880152604087019160009788845251610105558151906001600160401b03821161340057610106926132ea83610b9f86546125d0565b81601f841160011461336b57509082917f6f1d651e6e0c8f86bd32a20c22a644d1e34fabf72307ff95d51b9f5892ddba1998999a92613360575b50508160011b916000199060031b1c19161790555b5115156101079060ff8019835416911617905561335b60405192839283612f0f565b0390a2565b015190503880613324565b848b5292996000805160206134fc83398151915293601f198c1691905b8282106133e857505091600193918b7f6f1d651e6e0c8f86bd32a20c22a644d1e34fabf72307ff95d51b9f5892ddba199a9b9c94106133cf575b505050811b019055613339565b015160001960f88460031b161c191690553880806133c2565b80600186978294978701518155019601940190613388565b634e487b7160e01b89526041600452602489fd5b60405162461bcd60e51b815260206004820152603160248201527f5f707265706172654d696e743a3a63616e206f6e6c792070726570617265206d604482015270696e742077697468203020746f6b656e7360781b6064820152608490fd5b606460405162461bcd60e51b815260206004820152602060248201527f5f707265706172654d696e743a3a6578636565646564206d6178546f6b656e736044820152fd5b63ffffffff60e01b166380ac58cd60e01b81149081156134ea575b81156134dc575090565b6301ffc9a760e01b14919050565b635b5e139f60e01b811491506134d256fec9ef9fceea91e87b2c84ea400a44fde78842aae8aa24cd4b502ce5fb4d91e63ba2646970667358221220b8968dc29c8c48e0866375ea26516ac82f253e346d7f6867a8d6075fab514a4764736f6c63430008120033",
    "sourceMap": "212:1724:209:-:0;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60406080815260048036101561001457600080fd5b600090813560e01c8063012cf1e8146121ac57806301ffc9a7146120d457806306fdde031461202a578063081812fc14612009578063095ea7b314611dec5780630de54ba014611d9d57806318160ddd14611d7d57806318e97fd114611b995780632042748614611b6557806321c4a5d814611aae57806323b872dd14611a895780632a55205a146119f65780632ce878da146119835780633403c4e91461195a5780633a3d146f1461191b5780633ebc82c5146118d957806340c1a064146118af57806342842e0e1461187b57806342966c681461185f578063472a6638146117c057806353df5c7c1461175e5780635aec8d62146116b65780635edc7c19146111ae5780636297c16c146111305780636352211e146110fe57806370a082311461106a578063715018a61461100d578063717392ed14610fed578063755edd1714610daa57806387bc793f14610d82578063894ba83314610d345780638da5cb5b14610d0b578063931688cb14610b3e5780639338bb5d14610aa557806395d89b41146109c05780639e860f2a146108bb578063a22cb4651461075d578063ab69607a1461073e578063b390ac2514610705578063b88d4fde1461067c578063b9fbd25c146105fd578063bc7194551461054f578063c87b56dd14610513578063e8315742146104f3578063e985e9c5146104a5578063eab851181461044a578063ee07080514610427578063efc32cd4146103d8578063f2fde38b146103415763ff6e8c8f1461024657600080fd5b3461033d57610254366123a6565b6033546001600160a01b0396908716330361032e57600384101561031b57831561030c575090610285913691612bde565b93835b8551811015610308576102b061029d84612c44565b836102a8848a612c5e565b511690612ca0565b5082826102bd8389612c5e565b5116337f14155f749dc3f9cd2bf890d6d3a47069f77ae35befcee11c8b1a3ba41cba15368880a460001981146102f557600101610288565b634e487b7160e01b855260118452602485fd5b8480f35b51632de777a160e11b81528490fd5b634e487b7160e01b865260218552602486fd5b51635c510c8360e11b81528490fd5b5080fd5b508290346103d45760203660031901126103d45761035d6122a5565b916103666124bd565b6001600160a01b03831615610382578361037f84612515565b80f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b82843461033d578060031936011261033d576103f26122a5565b906103fb6124bd565b602435835260fd602052822080546001600160a01b0319166001600160a01b0390921691909117905580f35b82843461033d578160031936011261033d5760209060ff80541690519015158152f35b82843461033d57602036600319011261033d5760209061049c61046b6122a5565b61047a60ff6101095416612c44565b6001600160a01b03909116600090815260019091016020526040902054151590565b90519015158152f35b82843461033d578060031936011261033d5760ff816020936104c56122a5565b6104cd6122d6565b6001600160a01b039182168352609c875283832091168252855220549151911615158152f35b82843461033d578160031936011261033d57602090610100549051908152f35b5091903461054c57602036600319011261054c57506105356105489235612f37565b9051918291602083526020830190612280565b0390f35b80fd5b5082346103d45760203660031901126103d45781359160038310156105f9576033546001600160a01b031633036105eb575061058a82612c44565b805490848155816105cd575b50507f7efc19cf93d497a6a56103ea89a39d51c0cad74a817ed3cd0ecaff9823d4da249051806105c733948261237d565b0390a280f35b845260208420908101905b81811015610596578481556001016105d8565b9051635c510c8360e11b8152fd5b8380fd5b508290346103d45760603660031901126103d45780356001600160401b0381116105f95761065b916106319136910161231b565b919061063b6122c0565b926106446124bd565b61065260ff80541615612ec3565b6024359161327f565b6001600160a01b031682526101026020528120805460ff1916600117905580f35b503461033d57608036600319011261033d576106966122a5565b9061069f6122d6565b91604435606435936001600160401b0385116107015736602386011215610701576106d96106fc9486602461037f98369301359101612486565b926106ec6106e784336127c6565b6126ed565b6106f783838361288e565b612abb565b6127a2565b8580fd5b5082346103d45736600319011261033d5780356001600160401b0381116103d45761037f916107369136910161231b565b6106446124bd565b82843461033d578160031936011261033d5760209060fc549051908152f35b5082346103d45761076d366122ec565b919060ff6101095416600381101561031b57600181036108715750600180865261010860209081528387206001600160a01b038416600090815292019052604090205415610862575b6001600160a01b0316923384146108205750338452609c6020528084208385526020526107f1828286209060ff801983541691151516179055565b5190151581527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b6020606492519162461bcd60e51b8352820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152fd5b81516282b42960e81b81528490fd5b6002036107b657600285526101086020526108a782862060018060a01b0383169060019160005201602052604060002054151590565b156107b65781516282b42960e81b81528490fd5b503461033d576108ca366123a6565b6033546001600160a01b0396908716330361032e5750906108ec913691612bde565b93600382101590816109ad5782610901578480f35b845b865181101561099d5761092b61091885612c44565b83610923848b612c5e565b511690612d13565b508282610938838a612c5e565b51169061098a578490337fc72e29af1b34de3dec3a764b4ca4d85b9c380ab33b9b268d29b6e7008bd0ed958980a4600019811461097757600101610903565b634e487b7160e01b865260118552602486fd5b634e487b7160e01b875260218652602487fd5b5050505050905080388080808480f35b634e487b7160e01b855260218452602485fd5b82843461033d578160031936011261033d57805190826098546109e2816125d0565b80855291600191808316908115610a7d5750600114610a20575b505050610a0e8261054894038361244a565b51918291602083526020830190612280565b9450609885527f2237a976fa961f5921fd19f2b03c925c725d77b20ce8f790c19709c03de4d8145b828610610a6557505050610a0e82602061054895820101946109fc565b80546020878701810191909152909501948101610a48565b610548975086935060209250610a0e94915060ff191682840152151560051b820101946109fc565b50503461054c578060031936011261054c57818051610ac3816123fe565b8281526060602082015201528051610ada816123fe565b610105548152815191610af783610af08161260a565b038461244a565b60208201928352610b3160ff6101075416918084019215158352606081519586956020875251602087015251918501526080840190612280565b9051151560608301520390f35b503461033d576020806003193601126103d4576001600160401b03908235828111610d0757610b70903690850161231b565b939092610b7b6124bd565b60ff6101075416610cbb578411610ca8575061010690610ba484610b9f84546125d0565b612e63565b8490601f8511600114610c11575094610c00918486977f1c306e70c05992619e2128ad1ef88df75f36c9476282e59f51401b2abaa42e4e9791610c06575b508560011b906000198760031b1c19161790555b5192839283612f0f565b0390a180f35b905084013538610be2565b90601f1985168387526000805160206134fc8339815191529287905b828210610c9057505091610c009391867f1c306e70c05992619e2128ad1ef88df75f36c9476282e59f51401b2abaa42e4e98999410610c76575b5050600185811b019055610bf6565b850135600019600388901b60f8161c191690553880610c67565b80600185968294968a01358155019501930190610c2d565b634e487b7160e01b855260419052602484fd5b5060849186519162461bcd60e51b8352820152602160248201527f757064617465426173655552493a3a6d65746164617461206973206c6f636b656044820152601960fa1b6064820152fd5b8480fd5b82843461033d578160031936011261033d5760335490516001600160a01b039091168152602090f35b823461054c578060031936011261054c57610d4d6124bd565b600160ff1960ff54161760ff55337f793bc6423dd0257d64f9d47db72fd4b2162f4541aa41740ba1c5fb5e2cd41bcd8280a280f35b82843461033d578160031936011261033d576105489060ff610109541690519182918261237d565b50913461033d57602092836003193601126103d457610dc76122a5565b92610dd660ff80541615612ec3565b6033546001600160a01b039190821633148015610fd8575b15610f7c5760fc548260fb541692610104966001885401809855610100548811610f3b57865191610e1e8361242f565b8483528116958615610efa57506106fc8794939289610edd93610e5f610e5983600052609960205260018060a01b0360406000205416151590565b15613233565b600082815260996020526040902054610e82906001600160a01b03161515610e59565b898752609a8d528787206001815401905581875260998d52818888209a6001600160601b0360a01b9b818d825416179055887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a461299f565b86825260fe88528282205560fd8752209182541617905551908152f35b6064908a808a519262461bcd60e51b845283015260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152fd5b6064868a808a519262461bcd60e51b845283015260248201527f5f637265617465546f6b656e3a3a6578636565646564206d6178546f6b656e736044820152fd5b835162461bcd60e51b8152808401879052603060248201527f6c617a794d696e743a3a6f6e6c79206f776e6572206f7220617070726f76656460448201526f081b5a5b9d195c8818d85b881b5a5b9d60821b6064820152608490fd5b50338152610102865260ff8482205416610dee565b82843461033d578160031936011261033d5760209061010a549051908152f35b823461054c578060031936011261054c576110266124bd565b603380546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461033d57602036600319011261033d576001600160a01b0361108c6122a5565b169081156110a9576020848085858152609a845220549051908152f35b608490602085519162461bcd60e51b8352820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152fd5b5091903461054c57602036600319011261054c575061111f602092356125aa565b90516001600160a01b039091168152f35b508290346103d45760203660031901126103d457803591611150836125aa565b336001600160a01b039091160361116b578361037f84612b46565b906020606492519162461bcd60e51b8352820152601f60248201527f4d75737420626520746865206f776e6572206f662074686520746f6b656e2e006044820152fd5b503461033d57608036600319011261033d576001600160401b039281358481116105f9576111df903690840161231b565b9290602435868111610701576111f8903690840161231b565b6112039791976122c0565b9387549860ff94858b60081c16159889809a6116aa575b8015611694575b1561163a5760ff19808d1660019081178d559b9c999a998a611629575b506001600160a01b038916156115e6579161129191611281898f6112999796600a60fc558254168255606435610100555460081c1661127c81612e03565b612e03565b61128a33612515565b3691612486565b933691612486565b906112ad858b5460081c1661127c81612e03565b82518481116115d357806112c26097546125d0565b94601f95868111611562575b506020908d8784116001146114e357926114d8575b5050600019600383901b1c1916908a1b176097555b81519384116114c5575061130d6098546125d0565b828111611462575b5060209183116001146113d657918061138a959492611362948b926113cb575b5050600019600383901b1c191690881b176098555b875460081c1661135981612e03565b61127c81612e03565b60fb80546001600160a01b0319166001600160a01b0383161790556113856124bd565b612515565b611392578280f35b825461ff0019168355519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a138808280f35b015190503880611335565b609889528792917f2237a976fa961f5921fd19f2b03c925c725d77b20ce8f790c19709c03de4d81491601f1984168b5b81811061144a5750916113629593918561138a9998969410611431575b505050811b0160985561134a565b015160001960f88460031b161c19169055388080611423565b8284015185558b969094019360209384019301611406565b60988a527f2237a976fa961f5921fd19f2b03c925c725d77b20ce8f790c19709c03de4d8148380860160051c820192602087106114bc575b0160051c019089905b8281106114b1575050611315565b8b81550189906114a3565b9250819261149a565b634e487b7160e01b8a5260419052602489fd5b0151905038806112e3565b91908d9450601f198416609784527f354a83ed9988f79f6038d4c7a7dadbad8af32f4ad6df893e0e5807a1b1944ff9935b81811061154a57508411611531575b505050811b016097556112f8565b015160001960f88460031b161c19169055388080611523565b8284015185558f969094019360209384019301611514565b90915060978d527f354a83ed9988f79f6038d4c7a7dadbad8af32f4ad6df893e0e5807a1b1944ff98680850160051c820192602086106115ca575b859493910160051c909101908d908f5b8382106115bc575050506112ce565b81558594508e91018f6115ad565b9250819261159d565b634e487b7160e01b8b526041825260248bfd5b8a5162461bcd60e51b8152602081870152601e60248201527f63726561746f722063616e6e6f74206265206e756c6c206164647265737300006044820152606490fd5b61ffff1916610101178d553861123e565b885162461bcd60e51b8152602081860152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b15801561122157506001878d1614611221565b506001878d161061121a565b5082346103d457826003193601126103d45761010a54421061175157506101099081549060ff821690600382101561173e57508390337f12282389323caf08dd4e02c490ef05bc7edb56967c085742687aad3cc81aa15f8380a460ff19169055337f60faf76514baf225c418dfc1e3c75bed0bd280f0436999e12cb0a73acb0f9a468280a280f35b634e487b7160e01b855260219052602484fd5b5163807a684760e01b8152fd5b82843461033d578160031936011261033d577fb634b0cb94234b05eabb1438717e0e645bfd84788ae1263682242327563cde5e9061179a6124bd565b5160208152806117ac6020820161260a565b0390a1610107805460ff1916600117905580f35b508290346103d45760203660031901126103d45780359160038310156105f9576033546001600160a01b0316330361185257506101099182549160ff831690600382101561183f5750908060ff92337f12282389323caf08dd4e02c490ef05bc7edb56967c085742687aad3cc81aa15f8880a4169060ff191617905580f35b634e487b7160e01b865260219052602485fd5b51635c510c8360e11b8152fd5b503461033d57602036600319011261033d5761037f9035612b46565b82843461033d576106fc61037f9161189236612348565b9192519261189f8461242f565b8684526106ec6106e784336127c6565b82843461033d57602036600319011261033d5760335490516001600160a01b039091168152602090f35b823461054c57602036600319011261054c5761037f6118f66122a5565b6118fe6124bd565b60018060a01b03166001600160601b0360a01b60fb54161760fb55565b82843461033d57602036600319011261033d5760209160ff9082906001600160a01b036119466122a5565b168152610102855220541690519015158152f35b82843461033d578160031936011261033d5760fb5490516001600160a01b039091168152602090f35b50503461054c578060031936011261054c576119a460ff6101095416612c44565b9180519182845490818152602080910195835280832092905b8282106119df5761054886866119d5828b038361244a565b5191829182612219565b8354875295860195600193840193909101906119bd565b5091903461054c578160031936011261054c578235815260fd60205281812054602435906001600160a01b039081168015611a7d57925b60fe602052848120548015611a7357925b838102938185041490151715611a605750835192168252606490046020820152f35b634e487b7160e01b815260118652602490fd5b5060fc5492611a3e565b508060fb541692611a2d565b823461054c5761037f611a9b36612348565b91611aa96106e784336127c6565b61288e565b5082346103d45760203660031901126103d4576033548235906001600160a01b03163303611b57576301e1338090818102918183041490151715611b4457420191824211611b31575061010a907f6e948191a35d69000746799fef50c705bbdc93bd5a7577e9e9eb879c04bdebc982549180519283528460208401523392a25580f35b634e487b7160e01b845260119052602483fd5b634e487b7160e01b845260118352602484fd5b5051635c510c8360e11b8152fd5b82843461033d57602036600319011261033d57602090611b836122a5565b60018060a01b0380603354169116149051908152f35b503461033d578260031936011261033d578035906001600160401b0390602435828111610d0757611bcd903690830161231b565b929091611bd86124bd565b60ff6101075416611d2f578486526020906101038252878720928511611d1c5750611c0382546125d0565b601f8111611cd9575b508590601f8511600114611c685750956105c7918487987f931f495b9a8e5d8e61946ea5d61e021f636cfe213a801f97589c18c152e408bd979891610c0657508560011b906000198760031b1c19161790555192839283612f0f565b90601f1985168388528288209288905b828210611cc1575050916105c79391867f931f495b9a8e5d8e61946ea5d61e021f636cfe213a801f97589c18c152e408bd98999a9410610c76575050600185811b019055610bf6565b80600185968294968a01358155019501930190611c78565b828752818720601f860160051c810191838710611d12575b601f0160051c01905b818110611d075750611c0c565b878155600101611cfa565b9091508190611cf1565b634e487b7160e01b875260419052602486fd5b608490602088519162461bcd60e51b8352820152602260248201527f757064617465546f6b656e5552493a3a6d65746164617461206973206c6f636b604482015261195960f21b6064820152fd5b82843461033d578160031936011261033d57602090610104549051908152f35b82843461033d5761037f90611db1366122ec565b9190611dbb6124bd565b611dc960ff80541615612ec3565b60018060a01b0316845261010260205283209060ff801983541691151516179055565b508290346103d457816003193601126103d457611e076122a5565b906024359260ff61010954166003811015611ff65760018103611faf5750600180865261010860209081528287206001600160a01b038616600090815292019052604090205415611fa3575b6001600160a01b03918280611e67876125aa565b16941693808514611f5657803314908115611f37575b5015611ecf5750838552609b602052842080546001600160a01b03191683179055611ea7836125aa565b167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b6020608492519162461bcd60e51b8352820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152fd5b90508652609c60205281862033875260205260ff828720541687611e7d565b506020608492519162461bcd60e51b8352820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152fd5b516282b42960e81b8152fd5b600203611e535760028552610108602052611fe581862060018060a01b0385169060019160005201602052604060002054151590565b15611e5357516282b42960e81b8152fd5b634e487b7160e01b865260218352602486fd5b5091903461054c57602036600319011261054c575061111f602092356126af565b82843461033d578160031936011261033d578051908260975461204c816125d0565b80855291600191808316908115610a7d575060011461207757505050610a0e8261054894038361244a565b9450609785527f354a83ed9988f79f6038d4c7a7dadbad8af32f4ad6df893e0e5807a1b1944ff95b8286106120bc57505050610a0e82602061054895820101946109fc565b8054602087870181019190915290950194810161209f565b508290346103d45760203660031901126103d45735906001600160e01b031982168083036105f9576020935063fa31a45b60e01b811492831561219b575b8315612123575b5050519015158152f35b919250631030681960e21b81149190821561218a575b8215612161575b508115612151575b50908380612119565b61215b91506134b7565b83612148565b90915063152a902d60e11b14801561217b575b9084612140565b50612185816134b7565b612174565b6301ffc9a760e01b81149250612139565b6301ffc9a760e01b82149350612112565b5082346103d457602091826003193601126105f9573560038110156105f9576121d490612c44565b9281518093808654928381520195835280832092905b8282106122025761054886866119d5828b038361244a565b8354875295860195600193840193909101906121ea565b6020908160408183019282815285518094520193019160005b828110612240575050505090565b83516001600160a01b031685529381019392810192600101612232565b60005b8381106122705750506000910152565b8181015183820152602001612260565b906020916122998151809281855285808601910161225d565b601f01601f1916010190565b600435906001600160a01b03821682036122bb57565b600080fd5b604435906001600160a01b03821682036122bb57565b602435906001600160a01b03821682036122bb57565b60409060031901126122bb576004356001600160a01b03811681036122bb579060243580151581036122bb5790565b9181601f840112156122bb578235916001600160401b0383116122bb57602083818601950101116122bb57565b60609060031901126122bb576001600160a01b039060043582811681036122bb579160243590811681036122bb579060443590565b9190602083019260038210156123905752565b634e487b7160e01b600052602160045260246000fd5b60406003198201126122bb5760043560038110156122bb57916024356001600160401b03928382116122bb57806023830112156122bb5781600401359384116122bb5760248460051b830101116122bb576024019190565b606081019081106001600160401b0382111761241957604052565b634e487b7160e01b600052604160045260246000fd5b602081019081106001600160401b0382111761241957604052565b90601f801991011681019081106001600160401b0382111761241957604052565b6001600160401b03811161241957601f01601f191660200190565b9291926124928261246b565b916124a0604051938461244a565b8294818452818301116122bb578281602093846000960137010152565b6033546001600160a01b031633036124d157565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b603380546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b1561256557565b60405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e20494400000000000000006044820152606490fd5b6000908152609960205260409020546001600160a01b03166125cd81151561255e565b90565b90600182811c92168015612600575b60208310146125ea57565b634e487b7160e01b600052602260045260246000fd5b91607f16916125df565b9060009161010690815461261d816125d0565b8083529260019180831690811561268a575060011461263d575b50505050565b90929394506000526000805160206134fc833981519152916000925b8484106126725750506020925001019038808080612637565b80546020858501810191909152909301928101612659565b92505050602093945060ff929192191683830152151560051b01019038808080612637565b6000818152609960205260409020546126d2906001600160a01b0316151561255e565b6000908152609b60205260409020546001600160a01b031690565b156126f457565b60405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608490fd5b60809060208152603260208201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60608201520190565b156127a957565b60405162461bcd60e51b8152806127c26004820161274f565b0390fd5b906001600160a01b0380806127da846125aa565b1693169183831493841561280d575b5083156127f7575b50505090565b612803919293506126af565b16143880806127f1565b909350600052609c60205260406000208260005260205260ff6040600020541692386127e9565b1561283b57565b60405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608490fd5b906128b69161289c846125aa565b6001600160a01b0393918416928492909183168414612834565b1691821561294e57816128d3916128cc866125aa565b1614612834565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6000848152609b602052604081206001600160601b0360a01b90818154169055838252609a6020526040822060001981540190558482526040822060018154019055858252609960205284604083209182541617905580a4565b60405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b9192600092909190803b15612ab1576129ed946040518092630a85bd0160e11b9485835233600484015287602484015260448301526080606483015281878160209a8b966084830190612280565b03926001600160a01b03165af1849181612a71575b50612a60575050503d600014612a58573d612a1c8161246b565b90612a2a604051928361244a565b81528091833d92013e5b80519182612a555760405162461bcd60e51b8152806127c26004820161274f565b01fd5b506060612a34565b6001600160e01b0319161492509050565b9091508581813d8311612aaa575b612a89818361244a565b81010312610d0757516001600160e01b031981168103610d07579038612a02565b503d612a7f565b5050915050600190565b9293600093909291803b15612b3b57948491612b159660405180948193630a85bd0160e11b9788845233600485015260018060a01b0380921660248501526044840152608060648401528260209b8c976084830190612280565b0393165af1849181612a715750612a60575050503d600014612a58573d612a1c8161246b565b505050915050600190565b612b536106e782336127c6565b612b5c816125aa565b50612b66816125aa565b6000828152609b6020908152604080832080546001600160a01b03199081169091556001600160a01b03909416808452609a83528184208054600019019055858452609990925282208054909316909255907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8280a4565b9092916001600160401b038411612419578360051b6040519260208094612c078285018261244a565b80978152019181019283116122bb57905b828210612c255750505050565b81356001600160a01b03811681036122bb578152908301908301612c18565b600381101561239057600052610108602052604060002090565b8051821015612c725760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b8054821015612c725760005260206000200190600090565b6000828152600182016020526040902054612d0c57805490680100000000000000008210156124195782612cf5612cde846001809601855584612c88565b819391549060031b91821b91600019901b19161790565b905580549260005201602052604060002055600190565b5050600090565b90600182019060009281845282602052604084205490811515600014612dfc5760001991808301818111612de857825490848201918211612dd457808203612d9f575b50505080548015612d8b57820191612d6e8383612c88565b909182549160031b1b191690555582526020526040812055600190565b634e487b7160e01b86526031600452602486fd5b612dbf612daf612cde9386612c88565b90549060031b1c92839286612c88565b90558652846020526040862055388080612d56565b634e487b7160e01b88526011600452602488fd5b634e487b7160e01b87526011600452602487fd5b5050505090565b15612e0a57565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fd5b601f8111612e6f575050565b60009061010682526000805160206134fc833981519152906020601f850160051c83019410612eb9575b601f0160051c01915b828110612eae57505050565b818155600101612ea2565b9092508290612e99565b15612eca57565b60405162461bcd60e51b815260206004820152601e60248201527f436f6e7472616374206d757374206e6f742062652064697361626c65642e00006044820152606490fd5b90918060409360208452816020850152848401376000828201840152601f01601f1916010190565b60009080825261010390602090828252604092612f56848620546125d0565b61318b575092839281907a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000858181101561317e575b50506d04ee2d6d415b85acef810000000080861015613170575b50662386f26fc1000080861015613161575b506305f5e10080861015613152575b5061271080861015613143575b506064851015613133575b600a80951015613129575b6001948584019686602161300f612ffa8b61246b565b9a61300787519c8d61244a565b808c5261246b565b8a89019790601f19013689378a0101905b6130fa575b50505051948593826101069081549161303d836125d0565b928981169081156130d95750600114613092575b50505050600693928261307e64173539b7b760d91b93602f60f81b6125cd9996525180938684019061225d565b01918201520360191981018452018261244a565b815292935090916000805160206134fc8339815191525b8282106130c357505084010190828161307e6125cd613051565b80548983018501528896509083019087016130a9565b60ff1916858a0152505050801515028501019150828161307e6125cd613051565b600019019082906f181899199a1a9b1b9c1cb0b131b232b360811b8282061a8353049087826130205750613025565b9160010191612fe4565b9193606460029104940191612fd9565b60049193950494019138612fce565b60089193950494019138612fc1565b60109193950494019138612fb2565b849193950494019138612fa0565b0494509150813880612f86565b90849392935282528083209051928391818154906131a8826125d0565b8086529260019280841690811561320f57506001146131d2575b505050506125cd9250038261244a565b815285812095935091905b8183106131f75750506125cd9350820101388080806131c2565b855487840185015294850194869450918301916131dd565b93505050506125cd94925060ff191682840152151560051b820101388080806131c2565b1561323a57565b60405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606490fd5b929190610100548211613473576101045461341457604051936132a1856123fe565b8285526132af368383612486565b6020908082880152604087019160009788845251610105558151906001600160401b03821161340057610106926132ea83610b9f86546125d0565b81601f841160011461336b57509082917f6f1d651e6e0c8f86bd32a20c22a644d1e34fabf72307ff95d51b9f5892ddba1998999a92613360575b50508160011b916000199060031b1c19161790555b5115156101079060ff8019835416911617905561335b60405192839283612f0f565b0390a2565b015190503880613324565b848b5292996000805160206134fc83398151915293601f198c1691905b8282106133e857505091600193918b7f6f1d651e6e0c8f86bd32a20c22a644d1e34fabf72307ff95d51b9f5892ddba199a9b9c94106133cf575b505050811b019055613339565b015160001960f88460031b161c191690553880806133c2565b80600186978294978701518155019601940190613388565b634e487b7160e01b89526041600452602489fd5b60405162461bcd60e51b815260206004820152603160248201527f5f707265706172654d696e743a3a63616e206f6e6c792070726570617265206d604482015270696e742077697468203020746f6b656e7360781b6064820152608490fd5b606460405162461bcd60e51b815260206004820152602060248201527f5f707265706172654d696e743a3a6578636565646564206d6178546f6b656e736044820152fd5b63ffffffff60e01b166380ac58cd60e01b81149081156134ea575b81156134dc575090565b6301ffc9a760e01b14919050565b635b5e139f60e01b811491506134d256fec9ef9fceea91e87b2c84ea400a44fde78842aae8aa24cd4b502ce5fb4d91e63ba2646970667358221220b8968dc29c8c48e0866375ea26516ac82f253e346d7f6867a8d6075fab514a4764736f6c63430008120033",
    "sourceMap": "212:1724:209:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1513:6:39;212:1724:209;-1:-1:-1;;;;;212:1724:209;;;;2088:10:111;1310:16:209;2064:71:111;;212:1724:209;;;;;;2839:39:111;;2835:84;;212:1724:209;;;;;;;:::i;:::-;5643:13:111;;5677:3;212:1724:209;;5658:17:111;;;;;8398:50:109;5717:15:111;;;:::i;:::-;5737:9;;;;;:::i;:::-;212:1724:209;;8398:50:109;;:::i;:::-;;5795:9:111;;;;;;:::i;:::-;212:1724:209;;2088:10:111;5764:52;;;;-1:-1:-1;;212:1724:209;;;;;;5643:13:111;;212:1724:209;-1:-1:-1;;;212:1724:209;;;;;;;;5658:17:111;;212:1724:209;;2835:84:111;212:1724:209;-1:-1:-1;;;2887:32:111;;212:1724:209;;2887:32:111;212:1724:209;-1:-1:-1;;;212:1724:209;;;;;;;;2064:71:111;212:1724:209;-1:-1:-1;;;2108:27:111;;212:1724:209;;2108:27:111;212:1724:209;;;;;;;;;;;;;-1:-1:-1;;212:1724:209;;;;;;:::i;:::-;1303:62:39;;;:::i;:::-;-1:-1:-1;;;;;212:1724:209;;2402:22:39;212:1724:209;;2496:8:39;;;;:::i;:::-;212:1724:209;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;212:1724:209;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1303:62:39;;;:::i;:::-;212:1724:209;;;;7807:16:206;212:1724:209;;;;;;-1:-1:-1;;;;;;212:1724:209;-1:-1:-1;;;;;212:1724:209;;;;;;;;;;;;;;;;;;;;;;;;;;;1780:20:206;212:1724:209;;;;;;;;;;;;;;;;;;;-1:-1:-1;;212:1724:209;;;;;;8963:55:109;212:1724:209;;:::i;:::-;4167:14:111;212:1724:209;4172:8:111;212:1724:209;;4167:14:111;:::i;:::-;-1:-1:-1;;;;;212:1724:209;;;-1:-1:-1;212:1724:209;;;;4351:12:109;;;212:1724:209;;;;;;4351:24:109;;;4255:127;8963:55;212:1724:209;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;212:1724:209;;;;;4980:18:58;212:1724:209;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1858:24:206;212:1724:209;;;;;;;;;;;;;;;;-1:-1:-1;;212:1724:209;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;212:1724:209;;;;;;;;;;;;;1513:6:39;212:1724:209;-1:-1:-1;;;;;212:1724:209;2088:10:111;1310:16:209;2064:71:111;;3436:15;;;;:::i;:::-;212:1724:209;;;;;;;;;;;;3462:34:111;212:1724:209;;2088:10:111;3462:34;2088:10;3462:34;;;:::i;:::-;;;;212:1724:209;;;;;;;;;;;;;;;;;;;;;;;;;;2064:71:111;212:1724:209;;-1:-1:-1;;;2108:27:111;;;212:1724:209;;;;;;;;;;;;;-1:-1:-1;;212:1724:209;;;;;;-1:-1:-1;;;;;212:1724:209;;;;6019:15:206;212:1724:209;;;;;;;:::i;:::-;;;;;:::i;:::-;1303:62:39;;;:::i;:::-;4495:52:206;4504:8;212:1724:209;;;4503:9:206;4495:52;:::i;:::-;212:1724:209;;6019:15:206;;:::i;:::-;-1:-1:-1;;;;;212:1724:209;;;6045:15:206;212:1724:209;;;;;;-1:-1:-1;;212:1724:209;;;;;;;;;;;;;;-1:-1:-1;;212:1724:209;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;212:1724:209;;;;;;;;;;;;;6956:47:58;212:1724:209;;;6948:110:58;212:1724:209;;;;;;;;:::i;:::-;929:10:65;5783:99:58;5791:41;929:10:65;;5791:41:58;:::i;:::-;5783:99;:::i;:::-;6930:7;;;;;:::i;:::-;6956:47;:::i;:::-;6948:110;:::i;212:1724:209:-;;;;;;;;;;;-1:-1:-1;;212:1724:209;;;;;;-1:-1:-1;;;;;212:1724:209;;;;5488:15:206;212:1724:209;;;;;;;:::i;:::-;1303:62:39;;:::i;212:1724:209:-;;;;;;;;;;;;;;;;2453:24:214;212:1724:209;;;;;;;;;;;;;;;;:::i;:::-;;;;1460:8:111;212:1724:209;;;;;;;;1472:28:111;1460:40;;1472:28;;-1:-1:-1;1472:28:111;212:1724:209;;;1515:4:111;212:1724:209;;;;;;;-1:-1:-1;;;;;212:1724:209;;-1:-1:-1;212:1724:209;;;4351:12:109;;212:1724:209;;;;;;4351:24:109;1510:92:111;;1456:309;-1:-1:-1;;;;;212:1724:209;;929:10:65;13528:17:58;;212:1724:209;;929:10:65;;212:1724:209;;13585:18:58;212:1724:209;;;;;;;;;;13585:46:58;212:1724:209;;;;;;;;;;;;;;;;;;;13585:46:58;212:1724:209;;;;;;13646:41:58;212:1724:209;929:10:65;13646:41:58;;212:1724:209;;;;;;;;;;;;;;;;;;;;;;;;;;;1510:92:111;212:1724:209;;-1:-1:-1;;;1574:28:111;;212:1724:209;;1574:28:111;1456:309;1631:27;1619:39;1456:309;1615:150;1631:27;212:1724:209;;1672:4:111;212:1724:209;;8963:55:109;212:1724:209;;;;;;;;;;8963:55:109;4351:12;4255:127;-1:-1:-1;212:1724:209;4351:12:109;212:1724:209;;;-1:-1:-1;212:1724:209;;4351:24:109;;4255:127;;8963:55;1668:90:111;1456:309;1668:90;212:1724:209;;-1:-1:-1;;;1730:28:111;;212:1724:209;;1730:28:111;212:1724:209;;;;;;;;:::i;:::-;1513:6:39;212:1724:209;-1:-1:-1;;;;;212:1724:209;;;;2088:10:111;1310:16:209;2064:71:111;;212:1724:209;;;;;;;:::i;:::-;;;;;;;;;;5589:39:111;5585:387;;212:1724:209;;;5585:387:111;5643:13;5677:3;212:1724:209;;5658:17:111;;;;;8719:53:109;5845:15:111;;;:::i;:::-;5868:9;;;;;:::i;:::-;212:1724:209;;8719:53:109;;:::i;:::-;;5926:9:111;;;;;;:::i;:::-;212:1724:209;;;;;2088:10:111;;;5895:52;;;;-1:-1:-1;;212:1724:209;;;;;;5643:13:111;;212:1724:209;-1:-1:-1;;;212:1724:209;;;;;;;;;-1:-1:-1;;;212:1724:209;;;;;;;;5658:17:111;;;;;;;;5585:387;;;;;212:1724:209;;;;-1:-1:-1;;;212:1724:209;;;;;;;;;;;;;;;;;;;;;;;;;;3182:7:58;212:1724:209;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;3182:7:58;212:1724:209;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;9923:10:206;212:1724:209;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;212:1724:209;;;;;;;;;;;;;;;:::i;:::-;1303:62:39;;;;;:::i;:::-;212:1724:209;8048:25:206;212:1724:209;;;;;;;;8143:18:206;;212:1724:209;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;8187:25:206;212:1724:209;;;;8187:25:206;212:1724:209;;;;;;;;;;;;;;;;;;;;;;;8187:25:206;;;;;:::i;:::-;;;;212:1724:209;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;212:1724:209;;;;;;;;;;;;8187:25:206;212:1724:209;;;8187:25:206;212:1724:209;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;212:1724:209;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;212:1724:209;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;212:1724:209;;;;;;;;;;;;;;;;;;;;;;;1513:6:39;212:1724:209;;;-1:-1:-1;;;;;212:1724:209;;;;;;;;;;;;;;;;;;;;;1303:62:39;;:::i;:::-;7165:4:206;212:1724:209;;;;;;;;7201:10:206;7184:28;;;;212:1724:209;;;;;;;;;;;;;;;;;;;4333:8:111;212:1724:209;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;4495:52:206;4504:8;212:1724:209;;;4503:9:206;4495:52;:::i;:::-;1513:6:39;212:1724:209;-1:-1:-1;;;;;212:1724:209;;;;6391:10:206;:21;:52;;;;212:1724:209;;;;2453:24:214;212:1724:209;;2332:22:214;212:1724:209;;12147:14:206;;212:1724:209;;;;;;;;12254:9:206;212:1724:209;12243:20:206;;212:1724:209;;;;;;;;:::i;:::-;;;;;;9487:16:58;;;212:1724:209;;9559:16:58;8950:53;9559:16;;;;;8929:150;9559:16;9550:58;9559:16;;-1:-1:-1;212:1724:209;7266:7:58;212:1724:209;;;;;;;;-1:-1:-1;212:1724:209;;;7680:31:58;;7592:126;;9559:16;9558:17;9550:58;:::i;:::-;-1:-1:-1;212:1724:209;;;7266:7:58;212:1724:209;;;;;;9754:58:58;;-1:-1:-1;;;;;212:1724:209;7680:31:58;;9763:16;7592:126;9754:58;212:1724:209;;;10154:9:58;212:1724:209;;;;;;;;;;;;;;10193:7:58;212:1724:209;;;;;;;-1:-1:-1;;;;;212:1724:209;;;;;;;;;;;10230:33:58;;;;;8950:53;:::i;8929:150::-;212:1724:209;;;1794:18:214;212:1724:209;;;;;;1639:16:214;212:1724:209;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;212:1724:209;;;;;;;;;;;;;;;;;;-1:-1:-1;;;212:1724:209;;;;;;;6391:52:206;:10;;212:1724:209;;6416:15:206;212:1724:209;;4504:8:206;212:1724:209;;;;;6391:52:206;;212:1724:209;;;;;;;;;;;;;;;;2482:31:113;212:1724:209;;;;;;;;;;;;;;;;;;;;1303:62:39;;:::i;:::-;2758:6;212:1724:209;;-1:-1:-1;;;;;;212:1724:209;;;;;;;-1:-1:-1;;;;;212:1724:209;2806:40:39;212:1724:209;;2806:40:39;212:1724:209;;;;;;;;;-1:-1:-1;;212:1724:209;;;;-1:-1:-1;;;;;212:1724:209;;:::i;:::-;;2489:19:58;;;212:1724:209;;;;;;;;;2571:9:58;212:1724:209;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;212:1724:209;;;;;;;;;;;;;;-1:-1:-1;;212:1724:209;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;212:1724:209;;;;;;;;;;;;;;;-1:-1:-1;;212:1724:209;;;;;;6897:17:206;;;;:::i;:::-;6918:10;-1:-1:-1;;;;;212:1724:209;;;6897:31:206;212:1724:209;;7000:8:206;;;;:::i;212:1724:209:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;212:1724:209;;;;-1:-1:-1;;;;;212:1724:209;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;3301:14:45;3347:34;;;;;;212:1724:209;3346:108:45;;;;212:1724:209;;;;-1:-1:-1;;212:1724:209;;;;;;;;;;;;;;;3562:65:45;;212:1724:209;-1:-1:-1;;;;;;212:1724:209;;3821:22:206;212:1724:209;;;;;5366:69:45;212:1724:209;;;;;3917:2:206;2197:38:214;212:1724:209;;;;;;;;3956:22:206;212:1724:209;;;;;5366:69:45;;;:::i;:::-;;:::i;:::-;1195:12:39;929:10:65;1195:12:39;:::i;:::-;212:1724:209;;;:::i;:::-;;;;;:::i;:::-;;5366:69:45;212:1724:209;;;;;;5366:69:45;;;:::i;:::-;212:1724:209;;;;;;;;;1873:13:58;212:1724:209;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;212:1724:209;;;;;;;;;;;1873:13:58;212:1724:209;;;;;;;;;;;1896:17:58;212:1724:209;;:::i;:::-;;;;;;;;;;;;;;;;;;2496:8:39;212:1724:209;;;5366:69:45;212:1724:209;;;;;;-1:-1:-1;;;;212:1724:209;;;;;;;;;;;1896:17:58;212:1724:209;;;;;;;5366:69:45;;;:::i;:::-;;;;:::i;:::-;1492:34:214;212:1724:209;;-1:-1:-1;;;;;;212:1724:209;-1:-1:-1;;;;;212:1724:209;;;;;1303:62:39;;:::i;:::-;2496:8;:::i;:::-;3647:99:45;;212:1724:209;;;3647:99:45;212:1724:209;;-1:-1:-1;;212:1724:209;;;;;;;3721:14:45;;212:1724:209;;3721:14:45;3647:99;;212:1724:209;;;;;;;-1:-1:-1;212:1724:209;;;;;1896:17:58;212:1724:209;;;;;;;-1:-1:-1;;212:1724:209;;;;;;;;;;;5366:69:45;212:1724:209;;;;2496:8:39;212:1724:209;;;;;;;;;;;;;;1896:17:58;212:1724:209;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1896:17:58;212:1724:209;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;212:1724:209;;;;;;;;;;;;-1:-1:-1;212:1724:209;;;;;;;;;;;;;;1873:13:58;212:1724:209;;;;;;;;;;;;-1:-1:-1;212:1724:209;;;;;;;;;1873:13:58;212:1724:209;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1873:13:58;212:1724:209;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;212:1724:209;;;;;;;;;;;;;;-1:-1:-1;;;212:1724:209;;;;;;;;;;;-1:-1:-1;;;212:1724:209;;;;;;;;;;;;;;;;;;;;3562:65:45;-1:-1:-1;;212:1724:209;;;;;3562:65:45;;;212:1724:209;;;-1:-1:-1;;;212:1724:209;;;;;;;;;;;;;;;;;-1:-1:-1;;;212:1724:209;;;;;;;3346:108:45;3426:4;;1713:19:63;:23;3387:66:45;;3346:108;3387:66;212:1724:209;;;;;3436:17:45;3346:108;;3347:34;212:1724:209;;;;;3365:16:45;3347:34;;212:1724:209;;;;;;;;;;;;;;1916:31:113;212:1724:209;1950:15:113;-1:-1:-1;1912:117:113;;5330:8:111;;212:1724:209;;;;;;;;;;;;;;5318:10:111;;;;5302:51;;;;-1:-1:-1;;212:1724:209;;;5318:10:111;2086:35:113;;;;212:1724:209;;;-1:-1:-1;;;212:1724:209;;;;;;;;1912:117:113;212:1724:209;-1:-1:-1;;;1974:55:113;;;212:1724:209;;;;;;;;;;;;;;8808:34:206;1303:62:39;;;:::i;:::-;212:1724:209;;;;;;;;;;:::i;:::-;8808:34:206;;;8852:25;212:1724:209;;-1:-1:-1;;212:1724:209;8823:18:206;212:1724:209;;;;;;;;;;;;;;-1:-1:-1;;212:1724:209;;;;;;;;;;;;;1513:6:39;212:1724:209;-1:-1:-1;;;;;212:1724:209;2088:10:111;1310:16:209;2064:71:111;;5330:8;;212:1724:209;;;;;;;;;;;;;;2088:10:111;;;212:1724:209;2088:10:111;;5302:51;;;;212:1724:209;;;;;;;;;;;-1:-1:-1;;;212:1724:209;;;;;;;;2064:71:111;212:1724:209;-1:-1:-1;;;2108:27:111;;;212:1724:209;;;;;;;-1:-1:-1;;212:1724:209;;;;;;;;:::i;:::-;;;;;;6956:47:58;6948:110;212:1724:209;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;5783:99:58;5791:41;929:10:65;;5791:41:58;:::i;212:1724:209:-;;;;;;;;-1:-1:-1;;212:1724:209;;;;1513:6:39;212:1724:209;;;-1:-1:-1;;;;;212:1724:209;;;;;;;;;;;;;;;-1:-1:-1;;212:1724:209;;;;7474:9:206;212:1724:209;;:::i;:::-;1303:62:39;;:::i;:::-;212:1724:209;;;;;;-1:-1:-1;;;;;212:1724:209;;1492:34:214;212:1724:209;;;1492:34:214;212:1724:209;1418:115:214;212:1724:209;;;;;;;;-1:-1:-1;;212:1724:209;;;;;;;;;;-1:-1:-1;;;;;212:1724:209;;:::i;:::-;;;;9370:15:206;212:1724:209;;;;;;;;;;;;;;;;;;;;;;;;;;;2332:22:214;212:1724:209;;;-1:-1:-1;;;;;212:1724:209;;;;;;;;;;;;;;;;;;;;;;4008:14:111;212:1724:209;4013:8:111;212:1724:209;;4008:14:111;:::i;:::-;212:1724:209;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1049:16:214;212:1724:209;;;;;;;;;-1:-1:-1;;;;;212:1724:209;;;1049:40:214;;212:1724:209;;1049:118:214;;1238:18;212:1724:209;;;;;;1238:33:214;;;;:131;;212:1724:209;;;;;;;;;;;;;;-1:-1:-1;212:1724:209;;;;;;1401:3:214;212:1724:209;;;;;;;;-1:-1:-1;;;212:1724:209;;;;;;;;1238:131:214;212:1724:209;1345:24:214;212:1724:209;1238:131:214;;;1049:118;212:1724:209;;1145:22:214;212:1724:209;;1049:118:214;;;212:1724:209;;;;;5365:7:58;212:1724:209;;;:::i;:::-;929:10:65;5235:99:58;5243:41;929:10:65;;5243:41:58;:::i;5235:99::-;5365:7;:::i;212:1724:209:-;;;;;;;;-1:-1:-1;;212:1724:209;;;;1513:6:39;212:1724:209;;;;-1:-1:-1;;;;;212:1724:209;2088:10:111;1310:16:209;2064:71:111;;2943:8:113;212:1724:209;;;;;;;;;;;;;;;2913:15:113;212:1724:209;2913:15:113;;;212:1724:209;;;3004:31:113;;212:1724:209;2962:87:113;212:1724:209;;;;;;;;;;;;;2088:10:111;2962:87:113;;212:1724:209;;;;-1:-1:-1;;;212:1724:209;;;;;;;;;-1:-1:-1;;;212:1724:209;;;;;;;;2064:71:111;-1:-1:-1;212:1724:209;-1:-1:-1;;;2108:27:111;;;212:1724:209;;;;;;;;-1:-1:-1;;212:1724:209;;;;;;;;:::i;:::-;;;;;;;1513:6:39;212:1724:209;;;;1310:16;212:1724;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;212:1724:209;;;;;;;;;;;;;;;:::i;:::-;1303:62:39;;;;;:::i;:::-;212:1724:209;8478:25:206;212:1724:209;;;;;;;;;8574:10:206;212:1724:209;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8624:39:206;212:1724:209;;;;8624:39:206;212:1724:209;;;;;;;;;;;;;;;;;;;;;;8624:39:206;;;;;:::i;212:1724:209:-;;;;;;;;;;;;;;;;;;;;;;;;8624:39:206;212:1724:209;;;8624:39:206;212:1724:209;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;212:1724:209;;;;;-1:-1:-1;;;212:1724:209;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;212:1724:209;;;;;;;;;;;;;;;;;;;;;10869:14:206;212:1724:209;;;;;;;;;;;;;5050:36:206;212:1724:209;;;;:::i;:::-;1303:62:39;;;;:::i;:::-;4495:52:206;4504:8;212:1724:209;;;4503:9:206;4495:52;:::i;:::-;212:1724:209;;;;;;;;5050:15:206;212:1724:209;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;1460:8:111;212:1724:209;;;;;;;;;1460:40:111;;212:1724:209;;-1:-1:-1;212:1724:209;;;;1515:4:111;212:1724:209;;;;;;;-1:-1:-1;;;;;212:1724:209;;-1:-1:-1;212:1724:209;;;4351:12:109;;212:1724:209;;;;;;4351:24:109;1510:92:111;;1456:309;-1:-1:-1;;;;;212:1724:209;;;4025:34:58;;;:::i;:::-;212:1724:209;;;4077:11:58;;;;212:1724:209;;929:10:65;;4158:21:58;:62;;;;;1456:309:111;212:1724:209;;;;-1:-1:-1;212:1724:209;;;13173:15:58;212:1724:209;;;;;;-1:-1:-1;;;;;;212:1724:209;;;;;13226:34:58;212:1724:209;13226:34:58;:::i;:::-;212:1724:209;13217:57:58;;;;212:1724:209;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4158:62:58;212:1724:209;;;;4980:18:58;212:1724:209;;;;;929:10:65;212:1724:209;;;;;;;;;;4158:62:58;;;212:1724:209;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;212:1724:209;;;;;1510:92:111;212:1724:209;-1:-1:-1;;;1574:28:111;;;1456:309;1631:27;1619:39;1456:309;1615:150;1631:27;212:1724:209;;1672:4:111;212:1724:209;;8963:55:109;212:1724:209;;;;;;;;;;8963:55:109;4351:12;4255:127;-1:-1:-1;212:1724:209;4351:12:109;212:1724:209;;;-1:-1:-1;212:1724:209;;4351:24:109;;4255:127;;8963:55;1668:90:111;1456:309;1668:90;212:1724:209;-1:-1:-1;;;1730:28:111;;;212:1724:209;-1:-1:-1;;;212:1724:209;;;;;;;;;;;;;;;;;-1:-1:-1;;212:1724:209;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3018:5:58;212:1724:209;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;3018:5:58;212:1724:209;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;212:1724:209;;;;;;-1:-1:-1;;;;;;212:1724:209;;;;;;;;;-1:-1:-1;;;;4844:47:111;;;:88;;;;212:1724:209;773:108;;;;212:1724;;;;;;;;;;773:108;11218:31:206;;-1:-1:-1;;;;11203:46:206;;;11218:31;11203:110;;;;773:108:209;11203:175:206;;;;773:108:209;11203:239:206;;;;;773:108:209;;;;;;;11203:239:206;11394:48;;;;:::i;:::-;11203:239;;;:175;2028:26:214;;-1:-1:-1;;;;2013:41:214;:93;;;;11203:175:206;;;;;2013:93:214;2070:36;;;;:::i;:::-;2013:93;;11203:110:206;-1:-1:-1;;;937:40:103;;;-1:-1:-1;11203:110:206;;4844:88:111;-1:-1:-1;;;937:40:103;;;-1:-1:-1;4844:88:111;;212:1724:209;;;;;;;;;;;;;;;;;;;;;;;3857:15:111;;;:::i;:::-;212:1724:209;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;212:1724:209;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;212:1724:209;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;212:1724:209;;;;:::o;:::-;;;;-1:-1:-1;;;;;212:1724:209;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;212:1724:209;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;212:1724:209;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;212:1724:209;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;212:1724:209;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;;;;;212:1724:209;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;212:1724:209;;;;;-1:-1:-1;212:1724:209;;;-1:-1:-1;;212:1724:209;;;;;;;;;;;;;;;;-1:-1:-1;;;;;212:1724:209;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;212:1724:209;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;212:1724:209;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;212:1724:209;;;;;;;:::o;:::-;-1:-1:-1;;;;;212:1724:209;;;;;;-1:-1:-1;;212:1724:209;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;212:1724:209;;;;;;:::o;1599:130:39:-;1513:6;212:1724:209;-1:-1:-1;;;;;212:1724:209;929:10:65;1662:23:39;212:1724:209;;1599:130:39:o;212:1724:209:-;;;;;;;;;;;;;;;;;;;;;;;;;2666:187:39;2758:6;212:1724:209;;-1:-1:-1;;;;;212:1724:209;;;-1:-1:-1;;;;;;212:1724:209;;;;;;;;;;2806:40:39;-1:-1:-1;;2806:40:39;2666:187::o;212:1724:209:-;;;;:::o;:::-;;;-1:-1:-1;;;212:1724:209;;;;;;;;;;;;;;;;;;;;2651:219:58;-1:-1:-1;212:1724:209;;;7266:7:58;212:1724:209;;;;;;-1:-1:-1;;;;;212:1724:209;2785:56:58;2793:19;;;2785:56;:::i;:::-;2651:219;:::o;212:1724:209:-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;8823:18:206;212:1724:209;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;212:1724:209;-1:-1:-1;;;;;;;;;;;212:1724:209;-1:-1:-1;212:1724:209;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4407:167:58;-1:-1:-1;212:1724:209;;;7266:7:58;212:1724:209;;;;;;13851:53:58;;-1:-1:-1;;;;;212:1724:209;7680:31:58;;13851:53;:::i;:::-;-1:-1:-1;212:1724:209;;;4543:15:58;212:1724:209;;;;;;-1:-1:-1;;;;;212:1724:209;;4407:167:58:o;212:1724:209:-;;;;:::o;:::-;;;-1:-1:-1;;;212:1724:209;;;;;;;;;;;;;;;;;-1:-1:-1;;;212:1724:209;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;212:1724:209;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;212:1724:209;;;;;;;;:::i;:::-;;;;7876:272:58;;-1:-1:-1;;;;;212:1724:209;;8001:34:58;7876:272;8001:34;:::i;:::-;212:1724:209;;;8053:16:58;;;;:52;;;;;7876:272;8053:87;;;;;7876:272;8045:96;;;7876:272;:::o;8053:87::-;8109:20;;;;;;:::i;:::-;212:1724:209;8109:31:58;8053:87;;;;;:52;212:1724:209;;;-1:-1:-1;212:1724:209;4980:18:58;212:1724:209;;;-1:-1:-1;212:1724:209;;-1:-1:-1;212:1724:209;;;;;-1:-1:-1;212:1724:209;;;8053:52:58;;;;212:1724:209;;;;:::o;:::-;;;-1:-1:-1;;;212:1724:209;;;;;;;;;;;;;;;;;-1:-1:-1;;;212:1724:209;;;;;;;11762:1225:58;;11851:92;11762:1225;11859:34;;;:::i;:::-;-1:-1:-1;;;;;212:1724:209;;;;;;;;;;;11859:42:58;;11851:92;:::i;:::-;212:1724:209;11961:16:58;;;212:1724:209;;12171:34:58;12163:92;12171:34;;;;:::i;:::-;212:1724:209;12171:42:58;12163:92;:::i;:::-;12901:27;11975:1;212:1724:209;;;12324:15:58;212:1724:209;;;;;-1:-1:-1;;;;;212:1724:209;;;;;;;;;;;;12792:9:58;212:1724:209;;;;;;;;;;;;;;;;;;;;;;;;;;;12864:7:58;212:1724:209;;;;;;;;;;;;;12901:27:58;;11762:1225::o;212:1724:209:-;;;-1:-1:-1;;;212:1724:209;;;;;;;;;;;;;;;;;-1:-1:-1;;;212:1724:209;;;;;;;14463:853:58;;;212:1724:209;;14463:853:58;;;1713:19:63;;:23;:19;;212:1724:209;;;;;;;;;14667:82:58;;;;929:10:65;14667:82:58;;;212:1724:209;;;;;;;;;;;;;;;14667:82:58;;;;212:1724:209;;;;;;;;:::i;:::-;14667:82:58;;-1:-1:-1;;;;;212:1724:209;14667:82:58;;;;;;;14628:682;-1:-1:-1;14663:595:58;;14877:381;;;212:1724:209;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;14927:18:58;;;212:1724:209;;-1:-1:-1;;;14969:60:58;;212:1724:209;14969:60:58;14667:82;14969:60;;;:::i;14923:321::-;15131:95;;212:1724:209;;;;;14663:595:58;-1:-1:-1;;;;;;212:1724:209;14799:62:58;;-1:-1:-1;212:1724:209;-1:-1:-1;14792:69:58:o;14667:82::-;;;;;;;;;;;;;;;;;:::i;:::-;;;212:1724:209;;;;;-1:-1:-1;;;;;;212:1724:209;;;;;;14667:82:58;;;;;;;;;14628:682;15288:11;;;;;15295:4;15288:11;:::o;14463:853::-;;;212:1724:209;;14463:853:58;;;1713:19:63;;:23;:19;;212:1724:209;;;;;;;;;;;;;;14667:82:58;;;;929:10:65;14667:82:58;;;212:1724:209;;;;;;;;;;;;;;;;;;;;;;14667:82:58;;212:1724:209;;;;;;;;:::i;:::-;14667:82:58;212:1724:209;;14667:82:58;;;;;;;-1:-1:-1;14663:595:58;;14877:381;;;212:1724:209;;;;;;;;;:::i;14628:682:58:-;15288:11;;;;;;15295:4;15288:11;:::o;803:238:61:-;911:99;919:41;929:10:65;;919:41:61;:::i;911:99::-;10729:34:58;;;:::i;:::-;;10935;;;:::i;:::-;11007:31;212:1724:209;;;11014:15:58;212:1724:209;;;;;;;;;;-1:-1:-1;;;;;;212:1724:209;;;;;;-1:-1:-1;;;;;212:1724:209;;;;;;11254:9:58;212:1724:209;;;;;;;-1:-1:-1;;212:1724:209;;;;;;11302:7:58;212:1724:209;;;;;;;;;;;;;11007:31:58;11334:36;11007:31;;11334:36;803:238:61:o;212:1724:209:-;;;;-1:-1:-1;;;;;212:1724:209;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;212:1724:209;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;212:1724:209;3857:4:111;212:1724:209;;;-1:-1:-1;212:1724:209;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;212:1724:209;;-1:-1:-1;212:1724:209;;;-1:-1:-1;212:1724:209;:::o;2214:404:109:-;-1:-1:-1;212:1724:209;;;4351:12:109;;;212:1724:209;;;;;;2298:21:109;;212:1724:209;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;212:1724:209;2493:12:109;212:1724:209;;;-1:-1:-1;212:1724:209;;;2547:11:109;:::o;2293:319::-;2589:12;;-1:-1:-1;2589:12:109;:::o;2786:1388::-;;2989:12;;;-1:-1:-1;;212:1724:209;;;;;;;;;;;3023:15:109;;;;3019:1149;3023:15;;;-1:-1:-1;;212:1724:209;;;;;;;;;;;;;;;;;;;;3505:26:109;;;3501:398;;3019:1149;212:1724:209;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;2989:12:109;4103:11;:::o;212:1724:209:-;-1:-1:-1;;;212:1724:209;;;;;;;;3501:398:109;212:1724:209;3571:22:109;3693:26;3571:22;;;:::i;:::-;212:1724:209;;;;;;3693:26:109;;;;;:::i;212:1724:209:-;;;;;;;;;;;;3501:398:109;;;;;212:1724:209;-1:-1:-1;;;212:1724:209;;;;;;;;;-1:-1:-1;;;212:1724:209;;;;;;;;3019:1149:109;4145:12;;;;;:::o;212:1724:209:-;;;;:::o;:::-;;;-1:-1:-1;;;212:1724:209;;;;;;;;;;;;;;;;;-1:-1:-1;;;212:1724:209;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;212:1724:209;8143:18:206;212:1724:209;;-1:-1:-1;;;;;;;;;;;212:1724:209;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;212:1724:209;;;;;;;;:::o;:::-;;;-1:-1:-1;;;212:1724:209;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;212:1724:209;;;;:::o;10218:451:206:-;-1:-1:-1;212:1724:209;;;;10341:10:206;212:1724:209;;;;;;;;;;;;;;:::i;:::-;10331:96:206;;-1:-1:-1;10582:19:206;;;602:28:68;;10287:8:71;10582:19:206;10278:17:71;;;;10274:103;;10218:451:206;10403:8:71;;;10394:17;;;;10390:103;;10218:451:206;10519:8:71;;10510:17;;;;10506:103;;10218:451:206;10635:7:71;;10626:16;;;;10622:100;;10218:451:206;10748:7:71;;10739:16;;;;10735:100;;10218:451:206;10852:16:71;10861:7;10852:16;;;10848:100;;10218:451:206;10974:7:71;10965:16;;;;10961:66;;10218:451:206;633:1:68;212:1724:209;;;;;;775:76:68;212:1724:209;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;-1:-1:-1;;212:1724:209;;;;775:76:68;;;864:280;633:1;;;864:280;212:1724:209;;;;;;;;10517:18:206;212:1724:209;;;;;;;:::i;:::-;;;;;;633:1:68;;;;212:1724:209;;;;;;;;;;10479:169:206;212:1724:209;;;;-1:-1:-1;;;212:1724:209;-1:-1:-1;;;10479:169:206;212:1724:209;;;;;;;;;;;:::i;:::-;;;;;;10479:169:206;;;;;;;;;;:::i;212:1724:209:-;;;;;-1:-1:-1;212:1724:209;;-1:-1:-1;;;;;;;;;;;212:1724:209;;;;;;-1:-1:-1;;212:1724:209;;;;;;;10479:169:206;212:1724:209;;;;;;;;;;;;;-1:-1:-1;212:1724:209;;;;;;;;;-1:-1:-1;;212:1724:209;10479:169:206;;;212:1724:209;-1:-1:-1;;;212:1724:209;;;;;;;;-1:-1:-1;212:1724:209;;;10479:169:206;212:1724:209;;864:280:68;-1:-1:-1;;212:1724:209;;;;-1:-1:-1;;;969:93:68;;;;212:1724:209;969:93:68;212:1724:209;1079:11:68;;;864:280;1108:21;1124:5;;;10961:66:71;212:1724:209;11011:1:71;212:1724:209;10961:66:71;;;10848:100;212:1724:209;;10861:7:71;10932:1;212:1724:209;;;;10848:100:71;;;10735;10819:1;212:1724:209;;;;;;10735:100:71;;;;10622;10706:1;212:1724:209;;;;;;10622:100:71;;;;10506:103;10592:2;212:1724:209;;;;;;10506:103:71;;;;10390;212:1724:209;;;;;;;10390:103:71;;;;10274;212:1724:209;;-1:-1:-1;212:1724:209;-1:-1:-1;212:1724:209;10274:103:71;;;;10331:96:206;212:1724:209;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;212:1724:209;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;212:1724:209;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;212:1724:209;;;;;;;;;;;;;;;;;;;;12717:483:206;;;;12871:9;212:1724:209;12852:28:206;;212:1724:209;;12969:14:206;212:1724:209;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;13096:44:206;;;;;;212:1724:209;;13096:44:206;;-1:-1:-1;;212:1724:209;;;;;13083:57:206;212:1724:209;;;;-1:-1:-1;;;;;212:1724:209;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;13155:38:206;212:1724:209;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13155:38:206;212:1724:209;;13155:38:206;;;;;:::i;:::-;;;;12717:483::o;212:1724:209:-;;;;-1:-1:-1;212:1724:209;;;;;;;;;;-1:-1:-1;;;;;;;;;;;212:1724:209;-1:-1:-1;;212:1724:209;;;;;;;;;;;;;;;;;13155:38:206;212:1724:209;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;212:1724:209;;;;;;;;;;;-1:-1:-1;;;212:1724:209;;;;;;;;;;;;;;;;;-1:-1:-1;;;212:1724:209;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1987:344:58;212:1724:209;;;;2161:36:58;;;2146:51;;:126;;;;;1987:344;2146:178;;;;2127:197;1987:344;:::o;2146:178::-;-1:-1:-1;;;937:40:103;;1987:344:58;-1:-1:-1;1987:344:58:o;2146:126::-;-1:-1:-1;;;2213:59:58;;;-1:-1:-1;2146:126:58;",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "activateDeadmanListTrigger()": "5aec8d62",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "batchAddAddressToRoyaltyList(uint8,address[])": "ff6e8c8f",
    "batchRemoveAddressToRoyaltyList(uint8,address[])": "9e860f2a",
    "burn(uint256)": "42966c68",
    "clearList(uint8)": "bc719455",
    "deleteToken(uint256)": "6297c16c",
    "disableContract()": "894ba833",
    "disabled()": "ee070805",
    "getApproved(uint256)": "081812fc",
    "getDeadmanTriggerAvailableDatetime()": "717392ed",
    "getDefaultRoyaltyPercentage()": "ab69607a",
    "getDefaultRoyaltyReceiver()": "3403c4e9",
    "getInUseList()": "2ce878da",
    "getList(uint8)": "012cf1e8",
    "getListType()": "87bc793f",
    "getMintConfig()": "9338bb5d",
    "hasAdminPermission(address)": "20427486",
    "init(string,string,address,uint256)": "5edc7c19",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isApprovedMinter(address)": "3a3d146f",
    "isOperatorInList(address)": "eab85118",
    "lockBaseURI()": "53df5c7c",
    "maxTokens()": "e8315742",
    "mintTo(address)": "755edd17",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "prepareMint(string,uint256)": "b390ac25",
    "prepareMintWithMinter(string,uint256,address)": "b9fbd25c",
    "renounceOwnership()": "715018a6",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setDeadmanListTriggerRenewalDuration(uint256)": "21c4a5d8",
    "setDefaultRoyaltyReceiver(address)": "3ebc82c5",
    "setMinterApproval(address,bool)": "0de54ba0",
    "setRoyaltyReceiverForToken(address,uint256)": "efc32cd4",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "toggleListType(uint8)": "472a6638",
    "tokenCreator(uint256)": "40c1a064",
    "tokenURI(uint256)": "c87b56dd",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "updateBaseURI(string)": "931688cb",
    "updateTokenURI(uint256,string)": "18e97fd1"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CantAddToOFFList\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeadmanTriggerStillActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MustBeAdmin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_updater\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_addedAddr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"enum IRoyaltyGuard.ListType\",\"name\":\"_ListType\",\"type\":\"uint8\"}],\"name\":\"AddressAddedToList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_updater\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_removedAddr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"enum IRoyaltyGuard.ListType\",\"name\":\"_ListType\",\"type\":\"uint8\"}],\"name\":\"AddressRemovedList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ContractDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_activator\",\"type\":\"address\"}],\"name\":\"DeadmanTriggerActivated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_updater\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_oldDatetime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newDatetime\",\"type\":\"uint256\"}],\"name\":\"DeadmanTriggerDatetimeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_updater\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IRoyaltyGuard.ListType\",\"name\":\"_listType\",\"type\":\"uint8\"}],\"name\":\"ListCleared\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_updater\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"enum IRoyaltyGuard.ListType\",\"name\":\"_oldListType\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"enum IRoyaltyGuard.ListType\",\"name\":\"_newListType\",\"type\":\"uint8\"}],\"name\":\"ListTypeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"name\":\"MetadataLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"name\":\"MetadataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"numberOfTokens\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"name\":\"PrepareMint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"metadataUri\",\"type\":\"string\"}],\"name\":\"TokenURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"activateDeadmanListTrigger\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IRoyaltyGuard.ListType\",\"name\":\"_listType\",\"type\":\"uint8\"},{\"internalType\":\"address[]\",\"name\":\"_addrs\",\"type\":\"address[]\"}],\"name\":\"batchAddAddressToRoyaltyList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IRoyaltyGuard.ListType\",\"name\":\"_listType\",\"type\":\"uint8\"},{\"internalType\":\"address[]\",\"name\":\"_addrs\",\"type\":\"address[]\"}],\"name\":\"batchRemoveAddressToRoyaltyList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IRoyaltyGuard.ListType\",\"name\":\"_listType\",\"type\":\"uint8\"}],\"name\":\"clearList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"deleteToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeadmanTriggerAvailableDatetime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDefaultRoyaltyReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInUseList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IRoyaltyGuard.ListType\",\"name\":\"_listType\",\"type\":\"uint8\"}],\"name\":\"getList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getListType\",\"outputs\":[{\"internalType\":\"enum IRoyaltyGuard.ListType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMintConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"numberOfTokens\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"lockedMetadata\",\"type\":\"bool\"}],\"internalType\":\"struct LazySovereignNFT.MintConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"hasAdminPermission\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxTokens\",\"type\":\"uint256\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isApprovedMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isOperatorInList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"mintTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_numberOfTokens\",\"type\":\"uint256\"}],\"name\":\"prepareMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_numberOfTokens\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_minter\",\"type\":\"address\"}],\"name\":\"prepareMintWithMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_numYears\",\"type\":\"uint256\"}],\"name\":\"setDeadmanListTriggerRenewalDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"setDefaultRoyaltyReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_minter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isMinter\",\"type\":\"bool\"}],\"name\":\"setMinterApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"setRoyaltyReceiverForToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IRoyaltyGuard.ListType\",\"name\":\"_newListType\",\"type\":\"uint8\"}],\"name\":\"toggleListType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenCreator\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"}],\"name\":\"updateBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_metadataUri\",\"type\":\"string\"}],\"name\":\"updateTokenURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"activateDeadmanListTrigger()\":{\"details\":\"Can only be called if deadmanListTriggerAfterDatetime is in the past.\"},\"approve(address,uint256)\":{\"details\":\"Guards {approve} based on the type of list and depending if {_spender} is on the list.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"batchAddAddressToRoyaltyList(uint8,address[])\":{\"details\":\"Only the contract owner can call this function.Cannot add to the OFF list\",\"params\":{\"_addrs\":\"being added to the designated list\",\"_listType\":\"that addresses are being added to\"}},\"batchRemoveAddressToRoyaltyList(uint8,address[])\":{\"details\":\"Only the contract owner can call this function.\",\"params\":{\"_addrs\":\"being removed from the designated list\",\"_listType\":\"that addresses are being removed from\"}},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"clearList(uint8)\":{\"details\":\"Only the contract owner can call this function.\",\"params\":{\"_listType\":\"of list being cleared.\"}},\"deleteToken(uint256)\":{\"details\":\"Delete a token with the given ID.\",\"params\":{\"_tokenId\":\"The ID of the token to delete.\"}},\"disableContract()\":{\"details\":\"Disable the contract, preventing further minting.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getDeadmanTriggerAvailableDatetime()\":{\"returns\":{\"_0\":\"uint256 denoting unix epoch time after which the deadman trigger can be activated.\"}},\"getInUseList()\":{\"returns\":{\"_0\":\"list of addresses on a given list.\"}},\"getList(uint8)\":{\"params\":{\"_listType\":\"of list being retrieved.\"},\"returns\":{\"_0\":\"list of addresses on a given list.\"}},\"getListType()\":{\"returns\":{\"_0\":\"ListType of the list. Values are: 0 (OFF), 1 (ALLOW), 2 (DENY)\"}},\"getMintConfig()\":{\"details\":\"Get the current minting configuration.\",\"returns\":{\"_0\":\"mintConfig the mint config.\"}},\"hasAdminPermission(address)\":{\"details\":\"used in the {onlyAdmin} modifier\",\"returns\":{\"_0\":\"bool denoting if _addr has admin permission.\"}},\"init(string,string,address,uint256)\":{\"details\":\"Contract initialization function.\",\"params\":{\"_creator\":\"The address of the contract creator.\",\"_maxTokens\":\"The maximum number of tokens that can be minted.\",\"_name\":\"The name of the NFT contract.\",\"_symbol\":\"The symbol of the NFT contract.\"}},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"isApprovedMinter(address)\":{\"details\":\"Checks if the supplied address is approved for minting\",\"params\":{\"_address\":\"The address of the minter.\"},\"returns\":{\"_0\":\"bool, whether the address is approved for minting.\"}},\"isOperatorInList(address)\":{\"params\":{\"_operator\":\"address being checked.\"},\"returns\":{\"_0\":\"bool relating to if the operator is on the list.\"}},\"lockBaseURI()\":{\"details\":\"Lock the metadata to prevent  further updates.\"},\"mintTo(address)\":{\"details\":\"Mint a new token to the specified receiver.\",\"params\":{\"_receiver\":\"The address of the token receiver.\"},\"returns\":{\"_0\":\"uint256 Token Id of the new token.\"}},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"prepareMint(string,uint256)\":{\"details\":\"Prepare a minting batch with a specified base URI and number of tokens.\",\"params\":{\"_baseURI\":\"The base URI for token metadata.\",\"_numberOfTokens\":\"The number of tokens to prepare for minting.\"}},\"prepareMintWithMinter(string,uint256,address)\":{\"details\":\"Prepare a minting batch with a specified base URI and number of tokens, and assign a minter address.\",\"params\":{\"_baseURI\":\"The base URI for token metadata.\",\"_minter\":\"The address of the minter.\",\"_numberOfTokens\":\"The number of tokens to prepare for minting.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"royaltyInfo(uint256,uint256)\":{\"params\":{\"_salePrice\":\"- the sale price of the NFT asset specified by _tokenId\",\"_tokenId\":\"- the NFT asset queried for royalty information\"},\"returns\":{\"receiver\":\"- address of who should be sent the royalty payment\",\"royaltyAmount\":\"- the royalty payment amount for _salePrice\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Guards {setApprovalForAll} based on the type of list and depending if {_operator} is on the list.\"},\"setDeadmanListTriggerRenewalDuration(uint256)\":{\"details\":\"Only the contract owner can call this function.\",\"params\":{\"_numYears\":\"to renew the trigger for.\"}},\"setDefaultRoyaltyReceiver(address)\":{\"details\":\"Set the default royalty receiver address.\",\"params\":{\"_receiver\":\"The address of the default royalty receiver.\"}},\"setMinterApproval(address,bool)\":{\"details\":\"Set a minter for the contract\",\"params\":{\"_isMinter\":\"bool of whether the address is a minter.\",\"_minter\":\"address of the minter.\"}},\"setRoyaltyReceiverForToken(address,uint256)\":{\"details\":\"Set a specific royalty receiver address for a token.\",\"params\":{\"_receiver\":\"The address of the royalty receiver.\",\"_tokenId\":\"The ID of the token.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"toggleListType(uint8)\":{\"details\":\"Only the contract owner can call this function.\",\"params\":{\"_newListType\":\"to be applied to the list. Options are 0 (OFF), 1 (ALLOW), 2 (DENY)\"}},\"tokenCreator(uint256)\":{\"details\":\"Get the address of the token creator for a given token ID.\",\"params\":{\"_tokenId\":\"The ID of the token.\"},\"returns\":{\"_0\":\"address of the token creator.\"}},\"tokenURI(uint256)\":{\"details\":\"Get the token URI for a specific token. If a token has a set URI, it will return that, otherwise it will return the token URI computed from the base URI.\",\"params\":{\"_tokenId\":\"The ID of the token.\"},\"returns\":{\"_0\":\"The token's URI.\"}},\"totalSupply()\":{\"details\":\"Get the total supply of tokens in existence.\",\"returns\":{\"_0\":\"The total supply of tokens.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateBaseURI(string)\":{\"details\":\"Update the base URI.\",\"params\":{\"_baseURI\":\"The new base URI.\"}},\"updateTokenURI(uint256,string)\":{\"details\":\"Update the token metadata URI.\",\"params\":{\"_metadataUri\":\"The new metadata URI.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"CantAddToOFFList()\":[{\"notice\":\"Emitted when trying to add an address to a list with type OFF.\"}],\"DeadmanTriggerStillActive()\":[{\"notice\":\"Emitted when the deadman trigger datetime threshold hasnt passed but tries to get called.\"}],\"MustBeAdmin()\":[{\"notice\":\"Emitted when an admin only function tries to be called by a non-admin.\"}],\"Unauthorized()\":[{\"notice\":\"Emitted when an unauthorized party tries to call a specific function.\"}]},\"events\":{\"AddressAddedToList(address,address,uint8)\":{\"notice\":\"Emitted when an address is added to a list.\"},\"AddressRemovedList(address,address,uint8)\":{\"notice\":\"Emitted when an address is removed from a list.\"},\"DeadmanTriggerActivated(address)\":{\"notice\":\"Emitted when the deadman switch is activated.\"},\"DeadmanTriggerDatetimeUpdated(address,uint256,uint256)\":{\"notice\":\"Emitted when deadman trigger datetime has been updated.\"},\"ListCleared(address,uint8)\":{\"notice\":\"Emitted when a list is cleared.\"},\"ListTypeUpdated(address,uint8,uint8)\":{\"notice\":\"Emitted when the list type is updated.\"}},\"kind\":\"user\",\"methods\":{\"activateDeadmanListTrigger()\":{\"notice\":\"Triggers the deadman switch for the list\"},\"batchAddAddressToRoyaltyList(uint8,address[])\":{\"notice\":\"Adds a list of addresses to the specified list.\"},\"batchRemoveAddressToRoyaltyList(uint8,address[])\":{\"notice\":\"Removes a list of addresses to the specified list.\"},\"clearList(uint8)\":{\"notice\":\"Clears an entire list.\"},\"getDeadmanTriggerAvailableDatetime()\":{\"notice\":\"The datetime threshold after which the deadman trigger can be called by anyone.\"},\"getInUseList()\":{\"notice\":\"Returns the set of addresses on a list.\"},\"getList(uint8)\":{\"notice\":\"Returns the set of addresses on a list.\"},\"getListType()\":{\"notice\":\"Returns the ListType currently being used;\"},\"hasAdminPermission(address)\":{\"notice\":\"States whether or not an address has admin permission.\"},\"isOperatorInList(address)\":{\"notice\":\"Returns if the supplied operator address in part of the current in use list.\"},\"setDeadmanListTriggerRenewalDuration(uint256)\":{\"notice\":\"Sets the deadman list trigger for the specified number of years from current block timestamp\"},\"toggleListType(uint8)\":{\"notice\":\"Toggles the list type between ALLOW, DENY, or OFF\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/token/ERC721/sovereign/lazy/extensions/LazySovereignNFTRoyaltyGuardDeadmanTrigger.sol\":\"LazySovereignNFTRoyaltyGuardDeadmanTrigger\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/buffer/=lib/buffer/\",\":@ensdomains/ens-contracts/=lib/ens-contracts/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/contracts/\",\":@uniswap/v3-core/contracts/=lib/v3-core/contracts/\",\":@uniswap/v3-periphery/=lib/v3-periphery/contracts/\",\":arachnid/solidity-stringutils/=lib/solidity-stringutils/\",\":ds-test/=lib/ds-test/src/\",\":ensdomains/ens-contracts/=lib/ensdomains/ens-contracts/contracts/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":rareprotocol/assets/=lib/assets/src/\",\":rareprotocol/aux/=src/\",\":royalty-guard/=lib/royalty-guard/src/royalty-guard/\",\":royalty-registry-solidity/=lib/royalty-registry-solidity/contracts/\",\":royalty-registry/=lib/royalty-registry-solidity/contracts/\",\":solmate/=lib/solmate/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol\":{\"keccak256\":\"0x09fa60c34ff9b067e5ad3af7719d490a12e0ca39132df6f870746eb0d32308ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acebbc807a56154030015434db278d821bca9a5316fbc3626b3f51f14403819a\",\"dweb:/ipfs/QmPacbrj1Hqzrw6b657EXuyMAazLFh1VAo9c66ZJNmfhR3\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol\":{\"keccak256\":\"0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a\",\"dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0xbe63437e37e32162d5d11ea8f11a44378c092b4bcbb05b51a813fe4bf33297d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68a514febde6ffd8afe3cb5b40815d10c0a926063237d5d167cbaa90239f75ae\",\"dweb:/ipfs/QmVBvYeR6oGBw7K7vu5FMotr8josejtaGwugM68VTZacww\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/ERC721BurnableUpgradeable.sol\":{\"keccak256\":\"0x03006ed332e7aab87b6aacc771da96e3854bfe1624e1741ede27392dd3df41cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5643a3638a33c80a62f301509e055921b35c29d755e5e0885190ad7da6f21219\",\"dweb:/ipfs/QmXoQr1v7uTh9gnuQX7ybmXrmDckt41PrHaTArTt22f9Fu\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/IERC721MetadataUpgradeable.sol\":{\"keccak256\":\"0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ffbd627e6958983d288801acdedbf3491ee0ebf1a430338bce47c96481ce9e3\",\"dweb:/ipfs/QmUM1vpmNgBV34sYf946SthDJNGhwwqjoRggmj4TUUQmdB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912\",\"dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0xb1561a6950b1aaa504c8f81b7d46bccfa77ccd10de3eb865cf34b1acd5ad505e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a56cb91629dacd161be24908fbf94315f3f45dd6fee8dad82b27af853cbc4ee\",\"dweb:/ipfs/QmNfEzdf4NTpxyhzWKAmeDwwSpJ6ZjNizK3GXw3TEuTTgn\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xacbaaa9be521944f83d2852379e1f40b28ada61a256493474f6cdc9b59620598\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15aa625baf68ba948a074361f38f7cf0e6198ba67d1d808c43865409296f1e72\",\"dweb:/ipfs/Qmbcae8x18H5Uzp2DsQcfZH3PMxokhhVCcwks22CDqVsPQ\"]},\"lib/royalty-guard/src/royalty-guard/IRoyaltyGuard.sol\":{\"keccak256\":\"0x952e26315a1dacceb17d91d2b237a7c90bb2e0e979ed5e848410f6e17ecdda2f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb8e443c88279d82d457d69780b69632aad89a66a4c8250b14830ae2149d18b5\",\"dweb:/ipfs/QmNp9VsaCFtQNx5eDfeDxmdjHF4qbsdMUyfkSjAA9rGmkc\"]},\"lib/royalty-guard/src/royalty-guard/RoyaltyGuard.sol\":{\"keccak256\":\"0x8457bba18db14686d2c6408d19876442e9ac22e2bb84128ba39b7a31e2e56afa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a96299cc4768dd591af1b59b17770db92aac284742c3707b1b6da56c7c8941d\",\"dweb:/ipfs/QmeyxsaimbdPoRR43GoHo8Qqwz7EQLwVj7TAErvZTtcsLn\"]},\"lib/royalty-guard/src/royalty-guard/extensions/IRoyaltyGuardDeadmanTrigger.sol\":{\"keccak256\":\"0xcafb030b4ccdd7ddf079ac1a10280d1d706c0b605ea006f219535f9c65b3b703\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://309f7d890fdec6388eb5524ae67e2cc1d2bc41dc3ae680297d2199c273e104a6\",\"dweb:/ipfs/QmaJNTJLxnx6KwaSRnREdtYpSPYh4uygWgc4YjpgESXHP6\"]},\"lib/royalty-guard/src/royalty-guard/extensions/RoyaltyGuardDeadmanTrigger.sol\":{\"keccak256\":\"0x1f4aaef4a676090590db2fff6c98004a13387fcfaa04e0c1f6ad23246f3629cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://263643bab6c1cd0c86315c352c610965a712981de7a5b6cc1025d956d971f286\",\"dweb:/ipfs/QmXofJtLz1uZaG1Bo34d9TogNiogTzEQsweTv684bJ41HB\"]},\"src/token/ERC721/sovereign/lazy/LazySovereignNFT.sol\":{\"keccak256\":\"0xf6f378b63a2f4573d0240ef48176d0310fc1a98f49d069caf582883071905635\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6bfd19f9e7d322ea32fb42e59e5eee7690c2b68f906d0ae3d8356b6fbd24366e\",\"dweb:/ipfs/QmWcgM2eAPxkfakEs91eoj9bsGkPSpNpsv814pJH9nCPGa\"]},\"src/token/ERC721/sovereign/lazy/extensions/LazySovereignNFTRoyaltyGuardDeadmanTrigger.sol\":{\"keccak256\":\"0xe6ccd5e1671c64bbb2cbe9aff65617bbeef899d879cbe712bfb69f6fa490f29c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c1f6984f179fefe7ebbb3fb36d880484d59f3595c76537cf6d63333b2c6aa79\",\"dweb:/ipfs/QmNzGPY1AhpAJvduFDLFv3rSgMiHgrQugQ8VCXWwq5XdLK\"]},\"src/token/extensions/ERC2981Upgradeable.sol\":{\"keccak256\":\"0x62c64c84a127c5a388397fa20c990b8c0dbd22a1fa1b7176f55c8aae3238383d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e540b90c23c363b1d5fb122286c7c583a44c8b907f2764ddf0f2c0e7793b5465\",\"dweb:/ipfs/QmPn163efSqFyhWHC4qFmeJXgMMbEmoENa6gRZjM4wedhA\"]},\"src/token/extensions/IERC2981.sol\":{\"keccak256\":\"0x2435b55e1011401b85ed792513721df4fe905013926fa7385f502aa3e97cdffd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056bca27c266998358654b0a64b4286a9b66c1b4db464f70a679d44de0f3fa4b\",\"dweb:/ipfs/QmW7zACzmmzoHKdrRQVRKh6eNiGuMjKZrZbvndNW819Z1w\"]},\"src/token/extensions/ITokenCreator.sol\":{\"keccak256\":\"0xebb99f216573c38f201c0cd99bbe98cce87a04acc129b37b487e66ec148de5f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b101c0be9c38496d0bee068af7ca3519d3879c35315d6336e2dbc9a36ab1ae42\",\"dweb:/ipfs/QmZQuVdfHHw1FuX4tc867KedVdnJDJ8Kth9BPKUiuajBoF\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.18+commit.87f61d96"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "CantAddToOFFList"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "DeadmanTriggerStillActive"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MustBeAdmin"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Unauthorized"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_updater",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_addedAddr",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "enum IRoyaltyGuard.ListType",
              "name": "_ListType",
              "type": "uint8",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AddressAddedToList",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_updater",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_removedAddr",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "enum IRoyaltyGuard.ListType",
              "name": "_ListType",
              "type": "uint8",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AddressRemovedList",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ContractDisabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_activator",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "DeadmanTriggerActivated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_updater",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_oldDatetime",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_newDatetime",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DeadmanTriggerDatetimeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_updater",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "enum IRoyaltyGuard.ListType",
              "name": "_listType",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ListCleared",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_updater",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "enum IRoyaltyGuard.ListType",
              "name": "_oldListType",
              "type": "uint8",
              "indexed": true
            },
            {
              "internalType": "enum IRoyaltyGuard.ListType",
              "name": "_newListType",
              "type": "uint8",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ListTypeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "baseURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MetadataLocked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "baseURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MetadataUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "numberOfTokens",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "baseURI",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PrepareMint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "metadataUri",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokenURIUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "activateDeadmanListTrigger"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum IRoyaltyGuard.ListType",
              "name": "_listType",
              "type": "uint8"
            },
            {
              "internalType": "address[]",
              "name": "_addrs",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchAddAddressToRoyaltyList"
        },
        {
          "inputs": [
            {
              "internalType": "enum IRoyaltyGuard.ListType",
              "name": "_listType",
              "type": "uint8"
            },
            {
              "internalType": "address[]",
              "name": "_addrs",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchRemoveAddressToRoyaltyList"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "enum IRoyaltyGuard.ListType",
              "name": "_listType",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "clearList"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deleteToken"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "disableContract"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "disabled",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDeadmanTriggerAvailableDatetime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyPercentage",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getDefaultRoyaltyReceiver",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getInUseList",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum IRoyaltyGuard.ListType",
              "name": "_listType",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getList",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getListType",
          "outputs": [
            {
              "internalType": "enum IRoyaltyGuard.ListType",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getMintConfig",
          "outputs": [
            {
              "internalType": "struct LazySovereignNFT.MintConfig",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "numberOfTokens",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "baseURI",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "lockedMetadata",
                  "type": "bool"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_addr",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasAdminPermission",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_creator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_maxTokens",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "init"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_address",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedMinter",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperatorInList",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "lockBaseURI"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "maxTokens",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintTo",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_baseURI",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "_numberOfTokens",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "prepareMint"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_baseURI",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "_numberOfTokens",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_minter",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "prepareMintWithMinter"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_salePrice",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "royaltyAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_numYears",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDeadmanListTriggerRenewalDuration"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setDefaultRoyaltyReceiver"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_minter",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_isMinter",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMinterApproval"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyReceiverForToken"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "_interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum IRoyaltyGuard.ListType",
              "name": "_newListType",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "toggleListType"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenCreator",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_baseURI",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateBaseURI"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_metadataUri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateTokenURI"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "activateDeadmanListTrigger()": {
            "details": "Can only be called if deadmanListTriggerAfterDatetime is in the past."
          },
          "approve(address,uint256)": {
            "details": "Guards {approve} based on the type of list and depending if {_spender} is on the list."
          },
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "batchAddAddressToRoyaltyList(uint8,address[])": {
            "details": "Only the contract owner can call this function.Cannot add to the OFF list",
            "params": {
              "_addrs": "being added to the designated list",
              "_listType": "that addresses are being added to"
            }
          },
          "batchRemoveAddressToRoyaltyList(uint8,address[])": {
            "details": "Only the contract owner can call this function.",
            "params": {
              "_addrs": "being removed from the designated list",
              "_listType": "that addresses are being removed from"
            }
          },
          "burn(uint256)": {
            "details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
          },
          "clearList(uint8)": {
            "details": "Only the contract owner can call this function.",
            "params": {
              "_listType": "of list being cleared."
            }
          },
          "deleteToken(uint256)": {
            "details": "Delete a token with the given ID.",
            "params": {
              "_tokenId": "The ID of the token to delete."
            }
          },
          "disableContract()": {
            "details": "Disable the contract, preventing further minting."
          },
          "getApproved(uint256)": {
            "details": "See {IERC721-getApproved}."
          },
          "getDeadmanTriggerAvailableDatetime()": {
            "returns": {
              "_0": "uint256 denoting unix epoch time after which the deadman trigger can be activated."
            }
          },
          "getInUseList()": {
            "returns": {
              "_0": "list of addresses on a given list."
            }
          },
          "getList(uint8)": {
            "params": {
              "_listType": "of list being retrieved."
            },
            "returns": {
              "_0": "list of addresses on a given list."
            }
          },
          "getListType()": {
            "returns": {
              "_0": "ListType of the list. Values are: 0 (OFF), 1 (ALLOW), 2 (DENY)"
            }
          },
          "getMintConfig()": {
            "details": "Get the current minting configuration.",
            "returns": {
              "_0": "mintConfig the mint config."
            }
          },
          "hasAdminPermission(address)": {
            "details": "used in the {onlyAdmin} modifier",
            "returns": {
              "_0": "bool denoting if _addr has admin permission."
            }
          },
          "init(string,string,address,uint256)": {
            "details": "Contract initialization function.",
            "params": {
              "_creator": "The address of the contract creator.",
              "_maxTokens": "The maximum number of tokens that can be minted.",
              "_name": "The name of the NFT contract.",
              "_symbol": "The symbol of the NFT contract."
            }
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "isApprovedMinter(address)": {
            "details": "Checks if the supplied address is approved for minting",
            "params": {
              "_address": "The address of the minter."
            },
            "returns": {
              "_0": "bool, whether the address is approved for minting."
            }
          },
          "isOperatorInList(address)": {
            "params": {
              "_operator": "address being checked."
            },
            "returns": {
              "_0": "bool relating to if the operator is on the list."
            }
          },
          "lockBaseURI()": {
            "details": "Lock the metadata to prevent  further updates."
          },
          "mintTo(address)": {
            "details": "Mint a new token to the specified receiver.",
            "params": {
              "_receiver": "The address of the token receiver."
            },
            "returns": {
              "_0": "uint256 Token Id of the new token."
            }
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "prepareMint(string,uint256)": {
            "details": "Prepare a minting batch with a specified base URI and number of tokens.",
            "params": {
              "_baseURI": "The base URI for token metadata.",
              "_numberOfTokens": "The number of tokens to prepare for minting."
            }
          },
          "prepareMintWithMinter(string,uint256,address)": {
            "details": "Prepare a minting batch with a specified base URI and number of tokens, and assign a minter address.",
            "params": {
              "_baseURI": "The base URI for token metadata.",
              "_minter": "The address of the minter.",
              "_numberOfTokens": "The number of tokens to prepare for minting."
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "royaltyInfo(uint256,uint256)": {
            "params": {
              "_salePrice": "- the sale price of the NFT asset specified by _tokenId",
              "_tokenId": "- the NFT asset queried for royalty information"
            },
            "returns": {
              "receiver": "- address of who should be sent the royalty payment",
              "royaltyAmount": "- the royalty payment amount for _salePrice"
            }
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "Guards {setApprovalForAll} based on the type of list and depending if {_operator} is on the list."
          },
          "setDeadmanListTriggerRenewalDuration(uint256)": {
            "details": "Only the contract owner can call this function.",
            "params": {
              "_numYears": "to renew the trigger for."
            }
          },
          "setDefaultRoyaltyReceiver(address)": {
            "details": "Set the default royalty receiver address.",
            "params": {
              "_receiver": "The address of the default royalty receiver."
            }
          },
          "setMinterApproval(address,bool)": {
            "details": "Set a minter for the contract",
            "params": {
              "_isMinter": "bool of whether the address is a minter.",
              "_minter": "address of the minter."
            }
          },
          "setRoyaltyReceiverForToken(address,uint256)": {
            "details": "Set a specific royalty receiver address for a token.",
            "params": {
              "_receiver": "The address of the royalty receiver.",
              "_tokenId": "The ID of the token."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          },
          "toggleListType(uint8)": {
            "details": "Only the contract owner can call this function.",
            "params": {
              "_newListType": "to be applied to the list. Options are 0 (OFF), 1 (ALLOW), 2 (DENY)"
            }
          },
          "tokenCreator(uint256)": {
            "details": "Get the address of the token creator for a given token ID.",
            "params": {
              "_tokenId": "The ID of the token."
            },
            "returns": {
              "_0": "address of the token creator."
            }
          },
          "tokenURI(uint256)": {
            "details": "Get the token URI for a specific token. If a token has a set URI, it will return that, otherwise it will return the token URI computed from the base URI.",
            "params": {
              "_tokenId": "The ID of the token."
            },
            "returns": {
              "_0": "The token's URI."
            }
          },
          "totalSupply()": {
            "details": "Get the total supply of tokens in existence.",
            "returns": {
              "_0": "The total supply of tokens."
            }
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC721-transferFrom}."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "updateBaseURI(string)": {
            "details": "Update the base URI.",
            "params": {
              "_baseURI": "The new base URI."
            }
          },
          "updateTokenURI(uint256,string)": {
            "details": "Update the token metadata URI.",
            "params": {
              "_metadataUri": "The new metadata URI."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "activateDeadmanListTrigger()": {
            "notice": "Triggers the deadman switch for the list"
          },
          "batchAddAddressToRoyaltyList(uint8,address[])": {
            "notice": "Adds a list of addresses to the specified list."
          },
          "batchRemoveAddressToRoyaltyList(uint8,address[])": {
            "notice": "Removes a list of addresses to the specified list."
          },
          "clearList(uint8)": {
            "notice": "Clears an entire list."
          },
          "getDeadmanTriggerAvailableDatetime()": {
            "notice": "The datetime threshold after which the deadman trigger can be called by anyone."
          },
          "getInUseList()": {
            "notice": "Returns the set of addresses on a list."
          },
          "getList(uint8)": {
            "notice": "Returns the set of addresses on a list."
          },
          "getListType()": {
            "notice": "Returns the ListType currently being used;"
          },
          "hasAdminPermission(address)": {
            "notice": "States whether or not an address has admin permission."
          },
          "isOperatorInList(address)": {
            "notice": "Returns if the supplied operator address in part of the current in use list."
          },
          "setDeadmanListTriggerRenewalDuration(uint256)": {
            "notice": "Sets the deadman list trigger for the specified number of years from current block timestamp"
          },
          "toggleListType(uint8)": {
            "notice": "Toggles the list type between ALLOW, DENY, or OFF"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ensdomains/buffer/=lib/buffer/",
        "@ensdomains/ens-contracts/=lib/ens-contracts/contracts/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@uniswap/v3-core/=lib/v3-core/contracts/",
        "@uniswap/v3-core/contracts/=lib/v3-core/contracts/",
        "@uniswap/v3-periphery/=lib/v3-periphery/contracts/",
        "arachnid/solidity-stringutils/=lib/solidity-stringutils/",
        "ds-test/=lib/ds-test/src/",
        "ensdomains/ens-contracts/=lib/ensdomains/ens-contracts/contracts/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        "rareprotocol/assets/=lib/assets/src/",
        "rareprotocol/aux/=src/",
        "royalty-guard/=lib/royalty-guard/src/royalty-guard/",
        "royalty-registry-solidity/=lib/royalty-registry-solidity/contracts/",
        "royalty-registry/=lib/royalty-registry-solidity/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/token/ERC721/sovereign/lazy/extensions/LazySovereignNFTRoyaltyGuardDeadmanTrigger.sol": "LazySovereignNFTRoyaltyGuardDeadmanTrigger"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98",
        "urls": [
          "bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8",
          "dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/ERC721Upgradeable.sol": {
        "keccak256": "0x09fa60c34ff9b067e5ad3af7719d490a12e0ca39132df6f870746eb0d32308ad",
        "urls": [
          "bzz-raw://acebbc807a56154030015434db278d821bca9a5316fbc3626b3f51f14403819a",
          "dweb:/ipfs/QmPacbrj1Hqzrw6b657EXuyMAazLFh1VAo9c66ZJNmfhR3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol": {
        "keccak256": "0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5",
        "urls": [
          "bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a",
          "dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721Upgradeable.sol": {
        "keccak256": "0xbe63437e37e32162d5d11ea8f11a44378c092b4bcbb05b51a813fe4bf33297d4",
        "urls": [
          "bzz-raw://68a514febde6ffd8afe3cb5b40815d10c0a926063237d5d167cbaa90239f75ae",
          "dweb:/ipfs/QmVBvYeR6oGBw7K7vu5FMotr8josejtaGwugM68VTZacww"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/ERC721BurnableUpgradeable.sol": {
        "keccak256": "0x03006ed332e7aab87b6aacc771da96e3854bfe1624e1741ede27392dd3df41cf",
        "urls": [
          "bzz-raw://5643a3638a33c80a62f301509e055921b35c29d755e5e0885190ad7da6f21219",
          "dweb:/ipfs/QmXoQr1v7uTh9gnuQX7ybmXrmDckt41PrHaTArTt22f9Fu"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/extensions/IERC721MetadataUpgradeable.sol": {
        "keccak256": "0x95a471796eb5f030fdc438660bebec121ad5d063763e64d92376ffb4b5ce8b70",
        "urls": [
          "bzz-raw://4ffbd627e6958983d288801acdedbf3491ee0ebf1a430338bce47c96481ce9e3",
          "dweb:/ipfs/QmUM1vpmNgBV34sYf946SthDJNGhwwqjoRggmj4TUUQmdB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/CountersUpgradeable.sol": {
        "keccak256": "0x798741e231b22b81e2dd2eddaaf8832dee4baf5cd8e2dbaa5c1dd12a1c053c4d",
        "urls": [
          "bzz-raw://c41e8a7a906b8f362c8b760a44edadc61782008ea2ecf377ac5b5325bf6c3912",
          "dweb:/ipfs/QmcXr19zuH3YLzD6RZNE6UTzvsKSckdxZQnagPoDGkCHu2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb",
        "urls": [
          "bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a",
          "dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
        "urls": [
          "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
          "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol": {
        "keccak256": "0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e",
        "urls": [
          "bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91",
          "dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SafeMathUpgradeable.sol": {
        "keccak256": "0xb1561a6950b1aaa504c8f81b7d46bccfa77ccd10de3eb865cf34b1acd5ad505e",
        "urls": [
          "bzz-raw://9a56cb91629dacd161be24908fbf94315f3f45dd6fee8dad82b27af853cbc4ee",
          "dweb:/ipfs/QmNfEzdf4NTpxyhzWKAmeDwwSpJ6ZjNizK3GXw3TEuTTgn"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/SignedMathUpgradeable.sol": {
        "keccak256": "0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a",
        "urls": [
          "bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4",
          "dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0xacbaaa9be521944f83d2852379e1f40b28ada61a256493474f6cdc9b59620598",
        "urls": [
          "bzz-raw://15aa625baf68ba948a074361f38f7cf0e6198ba67d1d808c43865409296f1e72",
          "dweb:/ipfs/Qmbcae8x18H5Uzp2DsQcfZH3PMxokhhVCcwks22CDqVsPQ"
        ],
        "license": "MIT"
      },
      "lib/royalty-guard/src/royalty-guard/IRoyaltyGuard.sol": {
        "keccak256": "0x952e26315a1dacceb17d91d2b237a7c90bb2e0e979ed5e848410f6e17ecdda2f",
        "urls": [
          "bzz-raw://fb8e443c88279d82d457d69780b69632aad89a66a4c8250b14830ae2149d18b5",
          "dweb:/ipfs/QmNp9VsaCFtQNx5eDfeDxmdjHF4qbsdMUyfkSjAA9rGmkc"
        ],
        "license": "MIT"
      },
      "lib/royalty-guard/src/royalty-guard/RoyaltyGuard.sol": {
        "keccak256": "0x8457bba18db14686d2c6408d19876442e9ac22e2bb84128ba39b7a31e2e56afa",
        "urls": [
          "bzz-raw://5a96299cc4768dd591af1b59b17770db92aac284742c3707b1b6da56c7c8941d",
          "dweb:/ipfs/QmeyxsaimbdPoRR43GoHo8Qqwz7EQLwVj7TAErvZTtcsLn"
        ],
        "license": "MIT"
      },
      "lib/royalty-guard/src/royalty-guard/extensions/IRoyaltyGuardDeadmanTrigger.sol": {
        "keccak256": "0xcafb030b4ccdd7ddf079ac1a10280d1d706c0b605ea006f219535f9c65b3b703",
        "urls": [
          "bzz-raw://309f7d890fdec6388eb5524ae67e2cc1d2bc41dc3ae680297d2199c273e104a6",
          "dweb:/ipfs/QmaJNTJLxnx6KwaSRnREdtYpSPYh4uygWgc4YjpgESXHP6"
        ],
        "license": "MIT"
      },
      "lib/royalty-guard/src/royalty-guard/extensions/RoyaltyGuardDeadmanTrigger.sol": {
        "keccak256": "0x1f4aaef4a676090590db2fff6c98004a13387fcfaa04e0c1f6ad23246f3629cb",
        "urls": [
          "bzz-raw://263643bab6c1cd0c86315c352c610965a712981de7a5b6cc1025d956d971f286",
          "dweb:/ipfs/QmXofJtLz1uZaG1Bo34d9TogNiogTzEQsweTv684bJ41HB"
        ],
        "license": "MIT"
      },
      "src/token/ERC721/sovereign/lazy/LazySovereignNFT.sol": {
        "keccak256": "0xf6f378b63a2f4573d0240ef48176d0310fc1a98f49d069caf582883071905635",
        "urls": [
          "bzz-raw://6bfd19f9e7d322ea32fb42e59e5eee7690c2b68f906d0ae3d8356b6fbd24366e",
          "dweb:/ipfs/QmWcgM2eAPxkfakEs91eoj9bsGkPSpNpsv814pJH9nCPGa"
        ],
        "license": "MIT"
      },
      "src/token/ERC721/sovereign/lazy/extensions/LazySovereignNFTRoyaltyGuardDeadmanTrigger.sol": {
        "keccak256": "0xe6ccd5e1671c64bbb2cbe9aff65617bbeef899d879cbe712bfb69f6fa490f29c",
        "urls": [
          "bzz-raw://2c1f6984f179fefe7ebbb3fb36d880484d59f3595c76537cf6d63333b2c6aa79",
          "dweb:/ipfs/QmNzGPY1AhpAJvduFDLFv3rSgMiHgrQugQ8VCXWwq5XdLK"
        ],
        "license": "MIT"
      },
      "src/token/extensions/ERC2981Upgradeable.sol": {
        "keccak256": "0x62c64c84a127c5a388397fa20c990b8c0dbd22a1fa1b7176f55c8aae3238383d",
        "urls": [
          "bzz-raw://e540b90c23c363b1d5fb122286c7c583a44c8b907f2764ddf0f2c0e7793b5465",
          "dweb:/ipfs/QmPn163efSqFyhWHC4qFmeJXgMMbEmoENa6gRZjM4wedhA"
        ],
        "license": "MIT"
      },
      "src/token/extensions/IERC2981.sol": {
        "keccak256": "0x2435b55e1011401b85ed792513721df4fe905013926fa7385f502aa3e97cdffd",
        "urls": [
          "bzz-raw://056bca27c266998358654b0a64b4286a9b66c1b4db464f70a679d44de0f3fa4b",
          "dweb:/ipfs/QmW7zACzmmzoHKdrRQVRKh6eNiGuMjKZrZbvndNW819Z1w"
        ],
        "license": "MIT"
      },
      "src/token/extensions/ITokenCreator.sol": {
        "keccak256": "0xebb99f216573c38f201c0cd99bbe98cce87a04acc129b37b487e66ec148de5f6",
        "urls": [
          "bzz-raw://b101c0be9c38496d0bee068af7ca3519d3879c35315d6336e2dbc9a36ab1ae42",
          "dweb:/ipfs/QmZQuVdfHHw1FuX4tc867KedVdnJDJ8Kth9BPKUiuajBoF"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/token/ERC721/sovereign/lazy/extensions/LazySovereignNFTRoyaltyGuardDeadmanTrigger.sol",
    "id": 88336,
    "exportedSymbols": {
      "AddressUpgradeable": [
        35328
      ],
      "ContextUpgradeable": [
        35526
      ],
      "CountersUpgradeable": [
        35600
      ],
      "ERC165": [
        43298
      ],
      "ERC165Upgradeable": [
        35983
      ],
      "ERC2981Upgradeable": [
        89287
      ],
      "ERC721BurnableUpgradeable": [
        34971
      ],
      "ERC721Upgradeable": [
        34787
      ],
      "EnumerableSet": [
        46629
      ],
      "IERC165Upgradeable": [
        35995
      ],
      "IERC2981": [
        89303
      ],
      "IERC721MetadataUpgradeable": [
        34998
      ],
      "IERC721ReceiverUpgradeable": [
        34805
      ],
      "IERC721Upgradeable": [
        34921
      ],
      "IRoyaltyGuard": [
        46759
      ],
      "IRoyaltyGuardDeadmanTrigger": [
        47156
      ],
      "ITokenCreator": [
        89313
      ],
      "Initializable": [
        31709
      ],
      "LazySovereignNFT": [
        87892
      ],
      "LazySovereignNFTRoyaltyGuardDeadmanTrigger": [
        88335
      ],
      "MathUpgradeable": [
        36861
      ],
      "OwnableUpgradeable": [
        31172
      ],
      "RoyaltyGuard": [
        47115
      ],
      "RoyaltyGuardDeadmanTrigger": [
        47250
      ],
      "SafeMathUpgradeable": [
        37173
      ],
      "SignedMathUpgradeable": [
        37278
      ],
      "StringsUpgradeable": [
        35939
      ]
    },
    "nodeType": "SourceUnit",
    "src": "85:1852:209",
    "nodes": [
      {
        "id": 88249,
        "nodeType": "PragmaDirective",
        "src": "85:23:209",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 88250,
        "nodeType": "ImportDirective",
        "src": "110:65:209",
        "nodes": [],
        "absolutePath": "lib/royalty-guard/src/royalty-guard/extensions/RoyaltyGuardDeadmanTrigger.sol",
        "file": "royalty-guard/extensions/RoyaltyGuardDeadmanTrigger.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 88336,
        "sourceUnit": 47251,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 88251,
        "nodeType": "ImportDirective",
        "src": "177:33:209",
        "nodes": [],
        "absolutePath": "src/token/ERC721/sovereign/lazy/LazySovereignNFT.sol",
        "file": "../LazySovereignNFT.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 88336,
        "sourceUnit": 87893,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 88335,
        "nodeType": "ContractDefinition",
        "src": "212:1724:209",
        "nodes": [
          {
            "id": 88277,
            "nodeType": "FunctionDefinition",
            "src": "576:312:209",
            "nodes": [],
            "body": {
              "id": 88276,
              "nodeType": "Block",
              "src": "744:144:209",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 88274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 88268,
                          "name": "_interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88258,
                          "src": "804:12:209",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 88266,
                          "name": "RoyaltyGuard",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47115,
                          "src": "773:12:209",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_RoyaltyGuard_$47115_$",
                            "typeString": "type(contract RoyaltyGuard)"
                          }
                        },
                        "id": 88267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "786:17:209",
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 47022,
                        "src": "773:30:209",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 88269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "773:44:209",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 88272,
                          "name": "_interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88258,
                          "src": "868:12:209",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 88270,
                          "name": "LazySovereignNFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87892,
                          "src": "833:16:209",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LazySovereignNFT_$87892_$",
                            "typeString": "type(contract LazySovereignNFT)"
                          }
                        },
                        "id": 88271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "850:17:209",
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 87805,
                        "src": "833:34:209",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 88273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "833:48:209",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "773:108:209",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 88265,
                  "id": 88275,
                  "nodeType": "Return",
                  "src": "754:127:209"
                }
              ]
            },
            "baseFunctions": [
              47022,
              87805
            ],
            "documentation": {
              "id": 88256,
              "nodeType": "StructuredDocumentation",
              "src": "530:41:209",
              "text": "@dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "585:17:209",
            "overrides": {
              "id": 88262,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 88260,
                  "name": "LazySovereignNFT",
                  "nameLocations": [
                    "685:16:209"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 87892,
                  "src": "685:16:209"
                },
                {
                  "id": 88261,
                  "name": "RoyaltyGuard",
                  "nameLocations": [
                    "703:12:209"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47115,
                  "src": "703:12:209"
                }
              ],
              "src": "676:40:209"
            },
            "parameters": {
              "id": 88259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88258,
                  "mutability": "mutable",
                  "name": "_interfaceId",
                  "nameLocation": "610:12:209",
                  "nodeType": "VariableDeclaration",
                  "scope": 88277,
                  "src": "603:19:209",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 88257,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "603:6:209",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "602:21:209"
            },
            "returnParameters": {
              "id": 88265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88264,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 88277,
                  "src": "734:4:209",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 88263,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "734:4:209",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "733:6:209"
            },
            "scope": 88335,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 88294,
            "nodeType": "FunctionDefinition",
            "src": "1133:200:209",
            "nodes": [],
            "body": {
              "id": 88293,
              "nodeType": "Block",
              "src": "1293:40:209",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 88291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 88288,
                      "name": "_addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 88280,
                      "src": "1310:5:209",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 88289,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31095,
                        "src": "1319:5:209",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 88290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1319:7:209",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1310:16:209",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 88287,
                  "id": 88292,
                  "nodeType": "Return",
                  "src": "1303:23:209"
                }
              ]
            },
            "baseFunctions": [
              46751,
              47000
            ],
            "documentation": {
              "id": 88278,
              "nodeType": "StructuredDocumentation",
              "src": "1100:28:209",
              "text": "@inheritdoc RoyaltyGuard"
            },
            "functionSelector": "20427486",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hasAdminPermission",
            "nameLocation": "1142:18:209",
            "overrides": {
              "id": 88284,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 88282,
                  "name": "IRoyaltyGuard",
                  "nameLocations": [
                    "1237:13:209"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46759,
                  "src": "1237:13:209"
                },
                {
                  "id": 88283,
                  "name": "RoyaltyGuard",
                  "nameLocations": [
                    "1252:12:209"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47115,
                  "src": "1252:12:209"
                }
              ],
              "src": "1228:37:209"
            },
            "parameters": {
              "id": 88281,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88280,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nameLocation": "1169:5:209",
                  "nodeType": "VariableDeclaration",
                  "scope": 88294,
                  "src": "1161:13:209",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88279,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1161:7:209",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1160:15:209"
            },
            "returnParameters": {
              "id": 88287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88286,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 88294,
                  "src": "1283:4:209",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 88285,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1283:4:209",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1282:6:209"
            },
            "scope": 88335,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 88314,
            "nodeType": "FunctionDefinition",
            "src": "1439:173:209",
            "nodes": [],
            "body": {
              "id": 88313,
              "nodeType": "Block",
              "src": "1567:45:209",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88309,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88297,
                        "src": "1591:8:209",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 88310,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88299,
                        "src": "1601:3:209",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 88306,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1577:5:209",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_LazySovereignNFTRoyaltyGuardDeadmanTrigger_$88335_$",
                          "typeString": "type(contract super LazySovereignNFTRoyaltyGuardDeadmanTrigger)"
                        }
                      },
                      "id": 88308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1583:7:209",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34112,
                      "src": "1577:13:209",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 88311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1577:28:209",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88312,
                  "nodeType": "ExpressionStatement",
                  "src": "1577:28:209"
                }
              ]
            },
            "baseFunctions": [
              34112
            ],
            "documentation": {
              "id": 88295,
              "nodeType": "StructuredDocumentation",
              "src": "1339:95:209",
              "text": "@dev Guards {approve} based on the type of list and depending if {_spender} is on the list."
            },
            "functionSelector": "095ea7b3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 88303,
                    "name": "_spender",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 88297,
                    "src": "1553:8:209",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 88304,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 88302,
                  "name": "checkList",
                  "nameLocations": [
                    "1543:9:209"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46835,
                  "src": "1543:9:209"
                },
                "nodeType": "ModifierInvocation",
                "src": "1543:19:209"
              }
            ],
            "name": "approve",
            "nameLocation": "1448:7:209",
            "overrides": {
              "id": 88301,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1526:8:209"
            },
            "parameters": {
              "id": 88300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88297,
                  "mutability": "mutable",
                  "name": "_spender",
                  "nameLocation": "1464:8:209",
                  "nodeType": "VariableDeclaration",
                  "scope": 88314,
                  "src": "1456:16:209",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88296,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1456:7:209",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88299,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "1482:3:209",
                  "nodeType": "VariableDeclaration",
                  "scope": 88314,
                  "src": "1474:11:209",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 88298,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1474:7:209",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1455:31:209"
            },
            "returnParameters": {
              "id": 88305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1567:0:209"
            },
            "scope": 88335,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 88334,
            "nodeType": "FunctionDefinition",
            "src": "1729:205:209",
            "nodes": [],
            "body": {
              "id": 88333,
              "nodeType": "Block",
              "src": "1872:62:209",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88329,
                        "name": "_operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88317,
                        "src": "1906:9:209",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 88330,
                        "name": "_approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88319,
                        "src": "1917:9:209",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 88326,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1882:5:209",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_LazySovereignNFTRoyaltyGuardDeadmanTrigger_$88335_$",
                          "typeString": "type(contract super LazySovereignNFTRoyaltyGuardDeadmanTrigger)"
                        }
                      },
                      "id": 88328,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1888:17:209",
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34147,
                      "src": "1882:23:209",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 88331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1882:45:209",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88332,
                  "nodeType": "ExpressionStatement",
                  "src": "1882:45:209"
                }
              ]
            },
            "baseFunctions": [
              34147
            ],
            "documentation": {
              "id": 88315,
              "nodeType": "StructuredDocumentation",
              "src": "1618:106:209",
              "text": "@dev Guards {setApprovalForAll} based on the type of list and depending if {_operator} is on the list."
            },
            "functionSelector": "a22cb465",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 88323,
                    "name": "_operator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 88317,
                    "src": "1857:9:209",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 88324,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 88322,
                  "name": "checkList",
                  "nameLocations": [
                    "1847:9:209"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46835,
                  "src": "1847:9:209"
                },
                "nodeType": "ModifierInvocation",
                "src": "1847:20:209"
              }
            ],
            "name": "setApprovalForAll",
            "nameLocation": "1738:17:209",
            "overrides": {
              "id": 88321,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1830:8:209"
            },
            "parameters": {
              "id": 88320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88317,
                  "mutability": "mutable",
                  "name": "_operator",
                  "nameLocation": "1764:9:209",
                  "nodeType": "VariableDeclaration",
                  "scope": 88334,
                  "src": "1756:17:209",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88316,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1756:7:209",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 88319,
                  "mutability": "mutable",
                  "name": "_approved",
                  "nameLocation": "1780:9:209",
                  "nodeType": "VariableDeclaration",
                  "scope": 88334,
                  "src": "1775:14:209",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 88318,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1775:4:209",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1755:35:209"
            },
            "returnParameters": {
              "id": 88325,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1872:0:209"
            },
            "scope": 88335,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 88252,
              "name": "LazySovereignNFT",
              "nameLocations": [
                "271:16:209"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 87892,
              "src": "271:16:209"
            },
            "id": 88253,
            "nodeType": "InheritanceSpecifier",
            "src": "271:16:209"
          },
          {
            "baseName": {
              "id": 88254,
              "name": "RoyaltyGuardDeadmanTrigger",
              "nameLocations": [
                "293:26:209"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 47250,
              "src": "293:26:209"
            },
            "id": 88255,
            "nodeType": "InheritanceSpecifier",
            "src": "293:26:209"
          }
        ],
        "canonicalName": "LazySovereignNFTRoyaltyGuardDeadmanTrigger",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          88335,
          47250,
          47115,
          43298,
          43504,
          47156,
          46759,
          87892,
          89287,
          34971,
          89313,
          34787,
          34998,
          34921,
          35983,
          35995,
          31172,
          35526,
          31709,
          89303
        ],
        "name": "LazySovereignNFTRoyaltyGuardDeadmanTrigger",
        "nameLocation": "221:42:209",
        "scope": 88336,
        "usedErrors": [
          46678,
          46681,
          46684,
          47139
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 209
}