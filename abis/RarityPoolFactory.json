{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_deployingUser",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_userStakedOn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_stakingAddress",
          "type": "address"
        }
      ],
      "name": "StakingContractCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "deployStaking",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRareStakingTemplateAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStakingRegistryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakingRegistry",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rareStakingTemplate",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rewardSwapFactory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_rareStakingTemplate",
          "type": "address"
        }
      ],
      "name": "setRareStakingTemplate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakingRegistry",
          "type": "address"
        }
      ],
      "name": "setStakingRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a06040523060805234801561001457600080fd5b5060805161213661004c600039600081816107c501528181610808015281816108b0015281816108f3015261098f01526121366000f3fe608060405260043610620000d25760003560e01c8063715018a611620000895780639f997eb011620000605780639f997eb01462000220578063c8cb01d814620001a3578063f2fde38b1462000240578063f8c8765e146200026557600080fd5b8063715018a614620001c35780637ed155de14620001db5780638da5cb5b146200020057600080fd5b80631249ed2314620000d75780632c74084414620001195780633659cfe614620001405780634f1ef286146200016557806352d1902d146200017c5780635c60da1b14620001a3575b600080fd5b348015620000e457600080fd5b50620000fc620000f636600462001467565b6200028a565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156200012657600080fd5b506200013e6200013836600462001467565b6200062e565b005b3480156200014d57600080fd5b506200013e6200015f36600462001467565b620007bb565b6200013e620001763660046200149d565b620008a6565b3480156200018957600080fd5b506200019462000982565b60405190815260200162000110565b348015620001b057600080fd5b5060cb546001600160a01b0316620000fc565b348015620001d057600080fd5b506200013e62000a38565b348015620001e857600080fd5b506200013e620001fa36600462001467565b62000a50565b3480156200020d57600080fd5b506033546001600160a01b0316620000fc565b3480156200022d57600080fd5b5060c9546001600160a01b0316620000fc565b3480156200024d57600080fd5b506200013e6200025f36600462001467565b62000b06565b3480156200027257600080fd5b506200013e620002843660046200156d565b62000b82565b60006001600160a01b038216620002fc5760405162461bcd60e51b815260206004820152602b60248201527f6465706c6f795374616b696e673a3a5f757365722063616e6e6f74206265207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b60003063f8c8765e60e01b60c960009054906101000a90046001600160a01b03166001600160a01b0316632210d5256040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200035b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003819190620015d2565b60c9546040516001600160a01b03928316602482015282881660448201529116606482015233608482015260a40160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051620003ee9062001443565b620003fb9291906200164f565b604051809103906000f08015801562000418573d6000803e3d6000fd5b5060ca5460405163399fe9a160e11b81526001600160a01b0380841660048301529293506000929091169063733fd342906024016020604051808303816000875af11580156200046c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004929190620015d2565b60c9546040516376a250a760e01b81526001600160a01b038781166004830152858116602483015280841660448301529293509116906376a250a790606401600060405180830381600087803b158015620004ec57600080fd5b505af115801562000501573d6000803e3d6000fd5b50505050600060c960009054906101000a90046001600160a01b03166001600160a01b03166366951bc16040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200055b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000581919062001675565b60c954604051632f2ff15d60e01b8152600481018390526001600160a01b038681166024830152929350911690632f2ff15d90604401600060405180830381600087803b158015620005d257600080fd5b505af1158015620005e7573d6000803e3d6000fd5b50506040516001600160a01b0380871693508816915033907f4a2dd45842063d5cdb0ba4ccb3b677af33701f706cdfa90ddf5fe291e6f9987890600090a450909392505050565b6200063862000f31565b6001600160a01b038116620006b65760405162461bcd60e51b815260206004820152603b60248201527f7365745374616b696e6752656769737472793a3a5f7374616b696e675265676960448201527f737472792063616e6e6f74206265207a65726f206164647265737300000000006064820152608401620002f3565b60ca54604080516309f997eb60e41b815290516001600160a01b03808516931691639f997eb09160048083019260209291908290030181865afa15801562000702573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007289190620015d2565b6001600160a01b031614620007995760405162461bcd60e51b815260206004820152603060248201527f7365745374616b696e6752656769737472793a3a5374616b696e67526567697360448201526f0e8e4d2cae640daeae6e840dac2e8c6d60831b6064820152608401620002f3565b60c980546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003620008065760405162461bcd60e51b8152600401620002f3906200168f565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031662000851600080516020620020ba833981519152546001600160a01b031690565b6001600160a01b0316146200087a5760405162461bcd60e51b8152600401620002f390620016db565b620008858162000f8d565b60408051600080825260208201909252620008a39183919062000f97565b50565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003620008f15760405162461bcd60e51b8152600401620002f3906200168f565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166200093c600080516020620020ba833981519152546001600160a01b031690565b6001600160a01b031614620009655760405162461bcd60e51b8152600401620002f390620016db565b620009708262000f8d565b6200097e8282600162000f97565b5050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161462000a245760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401620002f3565b50600080516020620020ba83398151915290565b62000a4262000f31565b62000a4e600062001114565b565b62000a5a62000f31565b6001600160a01b03811662000ae45760405162461bcd60e51b815260206004820152604360248201527f736574526172655374616b696e6754656d706c6174653a3a5f7261726553746160448201527f6b696e6754656d706c6174652063616e6e6f74206265207a65726f206164647260648201526265737360e81b608482015260a401620002f3565b60cb80546001600160a01b0319166001600160a01b0392909216919091179055565b62000b1062000f31565b6001600160a01b03811662000b775760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401620002f3565b620008a38162001114565b600054610100900460ff161580801562000ba35750600054600160ff909116105b8062000bbf5750303b15801562000bbf575060005460ff166001145b62000c245760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401620002f3565b6000805460ff19166001179055801562000c48576000805461ff0019166101001790555b6001600160a01b03851662000cbc5760405162461bcd60e51b815260206004820152603360248201527f696e697469616c697a653a3a5f7374616b696e6752656769737472792063616e6044820152726e6f74206265207a65726f206164647265737360681b6064820152608401620002f3565b6001600160a01b03841662000d3a5760405162461bcd60e51b815260206004820152603760248201527f696e697469616c697a653a3a5f726172655374616b696e6754656d706c61746560448201527f2063616e6e6f74206265207a65726f20616464726573730000000000000000006064820152608401620002f3565b6001600160a01b03831662000db05760405162461bcd60e51b815260206004820152603560248201527f696e697469616c697a653a3a5f72657761726453776170466163746f72792063604482015274616e6e6f74206265207a65726f206164647265737360581b6064820152608401620002f3565b60ca80546001600160a01b0319166001600160a01b03858116918217909255604080516309f997eb60e41b8152905192881692639f997eb0916004808201926020929091908290030181865afa15801562000e0f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e359190620015d2565b6001600160a01b03161462000e9e5760405162461bcd60e51b815260206004820152602860248201527f696e697469616c697a653a3a5374616b696e6752656769737472696573206d756044820152670e6e840dac2e8c6d60c31b6064820152608401620002f3565b60cb80546001600160a01b038087166001600160a01b03199283161790925560c980549288169290911691909117905562000ed862001166565b62000ee38262001114565b801562000f2a576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b6033546001600160a01b0316331462000a4e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401620002f3565b620008a362000f31565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161562000fd25762000fcd836200119a565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156200102f575060408051601f3d908101601f191682019092526200102c9181019062001675565b60015b620010945760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401620002f3565b600080516020620020ba8339815191528114620011065760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401620002f3565b5062000fcd83838362001239565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16620011905760405162461bcd60e51b8152600401620002f39062001727565b62000a4e6200126a565b6001600160a01b0381163b620012095760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401620002f3565b600080516020620020ba83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b62001244836200129f565b600082511180620012525750805b1562000fcd57620012648383620012e1565b50505050565b600054610100900460ff16620012945760405162461bcd60e51b8152600401620002f39062001727565b62000a4e3362001114565b620012aa816200119a565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060620013098383604051806060016040528060278152602001620020da6027913962001310565b9392505050565b6060600080856001600160a01b0316856040516200132f919062001772565b600060405180830381855af49150503d80600081146200136c576040519150601f19603f3d011682016040523d82523d6000602084013e62001371565b606091505b509150915062001384868383876200138e565b9695505050505050565b6060831562001402578251600003620013fa576001600160a01b0385163b620013fa5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401620002f3565b50816200140e565b6200140e838362001416565b949350505050565b815115620014275781518083602001fd5b8060405162461bcd60e51b8152600401620002f3919062001790565b61091480620017a683390190565b6001600160a01b0381168114620008a357600080fd5b6000602082840312156200147a57600080fd5b8135620013098162001451565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215620014b157600080fd5b8235620014be8162001451565b9150602083013567ffffffffffffffff80821115620014dc57600080fd5b818501915085601f830112620014f157600080fd5b81358181111562001506576200150662001487565b604051601f8201601f19908116603f0116810190838211818310171562001531576200153162001487565b816040528281528860208487010111156200154b57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600080600080608085870312156200158457600080fd5b8435620015918162001451565b93506020850135620015a38162001451565b92506040850135620015b58162001451565b91506060850135620015c78162001451565b939692955090935050565b600060208284031215620015e557600080fd5b8151620013098162001451565b60005b838110156200160f578181015183820152602001620015f5565b83811115620012645750506000910152565b600081518084526200163b816020860160208601620015f2565b601f01601f19169290920160200192915050565b6001600160a01b03831681526040602082018190526000906200140e9083018462001621565b6000602082840312156200168857600080fd5b5051919050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000825162001786818460208701620015f2565b9190910192915050565b6020815260006200130960208301846200162156fe608060405260405161091438038061091483398101604081905261002291610463565b61002e82826000610035565b505061058d565b61003e83610100565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a260008251118061007f5750805b156100fb576100f9836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e99190610523565b836102a360201b6100291760201c565b505b505050565b610113816102cf60201b6100551760201c565b6101725760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b6101e6816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d79190610523565b6102cf60201b6100551760201c565b61024b5760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b6064820152608401610169565b806102827fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5060001b6102de60201b6100641760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606102c883836040518060600160405280602781526020016108ed602791396102e1565b9392505050565b6001600160a01b03163b151590565b90565b6060600080856001600160a01b0316856040516102fe919061053e565b600060405180830381855af49150503d8060008114610339576040519150601f19603f3d011682016040523d82523d6000602084013e61033e565b606091505b5090925090506103508683838761035a565b9695505050505050565b606083156103c95782516000036103c2576001600160a01b0385163b6103c25760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610169565b50816103d3565b6103d383836103db565b949350505050565b8151156103eb5781518083602001fd5b8060405162461bcd60e51b8152600401610169919061055a565b80516001600160a01b038116811461041c57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561045257818101518382015260200161043a565b838111156100f95750506000910152565b6000806040838503121561047657600080fd5b61047f83610405565b60208401519092506001600160401b038082111561049c57600080fd5b818501915085601f8301126104b057600080fd5b8151818111156104c2576104c2610421565b604051601f8201601f19908116603f011681019083821181831017156104ea576104ea610421565b8160405282815288602084870101111561050357600080fd5b610514836020830160208801610437565b80955050505050509250929050565b60006020828403121561053557600080fd5b6102c882610405565b60008251610550818460208701610437565b9190910192915050565b6020815260008251806020840152610579816040850160208701610437565b601f01601f19169190910160400192915050565b6103518061059c6000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610067565b610100565b565b606061004e83836040518060600160405280602781526020016102f560279139610124565b9392505050565b6001600160a01b03163b151590565b90565b600061009a7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fb919061024c565b905090565b3660008037600080366000845af43d6000803e80801561011f573d6000f35b3d6000fd5b6060600080856001600160a01b03168560405161014191906102a5565b600060405180830381855af49150503d806000811461017c576040519150601f19603f3d011682016040523d82523d6000602084013e610181565b606091505b50915091506101928683838761019c565b9695505050505050565b60608315610210578251600003610209576001600160a01b0385163b6102095760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064015b60405180910390fd5b508161021a565b61021a8383610222565b949350505050565b8151156102325781518083602001fd5b8060405162461bcd60e51b815260040161020091906102c1565b60006020828403121561025e57600080fd5b81516001600160a01b038116811461004e57600080fd5b60005b83811015610290578181015183820152602001610278565b8381111561029f576000848401525b50505050565b600082516102b7818460208701610275565b9190910192915050565b60208152600082518060208401526102e0816040850160208701610275565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122052aa7b706638253994753d44b5f7903e95850a17bddcd3f1d819a939a9d1023f64736f6c634300080f0033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212203390f32242ffb61da4a31527bd859272b039cf7b89ca438d8f7816c22714a50764736f6c634300080f0033",
    "sourceMap": "1040:4910:109:-:0;;;1332:4:46;1289:48;;1040:4910:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405260043610620000d25760003560e01c8063715018a611620000895780639f997eb011620000605780639f997eb01462000220578063c8cb01d814620001a3578063f2fde38b1462000240578063f8c8765e146200026557600080fd5b8063715018a614620001c35780637ed155de14620001db5780638da5cb5b146200020057600080fd5b80631249ed2314620000d75780632c74084414620001195780633659cfe614620001405780634f1ef286146200016557806352d1902d146200017c5780635c60da1b14620001a3575b600080fd5b348015620000e457600080fd5b50620000fc620000f636600462001467565b6200028a565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156200012657600080fd5b506200013e6200013836600462001467565b6200062e565b005b3480156200014d57600080fd5b506200013e6200015f36600462001467565b620007bb565b6200013e620001763660046200149d565b620008a6565b3480156200018957600080fd5b506200019462000982565b60405190815260200162000110565b348015620001b057600080fd5b5060cb546001600160a01b0316620000fc565b348015620001d057600080fd5b506200013e62000a38565b348015620001e857600080fd5b506200013e620001fa36600462001467565b62000a50565b3480156200020d57600080fd5b506033546001600160a01b0316620000fc565b3480156200022d57600080fd5b5060c9546001600160a01b0316620000fc565b3480156200024d57600080fd5b506200013e6200025f36600462001467565b62000b06565b3480156200027257600080fd5b506200013e620002843660046200156d565b62000b82565b60006001600160a01b038216620002fc5760405162461bcd60e51b815260206004820152602b60248201527f6465706c6f795374616b696e673a3a5f757365722063616e6e6f74206265207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b60003063f8c8765e60e01b60c960009054906101000a90046001600160a01b03166001600160a01b0316632210d5256040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200035b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003819190620015d2565b60c9546040516001600160a01b03928316602482015282881660448201529116606482015233608482015260a40160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051620003ee9062001443565b620003fb9291906200164f565b604051809103906000f08015801562000418573d6000803e3d6000fd5b5060ca5460405163399fe9a160e11b81526001600160a01b0380841660048301529293506000929091169063733fd342906024016020604051808303816000875af11580156200046c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004929190620015d2565b60c9546040516376a250a760e01b81526001600160a01b038781166004830152858116602483015280841660448301529293509116906376a250a790606401600060405180830381600087803b158015620004ec57600080fd5b505af115801562000501573d6000803e3d6000fd5b50505050600060c960009054906101000a90046001600160a01b03166001600160a01b03166366951bc16040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200055b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000581919062001675565b60c954604051632f2ff15d60e01b8152600481018390526001600160a01b038681166024830152929350911690632f2ff15d90604401600060405180830381600087803b158015620005d257600080fd5b505af1158015620005e7573d6000803e3d6000fd5b50506040516001600160a01b0380871693508816915033907f4a2dd45842063d5cdb0ba4ccb3b677af33701f706cdfa90ddf5fe291e6f9987890600090a450909392505050565b6200063862000f31565b6001600160a01b038116620006b65760405162461bcd60e51b815260206004820152603b60248201527f7365745374616b696e6752656769737472793a3a5f7374616b696e675265676960448201527f737472792063616e6e6f74206265207a65726f206164647265737300000000006064820152608401620002f3565b60ca54604080516309f997eb60e41b815290516001600160a01b03808516931691639f997eb09160048083019260209291908290030181865afa15801562000702573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007289190620015d2565b6001600160a01b031614620007995760405162461bcd60e51b815260206004820152603060248201527f7365745374616b696e6752656769737472793a3a5374616b696e67526567697360448201526f0e8e4d2cae640daeae6e840dac2e8c6d60831b6064820152608401620002f3565b60c980546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003620008065760405162461bcd60e51b8152600401620002f3906200168f565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031662000851600080516020620020ba833981519152546001600160a01b031690565b6001600160a01b0316146200087a5760405162461bcd60e51b8152600401620002f390620016db565b620008858162000f8d565b60408051600080825260208201909252620008a39183919062000f97565b50565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003620008f15760405162461bcd60e51b8152600401620002f3906200168f565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166200093c600080516020620020ba833981519152546001600160a01b031690565b6001600160a01b031614620009655760405162461bcd60e51b8152600401620002f390620016db565b620009708262000f8d565b6200097e8282600162000f97565b5050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161462000a245760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401620002f3565b50600080516020620020ba83398151915290565b62000a4262000f31565b62000a4e600062001114565b565b62000a5a62000f31565b6001600160a01b03811662000ae45760405162461bcd60e51b815260206004820152604360248201527f736574526172655374616b696e6754656d706c6174653a3a5f7261726553746160448201527f6b696e6754656d706c6174652063616e6e6f74206265207a65726f206164647260648201526265737360e81b608482015260a401620002f3565b60cb80546001600160a01b0319166001600160a01b0392909216919091179055565b62000b1062000f31565b6001600160a01b03811662000b775760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401620002f3565b620008a38162001114565b600054610100900460ff161580801562000ba35750600054600160ff909116105b8062000bbf5750303b15801562000bbf575060005460ff166001145b62000c245760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401620002f3565b6000805460ff19166001179055801562000c48576000805461ff0019166101001790555b6001600160a01b03851662000cbc5760405162461bcd60e51b815260206004820152603360248201527f696e697469616c697a653a3a5f7374616b696e6752656769737472792063616e6044820152726e6f74206265207a65726f206164647265737360681b6064820152608401620002f3565b6001600160a01b03841662000d3a5760405162461bcd60e51b815260206004820152603760248201527f696e697469616c697a653a3a5f726172655374616b696e6754656d706c61746560448201527f2063616e6e6f74206265207a65726f20616464726573730000000000000000006064820152608401620002f3565b6001600160a01b03831662000db05760405162461bcd60e51b815260206004820152603560248201527f696e697469616c697a653a3a5f72657761726453776170466163746f72792063604482015274616e6e6f74206265207a65726f206164647265737360581b6064820152608401620002f3565b60ca80546001600160a01b0319166001600160a01b03858116918217909255604080516309f997eb60e41b8152905192881692639f997eb0916004808201926020929091908290030181865afa15801562000e0f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e359190620015d2565b6001600160a01b03161462000e9e5760405162461bcd60e51b815260206004820152602860248201527f696e697469616c697a653a3a5374616b696e6752656769737472696573206d756044820152670e6e840dac2e8c6d60c31b6064820152608401620002f3565b60cb80546001600160a01b038087166001600160a01b03199283161790925560c980549288169290911691909117905562000ed862001166565b62000ee38262001114565b801562000f2a576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b6033546001600160a01b0316331462000a4e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401620002f3565b620008a362000f31565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161562000fd25762000fcd836200119a565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156200102f575060408051601f3d908101601f191682019092526200102c9181019062001675565b60015b620010945760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401620002f3565b600080516020620020ba8339815191528114620011065760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401620002f3565b5062000fcd83838362001239565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16620011905760405162461bcd60e51b8152600401620002f39062001727565b62000a4e6200126a565b6001600160a01b0381163b620012095760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401620002f3565b600080516020620020ba83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b62001244836200129f565b600082511180620012525750805b1562000fcd57620012648383620012e1565b50505050565b600054610100900460ff16620012945760405162461bcd60e51b8152600401620002f39062001727565b62000a4e3362001114565b620012aa816200119a565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060620013098383604051806060016040528060278152602001620020da6027913962001310565b9392505050565b6060600080856001600160a01b0316856040516200132f919062001772565b600060405180830381855af49150503d80600081146200136c576040519150601f19603f3d011682016040523d82523d6000602084013e62001371565b606091505b509150915062001384868383876200138e565b9695505050505050565b6060831562001402578251600003620013fa576001600160a01b0385163b620013fa5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401620002f3565b50816200140e565b6200140e838362001416565b949350505050565b815115620014275781518083602001fd5b8060405162461bcd60e51b8152600401620002f3919062001790565b61091480620017a683390190565b6001600160a01b0381168114620008a357600080fd5b6000602082840312156200147a57600080fd5b8135620013098162001451565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215620014b157600080fd5b8235620014be8162001451565b9150602083013567ffffffffffffffff80821115620014dc57600080fd5b818501915085601f830112620014f157600080fd5b81358181111562001506576200150662001487565b604051601f8201601f19908116603f0116810190838211818310171562001531576200153162001487565b816040528281528860208487010111156200154b57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600080600080608085870312156200158457600080fd5b8435620015918162001451565b93506020850135620015a38162001451565b92506040850135620015b58162001451565b91506060850135620015c78162001451565b939692955090935050565b600060208284031215620015e557600080fd5b8151620013098162001451565b60005b838110156200160f578181015183820152602001620015f5565b83811115620012645750506000910152565b600081518084526200163b816020860160208601620015f2565b601f01601f19169290920160200192915050565b6001600160a01b03831681526040602082018190526000906200140e9083018462001621565b6000602082840312156200168857600080fd5b5051919050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000825162001786818460208701620015f2565b9190910192915050565b6020815260006200130960208301846200162156fe608060405260405161091438038061091483398101604081905261002291610463565b61002e82826000610035565b505061058d565b61003e83610100565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a260008251118061007f5750805b156100fb576100f9836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e99190610523565b836102a360201b6100291760201c565b505b505050565b610113816102cf60201b6100551760201c565b6101725760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b6101e6816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d79190610523565b6102cf60201b6100551760201c565b61024b5760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b6064820152608401610169565b806102827fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5060001b6102de60201b6100641760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606102c883836040518060600160405280602781526020016108ed602791396102e1565b9392505050565b6001600160a01b03163b151590565b90565b6060600080856001600160a01b0316856040516102fe919061053e565b600060405180830381855af49150503d8060008114610339576040519150601f19603f3d011682016040523d82523d6000602084013e61033e565b606091505b5090925090506103508683838761035a565b9695505050505050565b606083156103c95782516000036103c2576001600160a01b0385163b6103c25760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610169565b50816103d3565b6103d383836103db565b949350505050565b8151156103eb5781518083602001fd5b8060405162461bcd60e51b8152600401610169919061055a565b80516001600160a01b038116811461041c57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561045257818101518382015260200161043a565b838111156100f95750506000910152565b6000806040838503121561047657600080fd5b61047f83610405565b60208401519092506001600160401b038082111561049c57600080fd5b818501915085601f8301126104b057600080fd5b8151818111156104c2576104c2610421565b604051601f8201601f19908116603f011681019083821181831017156104ea576104ea610421565b8160405282815288602084870101111561050357600080fd5b610514836020830160208801610437565b80955050505050509250929050565b60006020828403121561053557600080fd5b6102c882610405565b60008251610550818460208701610437565b9190910192915050565b6020815260008251806020840152610579816040850160208701610437565b601f01601f19169190910160400192915050565b6103518061059c6000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610067565b610100565b565b606061004e83836040518060600160405280602781526020016102f560279139610124565b9392505050565b6001600160a01b03163b151590565b90565b600061009a7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fb919061024c565b905090565b3660008037600080366000845af43d6000803e80801561011f573d6000f35b3d6000fd5b6060600080856001600160a01b03168560405161014191906102a5565b600060405180830381855af49150503d806000811461017c576040519150601f19603f3d011682016040523d82523d6000602084013e610181565b606091505b50915091506101928683838761019c565b9695505050505050565b60608315610210578251600003610209576001600160a01b0385163b6102095760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064015b60405180910390fd5b508161021a565b61021a8383610222565b949350505050565b8151156102325781518083602001fd5b8060405162461bcd60e51b815260040161020091906102c1565b60006020828403121561025e57600080fd5b81516001600160a01b038116811461004e57600080fd5b60005b83811015610290578181015183820152602001610278565b8381111561029f576000848401525b50505050565b600082516102b7818460208701610275565b9190910192915050565b60208152600082518060208401526102e0816040850160208701610275565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122052aa7b706638253994753d44b5f7903e95850a17bddcd3f1d819a939a9d1023f64736f6c634300080f0033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212203390f32242ffb61da4a31527bd859272b039cf7b89ca438d8f7816c22714a50764736f6c634300080f0033",
    "sourceMap": "1040:4910:109:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4420:880;;;;;;;;;;-1:-1:-1;4420:880:109;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;566:32:119;;;548:51;;536:2;521:18;4420:880:109;;;;;;;;3313:400;;;;;;;;;;-1:-1:-1;3313:400:109;;;;;:::i;:::-;;:::i;:::-;;3387:195:46;;;;;;;;;;-1:-1:-1;3387:195:46;;;;;:::i;:::-;;:::i;3901:220::-;;;;;;:::i;:::-;;:::i;3006:131::-;;;;;;;;;;;;;:::i;:::-;;;1949:25:119;;;1937:2;1922:18;3006:131:46;1803:177:119;5853:95:109;;;;;;;;;;-1:-1:-1;5924:19:109;;-1:-1:-1;;;;;5924:19:109;5853:95;;2064:101:39;;;;;;;;;;;;;:::i;3818:254:109:-;;;;;;;;;;-1:-1:-1;3818:254:109;;;;;:::i;:::-;;:::i;1441:85:39:-;;;;;;;;;;-1:-1:-1;1513:6:39;;-1:-1:-1;;;;;1513:6:39;1441:85;;5550:111:109;;;;;;;;;;-1:-1:-1;5640:15:109;;-1:-1:-1;;;;;5640:15:109;5550:111;;2314:198:39;;;;;;;;;;-1:-1:-1;2314:198:39;;;;;:::i;:::-;;:::i;1825:863:109:-;;;;;;;;;;-1:-1:-1;1825:863:109;;;;;:::i;:::-;;:::i;4420:880::-;4474:7;-1:-1:-1;;;;;4497:19:109;;4489:75;;;;-1:-1:-1;;;4489:75:109;;2863:2:119;4489:75:109;;;2845:21:119;2902:2;2882:18;;;2875:30;2941:34;2921:18;;;2914:62;-1:-1:-1;;;2992:18:119;;;2985:41;3043:19;;4489:75:109;;;;;;;;;4570:22;4626:4;4671:31;;;4712:15;;;;;;;;;-1:-1:-1;;;;;4712:15:109;-1:-1:-1;;;;;4712:30:109;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4777:15;;4639:182;;-1:-1:-1;;;;;3616:15:119;;;4639:182:109;;;3598:34:119;3668:15;;;3648:18;;;3641:43;4777:15:109;;3700:18:119;;;3693:43;4803:10:109;3752:18:119;;;3745:43;3532:19;;4639:182:109;;;-1:-1:-1;;4639:182:109;;;;;;;;;;;;;;-1:-1:-1;;;;;4639:182:109;-1:-1:-1;;;;;;4639:182:109;;;;;;;;;;4595:232;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4854:17:109;;:55;;-1:-1:-1;;;4854:55:109;;-1:-1:-1;;;;;566:32:119;;;4854:55:109;;;548:51:119;4570:257:109;;-1:-1:-1;4833:18:109;;4854:17;;;;:34;;521:18:119;;4854:55:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4915:15;;:75;;-1:-1:-1;;;4915:75:109;;-1:-1:-1;;;;;5165:15:119;;;4915:75:109;;;5147:34:119;5217:15;;;5197:18;;;5190:43;5269:15;;;5249:18;;;5242:43;4833:76:109;;-1:-1:-1;4915:15:109;;;:35;;5082:18:119;;4915:75:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4997:22;5022:15;;;;;;;;;-1:-1:-1;;;;;5022:15:109;-1:-1:-1;;;;;5022:40:109;;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5105:15;;5071:98;;-1:-1:-1;;;5071:98:109;;;;;5659:25:119;;;-1:-1:-1;;;;;5720:32:119;;;5700:18;;;5693:60;4997:67:109;;-1:-1:-1;5105:15:109;;;5071:61;;5632:18:119;;5071:98:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5181:81:109;;-1:-1:-1;;;;;5181:81:109;;;;-1:-1:-1;5181:81:109;;;-1:-1:-1;5223:10:109;;5181:81;;;;;-1:-1:-1;5284:10:109;;4420:880;-1:-1:-1;;;4420:880:109:o;3313:400::-;1334:13:39;:11;:13::i;:::-;-1:-1:-1;;;;;3400:30:109;::::1;3392:102;;;::::0;-1:-1:-1;;;3392:102:109;;5966:2:119;3392:102:109::1;::::0;::::1;5948:21:119::0;6005:2;5985:18;;;5978:30;6044:34;6024:18;;;6017:62;6115:29;6095:18;;;6088:57;6162:19;;3392:102:109::1;5764:423:119::0;3392:102:109::1;3516:17;::::0;:45:::1;::::0;;-1:-1:-1;;;3516:45:109;;;;-1:-1:-1;;;;;3516:65:109;;::::1;::::0;:17:::1;::::0;:43:::1;::::0;:45:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:17;:45:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3516:65:109::1;;3500:146;;;::::0;-1:-1:-1;;;3500:146:109;;6394:2:119;3500:146:109::1;::::0;::::1;6376:21:119::0;6433:2;6413:18;;;6406:30;6472:34;6452:18;;;6445:62;-1:-1:-1;;;6523:18:119;;;6516:46;6579:19;;3500:146:109::1;6192:412:119::0;3500:146:109::1;3652:15;:56:::0;;-1:-1:-1;;;;;;3652:56:109::1;-1:-1:-1::0;;;;;3652:56:109;;;::::1;::::0;;;::::1;::::0;;3313:400::o;3387:195:46:-;-1:-1:-1;;;;;1898:6:46;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:46;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:46;:20;-1:-1:-1;;;;;;;;;;;1536:65:43;-1:-1:-1;;;;;1536:65:43;;1457:151;1971:20:46;-1:-1:-1;;;;;1971:30:46;;1963:87;;;;-1:-1:-1;;;1963:87:46;;;;;;;:::i;:::-;3468:36:::1;3486:17;3468;:36::i;:::-;3555:12;::::0;;3565:1:::1;3555:12:::0;;;::::1;::::0;::::1;::::0;;;3514:61:::1;::::0;3536:17;;3555:12;3514:21:::1;:61::i;:::-;3387:195:::0;:::o;3901:220::-;-1:-1:-1;;;;;1898:6:46;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:46;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:46;:20;-1:-1:-1;;;;;;;;;;;1536:65:43;-1:-1:-1;;;;;1536:65:43;;1457:151;1971:20:46;-1:-1:-1;;;;;1971:30:46;;1963:87;;;;-1:-1:-1;;;1963:87:46;;;;;;;:::i;:::-;4016:36:::1;4034:17;4016;:36::i;:::-;4062:52;4084:17;4103:4;4109;4062:21;:52::i;:::-;3901:220:::0;;:::o;3006:131::-;3084:7;2324:4;-1:-1:-1;;;;;2333:6:46;2316:23;;2308:92;;;;-1:-1:-1;;;2308:92:46;;7637:2:119;2308:92:46;;;7619:21:119;7676:2;7656:18;;;7649:30;7715:34;7695:18;;;7688:62;7786:26;7766:18;;;7759:54;7830:19;;2308:92:46;7435:420:119;2308:92:46;-1:-1:-1;;;;;;;;;;;;3006:131:46;:::o;2064:101:39:-;1334:13;:11;:13::i;:::-;2128:30:::1;2155:1;2128:18;:30::i;:::-;2064:101::o:0;3818:254:109:-;1334:13:39;:11;:13::i;:::-;-1:-1:-1;;;;;3913:34:109;::::1;3905:114;;;::::0;-1:-1:-1;;;3905:114:109;;8062:2:119;3905:114:109::1;::::0;::::1;8044:21:119::0;8101:2;8081:18;;;8074:30;8140:34;8120:18;;;8113:62;8211:34;8191:18;;;8184:62;-1:-1:-1;;;8262:19:119;;;8255:34;8306:19;;3905:114:109::1;7860:471:119::0;3905:114:109::1;4025:19;:42:::0;;-1:-1:-1;;;;;;4025:42:109::1;-1:-1:-1::0;;;;;4025:42:109;;;::::1;::::0;;;::::1;::::0;;3818:254::o;2314:198:39:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2402:22:39;::::1;2394:73;;;::::0;-1:-1:-1;;;2394:73:39;;8538:2:119;2394:73:39::1;::::0;::::1;8520:21:119::0;8577:2;8557:18;;;8550:30;8616:34;8596:18;;;8589:62;-1:-1:-1;;;8667:18:119;;;8660:36;8713:19;;2394:73:39::1;8336:402:119::0;2394:73:39::1;2477:28;2496:8;2477:18;:28::i;1825:863:109:-:0;3279:19:45;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:45;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:45;1713:19:57;:23;;;3387:66:45;;-1:-1:-1;3436:12:45;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:45;;8945:2:119;3325:201:45;;;8927:21:119;8984:2;8964:18;;;8957:30;9023:34;9003:18;;;8996:62;-1:-1:-1;;;9074:18:119;;;9067:44;9128:19;;3325:201:45;8743:410:119;3325:201:45;3536:12;:16;;-1:-1:-1;;3536:16:45;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:45;;;;;3562:65;-1:-1:-1;;;;;2003:30:109;::::1;1995:94;;;::::0;-1:-1:-1;;;1995:94:109;;9360:2:119;1995:94:109::1;::::0;::::1;9342:21:119::0;9399:2;9379:18;;;9372:30;9438:34;9418:18;;;9411:62;-1:-1:-1;;;9489:18:119;;;9482:49;9548:19;;1995:94:109::1;9158:415:119::0;1995:94:109::1;-1:-1:-1::0;;;;;2103:34:109;::::1;2095:102;;;::::0;-1:-1:-1;;;2095:102:109;;9780:2:119;2095:102:109::1;::::0;::::1;9762:21:119::0;9819:2;9799:18;;;9792:30;9858:34;9838:18;;;9831:62;9929:25;9909:18;;;9902:53;9972:19;;2095:102:109::1;9578:419:119::0;2095:102:109::1;-1:-1:-1::0;;;;;2211:32:109;::::1;2203:98;;;::::0;-1:-1:-1;;;2203:98:109;;10204:2:119;2203:98:109::1;::::0;::::1;10186:21:119::0;10243:2;10223:18;;;10216:30;10282:34;10262:18;;;10255:62;-1:-1:-1;;;10333:18:119;;;10326:51;10394:19;;2203:98:109::1;10002:417:119::0;2203:98:109::1;2307:17;:65:::0;;-1:-1:-1;;;;;;2307:65:109::1;-1:-1:-1::0;;;;;2307:65:109;;::::1;::::0;;::::1;::::0;;;2394:45:::1;::::0;;-1:-1:-1;;;2394:45:109;;;;:65;;::::1;::::0;:43:::1;::::0;:45:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;2307:65;2394:45:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2394:65:109::1;;2378:138;;;::::0;-1:-1:-1;;;2378:138:109;;10626:2:119;2378:138:109::1;::::0;::::1;10608:21:119::0;10665:2;10645:18;;;10638:30;10704:34;10684:18;;;10677:62;-1:-1:-1;;;10755:18:119;;;10748:38;10803:19;;2378:138:109::1;10424:404:119::0;2378:138:109::1;2522:19;:42:::0;;-1:-1:-1;;;;;2522:42:109;;::::1;-1:-1:-1::0;;;;;;2522:42:109;;::::1;;::::0;;;2570:15:::1;:56:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;2632:16:::1;:14;:16::i;:::-;2654:29;2673:9;2654:18;:29::i;:::-;3651:14:45::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:45;;;3721:14;;-1:-1:-1;10985:36:119;;3721:14:45;;10973:2:119;10958:18;3721:14:45;;;;;;;3647:99;3269:483;1825:863:109;;;;:::o;1599:130:39:-;1513:6;;-1:-1:-1;;;;;1513:6:39;929:10:59;1662:23:39;1654:68;;;;-1:-1:-1;;;1654:68:39;;11234:2:119;1654:68:39;;;11216:21:119;;;11253:18;;;11246:30;11312:34;11292:18;;;11285:62;11364:18;;1654:68:39;11032:356:119;2935:66:109;1334:13:39;:11;:13::i;2820:944:43:-;971:66;3236:59;;;3232:526;;;3311:37;3330:17;3311:18;:37::i;:::-;2820:944;;;:::o;3232:526::-;3412:17;-1:-1:-1;;;;;3383:61:43;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3383:63:43;;;;;;;;-1:-1:-1;;3383:63:43;;;;;;;;;;;;:::i;:::-;;;3379:302;;3610:56;;-1:-1:-1;;;3610:56:43;;11595:2:119;3610:56:43;;;11577:21:119;11634:2;11614:18;;;11607:30;11673:34;11653:18;;;11646:62;-1:-1:-1;;;11724:18:119;;;11717:44;11778:19;;3610:56:43;11393:410:119;3379:302:43;-1:-1:-1;;;;;;;;;;;3496:28:43;;3488:82;;;;-1:-1:-1;;;3488:82:43;;12010:2:119;3488:82:43;;;11992:21:119;12049:2;12029:18;;;12022:30;12088:34;12068:18;;;12061:62;-1:-1:-1;;;12139:18:119;;;12132:39;12188:19;;3488:82:43;11808:405:119;3488:82:43;3447:138;3694:53;3712:17;3731:4;3737:9;3694:17;:53::i;2666:187:39:-;2758:6;;;-1:-1:-1;;;;;2774:17:39;;;-1:-1:-1;;;;;;2774:17:39;;;;;;;2806:40;;2758:6;;;2774:17;2758:6;;2806:40;;2739:16;;2806:40;2729:124;2666:187;:::o;1003:95::-;5374:13:45;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:45;;;;;;;:::i;:::-;1065:26:39::1;:24;:26::i;1699:281:43:-:0;-1:-1:-1;;;;;1713:19:57;;;1772:106:43;;;;-1:-1:-1;;;1772:106:43;;12832:2:119;1772:106:43;;;12814:21:119;12871:2;12851:18;;;12844:30;12910:34;12890:18;;;12883:62;-1:-1:-1;;;12961:18:119;;;12954:43;13014:19;;1772:106:43;12630:409:119;1772:106:43;-1:-1:-1;;;;;;;;;;;1888:85:43;;-1:-1:-1;;;;;;1888:85:43;-1:-1:-1;;;;;1888:85:43;;;;;;;;;;1699:281::o;2372:276::-;2480:29;2491:17;2480:10;:29::i;:::-;2537:1;2523:4;:11;:15;:28;;;;2542:9;2523:28;2519:123;;;2567:64;2607:17;2626:4;2567:39;:64::i;:::-;;2372:276;;;:::o;1104:111:39:-;5374:13:45;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:45;;;;;;;:::i;:::-;1176:32:39::1;929:10:59::0;1176:18:39::1;:32::i;2086:152:43:-:0;2152:37;2171:17;2152:18;:37::i;:::-;2204:27;;-1:-1:-1;;;;;2204:27:43;;;;;;;;2086:152;:::o;6685:198:57:-;6768:12;6799:77;6820:6;6828:4;6799:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6792:84;6685:198;-1:-1:-1;;;6685:198:57:o;7069:325::-;7210:12;7235;7249:23;7276:6;-1:-1:-1;;;;;7276:19:57;7296:4;7276:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7234:67;;;;7318:69;7345:6;7353:7;7362:10;7374:12;7318:26;:69::i;:::-;7311:76;7069:325;-1:-1:-1;;;;;;7069:325:57:o;7682:628::-;7862:12;7890:7;7886:418;;;7917:10;:17;7938:1;7917:22;7913:286;;-1:-1:-1;;;;;1713:19:57;;;8124:60;;;;-1:-1:-1;;;8124:60:57;;13525:2:119;8124:60:57;;;13507:21:119;13564:2;13544:18;;;13537:30;13603:31;13583:18;;;13576:59;13652:18;;8124:60:57;13323:353:119;8124:60:57;-1:-1:-1;8219:10:57;8212:17;;7886:418;8260:33;8268:10;8280:12;8260:7;:33::i;:::-;7682:628;;;;;;:::o;8832:540::-;8991:17;;:21;8987:379;;9219:10;9213:17;9275:15;9262:10;9258:2;9254:19;9247:44;8987:379;9342:12;9335:20;;-1:-1:-1;;;9335:20:57;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;:::o;14:131:119:-;-1:-1:-1;;;;;89:31:119;;79:42;;69:70;;135:1;132;125:12;150:247;209:6;262:2;250:9;241:7;237:23;233:32;230:52;;;278:1;275;268:12;230:52;317:9;304:23;336:31;361:5;336:31;:::i;610:127::-;671:10;666:3;662:20;659:1;652:31;702:4;699:1;692:15;726:4;723:1;716:15;742:1056;819:6;827;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:31;979:5;954:31;:::i;:::-;1004:5;-1:-1:-1;1060:2:119;1045:18;;1032:32;1083:18;1113:14;;;1110:34;;;1140:1;1137;1130:12;1110:34;1178:6;1167:9;1163:22;1153:32;;1223:7;1216:4;1212:2;1208:13;1204:27;1194:55;;1245:1;1242;1235:12;1194:55;1281:2;1268:16;1303:2;1299;1296:10;1293:36;;;1309:18;;:::i;:::-;1384:2;1378:9;1352:2;1438:13;;-1:-1:-1;;1434:22:119;;;1458:2;1430:31;1426:40;1414:53;;;1482:18;;;1502:22;;;1479:46;1476:72;;;1528:18;;:::i;:::-;1568:10;1564:2;1557:22;1603:2;1595:6;1588:18;1643:7;1638:2;1633;1629;1625:11;1621:20;1618:33;1615:53;;;1664:1;1661;1654:12;1615:53;1720:2;1715;1711;1707:11;1702:2;1694:6;1690:15;1677:46;1765:1;1760:2;1755;1747:6;1743:15;1739:24;1732:35;1786:6;1776:16;;;;;;;742:1056;;;;;:::o;1985:671::-;2071:6;2079;2087;2095;2148:3;2136:9;2127:7;2123:23;2119:33;2116:53;;;2165:1;2162;2155:12;2116:53;2204:9;2191:23;2223:31;2248:5;2223:31;:::i;:::-;2273:5;-1:-1:-1;2330:2:119;2315:18;;2302:32;2343:33;2302:32;2343:33;:::i;:::-;2395:7;-1:-1:-1;2454:2:119;2439:18;;2426:32;2467:33;2426:32;2467:33;:::i;:::-;2519:7;-1:-1:-1;2578:2:119;2563:18;;2550:32;2591:33;2550:32;2591:33;:::i;:::-;1985:671;;;;-1:-1:-1;1985:671:119;;-1:-1:-1;;1985:671:119:o;3073:251::-;3143:6;3196:2;3184:9;3175:7;3171:23;3167:32;3164:52;;;3212:1;3209;3202:12;3164:52;3244:9;3238:16;3263:31;3288:5;3263:31;:::i;3799:258::-;3871:1;3881:113;3895:6;3892:1;3889:13;3881:113;;;3971:11;;;3965:18;3952:11;;;3945:39;3917:2;3910:10;3881:113;;;4012:6;4009:1;4006:13;4003:48;;;-1:-1:-1;;4047:1:119;4029:16;;4022:27;3799:258::o;4062:257::-;4103:3;4141:5;4135:12;4168:6;4163:3;4156:19;4184:63;4240:6;4233:4;4228:3;4224:14;4217:4;4210:5;4206:16;4184:63;:::i;:::-;4301:2;4280:15;-1:-1:-1;;4276:29:119;4267:39;;;;4308:4;4263:50;;4062:257;-1:-1:-1;;4062:257:119:o;4324:314::-;-1:-1:-1;;;;;4499:32:119;;4481:51;;4568:2;4563;4548:18;;4541:30;;;-1:-1:-1;;4588:44:119;;4613:18;;4605:6;4588:44;:::i;5296:184::-;5366:6;5419:2;5407:9;5398:7;5394:23;5390:32;5387:52;;;5435:1;5432;5425:12;5387:52;-1:-1:-1;5458:16:119;;5296:184;-1:-1:-1;5296:184:119:o;6609:408::-;6811:2;6793:21;;;6850:2;6830:18;;;6823:30;6889:34;6884:2;6869:18;;6862:62;-1:-1:-1;;;6955:2:119;6940:18;;6933:42;7007:3;6992:19;;6609:408::o;7022:::-;7224:2;7206:21;;;7263:2;7243:18;;;7236:30;7302:34;7297:2;7282:18;;7275:62;-1:-1:-1;;;7368:2:119;7353:18;;7346:42;7420:3;7405:19;;7022:408::o;12218:407::-;12420:2;12402:21;;;12459:2;12439:18;;;12432:30;12498:34;12493:2;12478:18;;12471:62;-1:-1:-1;;;12564:2:119;12549:18;;12542:41;12615:3;12600:19;;12218:407::o;13044:274::-;13173:3;13211:6;13205:13;13227:53;13273:6;13268:3;13261:4;13253:6;13249:17;13227:53;:::i;:::-;13296:16;;;;;13044:274;-1:-1:-1;;13044:274:119:o;13681:219::-;13830:2;13819:9;13812:21;13793:4;13850:44;13890:2;13879:9;13875:18;13867:6;13850:44;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "31813": [
        {
          "start": 1989,
          "length": 32
        },
        {
          "start": 2056,
          "length": 32
        },
        {
          "start": 2224,
          "length": 32
        },
        {
          "start": 2291,
          "length": 32
        },
        {
          "start": 2447,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "deployStaking(address)": "1249ed23",
    "getRareStakingTemplateAddress()": "c8cb01d8",
    "getStakingRegistryAddress()": "9f997eb0",
    "implementation()": "5c60da1b",
    "initialize(address,address,address,address)": "f8c8765e",
    "owner()": "8da5cb5b",
    "proxiableUUID()": "52d1902d",
    "renounceOwnership()": "715018a6",
    "setRareStakingTemplate(address)": "7ed155de",
    "setStakingRegistry(address)": "2c740844",
    "transferOwnership(address)": "f2fde38b",
    "upgradeTo(address)": "3659cfe6",
    "upgradeToAndCall(address,bytes)": "4f1ef286"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_deployingUser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_userStakedOn\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_stakingAddress\",\"type\":\"address\"}],\"name\":\"StakingContractCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"deployStaking\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRareStakingTemplateAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakingRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingRegistry\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rareStakingTemplate\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardSwapFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rareStakingTemplate\",\"type\":\"address\"}],\"name\":\"setRareStakingTemplate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingRegistry\",\"type\":\"address\"}],\"name\":\"setStakingRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"koloz, charlescrain\",\"details\":\"Made to be used with a UUPS Proxy.\",\"kind\":\"dev\",\"methods\":{\"deployStaking(address)\":{\"details\":\"This contract must have the {STAKING_INFO_SETTER_ROLE} role on {RareStakingRegistry}.\",\"params\":{\"_user\":\"Address of the target to deploy staking contract for.\"},\"returns\":{\"_0\":\"address Address of the staking contract.\"}},\"getRareStakingTemplateAddress()\":{\"returns\":{\"_0\":\"address Address of the staking ERC20 template to be used.\"}},\"getStakingRegistryAddress()\":{\"returns\":{\"_0\":\"address Address of the staking registry contract.\"}},\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setRareStakingTemplate(address)\":{\"details\":\"Requires the caller to be the owner of the contract.\",\"params\":{\"_rareStakingTemplate\":\"Address of the staking ERC20 template.\"}},\"setStakingRegistry(address)\":{\"details\":\"Requires the caller to be the owner of the contract.\",\"params\":{\"_stakingRegistry\":\"Address of the new staking registry contract.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"title\":\"RarityPoolFactory\",\"version\":1},\"userdoc\":{\"events\":{\"StakingContractCreated(address,address,address)\":{\"notice\":\"Emitted via {deployStaking} when a new staking contract is deployed.\"}},\"kind\":\"user\",\"methods\":{\"deployStaking(address)\":{\"notice\":\"Deploys a staking contract for the supplied target address. Reverts if address exists.\"},\"getRareStakingTemplateAddress()\":{\"notice\":\"Retrieve the currently template of the staking ERC20 contract.\"},\"getStakingRegistryAddress()\":{\"notice\":\"Retrieve the currently used staking registry address.\"},\"setRareStakingTemplate(address)\":{\"notice\":\"Set the rare staking ERC20 template address to be used.\"},\"setStakingRegistry(address)\":{\"notice\":\"Set the staking registry address field to be used.\"}},\"notice\":\"The Staking Factory Contract used to deploy new staking ERC20 contracts pertaining to a user.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/staking/factory/RarityPoolFactory.sol\":\"RarityPoolFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/buffer/=lib/buffer/\",\":@ensdomains/ens-contracts/=lib/ens-contracts/contracts/\",\":@manifoldxyz/libraries-solidity/=lib/royalty-registry-solidity/lib/libraries-solidity/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/royalty-registry-solidity/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/royalty-registry-solidity/lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/contracts/\",\":@uniswap/v3-core/contracts/=lib/v3-core/contracts/\",\":@uniswap/v3-periphery/=lib/v3-periphery/contracts/\",\":arachnid/solidity-stringutils/=lib/solidity-stringutils/\",\":assets/=lib/assets/\",\":aux/=lib/aux/\",\":buffer/=lib/buffer/contracts/\",\":create2-helpers/=lib/royalty-registry-solidity/lib/create2-helpers/\",\":create2-scripts/=lib/royalty-registry-solidity/lib/create2-helpers/script/\",\":ds-test/=lib/ds-test/src/\",\":ens-contracts/=lib/ens-contracts/contracts/\",\":ensdomains/ens-contracts/=lib/ensdomains/ens-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":libraries-solidity/=lib/royalty-registry-solidity/lib/libraries-solidity/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":rareprotocol/assets/=lib/assets/src/\",\":rareprotocol/aux/=lib/aux/src/\",\":royalty-guard/=lib/aux/lib/royalty-guard/src/\",\":royalty-registry-solidity/=lib/royalty-registry-solidity/contracts/\",\":royalty-registry/=lib/royalty-registry-solidity/contracts/\",\":solidity-stringutils/=lib/solidity-stringutils/\",\":solmate/=lib/solmate/src/\",\":v3-core/=lib/v3-core/\",\":v3-periphery/=lib/v3-periphery/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC20Upgradeable.sol\":{\"keccak256\":\"0xe73087c5001a37cf7186b3709377c7ceb01a0d38fb908723d1464cea66b4958c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b835a1929ca2c7c978085e58f08f48855df8a82ef6a426ac71393cf032ea0fc5\",\"dweb:/ipfs/QmUMXRN9g8u9wm63wc7PMaSs7oG2nqnM1VVvktaWkvF68v\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9826c7edf276ff48b99ee217358393097c30448a71d345d287c2f6961bb1f159\",\"dweb:/ipfs/QmYXBTY9wDvffGU47yMRFJ1NFyKwpbj94VHzRzhsm6R7Gz\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33e8f8d863c6943ea046fcf4972b4e815c04ab06bad195dba1d93f8ebeb8420d\",\"dweb:/ipfs/QmTQzxQTuuzPDk3eqVmYy7hv2RCXM1yt1NtubXpRbzYjaj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xbe62cd20530654aaec3c79b0ac559072f873d75078476fa9d5d53b5056a82e98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15caa92e99e78a08d104db0b87199ee317ad7a9e6874393d89c2fabe793289c2\",\"dweb:/ipfs/QmbSio6ocLhJUaGEferLk82tr1RtJWvZMFLyRmDo7Y23jf\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x0e7c9f782f550d78de6494455a48ef509ece00bed07d74051a27c588a7366803\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ac0362e73a0048bde4dcc1c6e2466fa9fb2bc931b76a28ee8b784407ca5c054\",\"dweb:/ipfs/QmcQuaJwykGpVgd11kZfz2WU5HmWD9rFG5meYR8ATR8mGA\"]},\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol\":{\"keccak256\":\"0x85439e74ab467b6a23d45d32bdc9506cbc3760320289afd605f11638c4138e95\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e18633c182e445895e5a70f9e79f2558d0f6eac86767fd1d90552177df2955c\",\"dweb:/ipfs/QmagUFUJbiNGRGGajg9CF5LPuopc44XSCtcCaYvQasBuX9\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xa6dfb97ce947b7c846b054ee7d45d12383359778f4f3743654ae0a34fa421b26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b97e7e5a77ea47c08ba422291df887eba76c80982f52a6e94a30106e9377a94f\",\"dweb:/ipfs/Qme7N2XRC7mcDxB8wZxNWPk6T8S2qsnmhAqXeUj4CNvsGD\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x20ecf3c67cab5ec0a1d0cc7d980fa236ffdfd8579d8d8b6b89d29329bc6e78ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b52e4581ee6605732661d367845d2c551e0efcf81852f29248aef6d4be0a300b\",\"dweb:/ipfs/QmaLPj2TrVCTPH6D1BEjBVCb9N1dLJ6pTcoJwCmM3HWkfC\"]},\"src/staking/factory/IRarityPoolFactory.sol\":{\"keccak256\":\"0xd7dc269f1c3f755832d63ab3b8f100781762d52dcbc21e1f7c61117b6fa2dea5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24e8d87c6febbd4bcfc93e5e89034b07dbc6895d6a1f98c0a5f478511084c330\",\"dweb:/ipfs/QmYHmZoV2ci1tL5pmjvKzeiqCBTynjiaiP7pBAf9Vnv8ZW\"]},\"src/staking/factory/IRewardAccumulatorFactory.sol\":{\"keccak256\":\"0x60bf662b2559c105f66e98ee49a0bc313a8339631bd8b38ae1abcbb0193fb7a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84ec414a304dc9a378bac05327c35e0dc4d7ede9fe1d58c07aabb43c30ea94a0\",\"dweb:/ipfs/QmaXs4PxZQGctSWp3ZKJLjK7HoVxWvxyuDvGQEEDgJnNJH\"]},\"src/staking/factory/RarityPoolFactory.sol\":{\"keccak256\":\"0x29909bc85dc4f389f8c1a27a68c8151780b9c23ff5c123bd1851ebdd91b2f7ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28c0340cae4d3d57ddc14085a5d07568c58f2b847fc9deff88204599e69e5c66\",\"dweb:/ipfs/QmZgPGNSDAkdy3CAuNKhYAep4cpS5UwmbaKmj6RaSpbKfT\"]},\"src/staking/registry/IRareStakingRegistry.sol\":{\"keccak256\":\"0xc77c14fe766b3a8d5fc985a6f3abdd9e338aa6b9671b22caf06c9664aefda981\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e470d3b77fbac141c826ed2cf9e4829642a282e55b50e8f6fb35be8a630a8fa5\",\"dweb:/ipfs/Qmd54NwkoeHyVxMTMmmJzo5PrjNeh8DuFRRjy4LXaDevAP\"]},\"src/staking/token/IRarityPool.sol\":{\"keccak256\":\"0xf08b96167873596abf9bb5cb377258fff453b11a8edbb89f466af0cbabfbd663\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df48bab3b28bb3b50a37548c1f241889a75f6e9e15f3b2c593b9e0babda7fe58\",\"dweb:/ipfs/QmXWgnfBC2B6MXegJYz5ZnPxyE557xQkpkXB2i4fhck9j4\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousAdmin",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "beacon",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "BeaconUpgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_deployingUser",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_userStakedOn",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_stakingAddress",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "StakingContractCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Upgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deployStaking",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRareStakingTemplateAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakingRegistryAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "implementation",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_stakingRegistry",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_rareStakingTemplate",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_rewardSwapFactory",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxiableUUID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_rareStakingTemplate",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRareStakingTemplate"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_stakingRegistry",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setStakingRegistry"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "upgradeTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "upgradeToAndCall"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "deployStaking(address)": {
            "details": "This contract must have the {STAKING_INFO_SETTER_ROLE} role on {RareStakingRegistry}.",
            "params": {
              "_user": "Address of the target to deploy staking contract for."
            },
            "returns": {
              "_0": "address Address of the staking contract."
            }
          },
          "getRareStakingTemplateAddress()": {
            "returns": {
              "_0": "address Address of the staking ERC20 template to be used."
            }
          },
          "getStakingRegistryAddress()": {
            "returns": {
              "_0": "address Address of the staking registry contract."
            }
          },
          "implementation()": {
            "details": "Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "proxiableUUID()": {
            "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "setRareStakingTemplate(address)": {
            "details": "Requires the caller to be the owner of the contract.",
            "params": {
              "_rareStakingTemplate": "Address of the staking ERC20 template."
            }
          },
          "setStakingRegistry(address)": {
            "details": "Requires the caller to be the owner of the contract.",
            "params": {
              "_stakingRegistry": "Address of the new staking registry contract."
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "upgradeTo(address)": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          },
          "upgradeToAndCall(address,bytes)": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "deployStaking(address)": {
            "notice": "Deploys a staking contract for the supplied target address. Reverts if address exists."
          },
          "getRareStakingTemplateAddress()": {
            "notice": "Retrieve the currently template of the staking ERC20 contract."
          },
          "getStakingRegistryAddress()": {
            "notice": "Retrieve the currently used staking registry address."
          },
          "setRareStakingTemplate(address)": {
            "notice": "Set the rare staking ERC20 template address to be used."
          },
          "setStakingRegistry(address)": {
            "notice": "Set the staking registry address field to be used."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/buffer/=lib/buffer/",
        ":@ensdomains/ens-contracts/=lib/ens-contracts/contracts/",
        ":@manifoldxyz/libraries-solidity/=lib/royalty-registry-solidity/lib/libraries-solidity/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@openzeppelin/contracts-upgradeable/=lib/royalty-registry-solidity/lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/royalty-registry-solidity/lib/openzeppelin-contracts/contracts/",
        ":@uniswap/v3-core/=lib/v3-core/contracts/",
        ":@uniswap/v3-core/contracts/=lib/v3-core/contracts/",
        ":@uniswap/v3-periphery/=lib/v3-periphery/contracts/",
        ":arachnid/solidity-stringutils/=lib/solidity-stringutils/",
        ":assets/=lib/assets/",
        ":aux/=lib/aux/",
        ":buffer/=lib/buffer/contracts/",
        ":create2-helpers/=lib/royalty-registry-solidity/lib/create2-helpers/",
        ":create2-scripts/=lib/royalty-registry-solidity/lib/create2-helpers/script/",
        ":ds-test/=lib/ds-test/src/",
        ":ens-contracts/=lib/ens-contracts/contracts/",
        ":ensdomains/ens-contracts/=lib/ensdomains/ens-contracts/contracts/",
        ":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":libraries-solidity/=lib/royalty-registry-solidity/lib/libraries-solidity/contracts/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":rareprotocol/assets/=lib/assets/src/",
        ":rareprotocol/aux/=lib/aux/src/",
        ":royalty-guard/=lib/aux/lib/royalty-guard/src/",
        ":royalty-registry-solidity/=lib/royalty-registry-solidity/contracts/",
        ":royalty-registry/=lib/royalty-registry-solidity/contracts/",
        ":solidity-stringutils/=lib/solidity-stringutils/",
        ":solmate/=lib/solmate/src/",
        ":v3-core/=lib/v3-core/",
        ":v3-periphery/=lib/v3-periphery/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/staking/factory/RarityPoolFactory.sol": "RarityPoolFactory"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlUpgradeable.sol": {
        "keccak256": "0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa",
        "urls": [
          "bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c",
          "dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98",
        "urls": [
          "bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8",
          "dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC1967Upgradeable.sol": {
        "keccak256": "0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b",
        "urls": [
          "bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0",
          "dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC20Upgradeable.sol": {
        "keccak256": "0xe73087c5001a37cf7186b3709377c7ceb01a0d38fb908723d1464cea66b4958c",
        "urls": [
          "bzz-raw://b835a1929ca2c7c978085e58f08f48855df8a82ef6a426ac71393cf032ea0fc5",
          "dweb:/ipfs/QmUMXRN9g8u9wm63wc7PMaSs7oG2nqnM1VVvktaWkvF68v"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol": {
        "keccak256": "0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f",
        "urls": [
          "bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053",
          "dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
        "keccak256": "0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161",
        "urls": [
          "bzz-raw://9826c7edf276ff48b99ee217358393097c30448a71d345d287c2f6961bb1f159",
          "dweb:/ipfs/QmYXBTY9wDvffGU47yMRFJ1NFyKwpbj94VHzRzhsm6R7Gz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol": {
        "keccak256": "0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908",
        "urls": [
          "bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1",
          "dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad",
        "urls": [
          "bzz-raw://33e8f8d863c6943ea046fcf4972b4e815c04ab06bad195dba1d93f8ebeb8420d",
          "dweb:/ipfs/QmTQzxQTuuzPDk3eqVmYy7hv2RCXM1yt1NtubXpRbzYjaj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f",
        "urls": [
          "bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f",
          "dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol": {
        "keccak256": "0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908",
        "urls": [
          "bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685",
          "dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol": {
        "keccak256": "0xbe62cd20530654aaec3c79b0ac559072f873d75078476fa9d5d53b5056a82e98",
        "urls": [
          "bzz-raw://15caa92e99e78a08d104db0b87199ee317ad7a9e6874393d89c2fabe793289c2",
          "dweb:/ipfs/QmbSio6ocLhJUaGEferLk82tr1RtJWvZMFLyRmDo7Y23jf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol": {
        "keccak256": "0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff",
        "urls": [
          "bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688",
          "dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
        "keccak256": "0x0e7c9f782f550d78de6494455a48ef509ece00bed07d74051a27c588a7366803",
        "urls": [
          "bzz-raw://4ac0362e73a0048bde4dcc1c6e2466fa9fb2bc931b76a28ee8b784407ca5c054",
          "dweb:/ipfs/QmcQuaJwykGpVgd11kZfz2WU5HmWD9rFG5meYR8ATR8mGA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol": {
        "keccak256": "0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27",
        "urls": [
          "bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472",
          "dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol": {
        "keccak256": "0x85439e74ab467b6a23d45d32bdc9506cbc3760320289afd605f11638c4138e95",
        "urls": [
          "bzz-raw://6e18633c182e445895e5a70f9e79f2558d0f6eac86767fd1d90552177df2955c",
          "dweb:/ipfs/QmagUFUJbiNGRGGajg9CF5LPuopc44XSCtcCaYvQasBuX9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
        "urls": [
          "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
          "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xa6dfb97ce947b7c846b054ee7d45d12383359778f4f3743654ae0a34fa421b26",
        "urls": [
          "bzz-raw://b97e7e5a77ea47c08ba422291df887eba76c80982f52a6e94a30106e9377a94f",
          "dweb:/ipfs/Qme7N2XRC7mcDxB8wZxNWPk6T8S2qsnmhAqXeUj4CNvsGD"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0x20ecf3c67cab5ec0a1d0cc7d980fa236ffdfd8579d8d8b6b89d29329bc6e78ae",
        "urls": [
          "bzz-raw://b52e4581ee6605732661d367845d2c551e0efcf81852f29248aef6d4be0a300b",
          "dweb:/ipfs/QmaLPj2TrVCTPH6D1BEjBVCb9N1dLJ6pTcoJwCmM3HWkfC"
        ],
        "license": "MIT"
      },
      "src/staking/factory/IRarityPoolFactory.sol": {
        "keccak256": "0xd7dc269f1c3f755832d63ab3b8f100781762d52dcbc21e1f7c61117b6fa2dea5",
        "urls": [
          "bzz-raw://24e8d87c6febbd4bcfc93e5e89034b07dbc6895d6a1f98c0a5f478511084c330",
          "dweb:/ipfs/QmYHmZoV2ci1tL5pmjvKzeiqCBTynjiaiP7pBAf9Vnv8ZW"
        ],
        "license": "MIT"
      },
      "src/staking/factory/IRewardAccumulatorFactory.sol": {
        "keccak256": "0x60bf662b2559c105f66e98ee49a0bc313a8339631bd8b38ae1abcbb0193fb7a3",
        "urls": [
          "bzz-raw://84ec414a304dc9a378bac05327c35e0dc4d7ede9fe1d58c07aabb43c30ea94a0",
          "dweb:/ipfs/QmaXs4PxZQGctSWp3ZKJLjK7HoVxWvxyuDvGQEEDgJnNJH"
        ],
        "license": "MIT"
      },
      "src/staking/factory/RarityPoolFactory.sol": {
        "keccak256": "0x29909bc85dc4f389f8c1a27a68c8151780b9c23ff5c123bd1851ebdd91b2f7ad",
        "urls": [
          "bzz-raw://28c0340cae4d3d57ddc14085a5d07568c58f2b847fc9deff88204599e69e5c66",
          "dweb:/ipfs/QmZgPGNSDAkdy3CAuNKhYAep4cpS5UwmbaKmj6RaSpbKfT"
        ],
        "license": "MIT"
      },
      "src/staking/registry/IRareStakingRegistry.sol": {
        "keccak256": "0xc77c14fe766b3a8d5fc985a6f3abdd9e338aa6b9671b22caf06c9664aefda981",
        "urls": [
          "bzz-raw://e470d3b77fbac141c826ed2cf9e4829642a282e55b50e8f6fb35be8a630a8fa5",
          "dweb:/ipfs/Qmd54NwkoeHyVxMTMmmJzo5PrjNeh8DuFRRjy4LXaDevAP"
        ],
        "license": "MIT"
      },
      "src/staking/token/IRarityPool.sol": {
        "keccak256": "0xf08b96167873596abf9bb5cb377258fff453b11a8edbb89f466af0cbabfbd663",
        "urls": [
          "bzz-raw://df48bab3b28bb3b50a37548c1f241889a75f6e9e15f3b2c593b9e0babda7fe58",
          "dweb:/ipfs/QmXWgnfBC2B6MXegJYz5ZnPxyE557xQkpkXB2i4fhck9j4"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/staking/factory/RarityPoolFactory.sol",
    "id": 46816,
    "exportedSymbols": {
      "BeaconProxy": [
        38269
      ],
      "IAccessControlUpgradeable": [
        31113
      ],
      "IBeaconUpgradeable": [
        31613
      ],
      "IRareStakingRegistry": [
        47376
      ],
      "IRarityPool": [
        49608
      ],
      "IRarityPoolFactory": [
        46456
      ],
      "IRewardAccumulatorFactory": [
        46497
      ],
      "OwnableUpgradeable": [
        31245
      ],
      "RarityPoolFactory": [
        46815
      ],
      "UUPSUpgradeable": [
        31918
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:5919:109",
    "nodes": [
      {
        "id": 46499,
        "nodeType": "PragmaDirective",
        "src": "32:23:109",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 46501,
        "nodeType": "ImportDirective",
        "src": "57:100:109",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/access/OwnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46816,
        "sourceUnit": 31246,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46500,
              "name": "OwnableUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31245,
              "src": "65:18:109",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46503,
        "nodeType": "ImportDirective",
        "src": "158:114:109",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/access/IAccessControlUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46816,
        "sourceUnit": 31114,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46502,
              "name": "IAccessControlUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31113,
              "src": "166:25:109",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46505,
        "nodeType": "ImportDirective",
        "src": "273:99:109",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46816,
        "sourceUnit": 31919,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46504,
              "name": "UUPSUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31918,
              "src": "281:15:109",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46507,
        "nodeType": "ImportDirective",
        "src": "373:106:109",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46816,
        "sourceUnit": 31614,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46506,
              "name": "IBeaconUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31613,
              "src": "381:18:109",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46509,
        "nodeType": "ImportDirective",
        "src": "481:80:109",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol",
        "file": "openzeppelin-contracts/proxy/beacon/BeaconProxy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46816,
        "sourceUnit": 38270,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46508,
              "name": "BeaconProxy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38269,
              "src": "489:11:109",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46511,
        "nodeType": "ImportDirective",
        "src": "563:60:109",
        "nodes": [],
        "absolutePath": "src/staking/factory/IRarityPoolFactory.sol",
        "file": "./IRarityPoolFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46816,
        "sourceUnit": 46457,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46510,
              "name": "IRarityPoolFactory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46456,
              "src": "571:18:109",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46513,
        "nodeType": "ImportDirective",
        "src": "624:74:109",
        "nodes": [],
        "absolutePath": "src/staking/factory/IRewardAccumulatorFactory.sol",
        "file": "./IRewardAccumulatorFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46816,
        "sourceUnit": 46498,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46512,
              "name": "IRewardAccumulatorFactory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46497,
              "src": "632:25:109",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46515,
        "nodeType": "ImportDirective",
        "src": "699:74:109",
        "nodes": [],
        "absolutePath": "src/staking/registry/IRareStakingRegistry.sol",
        "file": "../registry/IRareStakingRegistry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46816,
        "sourceUnit": 47377,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46514,
              "name": "IRareStakingRegistry",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47376,
              "src": "707:20:109",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46517,
        "nodeType": "ImportDirective",
        "src": "774:53:109",
        "nodes": [],
        "absolutePath": "src/staking/token/IRarityPool.sol",
        "file": "../token/IRarityPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46816,
        "sourceUnit": 49609,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46516,
              "name": "IRarityPool",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49608,
              "src": "782:11:109",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46815,
        "nodeType": "ContractDefinition",
        "src": "1040:4910:109",
        "nodes": [
          {
            "id": 46529,
            "nodeType": "VariableDeclaration",
            "src": "1391:44:109",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "stakingRegistry",
            "nameLocation": "1420:15:109",
            "scope": 46815,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IRareStakingRegistry_$47376",
              "typeString": "contract IRareStakingRegistry"
            },
            "typeName": {
              "id": 46528,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 46527,
                "name": "IRareStakingRegistry",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 47376,
                "src": "1391:20:109"
              },
              "referencedDeclaration": 47376,
              "src": "1391:20:109",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IRareStakingRegistry_$47376",
                "typeString": "contract IRareStakingRegistry"
              }
            },
            "visibility": "private"
          },
          {
            "id": 46532,
            "nodeType": "VariableDeclaration",
            "src": "1474:51:109",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "rewardSwapFactory",
            "nameLocation": "1508:17:109",
            "scope": 46815,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IRewardAccumulatorFactory_$46497",
              "typeString": "contract IRewardAccumulatorFactory"
            },
            "typeName": {
              "id": 46531,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 46530,
                "name": "IRewardAccumulatorFactory",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 46497,
                "src": "1474:25:109"
              },
              "referencedDeclaration": 46497,
              "src": "1474:25:109",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IRewardAccumulatorFactory_$46497",
                "typeString": "contract IRewardAccumulatorFactory"
              }
            },
            "visibility": "private"
          },
          {
            "id": 46534,
            "nodeType": "VariableDeclaration",
            "src": "1584:35:109",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "rareStakingTemplate",
            "nameLocation": "1600:19:109",
            "scope": 46815,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 46533,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1584:7:109",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 46611,
            "nodeType": "FunctionDefinition",
            "src": "1825:863:109",
            "nodes": [],
            "body": {
              "id": 46610,
              "nodeType": "Block",
              "src": "1989:699:109",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 46553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 46548,
                          "name": "_stakingRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46536,
                          "src": "2003:16:109",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 46551,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2031:1:109",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 46550,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2023:7:109",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 46549,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2023:7:109",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2023:10:109",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2003:30:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e697469616c697a653a3a5f7374616b696e6752656769737472792063616e6e6f74206265207a65726f2061646472657373",
                        "id": 46554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2035:53:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_db782c1b1c0514ee3267ee811c8f503d771b3e9d6f56f00206388ec261b695d9",
                          "typeString": "literal_string \"initialize::_stakingRegistry cannot be zero address\""
                        },
                        "value": "initialize::_stakingRegistry cannot be zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_db782c1b1c0514ee3267ee811c8f503d771b3e9d6f56f00206388ec261b695d9",
                          "typeString": "literal_string \"initialize::_stakingRegistry cannot be zero address\""
                        }
                      ],
                      "id": 46547,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1995:7:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 46555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1995:94:109",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46556,
                  "nodeType": "ExpressionStatement",
                  "src": "1995:94:109"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 46563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 46558,
                          "name": "_rareStakingTemplate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46538,
                          "src": "2103:20:109",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 46561,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2135:1:109",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 46560,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2127:7:109",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 46559,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2127:7:109",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2127:10:109",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2103:34:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e697469616c697a653a3a5f726172655374616b696e6754656d706c6174652063616e6e6f74206265207a65726f2061646472657373",
                        "id": 46564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2139:57:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_00cc7c2d173ae8c4660ce36c4ab94591efadd2623d522c65c211d3695a366533",
                          "typeString": "literal_string \"initialize::_rareStakingTemplate cannot be zero address\""
                        },
                        "value": "initialize::_rareStakingTemplate cannot be zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_00cc7c2d173ae8c4660ce36c4ab94591efadd2623d522c65c211d3695a366533",
                          "typeString": "literal_string \"initialize::_rareStakingTemplate cannot be zero address\""
                        }
                      ],
                      "id": 46557,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2095:7:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 46565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2095:102:109",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46566,
                  "nodeType": "ExpressionStatement",
                  "src": "2095:102:109"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 46573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 46568,
                          "name": "_rewardSwapFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46540,
                          "src": "2211:18:109",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 46571,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2241:1:109",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 46570,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2233:7:109",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 46569,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2233:7:109",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2233:10:109",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2211:32:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e697469616c697a653a3a5f72657761726453776170466163746f72792063616e6e6f74206265207a65726f2061646472657373",
                        "id": 46574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2245:55:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2b6e719d1a92b11cd045143b8fa70a93aae364dec21dd79dfea0b2e2204e38e",
                          "typeString": "literal_string \"initialize::_rewardSwapFactory cannot be zero address\""
                        },
                        "value": "initialize::_rewardSwapFactory cannot be zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2b6e719d1a92b11cd045143b8fa70a93aae364dec21dd79dfea0b2e2204e38e",
                          "typeString": "literal_string \"initialize::_rewardSwapFactory cannot be zero address\""
                        }
                      ],
                      "id": 46567,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2203:7:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 46575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2203:98:109",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46576,
                  "nodeType": "ExpressionStatement",
                  "src": "2203:98:109"
                },
                {
                  "expression": {
                    "id": 46581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46577,
                      "name": "rewardSwapFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46532,
                      "src": "2307:17:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRewardAccumulatorFactory_$46497",
                        "typeString": "contract IRewardAccumulatorFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 46579,
                          "name": "_rewardSwapFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46540,
                          "src": "2353:18:109",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 46578,
                        "name": "IRewardAccumulatorFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46497,
                        "src": "2327:25:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IRewardAccumulatorFactory_$46497_$",
                          "typeString": "type(contract IRewardAccumulatorFactory)"
                        }
                      },
                      "id": 46580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2327:45:109",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRewardAccumulatorFactory_$46497",
                        "typeString": "contract IRewardAccumulatorFactory"
                      }
                    },
                    "src": "2307:65:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRewardAccumulatorFactory_$46497",
                      "typeString": "contract IRewardAccumulatorFactory"
                    }
                  },
                  "id": 46582,
                  "nodeType": "ExpressionStatement",
                  "src": "2307:65:109"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 46588,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 46584,
                                  "name": "rewardSwapFactory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 46532,
                                  "src": "2394:17:109",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IRewardAccumulatorFactory_$46497",
                                    "typeString": "contract IRewardAccumulatorFactory"
                                  }
                                },
                                "id": 46585,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getStakingRegistryAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 46490,
                                "src": "2394:43:109",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 46586,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2394:45:109",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 46587,
                              "name": "_stakingRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46536,
                              "src": "2443:16:109",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "2394:65:109",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 46589,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2393:67:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e697469616c697a653a3a5374616b696e6752656769737472696573206d757374206d61746368",
                        "id": 46590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2468:42:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0fd7c4ed3f452a71df03bab05b8edface23dc7379f3dfac49d214cfd7c4c604a",
                          "typeString": "literal_string \"initialize::StakingRegistries must match\""
                        },
                        "value": "initialize::StakingRegistries must match"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0fd7c4ed3f452a71df03bab05b8edface23dc7379f3dfac49d214cfd7c4c604a",
                          "typeString": "literal_string \"initialize::StakingRegistries must match\""
                        }
                      ],
                      "id": 46583,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2378:7:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 46591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2378:138:109",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46592,
                  "nodeType": "ExpressionStatement",
                  "src": "2378:138:109"
                },
                {
                  "expression": {
                    "id": 46595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46593,
                      "name": "rareStakingTemplate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46534,
                      "src": "2522:19:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 46594,
                      "name": "_rareStakingTemplate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46538,
                      "src": "2544:20:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2522:42:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 46596,
                  "nodeType": "ExpressionStatement",
                  "src": "2522:42:109"
                },
                {
                  "expression": {
                    "id": 46601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46597,
                      "name": "stakingRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46529,
                      "src": "2570:15:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRareStakingRegistry_$47376",
                        "typeString": "contract IRareStakingRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 46599,
                          "name": "_stakingRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46536,
                          "src": "2609:16:109",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 46598,
                        "name": "IRareStakingRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47376,
                        "src": "2588:20:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IRareStakingRegistry_$47376_$",
                          "typeString": "type(contract IRareStakingRegistry)"
                        }
                      },
                      "id": 46600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2588:38:109",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRareStakingRegistry_$47376",
                        "typeString": "contract IRareStakingRegistry"
                      }
                    },
                    "src": "2570:56:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRareStakingRegistry_$47376",
                      "typeString": "contract IRareStakingRegistry"
                    }
                  },
                  "id": 46602,
                  "nodeType": "ExpressionStatement",
                  "src": "2570:56:109"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 46603,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31140,
                      "src": "2632:14:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 46604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2632:16:109",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46605,
                  "nodeType": "ExpressionStatement",
                  "src": "2632:16:109"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46607,
                        "name": "_newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46542,
                        "src": "2673:9:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 46606,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31239,
                      "src": "2654:18:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 46608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2654:29:109",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46609,
                  "nodeType": "ExpressionStatement",
                  "src": "2654:29:109"
                }
              ]
            },
            "functionSelector": "f8c8765e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 46545,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 46544,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31684,
                  "src": "1977:11:109"
                },
                "nodeType": "ModifierInvocation",
                "src": "1977:11:109"
              }
            ],
            "name": "initialize",
            "nameLocation": "1834:10:109",
            "parameters": {
              "id": 46543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46536,
                  "mutability": "mutable",
                  "name": "_stakingRegistry",
                  "nameLocation": "1858:16:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 46611,
                  "src": "1850:24:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46535,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1850:7:109",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46538,
                  "mutability": "mutable",
                  "name": "_rareStakingTemplate",
                  "nameLocation": "1888:20:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 46611,
                  "src": "1880:28:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46537,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1880:7:109",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46540,
                  "mutability": "mutable",
                  "name": "_rewardSwapFactory",
                  "nameLocation": "1922:18:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 46611,
                  "src": "1914:26:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46539,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1914:7:109",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46542,
                  "mutability": "mutable",
                  "name": "_newOwner",
                  "nameLocation": "1954:9:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 46611,
                  "src": "1946:17:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46541,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1946:7:109",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1844:123:109"
            },
            "returnParameters": {
              "id": 46546,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1989:0:109"
            },
            "scope": 46815,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46621,
            "nodeType": "FunctionDefinition",
            "src": "2935:66:109",
            "nodes": [],
            "body": {
              "id": 46620,
              "nodeType": "Block",
              "src": "2999:2:109",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              31912
            ],
            "documentation": {
              "id": 46612,
              "nodeType": "StructuredDocumentation",
              "src": "2901:31:109",
              "text": "@inheritdoc UUPSUpgradeable"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 46618,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 46617,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31159,
                  "src": "2989:9:109"
                },
                "nodeType": "ModifierInvocation",
                "src": "2989:9:109"
              }
            ],
            "name": "_authorizeUpgrade",
            "nameLocation": "2944:17:109",
            "overrides": {
              "id": 46616,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2980:8:109"
            },
            "parameters": {
              "id": 46615,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46614,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46621,
                  "src": "2962:7:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46613,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2962:7:109",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2961:9:109"
            },
            "returnParameters": {
              "id": 46619,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2999:0:109"
            },
            "scope": 46815,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 46656,
            "nodeType": "FunctionDefinition",
            "src": "3313:400:109",
            "nodes": [],
            "body": {
              "id": 46655,
              "nodeType": "Block",
              "src": "3386:327:109",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 46635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 46630,
                          "name": "_stakingRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46624,
                          "src": "3400:16:109",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 46633,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3428:1:109",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 46632,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3420:7:109",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 46631,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3420:7:109",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3420:10:109",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3400:30:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7365745374616b696e6752656769737472793a3a5f7374616b696e6752656769737472792063616e6e6f74206265207a65726f2061646472657373",
                        "id": 46636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3432:61:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_15b3f78dd59b7cf982ffb8145a483a0905f92c8a958acb89ded1af59e15906ba",
                          "typeString": "literal_string \"setStakingRegistry::_stakingRegistry cannot be zero address\""
                        },
                        "value": "setStakingRegistry::_stakingRegistry cannot be zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_15b3f78dd59b7cf982ffb8145a483a0905f92c8a958acb89ded1af59e15906ba",
                          "typeString": "literal_string \"setStakingRegistry::_stakingRegistry cannot be zero address\""
                        }
                      ],
                      "id": 46629,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3392:7:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 46637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3392:102:109",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46638,
                  "nodeType": "ExpressionStatement",
                  "src": "3392:102:109"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 46644,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 46640,
                                  "name": "rewardSwapFactory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 46532,
                                  "src": "3516:17:109",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IRewardAccumulatorFactory_$46497",
                                    "typeString": "contract IRewardAccumulatorFactory"
                                  }
                                },
                                "id": 46641,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getStakingRegistryAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 46490,
                                "src": "3516:43:109",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 46642,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3516:45:109",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 46643,
                              "name": "_stakingRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46624,
                              "src": "3565:16:109",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "3516:65:109",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 46645,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3515:67:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7365745374616b696e6752656769737472793a3a5374616b696e6752656769737472696573206d757374206d61746368",
                        "id": 46646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3590:50:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1c70407b43e32d5ca9890ffa1610c224bbb5425f7a74468b2ae77d86b343fdb7",
                          "typeString": "literal_string \"setStakingRegistry::StakingRegistries must match\""
                        },
                        "value": "setStakingRegistry::StakingRegistries must match"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1c70407b43e32d5ca9890ffa1610c224bbb5425f7a74468b2ae77d86b343fdb7",
                          "typeString": "literal_string \"setStakingRegistry::StakingRegistries must match\""
                        }
                      ],
                      "id": 46639,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3500:7:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 46647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3500:146:109",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46648,
                  "nodeType": "ExpressionStatement",
                  "src": "3500:146:109"
                },
                {
                  "expression": {
                    "id": 46653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46649,
                      "name": "stakingRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46529,
                      "src": "3652:15:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRareStakingRegistry_$47376",
                        "typeString": "contract IRareStakingRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 46651,
                          "name": "_stakingRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46624,
                          "src": "3691:16:109",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 46650,
                        "name": "IRareStakingRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47376,
                        "src": "3670:20:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IRareStakingRegistry_$47376_$",
                          "typeString": "type(contract IRareStakingRegistry)"
                        }
                      },
                      "id": 46652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3670:38:109",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRareStakingRegistry_$47376",
                        "typeString": "contract IRareStakingRegistry"
                      }
                    },
                    "src": "3652:56:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRareStakingRegistry_$47376",
                      "typeString": "contract IRareStakingRegistry"
                    }
                  },
                  "id": 46654,
                  "nodeType": "ExpressionStatement",
                  "src": "3652:56:109"
                }
              ]
            },
            "baseFunctions": [
              46437
            ],
            "documentation": {
              "id": 46622,
              "nodeType": "StructuredDocumentation",
              "src": "3212:98:109",
              "text": "@inheritdoc IRarityPoolFactory\n @dev Requires the caller to be the owner of the contract."
            },
            "functionSelector": "2c740844",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 46627,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 46626,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31159,
                  "src": "3376:9:109"
                },
                "nodeType": "ModifierInvocation",
                "src": "3376:9:109"
              }
            ],
            "name": "setStakingRegistry",
            "nameLocation": "3322:18:109",
            "parameters": {
              "id": 46625,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46624,
                  "mutability": "mutable",
                  "name": "_stakingRegistry",
                  "nameLocation": "3349:16:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 46656,
                  "src": "3341:24:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46623,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3341:7:109",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3340:26:109"
            },
            "returnParameters": {
              "id": 46628,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3386:0:109"
            },
            "scope": 46815,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46679,
            "nodeType": "FunctionDefinition",
            "src": "3818:254:109",
            "nodes": [],
            "body": {
              "id": 46678,
              "nodeType": "Block",
              "src": "3899:173:109",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 46670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 46665,
                          "name": "_rareStakingTemplate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46659,
                          "src": "3913:20:109",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 46668,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3945:1:109",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 46667,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3937:7:109",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 46666,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3937:7:109",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3937:10:109",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3913:34:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "736574526172655374616b696e6754656d706c6174653a3a5f726172655374616b696e6754656d706c6174652063616e6e6f74206265207a65726f2061646472657373",
                        "id": 46671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3949:69:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e4774cf5a15a1e7685b1e121ea0730163cdf956164a19463f65f8b03e8f1b01d",
                          "typeString": "literal_string \"setRareStakingTemplate::_rareStakingTemplate cannot be zero address\""
                        },
                        "value": "setRareStakingTemplate::_rareStakingTemplate cannot be zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e4774cf5a15a1e7685b1e121ea0730163cdf956164a19463f65f8b03e8f1b01d",
                          "typeString": "literal_string \"setRareStakingTemplate::_rareStakingTemplate cannot be zero address\""
                        }
                      ],
                      "id": 46664,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3905:7:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 46672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3905:114:109",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46673,
                  "nodeType": "ExpressionStatement",
                  "src": "3905:114:109"
                },
                {
                  "expression": {
                    "id": 46676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46674,
                      "name": "rareStakingTemplate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46534,
                      "src": "4025:19:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 46675,
                      "name": "_rareStakingTemplate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46659,
                      "src": "4047:20:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4025:42:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 46677,
                  "nodeType": "ExpressionStatement",
                  "src": "4025:42:109"
                }
              ]
            },
            "baseFunctions": [
              46443
            ],
            "documentation": {
              "id": 46657,
              "nodeType": "StructuredDocumentation",
              "src": "3717:98:109",
              "text": "@inheritdoc IRarityPoolFactory\n @dev Requires the caller to be the owner of the contract."
            },
            "functionSelector": "7ed155de",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 46662,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 46661,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31159,
                  "src": "3889:9:109"
                },
                "nodeType": "ModifierInvocation",
                "src": "3889:9:109"
              }
            ],
            "name": "setRareStakingTemplate",
            "nameLocation": "3827:22:109",
            "parameters": {
              "id": 46660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46659,
                  "mutability": "mutable",
                  "name": "_rareStakingTemplate",
                  "nameLocation": "3858:20:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 46679,
                  "src": "3850:28:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46658,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3850:7:109",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3849:30:109"
            },
            "returnParameters": {
              "id": 46663,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3899:0:109"
            },
            "scope": 46815,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46784,
            "nodeType": "FunctionDefinition",
            "src": "4420:880:109",
            "nodes": [],
            "body": {
              "id": 46783,
              "nodeType": "Block",
              "src": "4483:817:109",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 46693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 46688,
                          "name": "_user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46682,
                          "src": "4497:5:109",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 46691,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4514:1:109",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 46690,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4506:7:109",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 46689,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4506:7:109",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4506:10:109",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4497:19:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6465706c6f795374616b696e673a3a5f757365722063616e6e6f74206265207a65726f2061646472657373",
                        "id": 46694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4518:45:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9bc0d669455fabe0d8f6a86006cdd369375697280248a9541e2a6e669c3d1889",
                          "typeString": "literal_string \"deployStaking::_user cannot be zero address\""
                        },
                        "value": "deployStaking::_user cannot be zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9bc0d669455fabe0d8f6a86006cdd369375697280248a9541e2a6e669c3d1889",
                          "typeString": "literal_string \"deployStaking::_user cannot be zero address\""
                        }
                      ],
                      "id": 46687,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4489:7:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 46695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4489:75:109",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46696,
                  "nodeType": "ExpressionStatement",
                  "src": "4489:75:109"
                },
                {
                  "assignments": [
                    46699
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46699,
                      "mutability": "mutable",
                      "name": "newStaking",
                      "nameLocation": "4582:10:109",
                      "nodeType": "VariableDeclaration",
                      "scope": 46783,
                      "src": "4570:22:109",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BeaconProxy_$38269",
                        "typeString": "contract BeaconProxy"
                      },
                      "typeName": {
                        "id": 46698,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 46697,
                          "name": "BeaconProxy",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 38269,
                          "src": "4570:11:109"
                        },
                        "referencedDeclaration": 38269,
                        "src": "4570:11:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BeaconProxy_$38269",
                          "typeString": "contract BeaconProxy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46724,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46705,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4626:4:109",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RarityPoolFactory_$46815",
                              "typeString": "contract RarityPoolFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_RarityPoolFactory_$46815",
                              "typeString": "contract RarityPoolFactory"
                            }
                          ],
                          "id": 46704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4618:7:109",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46703,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4618:7:109",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4618:13:109",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 46709,
                                "name": "IRarityPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49608,
                                "src": "4671:11:109",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IRarityPool_$49608_$",
                                  "typeString": "type(contract IRarityPool)"
                                }
                              },
                              "id": 46710,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "initialize",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 49442,
                              "src": "4671:22:109",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$",
                                "typeString": "function IRarityPool.initialize(address,address,address,address)"
                              }
                            },
                            "id": 46711,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "4671:31:109",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 46712,
                                "name": "stakingRegistry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46529,
                                "src": "4712:15:109",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IRareStakingRegistry_$47376",
                                  "typeString": "contract IRareStakingRegistry"
                                }
                              },
                              "id": 46713,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getRareAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 47243,
                              "src": "4712:30:109",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 46714,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4712:32:109",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 46715,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46682,
                            "src": "4754:5:109",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 46718,
                                "name": "stakingRegistry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46529,
                                "src": "4777:15:109",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IRareStakingRegistry_$47376",
                                  "typeString": "contract IRareStakingRegistry"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IRareStakingRegistry_$47376",
                                  "typeString": "contract IRareStakingRegistry"
                                }
                              ],
                              "id": 46717,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4769:7:109",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46716,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4769:7:109",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46719,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4769:24:109",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 46720,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4803:3:109",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 46721,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4803:10:109",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 46707,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4639:3:109",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 46708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "4639:22:109",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 46722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4639:182:109",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 46702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "4595:15:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_BeaconProxy_$38269_$",
                        "typeString": "function (address,bytes memory) payable returns (contract BeaconProxy)"
                      },
                      "typeName": {
                        "id": 46701,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 46700,
                          "name": "BeaconProxy",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 38269,
                          "src": "4599:11:109"
                        },
                        "referencedDeclaration": 38269,
                        "src": "4599:11:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BeaconProxy_$38269",
                          "typeString": "contract BeaconProxy"
                        }
                      }
                    },
                    "id": 46723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4595:232:109",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BeaconProxy_$38269",
                      "typeString": "contract BeaconProxy"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4570:257:109"
                },
                {
                  "assignments": [
                    46726
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46726,
                      "mutability": "mutable",
                      "name": "rewardSwap",
                      "nameLocation": "4841:10:109",
                      "nodeType": "VariableDeclaration",
                      "scope": 46783,
                      "src": "4833:18:109",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 46725,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4833:7:109",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46734,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46731,
                            "name": "newStaking",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46699,
                            "src": "4897:10:109",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeaconProxy_$38269",
                              "typeString": "contract BeaconProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BeaconProxy_$38269",
                              "typeString": "contract BeaconProxy"
                            }
                          ],
                          "id": 46730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4889:7:109",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46729,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4889:7:109",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4889:19:109",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46727,
                        "name": "rewardSwapFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46532,
                        "src": "4854:17:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRewardAccumulatorFactory_$46497",
                          "typeString": "contract IRewardAccumulatorFactory"
                        }
                      },
                      "id": 46728,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deployRewardSwap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46472,
                      "src": "4854:34:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_address_payable_$",
                        "typeString": "function (address) external returns (address payable)"
                      }
                    },
                    "id": 46733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4854:55:109",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4833:76:109"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46738,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46682,
                        "src": "4951:5:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 46741,
                            "name": "newStaking",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46699,
                            "src": "4966:10:109",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeaconProxy_$38269",
                              "typeString": "contract BeaconProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BeaconProxy_$38269",
                              "typeString": "contract BeaconProxy"
                            }
                          ],
                          "id": 46740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4958:7:109",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46739,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4958:7:109",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4958:19:109",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46743,
                        "name": "rewardSwap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46726,
                        "src": "4979:10:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46735,
                        "name": "stakingRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46529,
                        "src": "4915:15:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRareStakingRegistry_$47376",
                          "typeString": "contract IRareStakingRegistry"
                        }
                      },
                      "id": 46737,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setStakingAddresses",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47157,
                      "src": "4915:35:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address) external"
                      }
                    },
                    "id": 46744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4915:75:109",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46745,
                  "nodeType": "ExpressionStatement",
                  "src": "4915:75:109"
                },
                {
                  "assignments": [
                    46747
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46747,
                      "mutability": "mutable",
                      "name": "statSetterRole",
                      "nameLocation": "5005:14:109",
                      "nodeType": "VariableDeclaration",
                      "scope": 46783,
                      "src": "4997:22:109",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 46746,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4997:7:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46751,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 46748,
                        "name": "stakingRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46529,
                        "src": "5022:15:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRareStakingRegistry_$47376",
                          "typeString": "contract IRareStakingRegistry"
                        }
                      },
                      "id": 46749,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "STAKING_STAT_SETTER_ROLE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47357,
                      "src": "5022:40:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                        "typeString": "function () view external returns (bytes32)"
                      }
                    },
                    "id": 46750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5022:42:109",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4997:67:109"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46759,
                        "name": "statSetterRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46747,
                        "src": "5133:14:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 46762,
                            "name": "newStaking",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46699,
                            "src": "5157:10:109",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeaconProxy_$38269",
                              "typeString": "contract BeaconProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BeaconProxy_$38269",
                              "typeString": "contract BeaconProxy"
                            }
                          ],
                          "id": 46761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5149:7:109",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46760,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5149:7:109",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5149:19:109",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 46755,
                                "name": "stakingRegistry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46529,
                                "src": "5105:15:109",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IRareStakingRegistry_$47376",
                                  "typeString": "contract IRareStakingRegistry"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IRareStakingRegistry_$47376",
                                  "typeString": "contract IRareStakingRegistry"
                                }
                              ],
                              "id": 46754,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5097:7:109",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46753,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5097:7:109",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46756,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5097:24:109",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 46752,
                          "name": "IAccessControlUpgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31113,
                          "src": "5071:25:109",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IAccessControlUpgradeable_$31113_$",
                            "typeString": "type(contract IAccessControlUpgradeable)"
                          }
                        },
                        "id": 46757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5071:51:109",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAccessControlUpgradeable_$31113",
                          "typeString": "contract IAccessControlUpgradeable"
                        }
                      },
                      "id": 46758,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "grantRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31096,
                      "src": "5071:61:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 46764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5071:98:109",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46765,
                  "nodeType": "ExpressionStatement",
                  "src": "5071:98:109"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46769,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5223:3:109",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 46770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5223:10:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46771,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46682,
                        "src": "5235:5:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 46774,
                            "name": "newStaking",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46699,
                            "src": "5250:10:109",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeaconProxy_$38269",
                              "typeString": "contract BeaconProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BeaconProxy_$38269",
                              "typeString": "contract BeaconProxy"
                            }
                          ],
                          "id": 46773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5242:7:109",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46772,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5242:7:109",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5242:19:109",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46766,
                        "name": "IRarityPoolFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46456,
                        "src": "5181:18:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IRarityPoolFactory_$46456_$",
                          "typeString": "type(contract IRarityPoolFactory)"
                        }
                      },
                      "id": 46768,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "StakingContractCreated",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46423,
                      "src": "5181:41:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 46776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5181:81:109",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46777,
                  "nodeType": "EmitStatement",
                  "src": "5176:86:109"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46780,
                        "name": "newStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46699,
                        "src": "5284:10:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BeaconProxy_$38269",
                          "typeString": "contract BeaconProxy"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_BeaconProxy_$38269",
                          "typeString": "contract BeaconProxy"
                        }
                      ],
                      "id": 46779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5276:7:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 46778,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5276:7:109",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 46781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5276:19:109",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 46686,
                  "id": 46782,
                  "nodeType": "Return",
                  "src": "5269:26:109"
                }
              ]
            },
            "baseFunctions": [
              46431
            ],
            "documentation": {
              "id": 46680,
              "nodeType": "StructuredDocumentation",
              "src": "4286:131:109",
              "text": "@inheritdoc IRarityPoolFactory\n @dev This contract must have the {STAKING_INFO_SETTER_ROLE} role on {RareStakingRegistry}."
            },
            "functionSelector": "1249ed23",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deployStaking",
            "nameLocation": "4429:13:109",
            "parameters": {
              "id": 46683,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46682,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "4451:5:109",
                  "nodeType": "VariableDeclaration",
                  "scope": 46784,
                  "src": "4443:13:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46681,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4443:7:109",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4442:15:109"
            },
            "returnParameters": {
              "id": 46686,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46685,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46784,
                  "src": "4474:7:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46684,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4474:7:109",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4473:9:109"
            },
            "scope": 46815,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46796,
            "nodeType": "FunctionDefinition",
            "src": "5550:111:109",
            "nodes": [],
            "body": {
              "id": 46795,
              "nodeType": "Block",
              "src": "5619:42:109",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46792,
                        "name": "stakingRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46529,
                        "src": "5640:15:109",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRareStakingRegistry_$47376",
                          "typeString": "contract IRareStakingRegistry"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IRareStakingRegistry_$47376",
                          "typeString": "contract IRareStakingRegistry"
                        }
                      ],
                      "id": 46791,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5632:7:109",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 46790,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5632:7:109",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 46793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5632:24:109",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 46789,
                  "id": 46794,
                  "nodeType": "Return",
                  "src": "5625:31:109"
                }
              ]
            },
            "baseFunctions": [
              46449
            ],
            "documentation": {
              "id": 46785,
              "nodeType": "StructuredDocumentation",
              "src": "5513:34:109",
              "text": "@inheritdoc IRarityPoolFactory"
            },
            "functionSelector": "9f997eb0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStakingRegistryAddress",
            "nameLocation": "5559:25:109",
            "parameters": {
              "id": 46786,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5584:2:109"
            },
            "returnParameters": {
              "id": 46789,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46788,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46796,
                  "src": "5610:7:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46787,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5610:7:109",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5609:9:109"
            },
            "scope": 46815,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46805,
            "nodeType": "FunctionDefinition",
            "src": "5702:110:109",
            "nodes": [],
            "body": {
              "id": 46804,
              "nodeType": "Block",
              "src": "5775:37:109",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 46802,
                    "name": "rareStakingTemplate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 46534,
                    "src": "5788:19:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 46801,
                  "id": 46803,
                  "nodeType": "Return",
                  "src": "5781:26:109"
                }
              ]
            },
            "baseFunctions": [
              46455
            ],
            "documentation": {
              "id": 46797,
              "nodeType": "StructuredDocumentation",
              "src": "5665:34:109",
              "text": "@inheritdoc IRarityPoolFactory"
            },
            "functionSelector": "c8cb01d8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRareStakingTemplateAddress",
            "nameLocation": "5711:29:109",
            "parameters": {
              "id": 46798,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5740:2:109"
            },
            "returnParameters": {
              "id": 46801,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46800,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46805,
                  "src": "5766:7:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46799,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5766:7:109",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5765:9:109"
            },
            "scope": 46815,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46814,
            "nodeType": "FunctionDefinition",
            "src": "5853:95:109",
            "nodes": [],
            "body": {
              "id": 46813,
              "nodeType": "Block",
              "src": "5911:37:109",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 46811,
                    "name": "rareStakingTemplate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 46534,
                    "src": "5924:19:109",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 46810,
                  "id": 46812,
                  "nodeType": "Return",
                  "src": "5917:26:109"
                }
              ]
            },
            "baseFunctions": [
              31612
            ],
            "documentation": {
              "id": 46806,
              "nodeType": "StructuredDocumentation",
              "src": "5816:34:109",
              "text": "@inheritdoc IBeaconUpgradeable"
            },
            "functionSelector": "5c60da1b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "implementation",
            "nameLocation": "5862:14:109",
            "parameters": {
              "id": 46807,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5876:2:109"
            },
            "returnParameters": {
              "id": 46810,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46809,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46814,
                  "src": "5902:7:109",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46808,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5902:7:109",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5901:9:109"
            },
            "scope": 46815,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 46519,
              "name": "IRarityPoolFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46456,
              "src": "1070:18:109"
            },
            "id": 46520,
            "nodeType": "InheritanceSpecifier",
            "src": "1070:18:109"
          },
          {
            "baseName": {
              "id": 46521,
              "name": "IBeaconUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31613,
              "src": "1090:18:109"
            },
            "id": 46522,
            "nodeType": "InheritanceSpecifier",
            "src": "1090:18:109"
          },
          {
            "baseName": {
              "id": 46523,
              "name": "OwnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31245,
              "src": "1110:18:109"
            },
            "id": 46524,
            "nodeType": "InheritanceSpecifier",
            "src": "1110:18:109"
          },
          {
            "baseName": {
              "id": 46525,
              "name": "UUPSUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31918,
              "src": "1130:15:109"
            },
            "id": 46526,
            "nodeType": "InheritanceSpecifier",
            "src": "1130:15:109"
          }
        ],
        "canonicalName": "RarityPoolFactory",
        "contractDependencies": [
          38269
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 46518,
          "nodeType": "StructuredDocumentation",
          "src": "829:211:109",
          "text": "@author koloz, charlescrain\n @title RarityPoolFactory\n @notice The Staking Factory Contract used to deploy new staking ERC20 contracts pertaining to a user.\n @dev Made to be used with a UUPS Proxy."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          46815,
          31918,
          31603,
          31266,
          31279,
          31245,
          34352,
          31782,
          31613,
          46456
        ],
        "name": "RarityPoolFactory",
        "nameLocation": "1049:17:109",
        "scope": 46816,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 109
}