{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ZeroAddressUnsupported",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRareStakingTemplate",
          "type": "address"
        }
      ],
      "name": "RareStakingTemplateUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_deployingUser",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_userStakedOn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_stakingAddress",
          "type": "address"
        }
      ],
      "name": "StakingContractCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newStakingRegistry",
          "type": "address"
        }
      ],
      "name": "StakingRegistryUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "deployStaking",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRareStakingTemplateAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStakingRegistryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakingRegistry",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rareStakingTemplate",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rewardSwapFactory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_rareStakingTemplate",
          "type": "address"
        }
      ],
      "name": "setRareStakingTemplate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakingRegistry",
          "type": "address"
        }
      ],
      "name": "setStakingRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100e1565b600054610100900460ff161561008e5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146100df576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b608051611e916101186000396000818161062d01528181610679015281816107210152818161076401526108000152611e916000f3fe608060405260043610620000fb5760003560e01c806379ba50971162000095578063c8cb01d81162000060578063c8cb01d814620001cc578063e30c39781462000281578063f2fde38b14620002a1578063f8c8765e14620002c657600080fd5b806379ba509714620002045780637ed155de146200021c5780638da5cb5b14620002415780639f997eb0146200026157600080fd5b80634f1ef28611620000d65780634f1ef286146200018e57806352d1902d14620001a55780635c60da1b14620001cc578063715018a614620001ec57600080fd5b80631249ed2314620001005780632c74084414620001425780633659cfe61462000169575b600080fd5b3480156200010d57600080fd5b50620001256200011f366004620011df565b620002eb565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156200014f57600080fd5b506200016762000161366004620011df565b620005a7565b005b3480156200017657600080fd5b506200016762000188366004620011df565b62000623565b620001676200019f36600462001215565b62000717565b348015620001b257600080fd5b50620001bd620007f3565b60405190815260200162000139565b348015620001d957600080fd5b5060fd546001600160a01b031662000125565b348015620001f957600080fd5b5062000167620008a9565b3480156200021157600080fd5b5062000167620008c1565b3480156200022957600080fd5b50620001676200023b366004620011df565b6200093c565b3480156200024e57600080fd5b506033546001600160a01b031662000125565b3480156200026e57600080fd5b5060fb546001600160a01b031662000125565b3480156200028e57600080fd5b506065546001600160a01b031662000125565b348015620002ae57600080fd5b5062000167620002c0366004620011df565b620009b8565b348015620002d357600080fd5b5062000167620002e5366004620012e5565b62000a2c565b60fb546000906001600160a01b039081169083166200031d57604051637827912560e01b815260040160405180910390fd5b604080516001600160a01b038581166024830152831660448201523360648083019190915282518083039091018152608490910182526020810180516001600160e01b031663c0c53b8b60e01b179052905160009130916200037f90620011bb565b6200038c9291906200139e565b604051809103906000f080158015620003a9573d6000803e3d6000fd5b5060fc5460405163399fe9a160e11b81526001600160a01b0380841660048301529293506000929091169063733fd342906024016020604051808303816000875af1158015620003fd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004239190620013c4565b6040516376a250a760e01b81526001600160a01b03878116600483015284811660248301528083166044830152919250908416906376a250a790606401600060405180830381600087803b1580156200047b57600080fd5b505af115801562000490573d6000803e3d6000fd5b505050506000836001600160a01b03166366951bc16040518163ffffffff1660e01b8152600401602060405180830381865afa158015620004d5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004fb9190620013e4565b604051632f2ff15d60e01b8152600481018290526001600160a01b03858116602483015291925090851690632f2ff15d90604401600060405180830381600087803b1580156200054a57600080fd5b505af11580156200055f573d6000803e3d6000fd5b50506040516001600160a01b0380871693508916915033907f4a2dd45842063d5cdb0ba4ccb3b677af33701f706cdfa90ddf5fe291e6f9987890600090a45090949350505050565b620005b162000c3c565b6001600160a01b038116620005d957604051637827912560e01b815260040160405180910390fd5b60fb80546001600160a01b0319166001600160a01b0383169081179091556040517fa5aa720af23083cb0a3e835e4c10666ab0ac4eee7a4396df3ec359de6fc53abf90600090a250565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003620006775760405162461bcd60e51b81526004016200066e90620013fe565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316620006c260008051602062001e15833981519152546001600160a01b031690565b6001600160a01b031614620006eb5760405162461bcd60e51b81526004016200066e906200144a565b620006f68162000c98565b60408051600080825260208201909252620007149183919062000cca565b50565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003620007625760405162461bcd60e51b81526004016200066e90620013fe565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316620007ad60008051602062001e15833981519152546001600160a01b031690565b6001600160a01b031614620007d65760405162461bcd60e51b81526004016200066e906200144a565b620007e18262000c98565b620007ef8282600162000cca565b5050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614620008955760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016200066e565b5060008051602062001e1583398151915290565b620008b362000c3c565b620008bf600062000e47565b565b60655433906001600160a01b03168114620009315760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b60648201526084016200066e565b620007148162000e47565b6200094662000c3c565b6001600160a01b0381166200096e57604051637827912560e01b815260040160405180910390fd5b60fd80546001600160a01b0319166001600160a01b0383169081179091556040517f2b022c4b56a6b8adae778a141c22e90aead2a46d1655c4ef94ced0acfae9ed2590600090a250565b620009c262000c3c565b606580546001600160a01b0383166001600160a01b03199091168117909155620009f46033546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b600054610100900460ff161580801562000a4d5750600054600160ff909116105b8062000a695750303b15801562000a69575060005460ff166001145b62000ace5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016200066e565b6000805460ff19166001179055801562000af2576000805461ff0019166101001790555b6001600160a01b03851662000b1a57604051637827912560e01b815260040160405180910390fd5b6001600160a01b03841662000b4257604051637827912560e01b815260040160405180910390fd5b6001600160a01b03831662000b6a57604051637827912560e01b815260040160405180910390fd5b6001600160a01b03821662000b9257604051637827912560e01b815260040160405180910390fd5b60fc80546001600160a01b038086166001600160a01b03199283161790925560fd805487841690831617905560fb80549288169290911691909117905562000bd962000e62565b62000be362000e96565b62000bee8262000e47565b801562000c35576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b6033546001600160a01b03163314620008bf5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016200066e565b62000ca262000c3c565b6001600160a01b0381166200071457604051637827912560e01b815260040160405180910390fd5b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161562000d055762000d008362000ec0565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801562000d62575060408051601f3d908101601f1916820190925262000d5f91810190620013e4565b60015b62000dc75760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016200066e565b60008051602062001e15833981519152811462000e395760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016200066e565b5062000d0083838362000f5f565b606580546001600160a01b0319169055620007148162000f90565b600054610100900460ff1662000e8c5760405162461bcd60e51b81526004016200066e9062001496565b620008bf62000fe2565b600054610100900460ff16620008bf5760405162461bcd60e51b81526004016200066e9062001496565b6001600160a01b0381163b62000f2f5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016200066e565b60008051602062001e1583398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b62000f6a8362001017565b60008251118062000f785750805b1562000d005762000f8a838362001059565b50505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166200100c5760405162461bcd60e51b81526004016200066e9062001496565b620008bf3362000e47565b620010228162000ec0565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606062001081838360405180606001604052806027815260200162001e356027913962001088565b9392505050565b6060600080856001600160a01b031685604051620010a79190620014e1565b600060405180830381855af49150503d8060008114620010e4576040519150601f19603f3d011682016040523d82523d6000602084013e620010e9565b606091505b5091509150620010fc8683838762001106565b9695505050505050565b606083156200117a57825160000362001172576001600160a01b0385163b620011725760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016200066e565b508162001186565b6200118683836200118e565b949350505050565b8151156200119f5781518083602001fd5b8060405162461bcd60e51b81526004016200066e9190620014ff565b610900806200151583390190565b6001600160a01b03811681146200071457600080fd5b600060208284031215620011f257600080fd5b81356200108181620011c9565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156200122957600080fd5b82356200123681620011c9565b9150602083013567ffffffffffffffff808211156200125457600080fd5b818501915085601f8301126200126957600080fd5b8135818111156200127e576200127e620011ff565b604051601f8201601f19908116603f01168101908382118183101715620012a957620012a9620011ff565b81604052828152886020848701011115620012c357600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60008060008060808587031215620012fc57600080fd5b84356200130981620011c9565b935060208501356200131b81620011c9565b925060408501356200132d81620011c9565b915060608501356200133f81620011c9565b939692955090935050565b60005b83811015620013675781810151838201526020016200134d565b50506000910152565b600081518084526200138a8160208601602086016200134a565b601f01601f19169290920160200192915050565b6001600160a01b0383168152604060208201819052600090620011869083018462001370565b600060208284031215620013d757600080fd5b81516200108181620011c9565b600060208284031215620013f757600080fd5b5051919050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008251620014f58184602087016200134a565b9190910192915050565b6020815260006200108160208301846200137056fe60806040526040516109003803806109008339810160408190526100229161045b565b61002e82826000610035565b5050610585565b61003e83610100565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a260008251118061007f5750805b156100fb576100f9836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e9919061051b565b836102a360201b6100291760201c565b505b505050565b610113816102cf60201b6100551760201c565b6101725760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b6101e6816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d7919061051b565b6102cf60201b6100551760201c565b61024b5760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b6064820152608401610169565b806102827fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5060001b6102de60201b6100641760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606102c883836040518060600160405280602781526020016108d9602791396102e1565b9392505050565b6001600160a01b03163b151590565b90565b6060600080856001600160a01b0316856040516102fe9190610536565b600060405180830381855af49150503d8060008114610339576040519150601f19603f3d011682016040523d82523d6000602084013e61033e565b606091505b5090925090506103508683838761035a565b9695505050505050565b606083156103c95782516000036103c2576001600160a01b0385163b6103c25760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610169565b50816103d3565b6103d383836103db565b949350505050565b8151156103eb5781518083602001fd5b8060405162461bcd60e51b81526004016101699190610552565b80516001600160a01b038116811461041c57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561045257818101518382015260200161043a565b50506000910152565b6000806040838503121561046e57600080fd5b61047783610405565b60208401519092506001600160401b038082111561049457600080fd5b818501915085601f8301126104a857600080fd5b8151818111156104ba576104ba610421565b604051601f8201601f19908116603f011681019083821181831017156104e2576104e2610421565b816040528281528860208487010111156104fb57600080fd5b61050c836020830160208801610437565b80955050505050509250929050565b60006020828403121561052d57600080fd5b6102c882610405565b60008251610548818460208701610437565b9190910192915050565b6020815260008251806020840152610571816040850160208701610437565b601f01601f19169190910160400192915050565b610345806105946000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610067565b610100565b565b606061004e83836040518060600160405280602781526020016102e960279139610124565b9392505050565b6001600160a01b03163b151590565b90565b600061009a7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fb919061024c565b905090565b3660008037600080366000845af43d6000803e80801561011f573d6000f35b3d6000fd5b6060600080856001600160a01b0316856040516101419190610299565b600060405180830381855af49150503d806000811461017c576040519150601f19603f3d011682016040523d82523d6000602084013e610181565b606091505b50915091506101928683838761019c565b9695505050505050565b60608315610210578251600003610209576001600160a01b0385163b6102095760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064015b60405180910390fd5b508161021a565b61021a8383610222565b949350505050565b8151156102325781518083602001fd5b8060405162461bcd60e51b815260040161020091906102b5565b60006020828403121561025e57600080fd5b81516001600160a01b038116811461004e57600080fd5b60005b83811015610290578181015183820152602001610278565b50506000910152565b600082516102ab818460208701610275565b9190910192915050565b60208152600082518060208401526102d4816040850160208701610275565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212207069cec73b20ad8e8ba98957b0265504213aeedde496b709890241873a5a162964736f6c63430008120033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220c7d5b064565f7f6be53a2c7e0aa01d010c54f337135c13eaefde54c3280f43c164736f6c63430008120033",
    "sourceMap": "1050:4926:108:-:0;;;1332:4:46;1289:48;;1839:47:108;;;;;;;;;-1:-1:-1;1859:22:108;:20;:22::i;:::-;1050:4926;;5939:280:45;6007:13;;;;;;;6006:14;5998:66;;;;-1:-1:-1;;;5998:66:45;;216:2:118;5998:66:45;;;198:21:118;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:118;;;338:37;392:19;;5998:66:45;;;;;;;;6078:12;;6094:15;6078:12;;;:31;6074:139;;6125:12;:30;;-1:-1:-1;;6125:30:45;6140:15;6125:30;;;;;;6174:28;;564:36:118;;;6174:28:45;;552:2:118;537:18;6174:28:45;;;;;;;6074:139;5939:280::o;422:184:118:-;1050:4926:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405260043610620000fb5760003560e01c806379ba50971162000095578063c8cb01d81162000060578063c8cb01d814620001cc578063e30c39781462000281578063f2fde38b14620002a1578063f8c8765e14620002c657600080fd5b806379ba509714620002045780637ed155de146200021c5780638da5cb5b14620002415780639f997eb0146200026157600080fd5b80634f1ef28611620000d65780634f1ef286146200018e57806352d1902d14620001a55780635c60da1b14620001cc578063715018a614620001ec57600080fd5b80631249ed2314620001005780632c74084414620001425780633659cfe61462000169575b600080fd5b3480156200010d57600080fd5b50620001256200011f366004620011df565b620002eb565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156200014f57600080fd5b506200016762000161366004620011df565b620005a7565b005b3480156200017657600080fd5b506200016762000188366004620011df565b62000623565b620001676200019f36600462001215565b62000717565b348015620001b257600080fd5b50620001bd620007f3565b60405190815260200162000139565b348015620001d957600080fd5b5060fd546001600160a01b031662000125565b348015620001f957600080fd5b5062000167620008a9565b3480156200021157600080fd5b5062000167620008c1565b3480156200022957600080fd5b50620001676200023b366004620011df565b6200093c565b3480156200024e57600080fd5b506033546001600160a01b031662000125565b3480156200026e57600080fd5b5060fb546001600160a01b031662000125565b3480156200028e57600080fd5b506065546001600160a01b031662000125565b348015620002ae57600080fd5b5062000167620002c0366004620011df565b620009b8565b348015620002d357600080fd5b5062000167620002e5366004620012e5565b62000a2c565b60fb546000906001600160a01b039081169083166200031d57604051637827912560e01b815260040160405180910390fd5b604080516001600160a01b038581166024830152831660448201523360648083019190915282518083039091018152608490910182526020810180516001600160e01b031663c0c53b8b60e01b179052905160009130916200037f90620011bb565b6200038c9291906200139e565b604051809103906000f080158015620003a9573d6000803e3d6000fd5b5060fc5460405163399fe9a160e11b81526001600160a01b0380841660048301529293506000929091169063733fd342906024016020604051808303816000875af1158015620003fd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004239190620013c4565b6040516376a250a760e01b81526001600160a01b03878116600483015284811660248301528083166044830152919250908416906376a250a790606401600060405180830381600087803b1580156200047b57600080fd5b505af115801562000490573d6000803e3d6000fd5b505050506000836001600160a01b03166366951bc16040518163ffffffff1660e01b8152600401602060405180830381865afa158015620004d5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004fb9190620013e4565b604051632f2ff15d60e01b8152600481018290526001600160a01b03858116602483015291925090851690632f2ff15d90604401600060405180830381600087803b1580156200054a57600080fd5b505af11580156200055f573d6000803e3d6000fd5b50506040516001600160a01b0380871693508916915033907f4a2dd45842063d5cdb0ba4ccb3b677af33701f706cdfa90ddf5fe291e6f9987890600090a45090949350505050565b620005b162000c3c565b6001600160a01b038116620005d957604051637827912560e01b815260040160405180910390fd5b60fb80546001600160a01b0319166001600160a01b0383169081179091556040517fa5aa720af23083cb0a3e835e4c10666ab0ac4eee7a4396df3ec359de6fc53abf90600090a250565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003620006775760405162461bcd60e51b81526004016200066e90620013fe565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316620006c260008051602062001e15833981519152546001600160a01b031690565b6001600160a01b031614620006eb5760405162461bcd60e51b81526004016200066e906200144a565b620006f68162000c98565b60408051600080825260208201909252620007149183919062000cca565b50565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003620007625760405162461bcd60e51b81526004016200066e90620013fe565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316620007ad60008051602062001e15833981519152546001600160a01b031690565b6001600160a01b031614620007d65760405162461bcd60e51b81526004016200066e906200144a565b620007e18262000c98565b620007ef8282600162000cca565b5050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614620008955760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016200066e565b5060008051602062001e1583398151915290565b620008b362000c3c565b620008bf600062000e47565b565b60655433906001600160a01b03168114620009315760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b60648201526084016200066e565b620007148162000e47565b6200094662000c3c565b6001600160a01b0381166200096e57604051637827912560e01b815260040160405180910390fd5b60fd80546001600160a01b0319166001600160a01b0383169081179091556040517f2b022c4b56a6b8adae778a141c22e90aead2a46d1655c4ef94ced0acfae9ed2590600090a250565b620009c262000c3c565b606580546001600160a01b0383166001600160a01b03199091168117909155620009f46033546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b600054610100900460ff161580801562000a4d5750600054600160ff909116105b8062000a695750303b15801562000a69575060005460ff166001145b62000ace5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016200066e565b6000805460ff19166001179055801562000af2576000805461ff0019166101001790555b6001600160a01b03851662000b1a57604051637827912560e01b815260040160405180910390fd5b6001600160a01b03841662000b4257604051637827912560e01b815260040160405180910390fd5b6001600160a01b03831662000b6a57604051637827912560e01b815260040160405180910390fd5b6001600160a01b03821662000b9257604051637827912560e01b815260040160405180910390fd5b60fc80546001600160a01b038086166001600160a01b03199283161790925560fd805487841690831617905560fb80549288169290911691909117905562000bd962000e62565b62000be362000e96565b62000bee8262000e47565b801562000c35576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b6033546001600160a01b03163314620008bf5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016200066e565b62000ca262000c3c565b6001600160a01b0381166200071457604051637827912560e01b815260040160405180910390fd5b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161562000d055762000d008362000ec0565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801562000d62575060408051601f3d908101601f1916820190925262000d5f91810190620013e4565b60015b62000dc75760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016200066e565b60008051602062001e15833981519152811462000e395760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016200066e565b5062000d0083838362000f5f565b606580546001600160a01b0319169055620007148162000f90565b600054610100900460ff1662000e8c5760405162461bcd60e51b81526004016200066e9062001496565b620008bf62000fe2565b600054610100900460ff16620008bf5760405162461bcd60e51b81526004016200066e9062001496565b6001600160a01b0381163b62000f2f5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016200066e565b60008051602062001e1583398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b62000f6a8362001017565b60008251118062000f785750805b1562000d005762000f8a838362001059565b50505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166200100c5760405162461bcd60e51b81526004016200066e9062001496565b620008bf3362000e47565b620010228162000ec0565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606062001081838360405180606001604052806027815260200162001e356027913962001088565b9392505050565b6060600080856001600160a01b031685604051620010a79190620014e1565b600060405180830381855af49150503d8060008114620010e4576040519150601f19603f3d011682016040523d82523d6000602084013e620010e9565b606091505b5091509150620010fc8683838762001106565b9695505050505050565b606083156200117a57825160000362001172576001600160a01b0385163b620011725760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016200066e565b508162001186565b6200118683836200118e565b949350505050565b8151156200119f5781518083602001fd5b8060405162461bcd60e51b81526004016200066e9190620014ff565b610900806200151583390190565b6001600160a01b03811681146200071457600080fd5b600060208284031215620011f257600080fd5b81356200108181620011c9565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156200122957600080fd5b82356200123681620011c9565b9150602083013567ffffffffffffffff808211156200125457600080fd5b818501915085601f8301126200126957600080fd5b8135818111156200127e576200127e620011ff565b604051601f8201601f19908116603f01168101908382118183101715620012a957620012a9620011ff565b81604052828152886020848701011115620012c357600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60008060008060808587031215620012fc57600080fd5b84356200130981620011c9565b935060208501356200131b81620011c9565b925060408501356200132d81620011c9565b915060608501356200133f81620011c9565b939692955090935050565b60005b83811015620013675781810151838201526020016200134d565b50506000910152565b600081518084526200138a8160208601602086016200134a565b601f01601f19169290920160200192915050565b6001600160a01b0383168152604060208201819052600090620011869083018462001370565b600060208284031215620013d757600080fd5b81516200108181620011c9565b600060208284031215620013f757600080fd5b5051919050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008251620014f58184602087016200134a565b9190910192915050565b6020815260006200108160208301846200137056fe60806040526040516109003803806109008339810160408190526100229161045b565b61002e82826000610035565b5050610585565b61003e83610100565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a260008251118061007f5750805b156100fb576100f9836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e9919061051b565b836102a360201b6100291760201c565b505b505050565b610113816102cf60201b6100551760201c565b6101725760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b6101e6816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d7919061051b565b6102cf60201b6100551760201c565b61024b5760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b6064820152608401610169565b806102827fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5060001b6102de60201b6100641760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606102c883836040518060600160405280602781526020016108d9602791396102e1565b9392505050565b6001600160a01b03163b151590565b90565b6060600080856001600160a01b0316856040516102fe9190610536565b600060405180830381855af49150503d8060008114610339576040519150601f19603f3d011682016040523d82523d6000602084013e61033e565b606091505b5090925090506103508683838761035a565b9695505050505050565b606083156103c95782516000036103c2576001600160a01b0385163b6103c25760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610169565b50816103d3565b6103d383836103db565b949350505050565b8151156103eb5781518083602001fd5b8060405162461bcd60e51b81526004016101699190610552565b80516001600160a01b038116811461041c57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561045257818101518382015260200161043a565b50506000910152565b6000806040838503121561046e57600080fd5b61047783610405565b60208401519092506001600160401b038082111561049457600080fd5b818501915085601f8301126104a857600080fd5b8151818111156104ba576104ba610421565b604051601f8201601f19908116603f011681019083821181831017156104e2576104e2610421565b816040528281528860208487010111156104fb57600080fd5b61050c836020830160208801610437565b80955050505050509250929050565b60006020828403121561052d57600080fd5b6102c882610405565b60008251610548818460208701610437565b9190910192915050565b6020815260008251806020840152610571816040850160208701610437565b601f01601f19169190910160400192915050565b610345806105946000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610067565b610100565b565b606061004e83836040518060600160405280602781526020016102e960279139610124565b9392505050565b6001600160a01b03163b151590565b90565b600061009a7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fb919061024c565b905090565b3660008037600080366000845af43d6000803e80801561011f573d6000f35b3d6000fd5b6060600080856001600160a01b0316856040516101419190610299565b600060405180830381855af49150503d806000811461017c576040519150601f19603f3d011682016040523d82523d6000602084013e610181565b606091505b50915091506101928683838761019c565b9695505050505050565b60608315610210578251600003610209576001600160a01b0385163b6102095760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064015b60405180910390fd5b508161021a565b61021a8383610222565b949350505050565b8151156102325781518083602001fd5b8060405162461bcd60e51b815260040161020091906102b5565b60006020828403121561025e57600080fd5b81516001600160a01b038116811461004e57600080fd5b60005b83811015610290578181015183820152602001610278565b50506000910152565b600082516102ab818460208701610275565b9190910192915050565b60208152600082518060208401526102d4816040850160208701610275565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212207069cec73b20ad8e8ba98957b0265504213aeedde496b709890241873a5a162964736f6c63430008120033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220c7d5b064565f7f6be53a2c7e0aa01d010c54f337135c13eaefde54c3280f43c164736f6c63430008120033",
    "sourceMap": "1050:4926:108:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4522:804;;;;;;;;;;-1:-1:-1;4522:804:108;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;566:32:118;;;548:51;;536:2;521:18;4522:804:108;;;;;;;;3535:264;;;;;;;;;;-1:-1:-1;3535:264:108;;;;;:::i;:::-;;:::i;:::-;;3387:195:46;;;;;;;;;;-1:-1:-1;3387:195:46;;;;;:::i;:::-;;:::i;3901:220::-;;;;;;:::i;:::-;;:::i;3006:131::-;;;;;;;;;;;;;:::i;:::-;;;1949:25:118;;;1937:2;1922:18;3006:131:46;1803:177:118;5879:95:108;;;;;;;;;;-1:-1:-1;5950:19:108;;-1:-1:-1;;;;;5950:19:108;5879:95;;2064:101:39;;;;;;;;;;;;;:::i;2010:212:38:-;;;;;;;;;;;;;:::i;3904:270:108:-;;;;;;;;;;-1:-1:-1;3904:270:108;;;;;:::i;:::-;;:::i;1441:85:39:-;;;;;;;;;;-1:-1:-1;1513:6:39;;-1:-1:-1;;;;;1513:6:39;1441:85;;5576:111:108;;;;;;;;;;-1:-1:-1;5666:15:108;;-1:-1:-1;;;;;5666:15:108;5576:111;;1123:99:38;;;;;;;;;;-1:-1:-1;1202:13:38;;-1:-1:-1;;;;;1202:13:38;1123:99;;1415:178;;;;;;;;;;-1:-1:-1;1415:178:38;;;;;:::i;:::-;;:::i;2091:728:108:-;;;;;;;;;;-1:-1:-1;2091:728:108;;;;;:::i;:::-;;:::i;4522:804::-;4623:15;;4576:7;;-1:-1:-1;;;;;4623:15:108;;;;4648:19;;4644:56;;4676:24;;-1:-1:-1;;;4676:24:108;;;;;;;;;;;4644:56;4775:93;;;-1:-1:-1;;;;;2919:15:118;;;4775:93:108;;;2901:34:118;2971:15;;2951:18;;;2944:43;4857:10:108;3003:18:118;;;;2996:43;;;;4775:93:108;;;;;;;;;;2836:18:118;;;;4775:93:108;;;;;;;-1:-1:-1;;;;;4775:93:108;-1:-1:-1;;;4775:93:108;;;4731:143;;-1:-1:-1;;4762:4:108;;4731:143;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4901:17:108;;:55;;-1:-1:-1;;;4901:55:108;;-1:-1:-1;;;;;566:32:118;;;4901:55:108;;;548:51:118;4706:168:108;;-1:-1:-1;4880:18:108;;4901:17;;;;:34;;521:18:118;;4901:55:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4962:68;;-1:-1:-1;;;4962:68:108;;-1:-1:-1;;;;;2919:15:118;;;4962:68:108;;;2901:34:118;2971:15;;;2951:18;;;2944:43;3023:15;;;3003:18;;;2996:43;4880:76:108;;-1:-1:-1;4962:28:108;;;;;;2836:18:118;;4962:68:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5037:22;5062:8;-1:-1:-1;;;;;5062:33:108;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5104:91;;-1:-1:-1;;;5104:91:108;;;;;4526:25:118;;;-1:-1:-1;;;;;4587:32:118;;;4567:18;;;4560:60;5037::108;;-1:-1:-1;5104:54:108;;;;;;4499:18:118;;5104:91:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5207:81:108;;-1:-1:-1;;;;;5207:81:108;;;;-1:-1:-1;5207:81:108;;;-1:-1:-1;5249:10:108;;5207:81;;;;;-1:-1:-1;5310:10:108;;4522:804;-1:-1:-1;;;;4522:804:108:o;3535:264::-;1334:13:39;:11;:13::i;:::-;-1:-1:-1;;;;;3618:30:108;::::1;3614:67;;3657:24;;-1:-1:-1::0;;;3657:24:108::1;;;;;;;;;;;3614:67;3687:15;:56:::0;;-1:-1:-1;;;;;;3687:56:108::1;-1:-1:-1::0;;;;;3687:56:108;::::1;::::0;;::::1;::::0;;;3754:40:::1;::::0;::::1;::::0;-1:-1:-1;;3754:40:108::1;3535:264:::0;:::o;3387:195:46:-;-1:-1:-1;;;;;1898:6:46;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:46;;;;;;;:::i;:::-;;;;;;;;;1995:6;-1:-1:-1;;;;;1971:30:46;:20;-1:-1:-1;;;;;;;;;;;1536:65:43;-1:-1:-1;;;;;1536:65:43;;1457:151;1971:20:46;-1:-1:-1;;;;;1971:30:46;;1963:87;;;;-1:-1:-1;;;1963:87:46;;;;;;;:::i;:::-;3468:36:::1;3486:17;3468;:36::i;:::-;3555:12;::::0;;3565:1:::1;3555:12:::0;;;::::1;::::0;::::1;::::0;;;3514:61:::1;::::0;3536:17;;3555:12;3514:21:::1;:61::i;:::-;3387:195:::0;:::o;3901:220::-;-1:-1:-1;;;;;1898:6:46;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:46;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:46;:20;-1:-1:-1;;;;;;;;;;;1536:65:43;-1:-1:-1;;;;;1536:65:43;;1457:151;1971:20:46;-1:-1:-1;;;;;1971:30:46;;1963:87;;;;-1:-1:-1;;;1963:87:46;;;;;;;:::i;:::-;4016:36:::1;4034:17;4016;:36::i;:::-;4062:52;4084:17;4103:4;4109;4062:21;:52::i;:::-;3901:220:::0;;:::o;3006:131::-;3084:7;2324:4;-1:-1:-1;;;;;2333:6:46;2316:23;;2308:92;;;;-1:-1:-1;;;2308:92:46;;5659:2:118;2308:92:46;;;5641:21:118;5698:2;5678:18;;;5671:30;5737:34;5717:18;;;5710:62;5808:26;5788:18;;;5781:54;5852:19;;2308:92:46;5457:420:118;2308:92:46;-1:-1:-1;;;;;;;;;;;;3006:131:46;:::o;2064:101:39:-;1334:13;:11;:13::i;:::-;2128:30:::1;2155:1;2128:18;:30::i;:::-;2064:101::o:0;2010:212:38:-;1202:13;;929:10:57;;-1:-1:-1;;;;;1202:13:38;2109:24;;2101:78;;;;-1:-1:-1;;;2101:78:38;;6084:2:118;2101:78:38;;;6066:21:118;6123:2;6103:18;;;6096:30;6162:34;6142:18;;;6135:62;-1:-1:-1;;;6213:18:118;;;6206:39;6262:19;;2101:78:38;5882:405:118;2101:78:38;2189:26;2208:6;2189:18;:26::i;3904:270:108:-;1334:13:39;:11;:13::i;:::-;-1:-1:-1;;;;;3995:34:108;::::1;3991:71;;4038:24;;-1:-1:-1::0;;;4038:24:108::1;;;;;;;;;;;3991:71;4068:19;:42:::0;;-1:-1:-1;;;;;;4068:42:108::1;-1:-1:-1::0;;;;;4068:42:108;::::1;::::0;;::::1;::::0;;;4121:48:::1;::::0;::::1;::::0;-1:-1:-1;;4121:48:108::1;3904:270:::0;:::o;1415:178:38:-;1334:13:39;:11;:13::i;:::-;1504::38::1;:24:::0;;-1:-1:-1;;;;;1504:24:38;::::1;-1:-1:-1::0;;;;;;1504:24:38;;::::1;::::0;::::1;::::0;;;1568:7:::1;1513:6:39::0;;-1:-1:-1;;;;;1513:6:39;;1441:85;1568:7:38::1;-1:-1:-1::0;;;;;1543:43:38::1;;;;;;;;;;;1415:178:::0;:::o;2091:728:108:-;3279:19:45;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:45;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:45;1713:19:55;:23;;;3387:66:45;;-1:-1:-1;3436:12:45;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:45;;6494:2:118;3325:201:45;;;6476:21:118;6533:2;6513:18;;;6506:30;6572:34;6552:18;;;6545:62;-1:-1:-1;;;6623:18:118;;;6616:44;6677:19;;3325:201:45;6292:410:118;3325:201:45;3536:12;:16;;-1:-1:-1;;3536:16:45;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:45;;;;;3562:65;-1:-1:-1;;;;;2265:30:108;::::1;2261:67;;2304:24;;-1:-1:-1::0;;;2304:24:108::1;;;;;;;;;;;2261:67;-1:-1:-1::0;;;;;2338:34:108;::::1;2334:71;;2381:24;;-1:-1:-1::0;;;2381:24:108::1;;;;;;;;;;;2334:71;-1:-1:-1::0;;;;;2415:32:108;::::1;2411:69;;2456:24;;-1:-1:-1::0;;;2456:24:108::1;;;;;;;;;;;2411:69;-1:-1:-1::0;;;;;2490:23:108;::::1;2486:60;;2522:24;;-1:-1:-1::0;;;2522:24:108::1;;;;;;;;;;;2486:60;2552:17;:65:::0;;-1:-1:-1;;;;;2552:65:108;;::::1;-1:-1:-1::0;;;;;;2552:65:108;;::::1;;::::0;;;2623:19:::1;:42:::0;;;;::::1;::::0;;::::1;;::::0;;2671:15:::1;:56:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;2733:16:::1;:14;:16::i;:::-;2755:24;:22;:24::i;:::-;2785:29;2804:9;2785:18;:29::i;:::-;3651:14:45::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:45;;;3721:14;;-1:-1:-1;6859:36:118;;3721:14:45;;6847:2:118;6832:18;3721:14:45;;;;;;;3647:99;3269:483;2091:728:108;;;;:::o;1599:130:39:-;1513:6;;-1:-1:-1;;;;;1513:6:39;929:10:57;1662:23:39;1654:68;;;;-1:-1:-1;;;1654:68:39;;7108:2:118;1654:68:39;;;7090:21:118;;;7127:18;;;7120:30;7186:34;7166:18;;;7159:62;7238:18;;1654:68:39;6906:356:118;3066:157:108;1334:13:39;:11;:13::i;:::-;-1:-1:-1;;;;;3156:29:108;::::1;3152:66;;3194:24;;-1:-1:-1::0;;;3194:24:108::1;;;;;;;;;;;2820:944:43::0;971:66;3236:59;;;3232:526;;;3311:37;3330:17;3311:18;:37::i;:::-;2820:944;;;:::o;3232:526::-;3412:17;-1:-1:-1;;;;;3383:61:43;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3383:63:43;;;;;;;;-1:-1:-1;;3383:63:43;;;;;;;;;;;;:::i;:::-;;;3379:302;;3610:56;;-1:-1:-1;;;3610:56:43;;7469:2:118;3610:56:43;;;7451:21:118;7508:2;7488:18;;;7481:30;7547:34;7527:18;;;7520:62;-1:-1:-1;;;7598:18:118;;;7591:44;7652:19;;3610:56:43;7267:410:118;3379:302:43;-1:-1:-1;;;;;;;;;;;3496:28:43;;3488:82;;;;-1:-1:-1;;;3488:82:43;;7884:2:118;3488:82:43;;;7866:21:118;7923:2;7903:18;;;7896:30;7962:34;7942:18;;;7935:62;-1:-1:-1;;;8013:18:118;;;8006:39;8062:19;;3488:82:43;7682:405:118;3488:82:43;3447:138;3694:53;3712:17;3731:4;3737:9;3694:17;:53::i;1777:153:38:-;1866:13;1859:20;;-1:-1:-1;;;;;;1859:20:38;;;1889:34;1914:8;1889:24;:34::i;1003:95:39:-;5374:13:45;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:45;;;;;;;:::i;:::-;1065:26:39::1;:24;:26::i;1042:67:46:-:0;5374:13:45;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:45;;;;;;;:::i;1699:281:43:-;-1:-1:-1;;;;;1713:19:55;;;1772:106:43;;;;-1:-1:-1;;;1772:106:43;;8706:2:118;1772:106:43;;;8688:21:118;8745:2;8725:18;;;8718:30;8784:34;8764:18;;;8757:62;-1:-1:-1;;;8835:18:118;;;8828:43;8888:19;;1772:106:43;8504:409:118;1772:106:43;-1:-1:-1;;;;;;;;;;;1888:85:43;;-1:-1:-1;;;;;;1888:85:43;-1:-1:-1;;;;;1888:85:43;;;;;;;;;;1699:281::o;2372:276::-;2480:29;2491:17;2480:10;:29::i;:::-;2537:1;2523:4;:11;:15;:28;;;;2542:9;2523:28;2519:123;;;2567:64;2607:17;2626:4;2567:39;:64::i;:::-;;2372:276;;;:::o;2666:187:39:-;2758:6;;;-1:-1:-1;;;;;2774:17:39;;;-1:-1:-1;;;;;;2774:17:39;;;;;;;2806:40;;2758:6;;;2774:17;2758:6;;2806:40;;2739:16;;2806:40;2729:124;2666:187;:::o;1104:111::-;5374:13:45;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:45;;;;;;;:::i;:::-;1176:32:39::1;929:10:57::0;1176:18:39::1;:32::i;2086:152:43:-:0;2152:37;2171:17;2152:18;:37::i;:::-;2204:27;;-1:-1:-1;;;;;2204:27:43;;;;;;;;2086:152;:::o;6685:198:55:-;6768:12;6799:77;6820:6;6828:4;6799:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6792:84;6685:198;-1:-1:-1;;;6685:198:55:o;7069:325::-;7210:12;7235;7249:23;7276:6;-1:-1:-1;;;;;7276:19:55;7296:4;7276:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7234:67;;;;7318:69;7345:6;7353:7;7362:10;7374:12;7318:26;:69::i;:::-;7311:76;7069:325;-1:-1:-1;;;;;;7069:325:55:o;7682:628::-;7862:12;7890:7;7886:418;;;7917:10;:17;7938:1;7917:22;7913:286;;-1:-1:-1;;;;;1713:19:55;;;8124:60;;;;-1:-1:-1;;;8124:60:55;;9412:2:118;8124:60:55;;;9394:21:118;9451:2;9431:18;;;9424:30;9490:31;9470:18;;;9463:59;9539:18;;8124:60:55;9210:353:118;8124:60:55;-1:-1:-1;8219:10:55;8212:17;;7886:418;8260:33;8268:10;8280:12;8260:7;:33::i;:::-;7682:628;;;;;;:::o;8832:540::-;8991:17;;:21;8987:379;;9219:10;9213:17;9275:15;9262:10;9258:2;9254:19;9247:44;8987:379;9342:12;9335:20;;-1:-1:-1;;;9335:20:55;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;:::o;14:131:118:-;-1:-1:-1;;;;;89:31:118;;79:42;;69:70;;135:1;132;125:12;150:247;209:6;262:2;250:9;241:7;237:23;233:32;230:52;;;278:1;275;268:12;230:52;317:9;304:23;336:31;361:5;336:31;:::i;610:127::-;671:10;666:3;662:20;659:1;652:31;702:4;699:1;692:15;726:4;723:1;716:15;742:1056;819:6;827;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:31;979:5;954:31;:::i;:::-;1004:5;-1:-1:-1;1060:2:118;1045:18;;1032:32;1083:18;1113:14;;;1110:34;;;1140:1;1137;1130:12;1110:34;1178:6;1167:9;1163:22;1153:32;;1223:7;1216:4;1212:2;1208:13;1204:27;1194:55;;1245:1;1242;1235:12;1194:55;1281:2;1268:16;1303:2;1299;1296:10;1293:36;;;1309:18;;:::i;:::-;1384:2;1378:9;1352:2;1438:13;;-1:-1:-1;;1434:22:118;;;1458:2;1430:31;1426:40;1414:53;;;1482:18;;;1502:22;;;1479:46;1476:72;;;1528:18;;:::i;:::-;1568:10;1564:2;1557:22;1603:2;1595:6;1588:18;1643:7;1638:2;1633;1629;1625:11;1621:20;1618:33;1615:53;;;1664:1;1661;1654:12;1615:53;1720:2;1715;1711;1707:11;1702:2;1694:6;1690:15;1677:46;1765:1;1760:2;1755;1747:6;1743:15;1739:24;1732:35;1786:6;1776:16;;;;;;;742:1056;;;;;:::o;1985:671::-;2071:6;2079;2087;2095;2148:3;2136:9;2127:7;2123:23;2119:33;2116:53;;;2165:1;2162;2155:12;2116:53;2204:9;2191:23;2223:31;2248:5;2223:31;:::i;:::-;2273:5;-1:-1:-1;2330:2:118;2315:18;;2302:32;2343:33;2302:32;2343:33;:::i;:::-;2395:7;-1:-1:-1;2454:2:118;2439:18;;2426:32;2467:33;2426:32;2467:33;:::i;:::-;2519:7;-1:-1:-1;2578:2:118;2563:18;;2550:32;2591:33;2550:32;2591:33;:::i;:::-;1985:671;;;;-1:-1:-1;1985:671:118;;-1:-1:-1;;1985:671:118:o;3050:250::-;3135:1;3145:113;3159:6;3156:1;3153:13;3145:113;;;3235:11;;;3229:18;3216:11;;;3209:39;3181:2;3174:10;3145:113;;;-1:-1:-1;;3292:1:118;3274:16;;3267:27;3050:250::o;3305:270::-;3346:3;3384:5;3378:12;3411:6;3406:3;3399:19;3427:76;3496:6;3489:4;3484:3;3480:14;3473:4;3466:5;3462:16;3427:76;:::i;:::-;3557:2;3536:15;-1:-1:-1;;3532:29:118;3523:39;;;;3564:4;3519:50;;3305:270;-1:-1:-1;;3305:270:118:o;3580:314::-;-1:-1:-1;;;;;3755:32:118;;3737:51;;3824:2;3819;3804:18;;3797:30;;;-1:-1:-1;;3844:44:118;;3869:18;;3861:6;3844:44;:::i;3899:259::-;3977:6;4030:2;4018:9;4009:7;4005:23;4001:32;3998:52;;;4046:1;4043;4036:12;3998:52;4078:9;4072:16;4097:31;4122:5;4097:31;:::i;4163:184::-;4233:6;4286:2;4274:9;4265:7;4261:23;4257:32;4254:52;;;4302:1;4299;4292:12;4254:52;-1:-1:-1;4325:16:118;;4163:184;-1:-1:-1;4163:184:118:o;4631:408::-;4833:2;4815:21;;;4872:2;4852:18;;;4845:30;4911:34;4906:2;4891:18;;4884:62;-1:-1:-1;;;4977:2:118;4962:18;;4955:42;5029:3;5014:19;;4631:408::o;5044:::-;5246:2;5228:21;;;5285:2;5265:18;;;5258:30;5324:34;5319:2;5304:18;;5297:62;-1:-1:-1;;;5390:2:118;5375:18;;5368:42;5442:3;5427:19;;5044:408::o;8092:407::-;8294:2;8276:21;;;8333:2;8313:18;;;8306:30;8372:34;8367:2;8352:18;;8345:62;-1:-1:-1;;;8438:2:118;8423:18;;8416:41;8489:3;8474:19;;8092:407::o;8918:287::-;9047:3;9085:6;9079:13;9101:66;9160:6;9155:3;9148:4;9140:6;9136:17;9101:66;:::i;:::-;9183:16;;;;;8918:287;-1:-1:-1;;8918:287:118:o;9568:219::-;9717:2;9706:9;9699:21;9680:4;9737:44;9777:2;9766:9;9762:18;9754:6;9737:44;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "31740": [
        {
          "start": 1581,
          "length": 32
        },
        {
          "start": 1657,
          "length": 32
        },
        {
          "start": 1825,
          "length": 32
        },
        {
          "start": 1892,
          "length": 32
        },
        {
          "start": 2048,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "acceptOwnership()": "79ba5097",
    "deployStaking(address)": "1249ed23",
    "getRareStakingTemplateAddress()": "c8cb01d8",
    "getStakingRegistryAddress()": "9f997eb0",
    "implementation()": "5c60da1b",
    "initialize(address,address,address,address)": "f8c8765e",
    "owner()": "8da5cb5b",
    "pendingOwner()": "e30c3978",
    "proxiableUUID()": "52d1902d",
    "renounceOwnership()": "715018a6",
    "setRareStakingTemplate(address)": "7ed155de",
    "setStakingRegistry(address)": "2c740844",
    "transferOwnership(address)": "f2fde38b",
    "upgradeTo(address)": "3659cfe6",
    "upgradeToAndCall(address,bytes)": "4f1ef286"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ZeroAddressUnsupported\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRareStakingTemplate\",\"type\":\"address\"}],\"name\":\"RareStakingTemplateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_deployingUser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_userStakedOn\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_stakingAddress\",\"type\":\"address\"}],\"name\":\"StakingContractCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newStakingRegistry\",\"type\":\"address\"}],\"name\":\"StakingRegistryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"deployStaking\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRareStakingTemplateAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakingRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingRegistry\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rareStakingTemplate\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardSwapFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rareStakingTemplate\",\"type\":\"address\"}],\"name\":\"setRareStakingTemplate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingRegistry\",\"type\":\"address\"}],\"name\":\"setStakingRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"koloz, charlescrain\",\"details\":\"Made to be used with a UUPS Proxy.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"deployStaking(address)\":{\"details\":\"This contract must have the {STAKING_INFO_SETTER_ROLE} role on {RareStakingRegistry}.\",\"params\":{\"_user\":\"Address of the target to deploy staking contract for.\"},\"returns\":{\"_0\":\"address Address of the staking contract.\"}},\"getRareStakingTemplateAddress()\":{\"returns\":{\"_0\":\"address Address of the staking ERC20 template to be used.\"}},\"getStakingRegistryAddress()\":{\"returns\":{\"_0\":\"address Address of the staking registry contract.\"}},\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setRareStakingTemplate(address)\":{\"details\":\"Requires the caller to be the owner of the contract.\",\"params\":{\"_rareStakingTemplate\":\"Address of the staking ERC20 template.\"}},\"setStakingRegistry(address)\":{\"details\":\"Requires the caller to be the owner of the contract.\",\"params\":{\"_stakingRegistry\":\"Address of the new staking registry contract.\"}},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"title\":\"RarityPoolFactory\",\"version\":1},\"userdoc\":{\"errors\":{\"ZeroAddressUnsupported()\":[{\"notice\":\"Emitted when Zero address provided where it is not allowed.\"}]},\"events\":{\"RareStakingTemplateUpdated(address)\":{\"notice\":\"Emitted via {setRareStakingTemplate} when the staking template is updated.\"},\"StakingContractCreated(address,address,address)\":{\"notice\":\"Emitted via {deployStaking} when a new staking contract is deployed.\"},\"StakingRegistryUpdated(address)\":{\"notice\":\"Emitted via {setStakingRegistry} when the staking registry is updated.\"}},\"kind\":\"user\",\"methods\":{\"deployStaking(address)\":{\"notice\":\"Deploys a staking contract for the supplied target address. Reverts if address exists.\"},\"getRareStakingTemplateAddress()\":{\"notice\":\"Retrieve the currently template of the staking ERC20 contract.\"},\"getStakingRegistryAddress()\":{\"notice\":\"Retrieve the currently used staking registry address.\"},\"setRareStakingTemplate(address)\":{\"notice\":\"Set the rare staking ERC20 template address to be used.\"},\"setStakingRegistry(address)\":{\"notice\":\"Set the staking registry address field to be used.\"}},\"notice\":\"The Staking Factory Contract used to deploy new staking ERC20 contracts pertaining to a user.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/staking/factory/RarityPoolFactory.sol\":\"RarityPoolFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/buffer/=lib/buffer/\",\":@ensdomains/ens-contracts/=lib/ens-contracts/contracts/\",\":@manifoldxyz/libraries-solidity/=lib/royalty-registry-solidity/lib/libraries-solidity/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/royalty-registry-solidity/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/royalty-registry-solidity/lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/contracts/\",\":@uniswap/v3-core/contracts/=lib/v3-core/contracts/\",\":@uniswap/v3-periphery/=lib/v3-periphery/contracts/\",\":arachnid/solidity-stringutils/=lib/solidity-stringutils/\",\":assets/=lib/assets/\",\":aux/=lib/aux/\",\":buffer/=lib/buffer/contracts/\",\":create2-helpers/=lib/royalty-registry-solidity/lib/create2-helpers/\",\":create2-scripts/=lib/royalty-registry-solidity/lib/create2-helpers/script/\",\":ds-test/=lib/ds-test/src/\",\":ens-contracts/=lib/ens-contracts/contracts/\",\":ensdomains/ens-contracts/=lib/ensdomains/ens-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":libraries-solidity/=lib/royalty-registry-solidity/lib/libraries-solidity/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":rareprotocol/assets/=lib/assets/src/\",\":rareprotocol/aux/=lib/aux/src/\",\":royalty-guard/=lib/aux/lib/royalty-guard/src/\",\":royalty-registry-solidity/=lib/royalty-registry-solidity/contracts/\",\":royalty-registry/=lib/royalty-registry-solidity/contracts/\",\":solidity-stringutils/=lib/solidity-stringutils/\",\":solmate/=lib/solmate/src/\",\":v3-core/=lib/v3-core/\",\":v3-periphery/=lib/v3-periphery/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0x84efb8889801b0ac817324aff6acc691d07bbee816b671817132911d287a8c63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec6df2255fadc251ea905043c47bf55170ee6cb5d7ca8b5c8ed54c84eac9d09e\",\"dweb:/ipfs/QmaokWfuL59uarki5yoDGbPzh4cErzEfnAzfmesTNJNXE9\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC20Upgradeable.sol\":{\"keccak256\":\"0xe73087c5001a37cf7186b3709377c7ceb01a0d38fb908723d1464cea66b4958c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b835a1929ca2c7c978085e58f08f48855df8a82ef6a426ac71393cf032ea0fc5\",\"dweb:/ipfs/QmUMXRN9g8u9wm63wc7PMaSs7oG2nqnM1VVvktaWkvF68v\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9826c7edf276ff48b99ee217358393097c30448a71d345d287c2f6961bb1f159\",\"dweb:/ipfs/QmYXBTY9wDvffGU47yMRFJ1NFyKwpbj94VHzRzhsm6R7Gz\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33e8f8d863c6943ea046fcf4972b4e815c04ab06bad195dba1d93f8ebeb8420d\",\"dweb:/ipfs/QmTQzxQTuuzPDk3eqVmYy7hv2RCXM1yt1NtubXpRbzYjaj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xbe62cd20530654aaec3c79b0ac559072f873d75078476fa9d5d53b5056a82e98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15caa92e99e78a08d104db0b87199ee317ad7a9e6874393d89c2fabe793289c2\",\"dweb:/ipfs/QmbSio6ocLhJUaGEferLk82tr1RtJWvZMFLyRmDo7Y23jf\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x0e7c9f782f550d78de6494455a48ef509ece00bed07d74051a27c588a7366803\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ac0362e73a0048bde4dcc1c6e2466fa9fb2bc931b76a28ee8b784407ca5c054\",\"dweb:/ipfs/QmcQuaJwykGpVgd11kZfz2WU5HmWD9rFG5meYR8ATR8mGA\"]},\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol\":{\"keccak256\":\"0x85439e74ab467b6a23d45d32bdc9506cbc3760320289afd605f11638c4138e95\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e18633c182e445895e5a70f9e79f2558d0f6eac86767fd1d90552177df2955c\",\"dweb:/ipfs/QmagUFUJbiNGRGGajg9CF5LPuopc44XSCtcCaYvQasBuX9\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xa6dfb97ce947b7c846b054ee7d45d12383359778f4f3743654ae0a34fa421b26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b97e7e5a77ea47c08ba422291df887eba76c80982f52a6e94a30106e9377a94f\",\"dweb:/ipfs/Qme7N2XRC7mcDxB8wZxNWPk6T8S2qsnmhAqXeUj4CNvsGD\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x20ecf3c67cab5ec0a1d0cc7d980fa236ffdfd8579d8d8b6b89d29329bc6e78ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b52e4581ee6605732661d367845d2c551e0efcf81852f29248aef6d4be0a300b\",\"dweb:/ipfs/QmaLPj2TrVCTPH6D1BEjBVCb9N1dLJ6pTcoJwCmM3HWkfC\"]},\"src/staking/factory/IRarityPoolFactory.sol\":{\"keccak256\":\"0x6694168a9511f905e23d5cbfc6caa7191a53dc6f93829ef6a7b819e50b80c159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6cbf93bab05ae990a8b069efd7478b86e89df83d0dd99885d4b0571db31485f\",\"dweb:/ipfs/QmTAPm3GQWNJEarottuC3TY3pGuWTnuBXe3uSAfMgPgcVq\"]},\"src/staking/factory/IRewardAccumulatorFactory.sol\":{\"keccak256\":\"0x587037557e7ec3e0f122938019383e40e482559a81a64d5762e08e88025f2ee6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c1630e9e02855e65dfa623615e9c1037a9b7da2775c172002213e51bcfc358a1\",\"dweb:/ipfs/QmSUhBht5eMy8xpUKPYegYggpWRV4mtKoNkuTyiHdgVtZA\"]},\"src/staking/factory/RarityPoolFactory.sol\":{\"keccak256\":\"0x1f91aeb2e2911dc030bd65d42b13067855114516d4c06baa3a26a4ab9b27e931\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b492542b2946434e154ac860b2ac45940de8a1e1c519f23bafdd23eff2cd45c\",\"dweb:/ipfs/QmRq85ZfsuFWdKhwkX1gfRFfwAm24ExNJkxh2PNQU3SwuB\"]},\"src/staking/registry/IRareStakingRegistry.sol\":{\"keccak256\":\"0x26458c277ad3b3280dbedd7dbfdfbaa8d2af5f6180959ef732cbcec78b6c2924\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5ba0ab87bedec5547531b79c123233dfcbdf9062a860845d242ae518e6ff8d6\",\"dweb:/ipfs/QmT4kZV7MjKwevN2ABFRD7tNnXRkUxJqNKyrXxthfWC5mR\"]},\"src/staking/token/IRarityPool.sol\":{\"keccak256\":\"0x8a1c433510ef5db8f4a8b2b298c6618a91e974f1ea6c280967c1d3c710e3794b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ade4d1308318773489621961a1b6e2ed76a0c8ed0686225e75100f73df91f14\",\"dweb:/ipfs/Qma1AxmUyfM8CbRN6MnWW6BVpYE9iByWQygCDvG3RunbqS\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.18+commit.87f61d96"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroAddressUnsupported"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousAdmin",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "beacon",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "BeaconUpgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferStarted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRareStakingTemplate",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RareStakingTemplateUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_deployingUser",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_userStakedOn",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_stakingAddress",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "StakingContractCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newStakingRegistry",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "StakingRegistryUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Upgraded",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deployStaking",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRareStakingTemplateAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakingRegistryAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "implementation",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_stakingRegistry",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_rareStakingTemplate",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_rewardSwapFactory",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxiableUUID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_rareStakingTemplate",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRareStakingTemplate"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_stakingRegistry",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setStakingRegistry"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "upgradeTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "upgradeToAndCall"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "acceptOwnership()": {
            "details": "The new owner accepts the ownership transfer."
          },
          "deployStaking(address)": {
            "details": "This contract must have the {STAKING_INFO_SETTER_ROLE} role on {RareStakingRegistry}.",
            "params": {
              "_user": "Address of the target to deploy staking contract for."
            },
            "returns": {
              "_0": "address Address of the staking contract."
            }
          },
          "getRareStakingTemplateAddress()": {
            "returns": {
              "_0": "address Address of the staking ERC20 template to be used."
            }
          },
          "getStakingRegistryAddress()": {
            "returns": {
              "_0": "address Address of the staking registry contract."
            }
          },
          "implementation()": {
            "details": "Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "pendingOwner()": {
            "details": "Returns the address of the pending owner."
          },
          "proxiableUUID()": {
            "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "setRareStakingTemplate(address)": {
            "details": "Requires the caller to be the owner of the contract.",
            "params": {
              "_rareStakingTemplate": "Address of the staking ERC20 template."
            }
          },
          "setStakingRegistry(address)": {
            "details": "Requires the caller to be the owner of the contract.",
            "params": {
              "_stakingRegistry": "Address of the new staking registry contract."
            }
          },
          "transferOwnership(address)": {
            "details": "Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner."
          },
          "upgradeTo(address)": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          },
          "upgradeToAndCall(address,bytes)": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "deployStaking(address)": {
            "notice": "Deploys a staking contract for the supplied target address. Reverts if address exists."
          },
          "getRareStakingTemplateAddress()": {
            "notice": "Retrieve the currently template of the staking ERC20 contract."
          },
          "getStakingRegistryAddress()": {
            "notice": "Retrieve the currently used staking registry address."
          },
          "setRareStakingTemplate(address)": {
            "notice": "Set the rare staking ERC20 template address to be used."
          },
          "setStakingRegistry(address)": {
            "notice": "Set the staking registry address field to be used."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/buffer/=lib/buffer/",
        ":@ensdomains/ens-contracts/=lib/ens-contracts/contracts/",
        ":@manifoldxyz/libraries-solidity/=lib/royalty-registry-solidity/lib/libraries-solidity/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@openzeppelin/contracts-upgradeable/=lib/royalty-registry-solidity/lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/royalty-registry-solidity/lib/openzeppelin-contracts/contracts/",
        ":@uniswap/v3-core/=lib/v3-core/contracts/",
        ":@uniswap/v3-core/contracts/=lib/v3-core/contracts/",
        ":@uniswap/v3-periphery/=lib/v3-periphery/contracts/",
        ":arachnid/solidity-stringutils/=lib/solidity-stringutils/",
        ":assets/=lib/assets/",
        ":aux/=lib/aux/",
        ":buffer/=lib/buffer/contracts/",
        ":create2-helpers/=lib/royalty-registry-solidity/lib/create2-helpers/",
        ":create2-scripts/=lib/royalty-registry-solidity/lib/create2-helpers/script/",
        ":ds-test/=lib/ds-test/src/",
        ":ens-contracts/=lib/ens-contracts/contracts/",
        ":ensdomains/ens-contracts/=lib/ensdomains/ens-contracts/contracts/",
        ":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":libraries-solidity/=lib/royalty-registry-solidity/lib/libraries-solidity/contracts/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":rareprotocol/assets/=lib/assets/src/",
        ":rareprotocol/aux/=lib/aux/src/",
        ":royalty-guard/=lib/aux/lib/royalty-guard/src/",
        ":royalty-registry-solidity/=lib/royalty-registry-solidity/contracts/",
        ":royalty-registry/=lib/royalty-registry-solidity/contracts/",
        ":solidity-stringutils/=lib/solidity-stringutils/",
        ":solmate/=lib/solmate/src/",
        ":v3-core/=lib/v3-core/",
        ":v3-periphery/=lib/v3-periphery/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/staking/factory/RarityPoolFactory.sol": "RarityPoolFactory"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlUpgradeable.sol": {
        "keccak256": "0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa",
        "urls": [
          "bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c",
          "dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol": {
        "keccak256": "0x84efb8889801b0ac817324aff6acc691d07bbee816b671817132911d287a8c63",
        "urls": [
          "bzz-raw://ec6df2255fadc251ea905043c47bf55170ee6cb5d7ca8b5c8ed54c84eac9d09e",
          "dweb:/ipfs/QmaokWfuL59uarki5yoDGbPzh4cErzEfnAzfmesTNJNXE9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98",
        "urls": [
          "bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8",
          "dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC1967Upgradeable.sol": {
        "keccak256": "0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b",
        "urls": [
          "bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0",
          "dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC20Upgradeable.sol": {
        "keccak256": "0xe73087c5001a37cf7186b3709377c7ceb01a0d38fb908723d1464cea66b4958c",
        "urls": [
          "bzz-raw://b835a1929ca2c7c978085e58f08f48855df8a82ef6a426ac71393cf032ea0fc5",
          "dweb:/ipfs/QmUMXRN9g8u9wm63wc7PMaSs7oG2nqnM1VVvktaWkvF68v"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol": {
        "keccak256": "0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f",
        "urls": [
          "bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053",
          "dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
        "keccak256": "0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161",
        "urls": [
          "bzz-raw://9826c7edf276ff48b99ee217358393097c30448a71d345d287c2f6961bb1f159",
          "dweb:/ipfs/QmYXBTY9wDvffGU47yMRFJ1NFyKwpbj94VHzRzhsm6R7Gz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol": {
        "keccak256": "0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908",
        "urls": [
          "bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1",
          "dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad",
        "urls": [
          "bzz-raw://33e8f8d863c6943ea046fcf4972b4e815c04ab06bad195dba1d93f8ebeb8420d",
          "dweb:/ipfs/QmTQzxQTuuzPDk3eqVmYy7hv2RCXM1yt1NtubXpRbzYjaj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f",
        "urls": [
          "bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f",
          "dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol": {
        "keccak256": "0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908",
        "urls": [
          "bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685",
          "dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol": {
        "keccak256": "0xbe62cd20530654aaec3c79b0ac559072f873d75078476fa9d5d53b5056a82e98",
        "urls": [
          "bzz-raw://15caa92e99e78a08d104db0b87199ee317ad7a9e6874393d89c2fabe793289c2",
          "dweb:/ipfs/QmbSio6ocLhJUaGEferLk82tr1RtJWvZMFLyRmDo7Y23jf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol": {
        "keccak256": "0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff",
        "urls": [
          "bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688",
          "dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
        "keccak256": "0x0e7c9f782f550d78de6494455a48ef509ece00bed07d74051a27c588a7366803",
        "urls": [
          "bzz-raw://4ac0362e73a0048bde4dcc1c6e2466fa9fb2bc931b76a28ee8b784407ca5c054",
          "dweb:/ipfs/QmcQuaJwykGpVgd11kZfz2WU5HmWD9rFG5meYR8ATR8mGA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol": {
        "keccak256": "0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27",
        "urls": [
          "bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472",
          "dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol": {
        "keccak256": "0x85439e74ab467b6a23d45d32bdc9506cbc3760320289afd605f11638c4138e95",
        "urls": [
          "bzz-raw://6e18633c182e445895e5a70f9e79f2558d0f6eac86767fd1d90552177df2955c",
          "dweb:/ipfs/QmagUFUJbiNGRGGajg9CF5LPuopc44XSCtcCaYvQasBuX9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
        "urls": [
          "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
          "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xa6dfb97ce947b7c846b054ee7d45d12383359778f4f3743654ae0a34fa421b26",
        "urls": [
          "bzz-raw://b97e7e5a77ea47c08ba422291df887eba76c80982f52a6e94a30106e9377a94f",
          "dweb:/ipfs/Qme7N2XRC7mcDxB8wZxNWPk6T8S2qsnmhAqXeUj4CNvsGD"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0x20ecf3c67cab5ec0a1d0cc7d980fa236ffdfd8579d8d8b6b89d29329bc6e78ae",
        "urls": [
          "bzz-raw://b52e4581ee6605732661d367845d2c551e0efcf81852f29248aef6d4be0a300b",
          "dweb:/ipfs/QmaLPj2TrVCTPH6D1BEjBVCb9N1dLJ6pTcoJwCmM3HWkfC"
        ],
        "license": "MIT"
      },
      "src/staking/factory/IRarityPoolFactory.sol": {
        "keccak256": "0x6694168a9511f905e23d5cbfc6caa7191a53dc6f93829ef6a7b819e50b80c159",
        "urls": [
          "bzz-raw://a6cbf93bab05ae990a8b069efd7478b86e89df83d0dd99885d4b0571db31485f",
          "dweb:/ipfs/QmTAPm3GQWNJEarottuC3TY3pGuWTnuBXe3uSAfMgPgcVq"
        ],
        "license": "MIT"
      },
      "src/staking/factory/IRewardAccumulatorFactory.sol": {
        "keccak256": "0x587037557e7ec3e0f122938019383e40e482559a81a64d5762e08e88025f2ee6",
        "urls": [
          "bzz-raw://c1630e9e02855e65dfa623615e9c1037a9b7da2775c172002213e51bcfc358a1",
          "dweb:/ipfs/QmSUhBht5eMy8xpUKPYegYggpWRV4mtKoNkuTyiHdgVtZA"
        ],
        "license": "MIT"
      },
      "src/staking/factory/RarityPoolFactory.sol": {
        "keccak256": "0x1f91aeb2e2911dc030bd65d42b13067855114516d4c06baa3a26a4ab9b27e931",
        "urls": [
          "bzz-raw://1b492542b2946434e154ac860b2ac45940de8a1e1c519f23bafdd23eff2cd45c",
          "dweb:/ipfs/QmRq85ZfsuFWdKhwkX1gfRFfwAm24ExNJkxh2PNQU3SwuB"
        ],
        "license": "MIT"
      },
      "src/staking/registry/IRareStakingRegistry.sol": {
        "keccak256": "0x26458c277ad3b3280dbedd7dbfdfbaa8d2af5f6180959ef732cbcec78b6c2924",
        "urls": [
          "bzz-raw://e5ba0ab87bedec5547531b79c123233dfcbdf9062a860845d242ae518e6ff8d6",
          "dweb:/ipfs/QmT4kZV7MjKwevN2ABFRD7tNnXRkUxJqNKyrXxthfWC5mR"
        ],
        "license": "MIT"
      },
      "src/staking/token/IRarityPool.sol": {
        "keccak256": "0x8a1c433510ef5db8f4a8b2b298c6618a91e974f1ea6c280967c1d3c710e3794b",
        "urls": [
          "bzz-raw://8ade4d1308318773489621961a1b6e2ed76a0c8ed0686225e75100f73df91f14",
          "dweb:/ipfs/Qma1AxmUyfM8CbRN6MnWW6BVpYE9iByWQygCDvG3RunbqS"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/staking/factory/RarityPoolFactory.sol",
    "id": 46740,
    "exportedSymbols": {
      "BeaconProxy": [
        37913
      ],
      "IAccessControlUpgradeable": [
        30934
      ],
      "IBeaconUpgradeable": [
        31540
      ],
      "IRareStakingRegistry": [
        47228
      ],
      "IRarityPool": [
        49335
      ],
      "IRarityPoolFactory": [
        46364
      ],
      "IRewardAccumulatorFactory": [
        46401
      ],
      "Ownable2StepUpgradeable": [
        31040
      ],
      "RarityPoolFactory": [
        46739
      ],
      "UUPSUpgradeable": [
        31845
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:5945:108",
    "nodes": [
      {
        "id": 46403,
        "nodeType": "PragmaDirective",
        "src": "32:23:108",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".18"
        ]
      },
      {
        "id": 46405,
        "nodeType": "ImportDirective",
        "src": "57:110:108",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/access/Ownable2StepUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46740,
        "sourceUnit": 31041,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46404,
              "name": "Ownable2StepUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31040,
              "src": "65:23:108",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46407,
        "nodeType": "ImportDirective",
        "src": "168:114:108",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/access/IAccessControlUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46740,
        "sourceUnit": 30935,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46406,
              "name": "IAccessControlUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30934,
              "src": "176:25:108",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46409,
        "nodeType": "ImportDirective",
        "src": "283:99:108",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46740,
        "sourceUnit": 31846,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46408,
              "name": "UUPSUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31845,
              "src": "291:15:108",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46411,
        "nodeType": "ImportDirective",
        "src": "383:106:108",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46740,
        "sourceUnit": 31541,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46410,
              "name": "IBeaconUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31540,
              "src": "391:18:108",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46413,
        "nodeType": "ImportDirective",
        "src": "491:80:108",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol",
        "file": "openzeppelin-contracts/proxy/beacon/BeaconProxy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46740,
        "sourceUnit": 37914,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46412,
              "name": "BeaconProxy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 37913,
              "src": "499:11:108",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46415,
        "nodeType": "ImportDirective",
        "src": "573:60:108",
        "nodes": [],
        "absolutePath": "src/staking/factory/IRarityPoolFactory.sol",
        "file": "./IRarityPoolFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46740,
        "sourceUnit": 46365,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46414,
              "name": "IRarityPoolFactory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46364,
              "src": "581:18:108",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46417,
        "nodeType": "ImportDirective",
        "src": "634:74:108",
        "nodes": [],
        "absolutePath": "src/staking/factory/IRewardAccumulatorFactory.sol",
        "file": "./IRewardAccumulatorFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46740,
        "sourceUnit": 46402,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46416,
              "name": "IRewardAccumulatorFactory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46401,
              "src": "642:25:108",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46419,
        "nodeType": "ImportDirective",
        "src": "709:74:108",
        "nodes": [],
        "absolutePath": "src/staking/registry/IRareStakingRegistry.sol",
        "file": "../registry/IRareStakingRegistry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46740,
        "sourceUnit": 47229,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46418,
              "name": "IRareStakingRegistry",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47228,
              "src": "717:20:108",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46421,
        "nodeType": "ImportDirective",
        "src": "784:53:108",
        "nodes": [],
        "absolutePath": "src/staking/token/IRarityPool.sol",
        "file": "../token/IRarityPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 46740,
        "sourceUnit": 49336,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46420,
              "name": "IRarityPool",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49335,
              "src": "792:11:108",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46739,
        "nodeType": "ContractDefinition",
        "src": "1050:4926:108",
        "nodes": [
          {
            "id": 46433,
            "nodeType": "VariableDeclaration",
            "src": "1406:44:108",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "stakingRegistry",
            "nameLocation": "1435:15:108",
            "scope": 46739,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IRareStakingRegistry_$47228",
              "typeString": "contract IRareStakingRegistry"
            },
            "typeName": {
              "id": 46432,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 46431,
                "name": "IRareStakingRegistry",
                "nameLocations": [
                  "1406:20:108"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 47228,
                "src": "1406:20:108"
              },
              "referencedDeclaration": 47228,
              "src": "1406:20:108",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IRareStakingRegistry_$47228",
                "typeString": "contract IRareStakingRegistry"
              }
            },
            "visibility": "private"
          },
          {
            "id": 46436,
            "nodeType": "VariableDeclaration",
            "src": "1489:51:108",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "rewardSwapFactory",
            "nameLocation": "1523:17:108",
            "scope": 46739,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IRewardAccumulatorFactory_$46401",
              "typeString": "contract IRewardAccumulatorFactory"
            },
            "typeName": {
              "id": 46435,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 46434,
                "name": "IRewardAccumulatorFactory",
                "nameLocations": [
                  "1489:25:108"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 46401,
                "src": "1489:25:108"
              },
              "referencedDeclaration": 46401,
              "src": "1489:25:108",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IRewardAccumulatorFactory_$46401",
                "typeString": "contract IRewardAccumulatorFactory"
              }
            },
            "visibility": "private"
          },
          {
            "id": 46438,
            "nodeType": "VariableDeclaration",
            "src": "1599:35:108",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "rareStakingTemplate",
            "nameLocation": "1615:19:108",
            "scope": 46739,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 46437,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1599:7:108",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 46445,
            "nodeType": "FunctionDefinition",
            "src": "1839:47:108",
            "nodes": [],
            "body": {
              "id": 46444,
              "nodeType": "Block",
              "src": "1853:33:108",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 46441,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31690,
                      "src": "1859:20:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 46442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1859:22:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46443,
                  "nodeType": "ExpressionStatement",
                  "src": "1859:22:108"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 46439,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1850:2:108"
            },
            "returnParameters": {
              "id": 46440,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1853:0:108"
            },
            "scope": 46739,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46525,
            "nodeType": "FunctionDefinition",
            "src": "2091:728:108",
            "nodes": [],
            "body": {
              "id": 46524,
              "nodeType": "Block",
              "src": "2255:564:108",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 46463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 46458,
                      "name": "_stakingRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46447,
                      "src": "2265:16:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 46461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2293:1:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 46460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2285:7:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 46459,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2285:7:108",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 46462,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2285:10:108",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2265:30:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46467,
                  "nodeType": "IfStatement",
                  "src": "2261:67:108",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 46464,
                        "name": "ZeroAddressUnsupported",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46331,
                        "src": "2304:22:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 46465,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2304:24:108",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 46466,
                    "nodeType": "RevertStatement",
                    "src": "2297:31:108"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 46473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 46468,
                      "name": "_rareStakingTemplate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46449,
                      "src": "2338:20:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 46471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2370:1:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 46470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2362:7:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 46469,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2362:7:108",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 46472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2362:10:108",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2338:34:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46477,
                  "nodeType": "IfStatement",
                  "src": "2334:71:108",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 46474,
                        "name": "ZeroAddressUnsupported",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46331,
                        "src": "2381:22:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 46475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2381:24:108",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 46476,
                    "nodeType": "RevertStatement",
                    "src": "2374:31:108"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 46483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 46478,
                      "name": "_rewardSwapFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46451,
                      "src": "2415:18:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 46481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2445:1:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 46480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2437:7:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 46479,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2437:7:108",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 46482,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2437:10:108",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2415:32:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46487,
                  "nodeType": "IfStatement",
                  "src": "2411:69:108",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 46484,
                        "name": "ZeroAddressUnsupported",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46331,
                        "src": "2456:22:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 46485,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2456:24:108",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 46486,
                    "nodeType": "RevertStatement",
                    "src": "2449:31:108"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 46493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 46488,
                      "name": "_newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46453,
                      "src": "2490:9:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 46491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2511:1:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 46490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2503:7:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 46489,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2503:7:108",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 46492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2503:10:108",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2490:23:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46497,
                  "nodeType": "IfStatement",
                  "src": "2486:60:108",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 46494,
                        "name": "ZeroAddressUnsupported",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46331,
                        "src": "2522:22:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 46495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2522:24:108",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 46496,
                    "nodeType": "RevertStatement",
                    "src": "2515:31:108"
                  }
                },
                {
                  "expression": {
                    "id": 46502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46498,
                      "name": "rewardSwapFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46436,
                      "src": "2552:17:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRewardAccumulatorFactory_$46401",
                        "typeString": "contract IRewardAccumulatorFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 46500,
                          "name": "_rewardSwapFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46451,
                          "src": "2598:18:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 46499,
                        "name": "IRewardAccumulatorFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46401,
                        "src": "2572:25:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IRewardAccumulatorFactory_$46401_$",
                          "typeString": "type(contract IRewardAccumulatorFactory)"
                        }
                      },
                      "id": 46501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2572:45:108",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRewardAccumulatorFactory_$46401",
                        "typeString": "contract IRewardAccumulatorFactory"
                      }
                    },
                    "src": "2552:65:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRewardAccumulatorFactory_$46401",
                      "typeString": "contract IRewardAccumulatorFactory"
                    }
                  },
                  "id": 46503,
                  "nodeType": "ExpressionStatement",
                  "src": "2552:65:108"
                },
                {
                  "expression": {
                    "id": 46506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46504,
                      "name": "rareStakingTemplate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46438,
                      "src": "2623:19:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 46505,
                      "name": "_rareStakingTemplate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46449,
                      "src": "2645:20:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2623:42:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 46507,
                  "nodeType": "ExpressionStatement",
                  "src": "2623:42:108"
                },
                {
                  "expression": {
                    "id": 46512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46508,
                      "name": "stakingRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46433,
                      "src": "2671:15:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRareStakingRegistry_$47228",
                        "typeString": "contract IRareStakingRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 46510,
                          "name": "_stakingRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46447,
                          "src": "2710:16:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 46509,
                        "name": "IRareStakingRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47228,
                        "src": "2689:20:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IRareStakingRegistry_$47228_$",
                          "typeString": "type(contract IRareStakingRegistry)"
                        }
                      },
                      "id": 46511,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2689:38:108",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRareStakingRegistry_$47228",
                        "typeString": "contract IRareStakingRegistry"
                      }
                    },
                    "src": "2671:56:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRareStakingRegistry_$47228",
                      "typeString": "contract IRareStakingRegistry"
                    }
                  },
                  "id": 46513,
                  "nodeType": "ExpressionStatement",
                  "src": "2671:56:108"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 46514,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31067,
                      "src": "2733:14:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 46515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2733:16:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46516,
                  "nodeType": "ExpressionStatement",
                  "src": "2733:16:108"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 46517,
                      "name": "__UUPSUpgradeable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31727,
                      "src": "2755:22:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 46518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2755:24:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46519,
                  "nodeType": "ExpressionStatement",
                  "src": "2755:24:108"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46521,
                        "name": "_newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46453,
                        "src": "2804:9:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 46520,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        31012
                      ],
                      "referencedDeclaration": 31012,
                      "src": "2785:18:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 46522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2785:29:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46523,
                  "nodeType": "ExpressionStatement",
                  "src": "2785:29:108"
                }
              ]
            },
            "functionSelector": "f8c8765e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 46456,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 46455,
                  "name": "initializer",
                  "nameLocations": [
                    "2243:11:108"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31611,
                  "src": "2243:11:108"
                },
                "nodeType": "ModifierInvocation",
                "src": "2243:11:108"
              }
            ],
            "name": "initialize",
            "nameLocation": "2100:10:108",
            "parameters": {
              "id": 46454,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46447,
                  "mutability": "mutable",
                  "name": "_stakingRegistry",
                  "nameLocation": "2124:16:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 46525,
                  "src": "2116:24:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46446,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2116:7:108",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46449,
                  "mutability": "mutable",
                  "name": "_rareStakingTemplate",
                  "nameLocation": "2154:20:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 46525,
                  "src": "2146:28:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46448,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2146:7:108",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46451,
                  "mutability": "mutable",
                  "name": "_rewardSwapFactory",
                  "nameLocation": "2188:18:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 46525,
                  "src": "2180:26:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46450,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2180:7:108",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46453,
                  "mutability": "mutable",
                  "name": "_newOwner",
                  "nameLocation": "2220:9:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 46525,
                  "src": "2212:17:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46452,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2212:7:108",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2110:123:108"
            },
            "returnParameters": {
              "id": 46457,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2255:0:108"
            },
            "scope": 46739,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46545,
            "nodeType": "FunctionDefinition",
            "src": "3066:157:108",
            "nodes": [],
            "body": {
              "id": 46544,
              "nodeType": "Block",
              "src": "3146:77:108",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 46539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 46534,
                      "name": "_implementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46528,
                      "src": "3156:15:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 46537,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3183:1:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 46536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3175:7:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 46535,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3175:7:108",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 46538,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3175:10:108",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3156:29:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46543,
                  "nodeType": "IfStatement",
                  "src": "3152:66:108",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 46540,
                        "name": "ZeroAddressUnsupported",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46331,
                        "src": "3194:22:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 46541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3194:24:108",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 46542,
                    "nodeType": "RevertStatement",
                    "src": "3187:31:108"
                  }
                }
              ]
            },
            "baseFunctions": [
              31839
            ],
            "documentation": {
              "id": 46526,
              "nodeType": "StructuredDocumentation",
              "src": "3032:31:108",
              "text": "@inheritdoc UUPSUpgradeable"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 46532,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 46531,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3136:9:108"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31086,
                  "src": "3136:9:108"
                },
                "nodeType": "ModifierInvocation",
                "src": "3136:9:108"
              }
            ],
            "name": "_authorizeUpgrade",
            "nameLocation": "3075:17:108",
            "overrides": {
              "id": 46530,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3127:8:108"
            },
            "parameters": {
              "id": 46529,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46528,
                  "mutability": "mutable",
                  "name": "_implementation",
                  "nameLocation": "3101:15:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 46545,
                  "src": "3093:23:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46527,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3093:7:108",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3092:25:108"
            },
            "returnParameters": {
              "id": 46533,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3146:0:108"
            },
            "scope": 46739,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 46574,
            "nodeType": "FunctionDefinition",
            "src": "3535:264:108",
            "nodes": [],
            "body": {
              "id": 46573,
              "nodeType": "Block",
              "src": "3608:191:108",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 46558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 46553,
                      "name": "_stakingRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46548,
                      "src": "3618:16:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 46556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3646:1:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 46555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3638:7:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 46554,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3638:7:108",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 46557,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3638:10:108",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3618:30:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46562,
                  "nodeType": "IfStatement",
                  "src": "3614:67:108",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 46559,
                        "name": "ZeroAddressUnsupported",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46331,
                        "src": "3657:22:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 46560,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3657:24:108",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 46561,
                    "nodeType": "RevertStatement",
                    "src": "3650:31:108"
                  }
                },
                {
                  "expression": {
                    "id": 46567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46563,
                      "name": "stakingRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46433,
                      "src": "3687:15:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRareStakingRegistry_$47228",
                        "typeString": "contract IRareStakingRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 46565,
                          "name": "_stakingRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46548,
                          "src": "3726:16:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 46564,
                        "name": "IRareStakingRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47228,
                        "src": "3705:20:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IRareStakingRegistry_$47228_$",
                          "typeString": "type(contract IRareStakingRegistry)"
                        }
                      },
                      "id": 46566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3705:38:108",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRareStakingRegistry_$47228",
                        "typeString": "contract IRareStakingRegistry"
                      }
                    },
                    "src": "3687:56:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRareStakingRegistry_$47228",
                      "typeString": "contract IRareStakingRegistry"
                    }
                  },
                  "id": 46568,
                  "nodeType": "ExpressionStatement",
                  "src": "3687:56:108"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 46570,
                        "name": "_stakingRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46548,
                        "src": "3777:16:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 46569,
                      "name": "StakingRegistryUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46328,
                      "src": "3754:22:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 46571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3754:40:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46572,
                  "nodeType": "EmitStatement",
                  "src": "3749:45:108"
                }
              ]
            },
            "baseFunctions": [
              46345
            ],
            "documentation": {
              "id": 46546,
              "nodeType": "StructuredDocumentation",
              "src": "3434:98:108",
              "text": "@inheritdoc IRarityPoolFactory\n @dev Requires the caller to be the owner of the contract."
            },
            "functionSelector": "2c740844",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 46551,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 46550,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3598:9:108"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31086,
                  "src": "3598:9:108"
                },
                "nodeType": "ModifierInvocation",
                "src": "3598:9:108"
              }
            ],
            "name": "setStakingRegistry",
            "nameLocation": "3544:18:108",
            "parameters": {
              "id": 46549,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46548,
                  "mutability": "mutable",
                  "name": "_stakingRegistry",
                  "nameLocation": "3571:16:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 46574,
                  "src": "3563:24:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46547,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3563:7:108",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3562:26:108"
            },
            "returnParameters": {
              "id": 46552,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3608:0:108"
            },
            "scope": 46739,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46601,
            "nodeType": "FunctionDefinition",
            "src": "3904:270:108",
            "nodes": [],
            "body": {
              "id": 46600,
              "nodeType": "Block",
              "src": "3985:189:108",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 46587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 46582,
                      "name": "_rareStakingTemplate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46577,
                      "src": "3995:20:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 46585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4027:1:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 46584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4019:7:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 46583,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4019:7:108",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 46586,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4019:10:108",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3995:34:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46591,
                  "nodeType": "IfStatement",
                  "src": "3991:71:108",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 46588,
                        "name": "ZeroAddressUnsupported",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46331,
                        "src": "4038:22:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 46589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4038:24:108",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 46590,
                    "nodeType": "RevertStatement",
                    "src": "4031:31:108"
                  }
                },
                {
                  "expression": {
                    "id": 46594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46592,
                      "name": "rareStakingTemplate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46438,
                      "src": "4068:19:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 46593,
                      "name": "_rareStakingTemplate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46577,
                      "src": "4090:20:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4068:42:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 46595,
                  "nodeType": "ExpressionStatement",
                  "src": "4068:42:108"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 46597,
                        "name": "_rareStakingTemplate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46577,
                        "src": "4148:20:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 46596,
                      "name": "RareStakingTemplateUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46323,
                      "src": "4121:26:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 46598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4121:48:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46599,
                  "nodeType": "EmitStatement",
                  "src": "4116:53:108"
                }
              ]
            },
            "baseFunctions": [
              46351
            ],
            "documentation": {
              "id": 46575,
              "nodeType": "StructuredDocumentation",
              "src": "3803:98:108",
              "text": "@inheritdoc IRarityPoolFactory\n @dev Requires the caller to be the owner of the contract."
            },
            "functionSelector": "7ed155de",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 46580,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 46579,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3975:9:108"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31086,
                  "src": "3975:9:108"
                },
                "nodeType": "ModifierInvocation",
                "src": "3975:9:108"
              }
            ],
            "name": "setRareStakingTemplate",
            "nameLocation": "3913:22:108",
            "parameters": {
              "id": 46578,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46577,
                  "mutability": "mutable",
                  "name": "_rareStakingTemplate",
                  "nameLocation": "3944:20:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 46601,
                  "src": "3936:28:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46576,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3936:7:108",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3935:30:108"
            },
            "returnParameters": {
              "id": 46581,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3985:0:108"
            },
            "scope": 46739,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46708,
            "nodeType": "FunctionDefinition",
            "src": "4522:804:108",
            "nodes": [],
            "body": {
              "id": 46707,
              "nodeType": "Block",
              "src": "4585:741:108",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    46611
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46611,
                      "mutability": "mutable",
                      "name": "registry",
                      "nameLocation": "4612:8:108",
                      "nodeType": "VariableDeclaration",
                      "scope": 46707,
                      "src": "4591:29:108",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRareStakingRegistry_$47228",
                        "typeString": "contract IRareStakingRegistry"
                      },
                      "typeName": {
                        "id": 46610,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 46609,
                          "name": "IRareStakingRegistry",
                          "nameLocations": [
                            "4591:20:108"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 47228,
                          "src": "4591:20:108"
                        },
                        "referencedDeclaration": 47228,
                        "src": "4591:20:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRareStakingRegistry_$47228",
                          "typeString": "contract IRareStakingRegistry"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46613,
                  "initialValue": {
                    "id": 46612,
                    "name": "stakingRegistry",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 46433,
                    "src": "4623:15:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRareStakingRegistry_$47228",
                      "typeString": "contract IRareStakingRegistry"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4591:47:108"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 46619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 46614,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46604,
                      "src": "4648:5:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 46617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4665:1:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 46616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4657:7:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 46615,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4657:7:108",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 46618,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4657:10:108",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4648:19:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 46623,
                  "nodeType": "IfStatement",
                  "src": "4644:56:108",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 46620,
                        "name": "ZeroAddressUnsupported",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46331,
                        "src": "4676:22:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 46621,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4676:24:108",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 46622,
                    "nodeType": "RevertStatement",
                    "src": "4669:31:108"
                  }
                },
                {
                  "assignments": [
                    46626
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46626,
                      "mutability": "mutable",
                      "name": "newStaking",
                      "nameLocation": "4718:10:108",
                      "nodeType": "VariableDeclaration",
                      "scope": 46707,
                      "src": "4706:22:108",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BeaconProxy_$37913",
                        "typeString": "contract BeaconProxy"
                      },
                      "typeName": {
                        "id": 46625,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 46624,
                          "name": "BeaconProxy",
                          "nameLocations": [
                            "4706:11:108"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 37913,
                          "src": "4706:11:108"
                        },
                        "referencedDeclaration": 37913,
                        "src": "4706:11:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BeaconProxy_$37913",
                          "typeString": "contract BeaconProxy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46648,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46632,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4762:4:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RarityPoolFactory_$46739",
                              "typeString": "contract RarityPoolFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_RarityPoolFactory_$46739",
                              "typeString": "contract RarityPoolFactory"
                            }
                          ],
                          "id": 46631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4754:7:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46630,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4754:7:108",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4754:13:108",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 46636,
                                "name": "IRarityPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49335,
                                "src": "4798:11:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IRarityPool_$49335_$",
                                  "typeString": "type(contract IRarityPool)"
                                }
                              },
                              "id": 46637,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4810:10:108",
                              "memberName": "initialize",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 49189,
                              "src": "4798:22:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                                "typeString": "function IRarityPool.initialize(address,address,address)"
                              }
                            },
                            "id": 46638,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "4821:8:108",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "4798:31:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 46639,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46604,
                            "src": "4831:5:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 46642,
                                "name": "registry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46611,
                                "src": "4846:8:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IRareStakingRegistry_$47228",
                                  "typeString": "contract IRareStakingRegistry"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IRareStakingRegistry_$47228",
                                  "typeString": "contract IRareStakingRegistry"
                                }
                              ],
                              "id": 46641,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4838:7:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46640,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4838:7:108",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46643,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4838:17:108",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 46644,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4857:3:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 46645,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4861:6:108",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4857:10:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 46634,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4775:3:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 46635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "4779:18:108",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "4775:22:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 46646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4775:93:108",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 46629,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "4731:15:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_BeaconProxy_$37913_$",
                        "typeString": "function (address,bytes memory) payable returns (contract BeaconProxy)"
                      },
                      "typeName": {
                        "id": 46628,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 46627,
                          "name": "BeaconProxy",
                          "nameLocations": [
                            "4735:11:108"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 37913,
                          "src": "4735:11:108"
                        },
                        "referencedDeclaration": 37913,
                        "src": "4735:11:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BeaconProxy_$37913",
                          "typeString": "contract BeaconProxy"
                        }
                      }
                    },
                    "id": 46647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4731:143:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BeaconProxy_$37913",
                      "typeString": "contract BeaconProxy"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4706:168:108"
                },
                {
                  "assignments": [
                    46650
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46650,
                      "mutability": "mutable",
                      "name": "rewardSwap",
                      "nameLocation": "4888:10:108",
                      "nodeType": "VariableDeclaration",
                      "scope": 46707,
                      "src": "4880:18:108",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 46649,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4880:7:108",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46658,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46655,
                            "name": "newStaking",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46626,
                            "src": "4944:10:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeaconProxy_$37913",
                              "typeString": "contract BeaconProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BeaconProxy_$37913",
                              "typeString": "contract BeaconProxy"
                            }
                          ],
                          "id": 46654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4936:7:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46653,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4936:7:108",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4936:19:108",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46651,
                        "name": "rewardSwapFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46436,
                        "src": "4901:17:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRewardAccumulatorFactory_$46401",
                          "typeString": "contract IRewardAccumulatorFactory"
                        }
                      },
                      "id": 46652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4919:16:108",
                      "memberName": "deployRewardSwap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46388,
                      "src": "4901:34:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_address_payable_$",
                        "typeString": "function (address) external returns (address payable)"
                      }
                    },
                    "id": 46657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4901:55:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4880:76:108"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46662,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46604,
                        "src": "4991:5:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 46665,
                            "name": "newStaking",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46626,
                            "src": "5006:10:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeaconProxy_$37913",
                              "typeString": "contract BeaconProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BeaconProxy_$37913",
                              "typeString": "contract BeaconProxy"
                            }
                          ],
                          "id": 46664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4998:7:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46663,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4998:7:108",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4998:19:108",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46667,
                        "name": "rewardSwap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46650,
                        "src": "5019:10:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46659,
                        "name": "registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46611,
                        "src": "4962:8:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRareStakingRegistry_$47228",
                          "typeString": "contract IRareStakingRegistry"
                        }
                      },
                      "id": 46661,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4971:19:108",
                      "memberName": "setStakingAddresses",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47042,
                      "src": "4962:28:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address) external"
                      }
                    },
                    "id": 46668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4962:68:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46669,
                  "nodeType": "ExpressionStatement",
                  "src": "4962:68:108"
                },
                {
                  "assignments": [
                    46671
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46671,
                      "mutability": "mutable",
                      "name": "statSetterRole",
                      "nameLocation": "5045:14:108",
                      "nodeType": "VariableDeclaration",
                      "scope": 46707,
                      "src": "5037:22:108",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 46670,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5037:7:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46675,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 46672,
                        "name": "registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46611,
                        "src": "5062:8:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRareStakingRegistry_$47228",
                          "typeString": "contract IRareStakingRegistry"
                        }
                      },
                      "id": 46673,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5071:24:108",
                      "memberName": "STAKING_STAT_SETTER_ROLE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47209,
                      "src": "5062:33:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                        "typeString": "function () view external returns (bytes32)"
                      }
                    },
                    "id": 46674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5062:35:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5037:60:108"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46683,
                        "name": "statSetterRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46671,
                        "src": "5159:14:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 46686,
                            "name": "newStaking",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46626,
                            "src": "5183:10:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeaconProxy_$37913",
                              "typeString": "contract BeaconProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BeaconProxy_$37913",
                              "typeString": "contract BeaconProxy"
                            }
                          ],
                          "id": 46685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5175:7:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46684,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5175:7:108",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5175:19:108",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 46679,
                                "name": "registry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46611,
                                "src": "5138:8:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IRareStakingRegistry_$47228",
                                  "typeString": "contract IRareStakingRegistry"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IRareStakingRegistry_$47228",
                                  "typeString": "contract IRareStakingRegistry"
                                }
                              ],
                              "id": 46678,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5130:7:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46677,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5130:7:108",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46680,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5130:17:108",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 46676,
                          "name": "IAccessControlUpgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30934,
                          "src": "5104:25:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IAccessControlUpgradeable_$30934_$",
                            "typeString": "type(contract IAccessControlUpgradeable)"
                          }
                        },
                        "id": 46681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5104:44:108",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAccessControlUpgradeable_$30934",
                          "typeString": "contract IAccessControlUpgradeable"
                        }
                      },
                      "id": 46682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5149:9:108",
                      "memberName": "grantRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30917,
                      "src": "5104:54:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 46688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5104:91:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46689,
                  "nodeType": "ExpressionStatement",
                  "src": "5104:91:108"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46693,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5249:3:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 46694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5253:6:108",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5249:10:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46695,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46604,
                        "src": "5261:5:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 46698,
                            "name": "newStaking",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46626,
                            "src": "5276:10:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeaconProxy_$37913",
                              "typeString": "contract BeaconProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BeaconProxy_$37913",
                              "typeString": "contract BeaconProxy"
                            }
                          ],
                          "id": 46697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5268:7:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46696,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5268:7:108",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5268:19:108",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 46690,
                        "name": "IRarityPoolFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46364,
                        "src": "5207:18:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IRarityPoolFactory_$46364_$",
                          "typeString": "type(contract IRarityPoolFactory)"
                        }
                      },
                      "id": 46692,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5226:22:108",
                      "memberName": "StakingContractCreated",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46318,
                      "src": "5207:41:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 46700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5207:81:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46701,
                  "nodeType": "EmitStatement",
                  "src": "5202:86:108"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46704,
                        "name": "newStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46626,
                        "src": "5310:10:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BeaconProxy_$37913",
                          "typeString": "contract BeaconProxy"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_BeaconProxy_$37913",
                          "typeString": "contract BeaconProxy"
                        }
                      ],
                      "id": 46703,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5302:7:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 46702,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5302:7:108",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 46705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5302:19:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 46608,
                  "id": 46706,
                  "nodeType": "Return",
                  "src": "5295:26:108"
                }
              ]
            },
            "baseFunctions": [
              46339
            ],
            "documentation": {
              "id": 46602,
              "nodeType": "StructuredDocumentation",
              "src": "4388:131:108",
              "text": "@inheritdoc IRarityPoolFactory\n @dev This contract must have the {STAKING_INFO_SETTER_ROLE} role on {RareStakingRegistry}."
            },
            "functionSelector": "1249ed23",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deployStaking",
            "nameLocation": "4531:13:108",
            "parameters": {
              "id": 46605,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46604,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "4553:5:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 46708,
                  "src": "4545:13:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46603,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4545:7:108",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4544:15:108"
            },
            "returnParameters": {
              "id": 46608,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46607,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46708,
                  "src": "4576:7:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46606,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4576:7:108",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4575:9:108"
            },
            "scope": 46739,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46720,
            "nodeType": "FunctionDefinition",
            "src": "5576:111:108",
            "nodes": [],
            "body": {
              "id": 46719,
              "nodeType": "Block",
              "src": "5645:42:108",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46716,
                        "name": "stakingRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46433,
                        "src": "5666:15:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRareStakingRegistry_$47228",
                          "typeString": "contract IRareStakingRegistry"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IRareStakingRegistry_$47228",
                          "typeString": "contract IRareStakingRegistry"
                        }
                      ],
                      "id": 46715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5658:7:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 46714,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5658:7:108",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 46717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5658:24:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 46713,
                  "id": 46718,
                  "nodeType": "Return",
                  "src": "5651:31:108"
                }
              ]
            },
            "baseFunctions": [
              46357
            ],
            "documentation": {
              "id": 46709,
              "nodeType": "StructuredDocumentation",
              "src": "5539:34:108",
              "text": "@inheritdoc IRarityPoolFactory"
            },
            "functionSelector": "9f997eb0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStakingRegistryAddress",
            "nameLocation": "5585:25:108",
            "parameters": {
              "id": 46710,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5610:2:108"
            },
            "returnParameters": {
              "id": 46713,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46712,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46720,
                  "src": "5636:7:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46711,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5636:7:108",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5635:9:108"
            },
            "scope": 46739,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46729,
            "nodeType": "FunctionDefinition",
            "src": "5728:110:108",
            "nodes": [],
            "body": {
              "id": 46728,
              "nodeType": "Block",
              "src": "5801:37:108",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 46726,
                    "name": "rareStakingTemplate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 46438,
                    "src": "5814:19:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 46725,
                  "id": 46727,
                  "nodeType": "Return",
                  "src": "5807:26:108"
                }
              ]
            },
            "baseFunctions": [
              46363
            ],
            "documentation": {
              "id": 46721,
              "nodeType": "StructuredDocumentation",
              "src": "5691:34:108",
              "text": "@inheritdoc IRarityPoolFactory"
            },
            "functionSelector": "c8cb01d8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRareStakingTemplateAddress",
            "nameLocation": "5737:29:108",
            "parameters": {
              "id": 46722,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5766:2:108"
            },
            "returnParameters": {
              "id": 46725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46724,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46729,
                  "src": "5792:7:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46723,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5792:7:108",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5791:9:108"
            },
            "scope": 46739,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46738,
            "nodeType": "FunctionDefinition",
            "src": "5879:95:108",
            "nodes": [],
            "body": {
              "id": 46737,
              "nodeType": "Block",
              "src": "5937:37:108",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 46735,
                    "name": "rareStakingTemplate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 46438,
                    "src": "5950:19:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 46734,
                  "id": 46736,
                  "nodeType": "Return",
                  "src": "5943:26:108"
                }
              ]
            },
            "baseFunctions": [
              31539
            ],
            "documentation": {
              "id": 46730,
              "nodeType": "StructuredDocumentation",
              "src": "5842:34:108",
              "text": "@inheritdoc IBeaconUpgradeable"
            },
            "functionSelector": "5c60da1b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "implementation",
            "nameLocation": "5888:14:108",
            "parameters": {
              "id": 46731,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5902:2:108"
            },
            "returnParameters": {
              "id": 46734,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46733,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46738,
                  "src": "5928:7:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46732,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5928:7:108",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5927:9:108"
            },
            "scope": 46739,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 46423,
              "name": "IRarityPoolFactory",
              "nameLocations": [
                "1080:18:108"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46364,
              "src": "1080:18:108"
            },
            "id": 46424,
            "nodeType": "InheritanceSpecifier",
            "src": "1080:18:108"
          },
          {
            "baseName": {
              "id": 46425,
              "name": "IBeaconUpgradeable",
              "nameLocations": [
                "1100:18:108"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31540,
              "src": "1100:18:108"
            },
            "id": 46426,
            "nodeType": "InheritanceSpecifier",
            "src": "1100:18:108"
          },
          {
            "baseName": {
              "id": 46427,
              "name": "Ownable2StepUpgradeable",
              "nameLocations": [
                "1120:23:108"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31040,
              "src": "1120:23:108"
            },
            "id": 46428,
            "nodeType": "InheritanceSpecifier",
            "src": "1120:23:108"
          },
          {
            "baseName": {
              "id": 46429,
              "name": "UUPSUpgradeable",
              "nameLocations": [
                "1145:15:108"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31845,
              "src": "1145:15:108"
            },
            "id": 46430,
            "nodeType": "InheritanceSpecifier",
            "src": "1145:15:108"
          }
        ],
        "canonicalName": "RarityPoolFactory",
        "contractDependencies": [
          37913
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 46422,
          "nodeType": "StructuredDocumentation",
          "src": "839:211:108",
          "text": "@author koloz, charlescrain\n @title RarityPoolFactory\n @notice The Staking Factory Contract used to deploy new staking ERC20 contracts pertaining to a user.\n @dev Made to be used with a UUPS Proxy."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          46739,
          31845,
          31530,
          31193,
          31206,
          31040,
          31172,
          33996,
          31709,
          31540,
          46364
        ],
        "name": "RarityPoolFactory",
        "nameLocation": "1059:17:108",
        "scope": 46740,
        "usedErrors": [
          46331
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 108
}