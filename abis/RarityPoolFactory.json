{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ZeroAddressUnsupported",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRareStakingTemplate",
          "type": "address"
        }
      ],
      "name": "RareStakingTemplateUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_deployingUser",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_userStakedOn",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_stakingAddress",
          "type": "address"
        }
      ],
      "name": "StakingContractCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newStakingRegistry",
          "type": "address"
        }
      ],
      "name": "StakingRegistryUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "deployStaking",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRareStakingTemplateAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStakingRegistryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakingRegistry",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rareStakingTemplate",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rewardSwapFactory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_rareStakingTemplate",
          "type": "address"
        }
      ],
      "name": "setRareStakingTemplate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakingRegistry",
          "type": "address"
        }
      ],
      "name": "setStakingRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a080604052346100dc57306080526000549060ff8260081c1661008a575060ff8082160361004f575b6040516119b990816100e2823960805181818161057d015281816106b0015261099a0152f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a138610029565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe608060408181526004803610156200001657600080fd5b600092833560e01c9081631249ed231462000c0f575080632c7408441462000b9b5780633659cfe6146200096f5780634f1ef286146200062c57806352d1902d14620005665780635c60da1b1462000390578063715018a614620004fa57806379ba5097146200046d5780637ed155de14620003ec5780638da5cb5b14620003c15780639f997eb01462000396578063c8cb01d81462000390578063e30c39781462000361578063f2fde38b14620002ea5763f8c8765e14620000d857600080fd5b34620002e6576080366003190112620002e657620000f562000edf565b906001600160a01b0360243581811690819003620002e15760443590828216809203620002e1576064359383851693848603620002e15788549660ff8860081c161597888099620002d3575b8015620002ba575b15620002605760ff1981166001178b55886200024e575b50169384156200023f5782156200023f5783156200023f571562000231575090620001f29392916bffffffffffffffffffffffff60a01b918260fc54161760fc558160fd54161760fd5560fb54161760fb55620001cf60ff865460081c16620001c98162001293565b62001293565b620001da3362000fa9565b620001ec60ff865460081c1662001293565b62000fa9565b620001fb575080f35b60207f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989161ff001984541684555160018152a180f35b8651637827912560e01b8152fd5b508651637827912560e01b8152fd5b61ffff1916610101178a553862000160565b895162461bcd60e51b8152602081860152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b158015620001495750600160ff82161462000149565b50600160ff82161062000141565b600080fd5b8280fd5b83346200035e5760203660031901126200035e576200030862000edf565b6200031262000fff565b606580546001600160a01b0319166001600160a01b039283169081179091556033549091167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e227008380a380f35b80fd5b5050346200038c57816003193601126200038c5760655490516001600160a01b039091168152602090f35b5080fd5b62000f7e565b5050346200038c57816003193601126200038c5760fb5490516001600160a01b039091168152602090f35b5050346200038c57816003193601126200038c5760335490516001600160a01b039091168152602090f35b5034620002e6576020366003190112620002e6576200040a62000edf565b6200041462000fff565b6001600160a01b03169182156200046057505060fd80546001600160a01b031916821790557f2b022c4b56a6b8adae778a141c22e90aead2a46d1655c4ef94ced0acfae9ed258280a280f35b51637827912560e01b8152fd5b509034620002e65782600319360112620002e657606554336001600160a01b0390911603620004a55782620004a23362000fa9565b80f35b906020608492519162461bcd60e51b8352820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b6064820152fd5b83346200035e57806003193601126200035e576200051762000fff565b606580546001600160a01b03199081169091556033805491821690556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5082346200035e57806003193601126200035e57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163003620005c45760208251600080516020620019648339815191528152f35b6020608492519162461bcd60e51b8352820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152fd5b509080600319360112620002e6576200064462000edf565b906024359067ffffffffffffffff82116200096b57366023830112156200096b5781840135620006748162000f61565b620006828351918262000f3e565b81815286602094858301933660248284010111620002e6578060248893018637830101526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811690620006e03083141562001058565b6200070060008051602062001964833981519152928284541614620010ba565b6200070a62000fff565b86169081156200095b577f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156200075157505050505050620004a291506200111c565b849596929394516352d1902d60e01b815287818a81865afa6000918162000926575b50620007d357865162461bcd60e51b8152808a01899052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b979192939695949703620008d15750620007ed826200111c565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a2835115801590620008c8575b6200082c575b505050505080f35b600080620008b196845196620008428862000f21565b602788527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c87890152660819985a5b195960ca1b868901525190845af4913d15620008bd573d620008a1620008978262000f61565b9251928362000f3e565b8152600081943d92013e620011ae565b50388080808062000824565b5060609250620011ae565b5060016200081e565b835162461bcd60e51b8152908101859052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b90918982813d831162000953575b62000940818362000f3e565b810103126200035e575051903862000773565b503d62000934565b8451637827912560e01b81528890fd5b8480fd5b509034620002e65760208060031936011262000b97576200098f62000edf565b916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811690620009ca3083141562001058565b620009ea60008051602062001964833981519152928284541614620010ba565b620009f462000fff565b8416801562000b87578251908482019282841067ffffffffffffffff85111762000b72578385528883527f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161562000a5b57505050505050620004a291506200111c565b849596929394516352d1902d60e01b815287818a81865afa6000918162000b3d575b5062000add57865162461bcd60e51b8152808a01899052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b979192939695949703620008d1575062000af7826200111c565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a283511580159062000b34576200082c57505050505080f35b5060006200081e565b90918982813d831162000b6a575b62000b57818362000f3e565b810103126200035e575051903862000a7d565b503d62000b4b565b604188634e487b7160e01b6000525260246000fd5b8251637827912560e01b81528690fd5b8380fd5b5034620002e6576020366003190112620002e65762000bb962000edf565b62000bc362000fff565b6001600160a01b03169182156200046057505060fb80546001600160a01b031916821790557fa5aa720af23083cb0a3e835e4c10666ab0ac4eee7a4396df3ec359de6fc53abf8280a280f35b8492915034620002e6576020938460031936011262000b975762000c3262000edf565b60fb5490936001600160a01b038086169492811692851562000ed15750835163c0c53b8b60e01b898201526001600160a01b0387811660248301528416604482015233606480830191909152815262000c8d60848262000f3e565b84519061066f8083019083821067ffffffffffffffff83111762000ebe57918762000cca92818e8796620012f58839308352820152019062001251565b039088f095861562000e5157879089838060fc5416991698602488518095819363399fe9a160e11b83528d8a8401525af191821562000eb457899262000e75575b50843b1562000e715785516376a250a760e01b81526001600160a01b03918216858201908152828a16602082015292909316166040820152879082908190606001038183875af1801562000e515762000e5b575b5082516366951bc160e01b81529087828281865afa91821562000e5157879262000e1c575b50823b1562000e185790604487928386519586948593632f2ff15d60e01b85528401528960248401525af1801562000e0e5784939291869162000def575b505051937f4a2dd45842063d5cdb0ba4ccb3b677af33701f706cdfa90ddf5fe291e6f99878339180a48152f35b62000dfe919293945062000ef6565b62000b9757908291848762000dc2565b82513d87823e3d90fd5b8680fd5b9091508781813d831162000e49575b62000e37818362000f3e565b81010312620002e15751908862000d84565b503d62000e2b565b84513d89823e3d90fd5b62000e699096919662000ef6565b948762000d5f565b8880fd5b9091508981813d831162000eac575b62000e90818362000f3e565b8101031262000e715751828116810362000e7157908a62000d0b565b503d62000e84565b86513d8b823e3d90fd5b634e487b7160e01b8b526041865260248bfd5b637827912560e01b81529050fd5b600435906001600160a01b0382168203620002e157565b67ffffffffffffffff811162000f0b57604052565b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff82111762000f0b57604052565b90601f8019910116810190811067ffffffffffffffff82111762000f0b57604052565b67ffffffffffffffff811162000f0b57601f01601f191660200190565b34620002e1576000366003190112620002e15760fd546040516001600160a01b039091168152602090f35b6bffffffffffffffffffffffff60a01b90816065541660655560335460018060a01b038092168093821617603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b6033546001600160a01b031633036200101457565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b156200106057565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608490fd5b15620010c257565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608490fd5b803b1562001153576000805160206200196483398151915280546001600160a01b0319166001600160a01b03909216919091179055565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b91929015620012135750815115620011c4575090565b3b15620011ce5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015620012275750805190602001fd5b60405162461bcd60e51b8152602060048201529081906200124d90602483019062001251565b0390fd5b919082519283825260005b8481106200127e575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016200125c565b156200129b57565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fdfe608060409080825261066f80380380916100198285610350565b8339810190828183031261034b5761003081610373565b6020828101516001600160401b039391929184821161034b57019084601f8301121561034b5781519161006283610387565b9261006f88519485610350565b8084528484019685828401011161034b57868561008c93016103a2565b803b156102f9578551635c60da1b60e01b80825292916001600160a01b0316908481600481855afa9081156102ee576000916102b9575b503b1561025c577fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080546001600160a01b03191682179055865192817f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e600080a2825115801590610254575b610142575b87516101f690816104798239f35b6004848693819382525afa9182156102495760009261020f575b5085519360608501908111858210176101f9578652602784527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c83850152660819985a5b195960ca1b84870152516101e3946000918291845af4903d156101f0573d6101c781610387565b906101d488519283610350565b8152600081943d92013e6103c5565b5038808080808080610134565b606092506103c5565b634e487b7160e01b600052604160045260246000fd5b90918382813d8311610242575b6102268183610350565b8101031261023f575061023890610373565b903861015c565b80fd5b503d61021c565b86513d6000823e3d90fd5b50600061012f565b865162461bcd60e51b815260048101859052603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b6064820152608490fd5b908582813d83116102e7575b6102cf8183610350565b8101031261023f57506102e190610373565b386100c3565b503d6102c5565b88513d6000823e3d90fd5b855162461bcd60e51b815260048101849052602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b6064820152608490fd5b600080fd5b601f909101601f19168101906001600160401b038211908210176101f957604052565b51906001600160a01b038216820361034b57565b6001600160401b0381116101f957601f01601f191660200190565b60005b8381106103b55750506000910152565b81810151838201526020016103a5565b9192901561042757508151156103d9575090565b3b156103e25790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b82519091501561043a5750805190602001fd5b6044604051809262461bcd60e51b82526020600483015261046a81518092816024860152602086860191016103a2565b601f01601f19168101030190fdfe608080604052366100c4577fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5054635c60da1b60e01b8252602090829060049082906001600160a01b03165afa9081156100b857600091610060575b5061015b565b6020903d82116100b0575b601f8201601f1916810167ffffffffffffffff81118282101761009c5761009693506040520161017a565b3861005a565b634e487b7160e01b84526041600452602484fd5b3d915061006b565b6040513d6000823e3d90fd5b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5054604051635c60da1b60e01b815290602090829060049082906001600160a01b03165afa9081156100b85760009161011d575061015b565b60203d8111610154575b601f8101601f1916820167ffffffffffffffff81118382101761009c5761009693506040528101906101a1565b503d610127565b6000808092368280378136915af43d82803e15610176573d90f35b3d90fd5b602090607f19011261019c576080516001600160a01b038116810361019c5790565b600080fd5b9081602091031261019c57516001600160a01b038116810361019c579056fea2646970667358221220282abf688b062a839a4662d551dabcadaac92addb7cebf18c13322630af9222464736f6c63430008120033360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220f6836763579abd7fbca9a04bd426e7210a76b5beedfe063cd6bdc42976732aaa64736f6c63430008120033",
    "sourceMap": "1050:4926:181:-:0;;;;;;;1332:4:46;1324:13;;6007::45;1050:4926:181;;;;;;;;;;;;;;6078:31:45;6074:139;;-1:-1:-1;1050:4926:181;;;;;;;;1324:13:46;1050:4926:181;;;;;;;;;;;;;;;;6074:139:45;1050:4926:181;;;;;;6007:13:45;1050:4926:181;6174:28:45;1050:4926:181;;;;;;6174:28:45;6074:139;;;1050:4926:181;-1:-1:-1;;;1050:4926:181;;;;;;;;;;;;;;;;;-1:-1:-1;;;1050:4926:181;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060408181526004803610156200001657600080fd5b600092833560e01c9081631249ed231462000c0f575080632c7408441462000b9b5780633659cfe6146200096f5780634f1ef286146200062c57806352d1902d14620005665780635c60da1b1462000390578063715018a614620004fa57806379ba5097146200046d5780637ed155de14620003ec5780638da5cb5b14620003c15780639f997eb01462000396578063c8cb01d81462000390578063e30c39781462000361578063f2fde38b14620002ea5763f8c8765e14620000d857600080fd5b34620002e6576080366003190112620002e657620000f562000edf565b906001600160a01b0360243581811690819003620002e15760443590828216809203620002e1576064359383851693848603620002e15788549660ff8860081c161597888099620002d3575b8015620002ba575b15620002605760ff1981166001178b55886200024e575b50169384156200023f5782156200023f5783156200023f571562000231575090620001f29392916bffffffffffffffffffffffff60a01b918260fc54161760fc558160fd54161760fd5560fb54161760fb55620001cf60ff865460081c16620001c98162001293565b62001293565b620001da3362000fa9565b620001ec60ff865460081c1662001293565b62000fa9565b620001fb575080f35b60207f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989161ff001984541684555160018152a180f35b8651637827912560e01b8152fd5b508651637827912560e01b8152fd5b61ffff1916610101178a553862000160565b895162461bcd60e51b8152602081860152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b158015620001495750600160ff82161462000149565b50600160ff82161062000141565b600080fd5b8280fd5b83346200035e5760203660031901126200035e576200030862000edf565b6200031262000fff565b606580546001600160a01b0319166001600160a01b039283169081179091556033549091167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e227008380a380f35b80fd5b5050346200038c57816003193601126200038c5760655490516001600160a01b039091168152602090f35b5080fd5b62000f7e565b5050346200038c57816003193601126200038c5760fb5490516001600160a01b039091168152602090f35b5050346200038c57816003193601126200038c5760335490516001600160a01b039091168152602090f35b5034620002e6576020366003190112620002e6576200040a62000edf565b6200041462000fff565b6001600160a01b03169182156200046057505060fd80546001600160a01b031916821790557f2b022c4b56a6b8adae778a141c22e90aead2a46d1655c4ef94ced0acfae9ed258280a280f35b51637827912560e01b8152fd5b509034620002e65782600319360112620002e657606554336001600160a01b0390911603620004a55782620004a23362000fa9565b80f35b906020608492519162461bcd60e51b8352820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b6064820152fd5b83346200035e57806003193601126200035e576200051762000fff565b606580546001600160a01b03199081169091556033805491821690556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5082346200035e57806003193601126200035e57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163003620005c45760208251600080516020620019648339815191528152f35b6020608492519162461bcd60e51b8352820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152fd5b509080600319360112620002e6576200064462000edf565b906024359067ffffffffffffffff82116200096b57366023830112156200096b5781840135620006748162000f61565b620006828351918262000f3e565b81815286602094858301933660248284010111620002e6578060248893018637830101526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811690620006e03083141562001058565b6200070060008051602062001964833981519152928284541614620010ba565b6200070a62000fff565b86169081156200095b577f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156200075157505050505050620004a291506200111c565b849596929394516352d1902d60e01b815287818a81865afa6000918162000926575b50620007d357865162461bcd60e51b8152808a01899052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b979192939695949703620008d15750620007ed826200111c565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a2835115801590620008c8575b6200082c575b505050505080f35b600080620008b196845196620008428862000f21565b602788527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c87890152660819985a5b195960ca1b868901525190845af4913d15620008bd573d620008a1620008978262000f61565b9251928362000f3e565b8152600081943d92013e620011ae565b50388080808062000824565b5060609250620011ae565b5060016200081e565b835162461bcd60e51b8152908101859052602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608490fd5b90918982813d831162000953575b62000940818362000f3e565b810103126200035e575051903862000773565b503d62000934565b8451637827912560e01b81528890fd5b8480fd5b509034620002e65760208060031936011262000b97576200098f62000edf565b916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811690620009ca3083141562001058565b620009ea60008051602062001964833981519152928284541614620010ba565b620009f462000fff565b8416801562000b87578251908482019282841067ffffffffffffffff85111762000b72578385528883527f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161562000a5b57505050505050620004a291506200111c565b849596929394516352d1902d60e01b815287818a81865afa6000918162000b3d575b5062000add57865162461bcd60e51b8152808a01899052602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608490fd5b979192939695949703620008d1575062000af7826200111c565b7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a283511580159062000b34576200082c57505050505080f35b5060006200081e565b90918982813d831162000b6a575b62000b57818362000f3e565b810103126200035e575051903862000a7d565b503d62000b4b565b604188634e487b7160e01b6000525260246000fd5b8251637827912560e01b81528690fd5b8380fd5b5034620002e6576020366003190112620002e65762000bb962000edf565b62000bc362000fff565b6001600160a01b03169182156200046057505060fb80546001600160a01b031916821790557fa5aa720af23083cb0a3e835e4c10666ab0ac4eee7a4396df3ec359de6fc53abf8280a280f35b8492915034620002e6576020938460031936011262000b975762000c3262000edf565b60fb5490936001600160a01b038086169492811692851562000ed15750835163c0c53b8b60e01b898201526001600160a01b0387811660248301528416604482015233606480830191909152815262000c8d60848262000f3e565b84519061066f8083019083821067ffffffffffffffff83111762000ebe57918762000cca92818e8796620012f58839308352820152019062001251565b039088f095861562000e5157879089838060fc5416991698602488518095819363399fe9a160e11b83528d8a8401525af191821562000eb457899262000e75575b50843b1562000e715785516376a250a760e01b81526001600160a01b03918216858201908152828a16602082015292909316166040820152879082908190606001038183875af1801562000e515762000e5b575b5082516366951bc160e01b81529087828281865afa91821562000e5157879262000e1c575b50823b1562000e185790604487928386519586948593632f2ff15d60e01b85528401528960248401525af1801562000e0e5784939291869162000def575b505051937f4a2dd45842063d5cdb0ba4ccb3b677af33701f706cdfa90ddf5fe291e6f99878339180a48152f35b62000dfe919293945062000ef6565b62000b9757908291848762000dc2565b82513d87823e3d90fd5b8680fd5b9091508781813d831162000e49575b62000e37818362000f3e565b81010312620002e15751908862000d84565b503d62000e2b565b84513d89823e3d90fd5b62000e699096919662000ef6565b948762000d5f565b8880fd5b9091508981813d831162000eac575b62000e90818362000f3e565b8101031262000e715751828116810362000e7157908a62000d0b565b503d62000e84565b86513d8b823e3d90fd5b634e487b7160e01b8b526041865260248bfd5b637827912560e01b81529050fd5b600435906001600160a01b0382168203620002e157565b67ffffffffffffffff811162000f0b57604052565b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff82111762000f0b57604052565b90601f8019910116810190811067ffffffffffffffff82111762000f0b57604052565b67ffffffffffffffff811162000f0b57601f01601f191660200190565b34620002e1576000366003190112620002e15760fd546040516001600160a01b039091168152602090f35b6bffffffffffffffffffffffff60a01b90816065541660655560335460018060a01b038092168093821617603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b6033546001600160a01b031633036200101457565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b156200106057565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b19195b1959d85d1958d85b1b60a21b6064820152608490fd5b15620010c257565b60405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201526b6163746976652070726f787960a01b6064820152608490fd5b803b1562001153576000805160206200196483398151915280546001600160a01b0319166001600160a01b03909216919091179055565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b91929015620012135750815115620011c4575090565b3b15620011ce5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b825190915015620012275750805190602001fd5b60405162461bcd60e51b8152602060048201529081906200124d90602483019062001251565b0390fd5b919082519283825260005b8481106200127e575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016200125c565b156200129b57565b60405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608490fdfe608060409080825261066f80380380916100198285610350565b8339810190828183031261034b5761003081610373565b6020828101516001600160401b039391929184821161034b57019084601f8301121561034b5781519161006283610387565b9261006f88519485610350565b8084528484019685828401011161034b57868561008c93016103a2565b803b156102f9578551635c60da1b60e01b80825292916001600160a01b0316908481600481855afa9081156102ee576000916102b9575b503b1561025c577fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080546001600160a01b03191682179055865192817f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e600080a2825115801590610254575b610142575b87516101f690816104798239f35b6004848693819382525afa9182156102495760009261020f575b5085519360608501908111858210176101f9578652602784527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c83850152660819985a5b195960ca1b84870152516101e3946000918291845af4903d156101f0573d6101c781610387565b906101d488519283610350565b8152600081943d92013e6103c5565b5038808080808080610134565b606092506103c5565b634e487b7160e01b600052604160045260246000fd5b90918382813d8311610242575b6102268183610350565b8101031261023f575061023890610373565b903861015c565b80fd5b503d61021c565b86513d6000823e3d90fd5b50600061012f565b865162461bcd60e51b815260048101859052603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b6064820152608490fd5b908582813d83116102e7575b6102cf8183610350565b8101031261023f57506102e190610373565b386100c3565b503d6102c5565b88513d6000823e3d90fd5b855162461bcd60e51b815260048101849052602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b6064820152608490fd5b600080fd5b601f909101601f19168101906001600160401b038211908210176101f957604052565b51906001600160a01b038216820361034b57565b6001600160401b0381116101f957601f01601f191660200190565b60005b8381106103b55750506000910152565b81810151838201526020016103a5565b9192901561042757508151156103d9575090565b3b156103e25790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b82519091501561043a5750805190602001fd5b6044604051809262461bcd60e51b82526020600483015261046a81518092816024860152602086860191016103a2565b601f01601f19168101030190fdfe608080604052366100c4577fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5054635c60da1b60e01b8252602090829060049082906001600160a01b03165afa9081156100b857600091610060575b5061015b565b6020903d82116100b0575b601f8201601f1916810167ffffffffffffffff81118282101761009c5761009693506040520161017a565b3861005a565b634e487b7160e01b84526041600452602484fd5b3d915061006b565b6040513d6000823e3d90fd5b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5054604051635c60da1b60e01b815290602090829060049082906001600160a01b03165afa9081156100b85760009161011d575061015b565b60203d8111610154575b601f8101601f1916820167ffffffffffffffff81118382101761009c5761009693506040528101906101a1565b503d610127565b6000808092368280378136915af43d82803e15610176573d90f35b3d90fd5b602090607f19011261019c576080516001600160a01b038116810361019c5790565b600080fd5b9081602091031261019c57516001600160a01b038116810361019c579056fea2646970667358221220282abf688b062a839a4662d551dabcadaac92addb7cebf18c13322630af9222464736f6c63430008120033360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220f6836763579abd7fbca9a04bd426e7210a76b5beedfe063cd6bdc42976732aaa64736f6c63430008120033",
    "sourceMap": "1050:4926:181:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1050:4926:181;;;;;;:::i;:::-;;-1:-1:-1;;;;;1050:4926:181;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;971:66:43;1050:4926:181;;;971:66:43;3301:14:45;3347:34;;;;;;1050:4926:181;3346:108:45;;;;1050:4926:181;;;;-1:-1:-1;;1050:4926:181;;;;;;;3562:65:45;;1050:4926:181;;;2265:30;;;2261:67;;2338:34;;2334:71;;2415:32;;2411:69;;2490:23;2486:60;;1050:4926;;2804:9;1050:4926;;;;;;;;2552:65;1050:4926;;;2552:65;1050:4926;;2623:42;1050:4926;;;2623:42;1050:4926;2671:56;1050:4926;;;2671:56;1050:4926;5366:69:45;971:66:43;1050:4926:181;;;;971:66:43;5366:69:45;;;:::i;:::-;;:::i;:::-;1195:12:39;929:10:65;1195:12:39;:::i;:::-;5366:69:45;971:66:43;1050:4926:181;;;;971:66:43;5366:69:45;:::i;:::-;2804:9:181;:::i;:::-;3647:99:45;;1050:4926:181;;;3647:99:45;1050:4926:181;3721:14:45;1050:4926:181;;;;;;;;;;;;3721:14:45;1050:4926:181;;2486:60;1050:4926;;-1:-1:-1;;;2522:24:181;;;2411:69;-1:-1:-1;1050:4926:181;;-1:-1:-1;;;2456:24:181;;;3562:65:45;-1:-1:-1;;1050:4926:181;;;;;3562:65:45;;;1050:4926:181;;;-1:-1:-1;;;1050:4926:181;;;;;;;;;;;;;;;;;-1:-1:-1;;;1050:4926:181;;;;;;;3346:108:45;3426:4;;1713:19:63;:23;3387:66:45;;3346:108;3387:66;971::43;1050:4926:181;971:66:43;;;3436:17:45;3346:108;;3347:34;971:66:43;1050:4926:181;971:66:43;;;3365:16:45;3347:34;;1050:4926:181;;;;;;;;;;;;;;;-1:-1:-1;;1050:4926:181;;;;;;:::i;:::-;1303:62:39;;:::i;:::-;1504:24:38;1050:4926:181;;-1:-1:-1;;;;;;1050:4926:181;-1:-1:-1;;;;;1050:4926:181;;;;;;;;;1513:6:39;1050:4926:181;;;;1543:43:38;;;;1050:4926:181;;;;;;;;;;;;;;;;;;;1202:13:38;1050:4926:181;;;-1:-1:-1;;;;;1050:4926:181;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;5666:15;1050:4926;;;-1:-1:-1;;;;;1050:4926:181;;;;;;;;;;;;;;;;;;;;;;1513:6:39;1050:4926:181;;;-1:-1:-1;;;;;1050:4926:181;;;;;;;;;;;;;;;-1:-1:-1;;1050:4926:181;;;;;;:::i;:::-;1303:62:39;;:::i;:::-;-1:-1:-1;;;;;1050:4926:181;;3995:34;;3991:71;;-1:-1:-1;;4068:42:181;1050:4926;;-1:-1:-1;;;;;;1050:4926:181;;;;;4121:48;;;;1050:4926;;3991:71;1050:4926;-1:-1:-1;;;4038:24:181;;;1050:4926;;;;;;;;;;;;;;1202:13:38;1050:4926:181;929:10:65;-1:-1:-1;;;;;1050:4926:181;;;2109:24:38;1050:4926:181;;929:10:65;2208:6:38;929:10:65;2208:6:38;:::i;:::-;1050:4926:181;;;;;;;;971:66:43;;;;1050:4926:181;;;;;;;;;;;;;;;-1:-1:-1;;;1050:4926:181;;;;;;;;;;;;;;;;;;1303:62:39;;:::i;:::-;1859:20:38;1050:4926:181;;-1:-1:-1;;;;;;1050:4926:181;;;;;;2758:6:39;1050:4926:181;;;;;;;;;-1:-1:-1;;;;;1050:4926:181;2806:40:39;1050:4926:181;;2806:40:39;1050:4926:181;;;;;;;;;;;;;;;;-1:-1:-1;2333:6:46;-1:-1:-1;;;;;1050:4926:181;2324:4:46;2316:23;1050:4926:181;;;;;-1:-1:-1;;;;;;;;;;;1050:4926:181;;;;;;;;971:66:43;;;;1050:4926:181;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1898:6:46;1050:4926:181;;;1873:80:46;1889:4;1881:23;;;1873:80;:::i;:::-;1963:87;-1:-1:-1;;;;;;;;;;;1050:4926:181;;;;;1971:30:46;1963:87;:::i;:::-;1303:62:39;;:::i;:::-;1050:4926:181;;3156:29;;;3152:66;;971::43;;;;;;;3330:17;;;;;;;;;;:::i;3232:526::-;1050:4926:181;;;;;;;971:66:43;;;3383:63;;;;;;;;;1050:4926:181;;3383:63:43;;;3232:526;-1:-1:-1;3379:302:43;;1050:4926:181;;-1:-1:-1;;;3610:56:43;;;;;971:66;;;;1050:4926:181;971:66:43;;1050:4926:181;971:66:43;1050:4926:181;;;971:66:43;-1:-1:-1;;;971:66:43;;;;;;3610:56;3379:302;3496:28;;;;;;;;;971:66;;3379:302;2171:17;;;:::i;:::-;2204:27;1050:4926:181;2204:27:43;;1050:4926:181;;2523:15:43;;;:28;;;3379:302;2519:123;;3379:302;3232:526;;;;;1050:4926:181;;2519:123:43;1050:4926:181;;7318:69:63;1050:4926:181;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;1050:4926:181;;;;7276:25:63;;;;;;1050:4926:181;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;7318:69:63;:::i;:::-;;2519:123:43;;;;;;;1050:4926:181;-1:-1:-1;1050:4926:181;;-1:-1:-1;7318:69:63;:::i;2523:28:43:-;;1050:4926:181;2523:28:43;;971:66;1050:4926:181;;-1:-1:-1;;;971:66:43;;;;;;;;;1050:4926:181;971:66:43;;1050:4926:181;971:66:43;1050:4926:181;;;971:66:43;-1:-1:-1;;;971:66:43;;;;;;;3383:63;;;;;;;;;;;;;;;;:::i;:::-;;;971:66;;;;;;3383:63;;;;;;;;;3152:66:181;1050:4926;;-1:-1:-1;;;3194:24:181;;1050:4926;;3194:24;1050:4926;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;1898:6:46;1050:4926:181;;;1873:80:46;1889:4;1881:23;;;1873:80;:::i;:::-;1963:87;-1:-1:-1;;;;;;;;;;;1050:4926:181;;;;;1971:30:46;1963:87;:::i;:::-;1303:62:39;;:::i;:::-;1050:4926:181;;3156:29;;3152:66;;1050:4926;;;;;;;;;;;;;;;;;;;;;;971:66:43;;;;;;;3330:17;;;;;;;;;;:::i;3232:526::-;1050:4926:181;;;;;;;971:66:43;;;3383:63;;;;;;;;;1050:4926:181;;3383:63:43;;;3232:526;-1:-1:-1;3379:302:43;;1050:4926:181;;-1:-1:-1;;;3610:56:43;;;;;971:66;;;;;;;1050:4926:181;971:66:43;1050:4926:181;;;971:66:43;-1:-1:-1;;;971:66:43;;;;;;3610:56;3379:302;3496:28;;;;;;;;;971:66;;3379:302;2171:17;;;:::i;:::-;2204:27;1050:4926:181;2204:27:43;;1050:4926:181;;2523:15:43;;;:28;;;2519:123;;3232:526;;;;;1050:4926:181;;2523:28:43;;1050:4926:181;2523:28:43;;3383:63;;;;;;;;;;;;;;;;:::i;:::-;;;971:66;;;;;;3383:63;;;;;;;;;1050:4926:181;;;;;;;;;;;;3152:66;1050:4926;;-1:-1:-1;;;3194:24:181;;1050:4926;;3194:24;1050:4926;;;;;;;;;;;-1:-1:-1;;1050:4926:181;;;;;;:::i;:::-;1303:62:39;;:::i;:::-;-1:-1:-1;;;;;1050:4926:181;;3618:30;;3614:67;;-1:-1:-1;;3687:56:181;1050:4926;;-1:-1:-1;;;;;;1050:4926:181;;;;;3754:40;;;;1050:4926;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4623:15;1050:4926;;;-1:-1:-1;;;;;1050:4926:181;;;;;;;;4648:19;;4644:56;;-1:-1:-1;1050:4926:181;;-1:-1:-1;;;4775:93:181;;;;-1:-1:-1;;;;;1050:4926:181;;;4775:93;;;1050:4926;;;;;;;4857:10;1050:4926;;;;;;;;4775:93;;;1050:4926;;4775:93;:::i;:::-;1050:4926;;4731:143;;;;;;;;;;;;;;;;;1050:4926;4731:143;;;;;;;;4762:4;1050:4926;;;;;;;;:::i;:::-;4731:143;;;;;;;;;1050:4926;;;;;4901:17;1050:4926;;;;;4775:93;1050:4926;;971:66:43;;;;;;;4901:55:181;;;;;;1050:4926;4901:55;;;;;;;;;;;1050:4926;4962:68;;;;;;1050:4926;;-1:-1:-1;;;4962:68:181;;-1:-1:-1;;;;;1050:4926:181;;;4962:68;;;1050:4926;;;;;;;;;;;;;;;;;;;;;;;;;;;4962:68;;;;;;;;;;;;1050:4926;-1:-1:-1;1050:4926:181;;-1:-1:-1;;;5062:35:181;;1050:4926;5062:35;1050:4926;971:66:43;1050:4926:181;5062:35;;;;;;;;;;;;1050:4926;5104:91;;;;;;1050:4926;;;;;;;971:66:43;;;;;;;;5104:91:181;;;;1050:4926;;4775:93;1050:4926;;;5104:91;;;;;;;;;;;;;;1050:4926;;;;4857:10;5207:81;4857:10;5207:81;;;1050:4926;;;5104:91;;;;;;;;:::i;:::-;1050:4926;;5104:91;;;;;;;;1050:4926;;971:66:43;1050:4926:181;;971:66:43;;;;5104:91:181;1050:4926;;;5062:35;;;;;;;;;;;;;;;;;:::i;:::-;;;971:66:43;;;;;5062:35:181;;;;;;;;;;1050:4926;;971:66:43;1050:4926:181;;971:66:43;;;;4962:68:181;;;;;;;:::i;:::-;;;;;;1050:4926;;;4901:55;;;;;;;;;;;;;;;;;:::i;:::-;;;1050:4926;;;;;;;;;;;;4901:55;;;;;;;;;;1050:4926;;971:66:43;1050:4926:181;;971:66:43;;;;4731:143:181;-1:-1:-1;;;1050:4926:181;;;;;4775:93;1050:4926;;4644:56;-1:-1:-1;;;4676:24:181;;;-1:-1:-1;4676:24:181;1050:4926;;;;-1:-1:-1;;;;;1050:4926:181;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;4775:93;;;1050:4926;;;;;;;;;;;;;;;;:::o;:::-;;;;;;4775:93;1050:4926;-1:-1:-1;;1050:4926:181;;;;:::o;:::-;;;;;;-1:-1:-1;;1050:4926:181;;;;5814:19;1050:4926;;;-1:-1:-1;;;;;1050:4926:181;;;;;;;;1777:153:38;1050:4926:181;;;;;1859:20:38;1050:4926:181;;1859:20:38;1050:4926:181;2758:6:39;1050:4926:181;;;;;;;;;;;;;;2758:6:39;1050:4926:181;;2806:40:39;1859:20:38;2806:40:39;;1777:153:38:o;1599:130:39:-;1513:6;1050:4926:181;-1:-1:-1;;;;;1050:4926:181;929:10:65;1662:23:39;1050:4926:181;;1599:130:39:o;1050:4926:181:-;;;;971:66:43;;;1050:4926:181;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1050:4926:181;;;;;;;;;;;;;;;;;-1:-1:-1;;;1050:4926:181;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1050:4926:181;;;;;;;;;;;;;;;;;-1:-1:-1;;;1050:4926:181;;;;;;;1699:281:43;1713:19:63;;:23;1050:4926:181;;-1:-1:-1;;;;;;;;;;;1050:4926:181;;-1:-1:-1;;;;;;1050:4926:181;-1:-1:-1;;;;;1050:4926:181;;;;;;;;;1699:281:43:o;1050:4926:181:-;;;-1:-1:-1;;;1050:4926:181;;;;;;;;;;;;;;;;;-1:-1:-1;;;1050:4926:181;;;;;;;7682:628:63;;;;7886:418;;;1050:4926:181;;;7917:22:63;7913:286;;8212:17;;:::o;7913:286::-;1713:19;:23;1050:4926:181;;8212:17:63;:::o;1050:4926:181:-;;;-1:-1:-1;;;1050:4926:181;;;;;;;;;;;;;;;;;;;;7886:418:63;1050:4926:181;;;;-1:-1:-1;8991:21:63;:17;;9163:142;;;;;;;8987:379;1050:4926:181;;-1:-1:-1;;;9335:20:63;;1050:4926:181;9335:20:63;;;1050:4926:181;;;;;;;;;;;:::i;:::-;9335:20:63;;;1050:4926:181;;;;;;;;;;;;;;;;;;;;;;;;;;;;4775:93;;;1050:4926;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1050:4926:181;;;;;;;;;;;;;;;;;-1:-1:-1;;;1050:4926:181;;;;;;",
    "linkReferences": {},
    "immutableReferences": {
      "31740": [
        {
          "start": 1405,
          "length": 32
        },
        {
          "start": 1712,
          "length": 32
        },
        {
          "start": 2458,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "acceptOwnership()": "79ba5097",
    "deployStaking(address)": "1249ed23",
    "getRareStakingTemplateAddress()": "c8cb01d8",
    "getStakingRegistryAddress()": "9f997eb0",
    "implementation()": "5c60da1b",
    "initialize(address,address,address,address)": "f8c8765e",
    "owner()": "8da5cb5b",
    "pendingOwner()": "e30c3978",
    "proxiableUUID()": "52d1902d",
    "renounceOwnership()": "715018a6",
    "setRareStakingTemplate(address)": "7ed155de",
    "setStakingRegistry(address)": "2c740844",
    "transferOwnership(address)": "f2fde38b",
    "upgradeTo(address)": "3659cfe6",
    "upgradeToAndCall(address,bytes)": "4f1ef286"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ZeroAddressUnsupported\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRareStakingTemplate\",\"type\":\"address\"}],\"name\":\"RareStakingTemplateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_deployingUser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_userStakedOn\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_stakingAddress\",\"type\":\"address\"}],\"name\":\"StakingContractCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newStakingRegistry\",\"type\":\"address\"}],\"name\":\"StakingRegistryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"deployStaking\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRareStakingTemplateAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakingRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingRegistry\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rareStakingTemplate\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardSwapFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rareStakingTemplate\",\"type\":\"address\"}],\"name\":\"setRareStakingTemplate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingRegistry\",\"type\":\"address\"}],\"name\":\"setStakingRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"koloz, charlescrain\",\"details\":\"Made to be used with a UUPS Proxy.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"deployStaking(address)\":{\"details\":\"This contract must have the {STAKING_INFO_SETTER_ROLE} role on {RareStakingRegistry}.\",\"params\":{\"_user\":\"Address of the target to deploy staking contract for.\"},\"returns\":{\"_0\":\"address Address of the staking contract.\"}},\"getRareStakingTemplateAddress()\":{\"returns\":{\"_0\":\"address Address of the staking ERC20 template to be used.\"}},\"getStakingRegistryAddress()\":{\"returns\":{\"_0\":\"address Address of the staking registry contract.\"}},\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setRareStakingTemplate(address)\":{\"details\":\"Requires the caller to be the owner of the contract.\",\"params\":{\"_rareStakingTemplate\":\"Address of the staking ERC20 template.\"}},\"setStakingRegistry(address)\":{\"details\":\"Requires the caller to be the owner of the contract.\",\"params\":{\"_stakingRegistry\":\"Address of the new staking registry contract.\"}},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"title\":\"RarityPoolFactory\",\"version\":1},\"userdoc\":{\"errors\":{\"ZeroAddressUnsupported()\":[{\"notice\":\"Emitted when Zero address provided where it is not allowed.\"}]},\"events\":{\"RareStakingTemplateUpdated(address)\":{\"notice\":\"Emitted via {setRareStakingTemplate} when the staking template is updated.\"},\"StakingContractCreated(address,address,address)\":{\"notice\":\"Emitted via {deployStaking} when a new staking contract is deployed.\"},\"StakingRegistryUpdated(address)\":{\"notice\":\"Emitted via {setStakingRegistry} when the staking registry is updated.\"}},\"kind\":\"user\",\"methods\":{\"deployStaking(address)\":{\"notice\":\"Deploys a staking contract for the supplied target address. Reverts if address exists.\"},\"getRareStakingTemplateAddress()\":{\"notice\":\"Retrieve the currently template of the staking ERC20 contract.\"},\"getStakingRegistryAddress()\":{\"notice\":\"Retrieve the currently used staking registry address.\"},\"setRareStakingTemplate(address)\":{\"notice\":\"Set the rare staking ERC20 template address to be used.\"},\"setStakingRegistry(address)\":{\"notice\":\"Set the staking registry address field to be used.\"}},\"notice\":\"The Staking Factory Contract used to deploy new staking ERC20 contracts pertaining to a user.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/staking/factory/RarityPoolFactory.sol\":\"RarityPoolFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/buffer/=lib/buffer/\",\":@ensdomains/ens-contracts/=lib/ens-contracts/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/contracts/\",\":@uniswap/v3-core/contracts/=lib/v3-core/contracts/\",\":@uniswap/v3-periphery/=lib/v3-periphery/contracts/\",\":arachnid/solidity-stringutils/=lib/solidity-stringutils/\",\":ds-test/=lib/ds-test/src/\",\":ensdomains/ens-contracts/=lib/ensdomains/ens-contracts/contracts/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":rareprotocol/assets/=lib/assets/src/\",\":rareprotocol/aux/=src/\",\":royalty-guard/=lib/royalty-guard/src/royalty-guard/\",\":royalty-registry-solidity/=lib/royalty-registry-solidity/contracts/\",\":royalty-registry/=lib/royalty-registry-solidity/contracts/\",\":solmate/=lib/solmate/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0x84efb8889801b0ac817324aff6acc691d07bbee816b671817132911d287a8c63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec6df2255fadc251ea905043c47bf55170ee6cb5d7ca8b5c8ed54c84eac9d09e\",\"dweb:/ipfs/QmaokWfuL59uarki5yoDGbPzh4cErzEfnAzfmesTNJNXE9\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC20Upgradeable.sol\":{\"keccak256\":\"0xe73087c5001a37cf7186b3709377c7ceb01a0d38fb908723d1464cea66b4958c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b835a1929ca2c7c978085e58f08f48855df8a82ef6a426ac71393cf032ea0fc5\",\"dweb:/ipfs/QmUMXRN9g8u9wm63wc7PMaSs7oG2nqnM1VVvktaWkvF68v\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9826c7edf276ff48b99ee217358393097c30448a71d345d287c2f6961bb1f159\",\"dweb:/ipfs/QmYXBTY9wDvffGU47yMRFJ1NFyKwpbj94VHzRzhsm6R7Gz\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33e8f8d863c6943ea046fcf4972b4e815c04ab06bad195dba1d93f8ebeb8420d\",\"dweb:/ipfs/QmTQzxQTuuzPDk3eqVmYy7hv2RCXM1yt1NtubXpRbzYjaj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xbe62cd20530654aaec3c79b0ac559072f873d75078476fa9d5d53b5056a82e98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15caa92e99e78a08d104db0b87199ee317ad7a9e6874393d89c2fabe793289c2\",\"dweb:/ipfs/QmbSio6ocLhJUaGEferLk82tr1RtJWvZMFLyRmDo7Y23jf\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x0e7c9f782f550d78de6494455a48ef509ece00bed07d74051a27c588a7366803\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ac0362e73a0048bde4dcc1c6e2466fa9fb2bc931b76a28ee8b784407ca5c054\",\"dweb:/ipfs/QmcQuaJwykGpVgd11kZfz2WU5HmWD9rFG5meYR8ATR8mGA\"]},\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol\":{\"keccak256\":\"0x85439e74ab467b6a23d45d32bdc9506cbc3760320289afd605f11638c4138e95\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e18633c182e445895e5a70f9e79f2558d0f6eac86767fd1d90552177df2955c\",\"dweb:/ipfs/QmagUFUJbiNGRGGajg9CF5LPuopc44XSCtcCaYvQasBuX9\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xa6dfb97ce947b7c846b054ee7d45d12383359778f4f3743654ae0a34fa421b26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b97e7e5a77ea47c08ba422291df887eba76c80982f52a6e94a30106e9377a94f\",\"dweb:/ipfs/Qme7N2XRC7mcDxB8wZxNWPk6T8S2qsnmhAqXeUj4CNvsGD\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x20ecf3c67cab5ec0a1d0cc7d980fa236ffdfd8579d8d8b6b89d29329bc6e78ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b52e4581ee6605732661d367845d2c551e0efcf81852f29248aef6d4be0a300b\",\"dweb:/ipfs/QmaLPj2TrVCTPH6D1BEjBVCb9N1dLJ6pTcoJwCmM3HWkfC\"]},\"src/staking/factory/IRarityPoolFactory.sol\":{\"keccak256\":\"0x6694168a9511f905e23d5cbfc6caa7191a53dc6f93829ef6a7b819e50b80c159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6cbf93bab05ae990a8b069efd7478b86e89df83d0dd99885d4b0571db31485f\",\"dweb:/ipfs/QmTAPm3GQWNJEarottuC3TY3pGuWTnuBXe3uSAfMgPgcVq\"]},\"src/staking/factory/IRewardAccumulatorFactory.sol\":{\"keccak256\":\"0x587037557e7ec3e0f122938019383e40e482559a81a64d5762e08e88025f2ee6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c1630e9e02855e65dfa623615e9c1037a9b7da2775c172002213e51bcfc358a1\",\"dweb:/ipfs/QmSUhBht5eMy8xpUKPYegYggpWRV4mtKoNkuTyiHdgVtZA\"]},\"src/staking/factory/RarityPoolFactory.sol\":{\"keccak256\":\"0x1f91aeb2e2911dc030bd65d42b13067855114516d4c06baa3a26a4ab9b27e931\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b492542b2946434e154ac860b2ac45940de8a1e1c519f23bafdd23eff2cd45c\",\"dweb:/ipfs/QmRq85ZfsuFWdKhwkX1gfRFfwAm24ExNJkxh2PNQU3SwuB\"]},\"src/staking/registry/IRareStakingRegistry.sol\":{\"keccak256\":\"0x26458c277ad3b3280dbedd7dbfdfbaa8d2af5f6180959ef732cbcec78b6c2924\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5ba0ab87bedec5547531b79c123233dfcbdf9062a860845d242ae518e6ff8d6\",\"dweb:/ipfs/QmT4kZV7MjKwevN2ABFRD7tNnXRkUxJqNKyrXxthfWC5mR\"]},\"src/staking/token/IRarityPool.sol\":{\"keccak256\":\"0x8a1c433510ef5db8f4a8b2b298c6618a91e974f1ea6c280967c1d3c710e3794b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ade4d1308318773489621961a1b6e2ed76a0c8ed0686225e75100f73df91f14\",\"dweb:/ipfs/Qma1AxmUyfM8CbRN6MnWW6BVpYE9iByWQygCDvG3RunbqS\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.18+commit.87f61d96"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroAddressUnsupported"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousAdmin",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "beacon",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "BeaconUpgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferStarted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newRareStakingTemplate",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RareStakingTemplateUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_deployingUser",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_userStakedOn",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_stakingAddress",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "StakingContractCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newStakingRegistry",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "StakingRegistryUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Upgraded",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deployStaking",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRareStakingTemplateAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakingRegistryAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "implementation",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_stakingRegistry",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_rareStakingTemplate",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_rewardSwapFactory",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxiableUUID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_rareStakingTemplate",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRareStakingTemplate"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_stakingRegistry",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setStakingRegistry"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "upgradeTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "upgradeToAndCall"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "acceptOwnership()": {
            "details": "The new owner accepts the ownership transfer."
          },
          "deployStaking(address)": {
            "details": "This contract must have the {STAKING_INFO_SETTER_ROLE} role on {RareStakingRegistry}.",
            "params": {
              "_user": "Address of the target to deploy staking contract for."
            },
            "returns": {
              "_0": "address Address of the staking contract."
            }
          },
          "getRareStakingTemplateAddress()": {
            "returns": {
              "_0": "address Address of the staking ERC20 template to be used."
            }
          },
          "getStakingRegistryAddress()": {
            "returns": {
              "_0": "address Address of the staking registry contract."
            }
          },
          "implementation()": {
            "details": "Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "pendingOwner()": {
            "details": "Returns the address of the pending owner."
          },
          "proxiableUUID()": {
            "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "setRareStakingTemplate(address)": {
            "details": "Requires the caller to be the owner of the contract.",
            "params": {
              "_rareStakingTemplate": "Address of the staking ERC20 template."
            }
          },
          "setStakingRegistry(address)": {
            "details": "Requires the caller to be the owner of the contract.",
            "params": {
              "_stakingRegistry": "Address of the new staking registry contract."
            }
          },
          "transferOwnership(address)": {
            "details": "Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner."
          },
          "upgradeTo(address)": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          },
          "upgradeToAndCall(address,bytes)": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "deployStaking(address)": {
            "notice": "Deploys a staking contract for the supplied target address. Reverts if address exists."
          },
          "getRareStakingTemplateAddress()": {
            "notice": "Retrieve the currently template of the staking ERC20 contract."
          },
          "getStakingRegistryAddress()": {
            "notice": "Retrieve the currently used staking registry address."
          },
          "setRareStakingTemplate(address)": {
            "notice": "Set the rare staking ERC20 template address to be used."
          },
          "setStakingRegistry(address)": {
            "notice": "Set the staking registry address field to be used."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ensdomains/buffer/=lib/buffer/",
        "@ensdomains/ens-contracts/=lib/ens-contracts/contracts/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@uniswap/v3-core/=lib/v3-core/contracts/",
        "@uniswap/v3-core/contracts/=lib/v3-core/contracts/",
        "@uniswap/v3-periphery/=lib/v3-periphery/contracts/",
        "arachnid/solidity-stringutils/=lib/solidity-stringutils/",
        "ds-test/=lib/ds-test/src/",
        "ensdomains/ens-contracts/=lib/ensdomains/ens-contracts/contracts/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        "rareprotocol/assets/=lib/assets/src/",
        "rareprotocol/aux/=src/",
        "royalty-guard/=lib/royalty-guard/src/royalty-guard/",
        "royalty-registry-solidity/=lib/royalty-registry-solidity/contracts/",
        "royalty-registry/=lib/royalty-registry-solidity/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/staking/factory/RarityPoolFactory.sol": "RarityPoolFactory"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlUpgradeable.sol": {
        "keccak256": "0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa",
        "urls": [
          "bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c",
          "dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol": {
        "keccak256": "0x84efb8889801b0ac817324aff6acc691d07bbee816b671817132911d287a8c63",
        "urls": [
          "bzz-raw://ec6df2255fadc251ea905043c47bf55170ee6cb5d7ca8b5c8ed54c84eac9d09e",
          "dweb:/ipfs/QmaokWfuL59uarki5yoDGbPzh4cErzEfnAzfmesTNJNXE9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98",
        "urls": [
          "bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8",
          "dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC1967Upgradeable.sol": {
        "keccak256": "0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b",
        "urls": [
          "bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0",
          "dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC20Upgradeable.sol": {
        "keccak256": "0xe73087c5001a37cf7186b3709377c7ceb01a0d38fb908723d1464cea66b4958c",
        "urls": [
          "bzz-raw://b835a1929ca2c7c978085e58f08f48855df8a82ef6a426ac71393cf032ea0fc5",
          "dweb:/ipfs/QmUMXRN9g8u9wm63wc7PMaSs7oG2nqnM1VVvktaWkvF68v"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol": {
        "keccak256": "0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f",
        "urls": [
          "bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053",
          "dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
        "keccak256": "0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161",
        "urls": [
          "bzz-raw://9826c7edf276ff48b99ee217358393097c30448a71d345d287c2f6961bb1f159",
          "dweb:/ipfs/QmYXBTY9wDvffGU47yMRFJ1NFyKwpbj94VHzRzhsm6R7Gz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol": {
        "keccak256": "0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908",
        "urls": [
          "bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1",
          "dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad",
        "urls": [
          "bzz-raw://33e8f8d863c6943ea046fcf4972b4e815c04ab06bad195dba1d93f8ebeb8420d",
          "dweb:/ipfs/QmTQzxQTuuzPDk3eqVmYy7hv2RCXM1yt1NtubXpRbzYjaj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f",
        "urls": [
          "bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f",
          "dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol": {
        "keccak256": "0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908",
        "urls": [
          "bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685",
          "dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol": {
        "keccak256": "0xbe62cd20530654aaec3c79b0ac559072f873d75078476fa9d5d53b5056a82e98",
        "urls": [
          "bzz-raw://15caa92e99e78a08d104db0b87199ee317ad7a9e6874393d89c2fabe793289c2",
          "dweb:/ipfs/QmbSio6ocLhJUaGEferLk82tr1RtJWvZMFLyRmDo7Y23jf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol": {
        "keccak256": "0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff",
        "urls": [
          "bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688",
          "dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
        "keccak256": "0x0e7c9f782f550d78de6494455a48ef509ece00bed07d74051a27c588a7366803",
        "urls": [
          "bzz-raw://4ac0362e73a0048bde4dcc1c6e2466fa9fb2bc931b76a28ee8b784407ca5c054",
          "dweb:/ipfs/QmcQuaJwykGpVgd11kZfz2WU5HmWD9rFG5meYR8ATR8mGA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol": {
        "keccak256": "0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27",
        "urls": [
          "bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472",
          "dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol": {
        "keccak256": "0x85439e74ab467b6a23d45d32bdc9506cbc3760320289afd605f11638c4138e95",
        "urls": [
          "bzz-raw://6e18633c182e445895e5a70f9e79f2558d0f6eac86767fd1d90552177df2955c",
          "dweb:/ipfs/QmagUFUJbiNGRGGajg9CF5LPuopc44XSCtcCaYvQasBuX9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
        "urls": [
          "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
          "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xa6dfb97ce947b7c846b054ee7d45d12383359778f4f3743654ae0a34fa421b26",
        "urls": [
          "bzz-raw://b97e7e5a77ea47c08ba422291df887eba76c80982f52a6e94a30106e9377a94f",
          "dweb:/ipfs/Qme7N2XRC7mcDxB8wZxNWPk6T8S2qsnmhAqXeUj4CNvsGD"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0x20ecf3c67cab5ec0a1d0cc7d980fa236ffdfd8579d8d8b6b89d29329bc6e78ae",
        "urls": [
          "bzz-raw://b52e4581ee6605732661d367845d2c551e0efcf81852f29248aef6d4be0a300b",
          "dweb:/ipfs/QmaLPj2TrVCTPH6D1BEjBVCb9N1dLJ6pTcoJwCmM3HWkfC"
        ],
        "license": "MIT"
      },
      "src/staking/factory/IRarityPoolFactory.sol": {
        "keccak256": "0x6694168a9511f905e23d5cbfc6caa7191a53dc6f93829ef6a7b819e50b80c159",
        "urls": [
          "bzz-raw://a6cbf93bab05ae990a8b069efd7478b86e89df83d0dd99885d4b0571db31485f",
          "dweb:/ipfs/QmTAPm3GQWNJEarottuC3TY3pGuWTnuBXe3uSAfMgPgcVq"
        ],
        "license": "MIT"
      },
      "src/staking/factory/IRewardAccumulatorFactory.sol": {
        "keccak256": "0x587037557e7ec3e0f122938019383e40e482559a81a64d5762e08e88025f2ee6",
        "urls": [
          "bzz-raw://c1630e9e02855e65dfa623615e9c1037a9b7da2775c172002213e51bcfc358a1",
          "dweb:/ipfs/QmSUhBht5eMy8xpUKPYegYggpWRV4mtKoNkuTyiHdgVtZA"
        ],
        "license": "MIT"
      },
      "src/staking/factory/RarityPoolFactory.sol": {
        "keccak256": "0x1f91aeb2e2911dc030bd65d42b13067855114516d4c06baa3a26a4ab9b27e931",
        "urls": [
          "bzz-raw://1b492542b2946434e154ac860b2ac45940de8a1e1c519f23bafdd23eff2cd45c",
          "dweb:/ipfs/QmRq85ZfsuFWdKhwkX1gfRFfwAm24ExNJkxh2PNQU3SwuB"
        ],
        "license": "MIT"
      },
      "src/staking/registry/IRareStakingRegistry.sol": {
        "keccak256": "0x26458c277ad3b3280dbedd7dbfdfbaa8d2af5f6180959ef732cbcec78b6c2924",
        "urls": [
          "bzz-raw://e5ba0ab87bedec5547531b79c123233dfcbdf9062a860845d242ae518e6ff8d6",
          "dweb:/ipfs/QmT4kZV7MjKwevN2ABFRD7tNnXRkUxJqNKyrXxthfWC5mR"
        ],
        "license": "MIT"
      },
      "src/staking/token/IRarityPool.sol": {
        "keccak256": "0x8a1c433510ef5db8f4a8b2b298c6618a91e974f1ea6c280967c1d3c710e3794b",
        "urls": [
          "bzz-raw://8ade4d1308318773489621961a1b6e2ed76a0c8ed0686225e75100f73df91f14",
          "dweb:/ipfs/Qma1AxmUyfM8CbRN6MnWW6BVpYE9iByWQygCDvG3RunbqS"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/staking/factory/RarityPoolFactory.sol",
    "id": 64731,
    "exportedSymbols": {
      "BeaconProxy": [
        40224
      ],
      "IAccessControlUpgradeable": [
        30934
      ],
      "IBeaconUpgradeable": [
        31540
      ],
      "IRareStakingRegistry": [
        65219
      ],
      "IRarityPool": [
        67326
      ],
      "IRarityPoolFactory": [
        64355
      ],
      "IRewardAccumulatorFactory": [
        64392
      ],
      "Ownable2StepUpgradeable": [
        31040
      ],
      "RarityPoolFactory": [
        64730
      ],
      "UUPSUpgradeable": [
        31845
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:5945:181",
    "nodes": [
      {
        "id": 64394,
        "nodeType": "PragmaDirective",
        "src": "32:23:181",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".18"
        ]
      },
      {
        "id": 64396,
        "nodeType": "ImportDirective",
        "src": "57:110:181",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/access/Ownable2StepUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64731,
        "sourceUnit": 31041,
        "symbolAliases": [
          {
            "foreign": {
              "id": 64395,
              "name": "Ownable2StepUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31040,
              "src": "65:23:181",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 64398,
        "nodeType": "ImportDirective",
        "src": "168:114:181",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/access/IAccessControlUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64731,
        "sourceUnit": 30935,
        "symbolAliases": [
          {
            "foreign": {
              "id": 64397,
              "name": "IAccessControlUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30934,
              "src": "176:25:181",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 64400,
        "nodeType": "ImportDirective",
        "src": "283:99:181",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64731,
        "sourceUnit": 31846,
        "symbolAliases": [
          {
            "foreign": {
              "id": 64399,
              "name": "UUPSUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31845,
              "src": "291:15:181",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 64402,
        "nodeType": "ImportDirective",
        "src": "383:106:181",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64731,
        "sourceUnit": 31541,
        "symbolAliases": [
          {
            "foreign": {
              "id": 64401,
              "name": "IBeaconUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31540,
              "src": "391:18:181",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 64404,
        "nodeType": "ImportDirective",
        "src": "491:80:181",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol",
        "file": "openzeppelin-contracts/proxy/beacon/BeaconProxy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64731,
        "sourceUnit": 40225,
        "symbolAliases": [
          {
            "foreign": {
              "id": 64403,
              "name": "BeaconProxy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40224,
              "src": "499:11:181",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 64406,
        "nodeType": "ImportDirective",
        "src": "573:60:181",
        "nodes": [],
        "absolutePath": "src/staking/factory/IRarityPoolFactory.sol",
        "file": "./IRarityPoolFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64731,
        "sourceUnit": 64356,
        "symbolAliases": [
          {
            "foreign": {
              "id": 64405,
              "name": "IRarityPoolFactory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 64355,
              "src": "581:18:181",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 64408,
        "nodeType": "ImportDirective",
        "src": "634:74:181",
        "nodes": [],
        "absolutePath": "src/staking/factory/IRewardAccumulatorFactory.sol",
        "file": "./IRewardAccumulatorFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64731,
        "sourceUnit": 64393,
        "symbolAliases": [
          {
            "foreign": {
              "id": 64407,
              "name": "IRewardAccumulatorFactory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 64392,
              "src": "642:25:181",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 64410,
        "nodeType": "ImportDirective",
        "src": "709:74:181",
        "nodes": [],
        "absolutePath": "src/staking/registry/IRareStakingRegistry.sol",
        "file": "../registry/IRareStakingRegistry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64731,
        "sourceUnit": 65220,
        "symbolAliases": [
          {
            "foreign": {
              "id": 64409,
              "name": "IRareStakingRegistry",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 65219,
              "src": "717:20:181",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 64412,
        "nodeType": "ImportDirective",
        "src": "784:53:181",
        "nodes": [],
        "absolutePath": "src/staking/token/IRarityPool.sol",
        "file": "../token/IRarityPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 64731,
        "sourceUnit": 67327,
        "symbolAliases": [
          {
            "foreign": {
              "id": 64411,
              "name": "IRarityPool",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 67326,
              "src": "792:11:181",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 64730,
        "nodeType": "ContractDefinition",
        "src": "1050:4926:181",
        "nodes": [
          {
            "id": 64424,
            "nodeType": "VariableDeclaration",
            "src": "1406:44:181",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "stakingRegistry",
            "nameLocation": "1435:15:181",
            "scope": 64730,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IRareStakingRegistry_$65219",
              "typeString": "contract IRareStakingRegistry"
            },
            "typeName": {
              "id": 64423,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 64422,
                "name": "IRareStakingRegistry",
                "nameLocations": [
                  "1406:20:181"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 65219,
                "src": "1406:20:181"
              },
              "referencedDeclaration": 65219,
              "src": "1406:20:181",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IRareStakingRegistry_$65219",
                "typeString": "contract IRareStakingRegistry"
              }
            },
            "visibility": "private"
          },
          {
            "id": 64427,
            "nodeType": "VariableDeclaration",
            "src": "1489:51:181",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "rewardSwapFactory",
            "nameLocation": "1523:17:181",
            "scope": 64730,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IRewardAccumulatorFactory_$64392",
              "typeString": "contract IRewardAccumulatorFactory"
            },
            "typeName": {
              "id": 64426,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 64425,
                "name": "IRewardAccumulatorFactory",
                "nameLocations": [
                  "1489:25:181"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 64392,
                "src": "1489:25:181"
              },
              "referencedDeclaration": 64392,
              "src": "1489:25:181",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IRewardAccumulatorFactory_$64392",
                "typeString": "contract IRewardAccumulatorFactory"
              }
            },
            "visibility": "private"
          },
          {
            "id": 64429,
            "nodeType": "VariableDeclaration",
            "src": "1599:35:181",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "rareStakingTemplate",
            "nameLocation": "1615:19:181",
            "scope": 64730,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 64428,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1599:7:181",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 64436,
            "nodeType": "FunctionDefinition",
            "src": "1839:47:181",
            "nodes": [],
            "body": {
              "id": 64435,
              "nodeType": "Block",
              "src": "1853:33:181",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 64432,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31690,
                      "src": "1859:20:181",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 64433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1859:22:181",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64434,
                  "nodeType": "ExpressionStatement",
                  "src": "1859:22:181"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 64430,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1850:2:181"
            },
            "returnParameters": {
              "id": 64431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1853:0:181"
            },
            "scope": 64730,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 64516,
            "nodeType": "FunctionDefinition",
            "src": "2091:728:181",
            "nodes": [],
            "body": {
              "id": 64515,
              "nodeType": "Block",
              "src": "2255:564:181",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 64454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 64449,
                      "name": "_stakingRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64438,
                      "src": "2265:16:181",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 64452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2293:1:181",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 64451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2285:7:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 64450,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2285:7:181",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 64453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2285:10:181",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2265:30:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 64458,
                  "nodeType": "IfStatement",
                  "src": "2261:67:181",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 64455,
                        "name": "ZeroAddressUnsupported",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64322,
                        "src": "2304:22:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 64456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2304:24:181",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 64457,
                    "nodeType": "RevertStatement",
                    "src": "2297:31:181"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 64464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 64459,
                      "name": "_rareStakingTemplate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64440,
                      "src": "2338:20:181",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 64462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2370:1:181",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 64461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2362:7:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 64460,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2362:7:181",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 64463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2362:10:181",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2338:34:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 64468,
                  "nodeType": "IfStatement",
                  "src": "2334:71:181",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 64465,
                        "name": "ZeroAddressUnsupported",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64322,
                        "src": "2381:22:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 64466,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2381:24:181",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 64467,
                    "nodeType": "RevertStatement",
                    "src": "2374:31:181"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 64474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 64469,
                      "name": "_rewardSwapFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64442,
                      "src": "2415:18:181",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 64472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2445:1:181",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 64471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2437:7:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 64470,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2437:7:181",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 64473,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2437:10:181",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2415:32:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 64478,
                  "nodeType": "IfStatement",
                  "src": "2411:69:181",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 64475,
                        "name": "ZeroAddressUnsupported",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64322,
                        "src": "2456:22:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 64476,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2456:24:181",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 64477,
                    "nodeType": "RevertStatement",
                    "src": "2449:31:181"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 64484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 64479,
                      "name": "_newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64444,
                      "src": "2490:9:181",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 64482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2511:1:181",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 64481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2503:7:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 64480,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2503:7:181",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 64483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2503:10:181",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2490:23:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 64488,
                  "nodeType": "IfStatement",
                  "src": "2486:60:181",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 64485,
                        "name": "ZeroAddressUnsupported",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64322,
                        "src": "2522:22:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 64486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2522:24:181",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 64487,
                    "nodeType": "RevertStatement",
                    "src": "2515:31:181"
                  }
                },
                {
                  "expression": {
                    "id": 64493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 64489,
                      "name": "rewardSwapFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64427,
                      "src": "2552:17:181",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRewardAccumulatorFactory_$64392",
                        "typeString": "contract IRewardAccumulatorFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 64491,
                          "name": "_rewardSwapFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64442,
                          "src": "2598:18:181",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 64490,
                        "name": "IRewardAccumulatorFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64392,
                        "src": "2572:25:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IRewardAccumulatorFactory_$64392_$",
                          "typeString": "type(contract IRewardAccumulatorFactory)"
                        }
                      },
                      "id": 64492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2572:45:181",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRewardAccumulatorFactory_$64392",
                        "typeString": "contract IRewardAccumulatorFactory"
                      }
                    },
                    "src": "2552:65:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRewardAccumulatorFactory_$64392",
                      "typeString": "contract IRewardAccumulatorFactory"
                    }
                  },
                  "id": 64494,
                  "nodeType": "ExpressionStatement",
                  "src": "2552:65:181"
                },
                {
                  "expression": {
                    "id": 64497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 64495,
                      "name": "rareStakingTemplate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64429,
                      "src": "2623:19:181",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 64496,
                      "name": "_rareStakingTemplate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64440,
                      "src": "2645:20:181",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2623:42:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 64498,
                  "nodeType": "ExpressionStatement",
                  "src": "2623:42:181"
                },
                {
                  "expression": {
                    "id": 64503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 64499,
                      "name": "stakingRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64424,
                      "src": "2671:15:181",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRareStakingRegistry_$65219",
                        "typeString": "contract IRareStakingRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 64501,
                          "name": "_stakingRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64438,
                          "src": "2710:16:181",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 64500,
                        "name": "IRareStakingRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65219,
                        "src": "2689:20:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IRareStakingRegistry_$65219_$",
                          "typeString": "type(contract IRareStakingRegistry)"
                        }
                      },
                      "id": 64502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2689:38:181",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRareStakingRegistry_$65219",
                        "typeString": "contract IRareStakingRegistry"
                      }
                    },
                    "src": "2671:56:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRareStakingRegistry_$65219",
                      "typeString": "contract IRareStakingRegistry"
                    }
                  },
                  "id": 64504,
                  "nodeType": "ExpressionStatement",
                  "src": "2671:56:181"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 64505,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31067,
                      "src": "2733:14:181",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 64506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2733:16:181",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64507,
                  "nodeType": "ExpressionStatement",
                  "src": "2733:16:181"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 64508,
                      "name": "__UUPSUpgradeable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31727,
                      "src": "2755:22:181",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 64509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2755:24:181",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64510,
                  "nodeType": "ExpressionStatement",
                  "src": "2755:24:181"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64512,
                        "name": "_newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64444,
                        "src": "2804:9:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 64511,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        31012
                      ],
                      "referencedDeclaration": 31012,
                      "src": "2785:18:181",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 64513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2785:29:181",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64514,
                  "nodeType": "ExpressionStatement",
                  "src": "2785:29:181"
                }
              ]
            },
            "functionSelector": "f8c8765e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 64447,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 64446,
                  "name": "initializer",
                  "nameLocations": [
                    "2243:11:181"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31611,
                  "src": "2243:11:181"
                },
                "nodeType": "ModifierInvocation",
                "src": "2243:11:181"
              }
            ],
            "name": "initialize",
            "nameLocation": "2100:10:181",
            "parameters": {
              "id": 64445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64438,
                  "mutability": "mutable",
                  "name": "_stakingRegistry",
                  "nameLocation": "2124:16:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 64516,
                  "src": "2116:24:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64437,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2116:7:181",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64440,
                  "mutability": "mutable",
                  "name": "_rareStakingTemplate",
                  "nameLocation": "2154:20:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 64516,
                  "src": "2146:28:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64439,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2146:7:181",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64442,
                  "mutability": "mutable",
                  "name": "_rewardSwapFactory",
                  "nameLocation": "2188:18:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 64516,
                  "src": "2180:26:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64441,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2180:7:181",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 64444,
                  "mutability": "mutable",
                  "name": "_newOwner",
                  "nameLocation": "2220:9:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 64516,
                  "src": "2212:17:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64443,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2212:7:181",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2110:123:181"
            },
            "returnParameters": {
              "id": 64448,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2255:0:181"
            },
            "scope": 64730,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 64536,
            "nodeType": "FunctionDefinition",
            "src": "3066:157:181",
            "nodes": [],
            "body": {
              "id": 64535,
              "nodeType": "Block",
              "src": "3146:77:181",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 64530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 64525,
                      "name": "_implementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64519,
                      "src": "3156:15:181",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 64528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3183:1:181",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 64527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3175:7:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 64526,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3175:7:181",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 64529,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3175:10:181",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3156:29:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 64534,
                  "nodeType": "IfStatement",
                  "src": "3152:66:181",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 64531,
                        "name": "ZeroAddressUnsupported",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64322,
                        "src": "3194:22:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 64532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3194:24:181",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 64533,
                    "nodeType": "RevertStatement",
                    "src": "3187:31:181"
                  }
                }
              ]
            },
            "baseFunctions": [
              31839
            ],
            "documentation": {
              "id": 64517,
              "nodeType": "StructuredDocumentation",
              "src": "3032:31:181",
              "text": "@inheritdoc UUPSUpgradeable"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 64523,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 64522,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3136:9:181"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31086,
                  "src": "3136:9:181"
                },
                "nodeType": "ModifierInvocation",
                "src": "3136:9:181"
              }
            ],
            "name": "_authorizeUpgrade",
            "nameLocation": "3075:17:181",
            "overrides": {
              "id": 64521,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3127:8:181"
            },
            "parameters": {
              "id": 64520,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64519,
                  "mutability": "mutable",
                  "name": "_implementation",
                  "nameLocation": "3101:15:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 64536,
                  "src": "3093:23:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64518,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3093:7:181",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3092:25:181"
            },
            "returnParameters": {
              "id": 64524,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3146:0:181"
            },
            "scope": 64730,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 64565,
            "nodeType": "FunctionDefinition",
            "src": "3535:264:181",
            "nodes": [],
            "body": {
              "id": 64564,
              "nodeType": "Block",
              "src": "3608:191:181",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 64549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 64544,
                      "name": "_stakingRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64539,
                      "src": "3618:16:181",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 64547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3646:1:181",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 64546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3638:7:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 64545,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3638:7:181",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 64548,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3638:10:181",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3618:30:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 64553,
                  "nodeType": "IfStatement",
                  "src": "3614:67:181",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 64550,
                        "name": "ZeroAddressUnsupported",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64322,
                        "src": "3657:22:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 64551,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3657:24:181",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 64552,
                    "nodeType": "RevertStatement",
                    "src": "3650:31:181"
                  }
                },
                {
                  "expression": {
                    "id": 64558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 64554,
                      "name": "stakingRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64424,
                      "src": "3687:15:181",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRareStakingRegistry_$65219",
                        "typeString": "contract IRareStakingRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 64556,
                          "name": "_stakingRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64539,
                          "src": "3726:16:181",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 64555,
                        "name": "IRareStakingRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65219,
                        "src": "3705:20:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IRareStakingRegistry_$65219_$",
                          "typeString": "type(contract IRareStakingRegistry)"
                        }
                      },
                      "id": 64557,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3705:38:181",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRareStakingRegistry_$65219",
                        "typeString": "contract IRareStakingRegistry"
                      }
                    },
                    "src": "3687:56:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRareStakingRegistry_$65219",
                      "typeString": "contract IRareStakingRegistry"
                    }
                  },
                  "id": 64559,
                  "nodeType": "ExpressionStatement",
                  "src": "3687:56:181"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 64561,
                        "name": "_stakingRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64539,
                        "src": "3777:16:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 64560,
                      "name": "StakingRegistryUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64319,
                      "src": "3754:22:181",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 64562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3754:40:181",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64563,
                  "nodeType": "EmitStatement",
                  "src": "3749:45:181"
                }
              ]
            },
            "baseFunctions": [
              64336
            ],
            "documentation": {
              "id": 64537,
              "nodeType": "StructuredDocumentation",
              "src": "3434:98:181",
              "text": "@inheritdoc IRarityPoolFactory\n @dev Requires the caller to be the owner of the contract."
            },
            "functionSelector": "2c740844",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 64542,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 64541,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3598:9:181"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31086,
                  "src": "3598:9:181"
                },
                "nodeType": "ModifierInvocation",
                "src": "3598:9:181"
              }
            ],
            "name": "setStakingRegistry",
            "nameLocation": "3544:18:181",
            "parameters": {
              "id": 64540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64539,
                  "mutability": "mutable",
                  "name": "_stakingRegistry",
                  "nameLocation": "3571:16:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 64565,
                  "src": "3563:24:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64538,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3563:7:181",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3562:26:181"
            },
            "returnParameters": {
              "id": 64543,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3608:0:181"
            },
            "scope": 64730,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 64592,
            "nodeType": "FunctionDefinition",
            "src": "3904:270:181",
            "nodes": [],
            "body": {
              "id": 64591,
              "nodeType": "Block",
              "src": "3985:189:181",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 64578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 64573,
                      "name": "_rareStakingTemplate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64568,
                      "src": "3995:20:181",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 64576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4027:1:181",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 64575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4019:7:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 64574,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4019:7:181",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 64577,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4019:10:181",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3995:34:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 64582,
                  "nodeType": "IfStatement",
                  "src": "3991:71:181",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 64579,
                        "name": "ZeroAddressUnsupported",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64322,
                        "src": "4038:22:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 64580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4038:24:181",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 64581,
                    "nodeType": "RevertStatement",
                    "src": "4031:31:181"
                  }
                },
                {
                  "expression": {
                    "id": 64585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 64583,
                      "name": "rareStakingTemplate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64429,
                      "src": "4068:19:181",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 64584,
                      "name": "_rareStakingTemplate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64568,
                      "src": "4090:20:181",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4068:42:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 64586,
                  "nodeType": "ExpressionStatement",
                  "src": "4068:42:181"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 64588,
                        "name": "_rareStakingTemplate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64568,
                        "src": "4148:20:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 64587,
                      "name": "RareStakingTemplateUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64314,
                      "src": "4121:26:181",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 64589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4121:48:181",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64590,
                  "nodeType": "EmitStatement",
                  "src": "4116:53:181"
                }
              ]
            },
            "baseFunctions": [
              64342
            ],
            "documentation": {
              "id": 64566,
              "nodeType": "StructuredDocumentation",
              "src": "3803:98:181",
              "text": "@inheritdoc IRarityPoolFactory\n @dev Requires the caller to be the owner of the contract."
            },
            "functionSelector": "7ed155de",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 64571,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 64570,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3975:9:181"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31086,
                  "src": "3975:9:181"
                },
                "nodeType": "ModifierInvocation",
                "src": "3975:9:181"
              }
            ],
            "name": "setRareStakingTemplate",
            "nameLocation": "3913:22:181",
            "parameters": {
              "id": 64569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64568,
                  "mutability": "mutable",
                  "name": "_rareStakingTemplate",
                  "nameLocation": "3944:20:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 64592,
                  "src": "3936:28:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64567,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3936:7:181",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3935:30:181"
            },
            "returnParameters": {
              "id": 64572,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3985:0:181"
            },
            "scope": 64730,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 64699,
            "nodeType": "FunctionDefinition",
            "src": "4522:804:181",
            "nodes": [],
            "body": {
              "id": 64698,
              "nodeType": "Block",
              "src": "4585:741:181",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    64602
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64602,
                      "mutability": "mutable",
                      "name": "registry",
                      "nameLocation": "4612:8:181",
                      "nodeType": "VariableDeclaration",
                      "scope": 64698,
                      "src": "4591:29:181",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRareStakingRegistry_$65219",
                        "typeString": "contract IRareStakingRegistry"
                      },
                      "typeName": {
                        "id": 64601,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 64600,
                          "name": "IRareStakingRegistry",
                          "nameLocations": [
                            "4591:20:181"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 65219,
                          "src": "4591:20:181"
                        },
                        "referencedDeclaration": 65219,
                        "src": "4591:20:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRareStakingRegistry_$65219",
                          "typeString": "contract IRareStakingRegistry"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64604,
                  "initialValue": {
                    "id": 64603,
                    "name": "stakingRegistry",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 64424,
                    "src": "4623:15:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRareStakingRegistry_$65219",
                      "typeString": "contract IRareStakingRegistry"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4591:47:181"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 64610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 64605,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 64595,
                      "src": "4648:5:181",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 64608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4665:1:181",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 64607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4657:7:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 64606,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4657:7:181",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 64609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4657:10:181",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4648:19:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 64614,
                  "nodeType": "IfStatement",
                  "src": "4644:56:181",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 64611,
                        "name": "ZeroAddressUnsupported",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64322,
                        "src": "4676:22:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 64612,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4676:24:181",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 64613,
                    "nodeType": "RevertStatement",
                    "src": "4669:31:181"
                  }
                },
                {
                  "assignments": [
                    64617
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64617,
                      "mutability": "mutable",
                      "name": "newStaking",
                      "nameLocation": "4718:10:181",
                      "nodeType": "VariableDeclaration",
                      "scope": 64698,
                      "src": "4706:22:181",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BeaconProxy_$40224",
                        "typeString": "contract BeaconProxy"
                      },
                      "typeName": {
                        "id": 64616,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 64615,
                          "name": "BeaconProxy",
                          "nameLocations": [
                            "4706:11:181"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 40224,
                          "src": "4706:11:181"
                        },
                        "referencedDeclaration": 40224,
                        "src": "4706:11:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BeaconProxy_$40224",
                          "typeString": "contract BeaconProxy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64639,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 64623,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4762:4:181",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RarityPoolFactory_$64730",
                              "typeString": "contract RarityPoolFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_RarityPoolFactory_$64730",
                              "typeString": "contract RarityPoolFactory"
                            }
                          ],
                          "id": 64622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4754:7:181",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 64621,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4754:7:181",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4754:13:181",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 64627,
                                "name": "IRarityPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67326,
                                "src": "4798:11:181",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IRarityPool_$67326_$",
                                  "typeString": "type(contract IRarityPool)"
                                }
                              },
                              "id": 64628,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4810:10:181",
                              "memberName": "initialize",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 67180,
                              "src": "4798:22:181",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                                "typeString": "function IRarityPool.initialize(address,address,address)"
                              }
                            },
                            "id": 64629,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "4821:8:181",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "4798:31:181",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 64630,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64595,
                            "src": "4831:5:181",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 64633,
                                "name": "registry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 64602,
                                "src": "4846:8:181",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IRareStakingRegistry_$65219",
                                  "typeString": "contract IRareStakingRegistry"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IRareStakingRegistry_$65219",
                                  "typeString": "contract IRareStakingRegistry"
                                }
                              ],
                              "id": 64632,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4838:7:181",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 64631,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4838:7:181",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 64634,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4838:17:181",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 64635,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4857:3:181",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 64636,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4861:6:181",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4857:10:181",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 64625,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4775:3:181",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 64626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "4779:18:181",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "4775:22:181",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 64637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4775:93:181",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 64620,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "4731:15:181",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_BeaconProxy_$40224_$",
                        "typeString": "function (address,bytes memory) payable returns (contract BeaconProxy)"
                      },
                      "typeName": {
                        "id": 64619,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 64618,
                          "name": "BeaconProxy",
                          "nameLocations": [
                            "4735:11:181"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 40224,
                          "src": "4735:11:181"
                        },
                        "referencedDeclaration": 40224,
                        "src": "4735:11:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BeaconProxy_$40224",
                          "typeString": "contract BeaconProxy"
                        }
                      }
                    },
                    "id": 64638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4731:143:181",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BeaconProxy_$40224",
                      "typeString": "contract BeaconProxy"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4706:168:181"
                },
                {
                  "assignments": [
                    64641
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64641,
                      "mutability": "mutable",
                      "name": "rewardSwap",
                      "nameLocation": "4888:10:181",
                      "nodeType": "VariableDeclaration",
                      "scope": 64698,
                      "src": "4880:18:181",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 64640,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4880:7:181",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64649,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 64646,
                            "name": "newStaking",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64617,
                            "src": "4944:10:181",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeaconProxy_$40224",
                              "typeString": "contract BeaconProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BeaconProxy_$40224",
                              "typeString": "contract BeaconProxy"
                            }
                          ],
                          "id": 64645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4936:7:181",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 64644,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4936:7:181",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4936:19:181",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 64642,
                        "name": "rewardSwapFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64427,
                        "src": "4901:17:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRewardAccumulatorFactory_$64392",
                          "typeString": "contract IRewardAccumulatorFactory"
                        }
                      },
                      "id": 64643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4919:16:181",
                      "memberName": "deployRewardSwap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64379,
                      "src": "4901:34:181",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_address_payable_$",
                        "typeString": "function (address) external returns (address payable)"
                      }
                    },
                    "id": 64648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4901:55:181",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4880:76:181"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64653,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64595,
                        "src": "4991:5:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 64656,
                            "name": "newStaking",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64617,
                            "src": "5006:10:181",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeaconProxy_$40224",
                              "typeString": "contract BeaconProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BeaconProxy_$40224",
                              "typeString": "contract BeaconProxy"
                            }
                          ],
                          "id": 64655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4998:7:181",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 64654,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4998:7:181",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4998:19:181",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 64658,
                        "name": "rewardSwap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64641,
                        "src": "5019:10:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 64650,
                        "name": "registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64602,
                        "src": "4962:8:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRareStakingRegistry_$65219",
                          "typeString": "contract IRareStakingRegistry"
                        }
                      },
                      "id": 64652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4971:19:181",
                      "memberName": "setStakingAddresses",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65033,
                      "src": "4962:28:181",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address) external"
                      }
                    },
                    "id": 64659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4962:68:181",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64660,
                  "nodeType": "ExpressionStatement",
                  "src": "4962:68:181"
                },
                {
                  "assignments": [
                    64662
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64662,
                      "mutability": "mutable",
                      "name": "statSetterRole",
                      "nameLocation": "5045:14:181",
                      "nodeType": "VariableDeclaration",
                      "scope": 64698,
                      "src": "5037:22:181",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 64661,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5037:7:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 64666,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 64663,
                        "name": "registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64602,
                        "src": "5062:8:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRareStakingRegistry_$65219",
                          "typeString": "contract IRareStakingRegistry"
                        }
                      },
                      "id": 64664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5071:24:181",
                      "memberName": "STAKING_STAT_SETTER_ROLE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65200,
                      "src": "5062:33:181",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                        "typeString": "function () view external returns (bytes32)"
                      }
                    },
                    "id": 64665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5062:35:181",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5037:60:181"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64674,
                        "name": "statSetterRole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64662,
                        "src": "5159:14:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 64677,
                            "name": "newStaking",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64617,
                            "src": "5183:10:181",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeaconProxy_$40224",
                              "typeString": "contract BeaconProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BeaconProxy_$40224",
                              "typeString": "contract BeaconProxy"
                            }
                          ],
                          "id": 64676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5175:7:181",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 64675,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5175:7:181",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5175:19:181",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 64670,
                                "name": "registry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 64602,
                                "src": "5138:8:181",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IRareStakingRegistry_$65219",
                                  "typeString": "contract IRareStakingRegistry"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IRareStakingRegistry_$65219",
                                  "typeString": "contract IRareStakingRegistry"
                                }
                              ],
                              "id": 64669,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5130:7:181",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 64668,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5130:7:181",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 64671,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5130:17:181",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 64667,
                          "name": "IAccessControlUpgradeable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30934,
                          "src": "5104:25:181",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IAccessControlUpgradeable_$30934_$",
                            "typeString": "type(contract IAccessControlUpgradeable)"
                          }
                        },
                        "id": 64672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5104:44:181",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAccessControlUpgradeable_$30934",
                          "typeString": "contract IAccessControlUpgradeable"
                        }
                      },
                      "id": 64673,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5149:9:181",
                      "memberName": "grantRole",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30917,
                      "src": "5104:54:181",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address) external"
                      }
                    },
                    "id": 64679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5104:91:181",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64680,
                  "nodeType": "ExpressionStatement",
                  "src": "5104:91:181"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 64684,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5249:3:181",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 64685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5253:6:181",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5249:10:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 64686,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64595,
                        "src": "5261:5:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 64689,
                            "name": "newStaking",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64617,
                            "src": "5276:10:181",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeaconProxy_$40224",
                              "typeString": "contract BeaconProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BeaconProxy_$40224",
                              "typeString": "contract BeaconProxy"
                            }
                          ],
                          "id": 64688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5268:7:181",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 64687,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5268:7:181",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5268:19:181",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 64681,
                        "name": "IRarityPoolFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64355,
                        "src": "5207:18:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IRarityPoolFactory_$64355_$",
                          "typeString": "type(contract IRarityPoolFactory)"
                        }
                      },
                      "id": 64683,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5226:22:181",
                      "memberName": "StakingContractCreated",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64309,
                      "src": "5207:41:181",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 64691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5207:81:181",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 64692,
                  "nodeType": "EmitStatement",
                  "src": "5202:86:181"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64695,
                        "name": "newStaking",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64617,
                        "src": "5310:10:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BeaconProxy_$40224",
                          "typeString": "contract BeaconProxy"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_BeaconProxy_$40224",
                          "typeString": "contract BeaconProxy"
                        }
                      ],
                      "id": 64694,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5302:7:181",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 64693,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5302:7:181",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 64696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5302:19:181",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 64599,
                  "id": 64697,
                  "nodeType": "Return",
                  "src": "5295:26:181"
                }
              ]
            },
            "baseFunctions": [
              64330
            ],
            "documentation": {
              "id": 64593,
              "nodeType": "StructuredDocumentation",
              "src": "4388:131:181",
              "text": "@inheritdoc IRarityPoolFactory\n @dev This contract must have the {STAKING_INFO_SETTER_ROLE} role on {RareStakingRegistry}."
            },
            "functionSelector": "1249ed23",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deployStaking",
            "nameLocation": "4531:13:181",
            "parameters": {
              "id": 64596,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64595,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "4553:5:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 64699,
                  "src": "4545:13:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64594,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4545:7:181",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4544:15:181"
            },
            "returnParameters": {
              "id": 64599,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64598,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64699,
                  "src": "4576:7:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64597,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4576:7:181",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4575:9:181"
            },
            "scope": 64730,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 64711,
            "nodeType": "FunctionDefinition",
            "src": "5576:111:181",
            "nodes": [],
            "body": {
              "id": 64710,
              "nodeType": "Block",
              "src": "5645:42:181",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 64707,
                        "name": "stakingRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64424,
                        "src": "5666:15:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRareStakingRegistry_$65219",
                          "typeString": "contract IRareStakingRegistry"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IRareStakingRegistry_$65219",
                          "typeString": "contract IRareStakingRegistry"
                        }
                      ],
                      "id": 64706,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5658:7:181",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 64705,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5658:7:181",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 64708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5658:24:181",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 64704,
                  "id": 64709,
                  "nodeType": "Return",
                  "src": "5651:31:181"
                }
              ]
            },
            "baseFunctions": [
              64348
            ],
            "documentation": {
              "id": 64700,
              "nodeType": "StructuredDocumentation",
              "src": "5539:34:181",
              "text": "@inheritdoc IRarityPoolFactory"
            },
            "functionSelector": "9f997eb0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStakingRegistryAddress",
            "nameLocation": "5585:25:181",
            "parameters": {
              "id": 64701,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5610:2:181"
            },
            "returnParameters": {
              "id": 64704,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64703,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64711,
                  "src": "5636:7:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64702,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5636:7:181",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5635:9:181"
            },
            "scope": 64730,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 64720,
            "nodeType": "FunctionDefinition",
            "src": "5728:110:181",
            "nodes": [],
            "body": {
              "id": 64719,
              "nodeType": "Block",
              "src": "5801:37:181",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 64717,
                    "name": "rareStakingTemplate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 64429,
                    "src": "5814:19:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 64716,
                  "id": 64718,
                  "nodeType": "Return",
                  "src": "5807:26:181"
                }
              ]
            },
            "baseFunctions": [
              64354
            ],
            "documentation": {
              "id": 64712,
              "nodeType": "StructuredDocumentation",
              "src": "5691:34:181",
              "text": "@inheritdoc IRarityPoolFactory"
            },
            "functionSelector": "c8cb01d8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRareStakingTemplateAddress",
            "nameLocation": "5737:29:181",
            "parameters": {
              "id": 64713,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5766:2:181"
            },
            "returnParameters": {
              "id": 64716,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64715,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64720,
                  "src": "5792:7:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64714,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5792:7:181",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5791:9:181"
            },
            "scope": 64730,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 64729,
            "nodeType": "FunctionDefinition",
            "src": "5879:95:181",
            "nodes": [],
            "body": {
              "id": 64728,
              "nodeType": "Block",
              "src": "5937:37:181",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 64726,
                    "name": "rareStakingTemplate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 64429,
                    "src": "5950:19:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 64725,
                  "id": 64727,
                  "nodeType": "Return",
                  "src": "5943:26:181"
                }
              ]
            },
            "baseFunctions": [
              31539
            ],
            "documentation": {
              "id": 64721,
              "nodeType": "StructuredDocumentation",
              "src": "5842:34:181",
              "text": "@inheritdoc IBeaconUpgradeable"
            },
            "functionSelector": "5c60da1b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "implementation",
            "nameLocation": "5888:14:181",
            "parameters": {
              "id": 64722,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5902:2:181"
            },
            "returnParameters": {
              "id": 64725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64724,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 64729,
                  "src": "5928:7:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64723,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5928:7:181",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5927:9:181"
            },
            "scope": 64730,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 64414,
              "name": "IRarityPoolFactory",
              "nameLocations": [
                "1080:18:181"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 64355,
              "src": "1080:18:181"
            },
            "id": 64415,
            "nodeType": "InheritanceSpecifier",
            "src": "1080:18:181"
          },
          {
            "baseName": {
              "id": 64416,
              "name": "IBeaconUpgradeable",
              "nameLocations": [
                "1100:18:181"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31540,
              "src": "1100:18:181"
            },
            "id": 64417,
            "nodeType": "InheritanceSpecifier",
            "src": "1100:18:181"
          },
          {
            "baseName": {
              "id": 64418,
              "name": "Ownable2StepUpgradeable",
              "nameLocations": [
                "1120:23:181"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31040,
              "src": "1120:23:181"
            },
            "id": 64419,
            "nodeType": "InheritanceSpecifier",
            "src": "1120:23:181"
          },
          {
            "baseName": {
              "id": 64420,
              "name": "UUPSUpgradeable",
              "nameLocations": [
                "1145:15:181"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31845,
              "src": "1145:15:181"
            },
            "id": 64421,
            "nodeType": "InheritanceSpecifier",
            "src": "1145:15:181"
          }
        ],
        "canonicalName": "RarityPoolFactory",
        "contractDependencies": [
          40224
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 64413,
          "nodeType": "StructuredDocumentation",
          "src": "839:211:181",
          "text": "@author koloz, charlescrain\n @title RarityPoolFactory\n @notice The Staking Factory Contract used to deploy new staking ERC20 contracts pertaining to a user.\n @dev Made to be used with a UUPS Proxy."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          64730,
          31845,
          31530,
          31193,
          31206,
          31040,
          31172,
          35526,
          31709,
          31540,
          64355
        ],
        "name": "RarityPoolFactory",
        "nameLocation": "1059:17:181",
        "scope": 64731,
        "usedErrors": [
          64322
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 181
}