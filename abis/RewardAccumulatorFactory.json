{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_stakingAddress",
          "type": "address"
        }
      ],
      "name": "RewardSwapContractCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakingAddress",
          "type": "address"
        }
      ],
      "name": "deployRewardSwap",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRewardSwapTemplateAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStakingRegistryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakingRegistry",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rewardTemplate",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_rewardTemplate",
          "type": "address"
        }
      ],
      "name": "setRewardSwapTemplate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakingRegistry",
          "type": "address"
        }
      ],
      "name": "setStakingRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a06040523060805234801561001457600080fd5b50608051611c3b61004c6000396000818161033d01528181610380015281816104280152818161046b01526105070152611c3b6000f3fe608060405260043610620000d25760003560e01c8063733fd3421162000089578063bc3ccf6d1162000060578063bc3ccf6d1462000165578063c0c53b8b1462000216578063c0f11bf7146200023b578063f2fde38b146200026057600080fd5b8063733fd34214620001b15780638da5cb5b14620001d65780639f997eb014620001f657600080fd5b80632c74084414620000d75780633659cfe614620000fe5780634f1ef286146200012357806352d1902d146200013a5780635c60da1b1462000165578063715018a61462000199575b600080fd5b348015620000e457600080fd5b50620000fc620000f636600462000fab565b62000285565b005b3480156200010b57600080fd5b50620000fc6200011d36600462000fab565b62000333565b620000fc6200013436600462000fdf565b6200041e565b3480156200014757600080fd5b5062000152620004fa565b6040519081526020015b60405180910390f35b3480156200017257600080fd5b5060ca546001600160a01b03165b6040516001600160a01b0390911681526020016200015c565b348015620001a657600080fd5b50620000fc620005b0565b348015620001be57600080fd5b5062000180620001d036600462000fab565b620005c8565b348015620001e357600080fd5b506033546001600160a01b031662000180565b3480156200020357600080fd5b5060c9546001600160a01b031662000180565b3480156200022357600080fd5b50620000fc62000235366004620010ad565b6200070f565b3480156200024857600080fd5b50620000fc6200025a36600462000fab565b6200094e565b3480156200026d57600080fd5b50620000fc6200027f36600462000fab565b620009f8565b6200028f62000a74565b6001600160a01b038116620003115760405162461bcd60e51b815260206004820152603b60248201527f7365745374616b696e6752656769737472793a3a5f7374616b696e675265676960448201527f737472792063616e6e6f74206265207a65726f2061646472657373000000000060648201526084015b60405180910390fd5b60c980546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036200037e5760405162461bcd60e51b81526004016200030890620010f7565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316620003c960008051602062001bbf833981519152546001600160a01b031690565b6001600160a01b031614620003f25760405162461bcd60e51b8152600401620003089062001143565b620003fd8162000ad0565b604080516000808252602082019092526200041b9183919062000ada565b50565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003620004695760405162461bcd60e51b81526004016200030890620010f7565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316620004b460008051602062001bbf833981519152546001600160a01b031690565b6001600160a01b031614620004dd5760405162461bcd60e51b8152600401620003089062001143565b620004e88262000ad0565b620004f68282600162000ada565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146200059c5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000606482015260840162000308565b5060008051602062001bbf83398151915290565b620005ba62000a74565b620005c6600062000c57565b565b60006001600160a01b038216620006485760405162461bcd60e51b815260206004820152603860248201527f6465706c6f79526577617264537761703a3a5f7374616b696e6741646472657360448201527f732063616e6e6f74206265207a65726f20616464726573730000000000000000606482015260840162000308565b60c954604080516001600160a01b03928316602482015291841660448084019190915281518084039091018152606490920181526020820180516001600160e01b031663485cc95560e01b179052516000913091620006a79062000f80565b620006b4929190620011ec565b604051809103906000f080158015620006d1573d6000803e3d6000fd5b506040519091506001600160a01b038216907f46bcaddc4b315eb3afafbc7a854a62d892dcae7b985d18ccca7e1ea6f8ada36690600090a292915050565b600054610100900460ff1615808015620007305750600054600160ff909116105b806200074c5750303b1580156200074c575060005460ff166001145b620007b15760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840162000308565b6000805460ff191660011790558015620007d5576000805461ff0019166101001790555b6001600160a01b038416620008495760405162461bcd60e51b815260206004820152603360248201527f696e697469616c697a653a3a5f7374616b696e6752656769737472792063616e6044820152726e6f74206265207a65726f206164647265737360681b606482015260840162000308565b6001600160a01b038316620008bc5760405162461bcd60e51b815260206004820152603260248201527f696e697469616c697a653a3a5f72657761726454656d706c6174652063616e6e6044820152716f74206265207a65726f206164647265737360701b606482015260840162000308565b60ca80546001600160a01b038086166001600160a01b03199283161790925560c9805492871692909116919091179055620008f662000ca9565b620009018262000c57565b801562000948576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b6200095862000a74565b6001600160a01b038116620009d65760405162461bcd60e51b815260206004820152603d60248201527f7365745265776172645377617054656d706c6174653a3a5f726577617264546560448201527f6d706c6174652063616e6e6f74206265207a65726f2061646472657373000000606482015260840162000308565b60ca80546001600160a01b0319166001600160a01b0392909216919091179055565b62000a0262000a74565b6001600160a01b03811662000a695760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840162000308565b6200041b8162000c57565b6033546001600160a01b03163314620005c65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640162000308565b6200041b62000a74565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161562000b155762000b108362000cdd565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801562000b72575060408051601f3d908101601f1916820190925262000b6f9181019062001212565b60015b62000bd75760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b606482015260840162000308565b60008051602062001bbf833981519152811462000c495760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b606482015260840162000308565b5062000b1083838362000d7c565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1662000cd35760405162461bcd60e51b815260040162000308906200122c565b620005c662000da7565b6001600160a01b0381163b62000d4c5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840162000308565b60008051602062001bbf83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b62000d878362000ddc565b60008251118062000d955750805b1562000b105762000948838362000e1e565b600054610100900460ff1662000dd15760405162461bcd60e51b815260040162000308906200122c565b620005c63362000c57565b62000de78162000cdd565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606062000e46838360405180606001604052806027815260200162001bdf6027913962000e4d565b9392505050565b6060600080856001600160a01b03168560405162000e6c919062001277565b600060405180830381855af49150503d806000811462000ea9576040519150601f19603f3d011682016040523d82523d6000602084013e62000eae565b606091505b509150915062000ec18683838762000ecb565b9695505050505050565b6060831562000f3f57825160000362000f37576001600160a01b0385163b62000f375760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640162000308565b508162000f4b565b62000f4b838362000f53565b949350505050565b81511562000f645781518083602001fd5b8060405162461bcd60e51b815260040162000308919062001295565b61091480620012ab83390190565b80356001600160a01b038116811462000fa657600080fd5b919050565b60006020828403121562000fbe57600080fd5b62000e468262000f8e565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121562000ff357600080fd5b62000ffe8362000f8e565b9150602083013567ffffffffffffffff808211156200101c57600080fd5b818501915085601f8301126200103157600080fd5b81358181111562001046576200104662000fc9565b604051601f8201601f19908116603f0116810190838211818310171562001071576200107162000fc9565b816040528281528860208487010111156200108b57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600080600060608486031215620010c357600080fd5b620010ce8462000f8e565b9250620010de6020850162000f8e565b9150620010ee6040850162000f8e565b90509250925092565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b60005b83811015620011ac57818101518382015260200162001192565b83811115620009485750506000910152565b60008151808452620011d88160208601602086016200118f565b601f01601f19169290920160200192915050565b6001600160a01b038316815260406020820181905260009062000f4b90830184620011be565b6000602082840312156200122557600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600082516200128b8184602087016200118f565b9190910192915050565b60208152600062000e466020830184620011be56fe608060405260405161091438038061091483398101604081905261002291610463565b61002e82826000610035565b505061058d565b61003e83610100565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a260008251118061007f5750805b156100fb576100f9836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e99190610523565b836102a360201b6100291760201c565b505b505050565b610113816102cf60201b6100551760201c565b6101725760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b6101e6816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d79190610523565b6102cf60201b6100551760201c565b61024b5760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b6064820152608401610169565b806102827fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5060001b6102de60201b6100641760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606102c883836040518060600160405280602781526020016108ed602791396102e1565b9392505050565b6001600160a01b03163b151590565b90565b6060600080856001600160a01b0316856040516102fe919061053e565b600060405180830381855af49150503d8060008114610339576040519150601f19603f3d011682016040523d82523d6000602084013e61033e565b606091505b5090925090506103508683838761035a565b9695505050505050565b606083156103c95782516000036103c2576001600160a01b0385163b6103c25760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610169565b50816103d3565b6103d383836103db565b949350505050565b8151156103eb5781518083602001fd5b8060405162461bcd60e51b8152600401610169919061055a565b80516001600160a01b038116811461041c57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561045257818101518382015260200161043a565b838111156100f95750506000910152565b6000806040838503121561047657600080fd5b61047f83610405565b60208401519092506001600160401b038082111561049c57600080fd5b818501915085601f8301126104b057600080fd5b8151818111156104c2576104c2610421565b604051601f8201601f19908116603f011681019083821181831017156104ea576104ea610421565b8160405282815288602084870101111561050357600080fd5b610514836020830160208801610437565b80955050505050509250929050565b60006020828403121561053557600080fd5b6102c882610405565b60008251610550818460208701610437565b9190910192915050565b6020815260008251806020840152610579816040850160208701610437565b601f01601f19169190910160400192915050565b6103518061059c6000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610067565b610100565b565b606061004e83836040518060600160405280602781526020016102f560279139610124565b9392505050565b6001600160a01b03163b151590565b90565b600061009a7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fb919061024c565b905090565b3660008037600080366000845af43d6000803e80801561011f573d6000f35b3d6000fd5b6060600080856001600160a01b03168560405161014191906102a5565b600060405180830381855af49150503d806000811461017c576040519150601f19603f3d011682016040523d82523d6000602084013e610181565b606091505b50915091506101928683838761019c565b9695505050505050565b60608315610210578251600003610209576001600160a01b0385163b6102095760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064015b60405180910390fd5b508161021a565b61021a8383610222565b949350505050565b8151156102325781518083602001fd5b8060405162461bcd60e51b815260040161020091906102c1565b60006020828403121561025e57600080fd5b81516001600160a01b038116811461004e57600080fd5b60005b83811015610290578181015183820152602001610278565b8381111561029f576000848401525b50505050565b600082516102b7818460208701610275565b9190910192915050565b60208152600082518060208401526102e0816040850160208701610275565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122052aa7b706638253994753d44b5f7903e95850a17bddcd3f1d819a939a9d1023f64736f6c634300080f0033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220e6cefc572354504845e5ae156099a860849e330bc5689e77e583d75fe228f19f64736f6c634300080f0033",
    "sourceMap": "810:3862:110:-:0;;;1332:4:46;1289:48;;810:3862:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405260043610620000d25760003560e01c8063733fd3421162000089578063bc3ccf6d1162000060578063bc3ccf6d1462000165578063c0c53b8b1462000216578063c0f11bf7146200023b578063f2fde38b146200026057600080fd5b8063733fd34214620001b15780638da5cb5b14620001d65780639f997eb014620001f657600080fd5b80632c74084414620000d75780633659cfe614620000fe5780634f1ef286146200012357806352d1902d146200013a5780635c60da1b1462000165578063715018a61462000199575b600080fd5b348015620000e457600080fd5b50620000fc620000f636600462000fab565b62000285565b005b3480156200010b57600080fd5b50620000fc6200011d36600462000fab565b62000333565b620000fc6200013436600462000fdf565b6200041e565b3480156200014757600080fd5b5062000152620004fa565b6040519081526020015b60405180910390f35b3480156200017257600080fd5b5060ca546001600160a01b03165b6040516001600160a01b0390911681526020016200015c565b348015620001a657600080fd5b50620000fc620005b0565b348015620001be57600080fd5b5062000180620001d036600462000fab565b620005c8565b348015620001e357600080fd5b506033546001600160a01b031662000180565b3480156200020357600080fd5b5060c9546001600160a01b031662000180565b3480156200022357600080fd5b50620000fc62000235366004620010ad565b6200070f565b3480156200024857600080fd5b50620000fc6200025a36600462000fab565b6200094e565b3480156200026d57600080fd5b50620000fc6200027f36600462000fab565b620009f8565b6200028f62000a74565b6001600160a01b038116620003115760405162461bcd60e51b815260206004820152603b60248201527f7365745374616b696e6752656769737472793a3a5f7374616b696e675265676960448201527f737472792063616e6e6f74206265207a65726f2061646472657373000000000060648201526084015b60405180910390fd5b60c980546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036200037e5760405162461bcd60e51b81526004016200030890620010f7565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316620003c960008051602062001bbf833981519152546001600160a01b031690565b6001600160a01b031614620003f25760405162461bcd60e51b8152600401620003089062001143565b620003fd8162000ad0565b604080516000808252602082019092526200041b9183919062000ada565b50565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003620004695760405162461bcd60e51b81526004016200030890620010f7565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316620004b460008051602062001bbf833981519152546001600160a01b031690565b6001600160a01b031614620004dd5760405162461bcd60e51b8152600401620003089062001143565b620004e88262000ad0565b620004f68282600162000ada565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146200059c5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000606482015260840162000308565b5060008051602062001bbf83398151915290565b620005ba62000a74565b620005c6600062000c57565b565b60006001600160a01b038216620006485760405162461bcd60e51b815260206004820152603860248201527f6465706c6f79526577617264537761703a3a5f7374616b696e6741646472657360448201527f732063616e6e6f74206265207a65726f20616464726573730000000000000000606482015260840162000308565b60c954604080516001600160a01b03928316602482015291841660448084019190915281518084039091018152606490920181526020820180516001600160e01b031663485cc95560e01b179052516000913091620006a79062000f80565b620006b4929190620011ec565b604051809103906000f080158015620006d1573d6000803e3d6000fd5b506040519091506001600160a01b038216907f46bcaddc4b315eb3afafbc7a854a62d892dcae7b985d18ccca7e1ea6f8ada36690600090a292915050565b600054610100900460ff1615808015620007305750600054600160ff909116105b806200074c5750303b1580156200074c575060005460ff166001145b620007b15760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840162000308565b6000805460ff191660011790558015620007d5576000805461ff0019166101001790555b6001600160a01b038416620008495760405162461bcd60e51b815260206004820152603360248201527f696e697469616c697a653a3a5f7374616b696e6752656769737472792063616e6044820152726e6f74206265207a65726f206164647265737360681b606482015260840162000308565b6001600160a01b038316620008bc5760405162461bcd60e51b815260206004820152603260248201527f696e697469616c697a653a3a5f72657761726454656d706c6174652063616e6e6044820152716f74206265207a65726f206164647265737360701b606482015260840162000308565b60ca80546001600160a01b038086166001600160a01b03199283161790925560c9805492871692909116919091179055620008f662000ca9565b620009018262000c57565b801562000948576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b6200095862000a74565b6001600160a01b038116620009d65760405162461bcd60e51b815260206004820152603d60248201527f7365745265776172645377617054656d706c6174653a3a5f726577617264546560448201527f6d706c6174652063616e6e6f74206265207a65726f2061646472657373000000606482015260840162000308565b60ca80546001600160a01b0319166001600160a01b0392909216919091179055565b62000a0262000a74565b6001600160a01b03811662000a695760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840162000308565b6200041b8162000c57565b6033546001600160a01b03163314620005c65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640162000308565b6200041b62000a74565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161562000b155762000b108362000cdd565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801562000b72575060408051601f3d908101601f1916820190925262000b6f9181019062001212565b60015b62000bd75760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b606482015260840162000308565b60008051602062001bbf833981519152811462000c495760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b606482015260840162000308565b5062000b1083838362000d7c565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1662000cd35760405162461bcd60e51b815260040162000308906200122c565b620005c662000da7565b6001600160a01b0381163b62000d4c5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840162000308565b60008051602062001bbf83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b62000d878362000ddc565b60008251118062000d955750805b1562000b105762000948838362000e1e565b600054610100900460ff1662000dd15760405162461bcd60e51b815260040162000308906200122c565b620005c63362000c57565b62000de78162000cdd565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606062000e46838360405180606001604052806027815260200162001bdf6027913962000e4d565b9392505050565b6060600080856001600160a01b03168560405162000e6c919062001277565b600060405180830381855af49150503d806000811462000ea9576040519150601f19603f3d011682016040523d82523d6000602084013e62000eae565b606091505b509150915062000ec18683838762000ecb565b9695505050505050565b6060831562000f3f57825160000362000f37576001600160a01b0385163b62000f375760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640162000308565b508162000f4b565b62000f4b838362000f53565b949350505050565b81511562000f645781518083602001fd5b8060405162461bcd60e51b815260040162000308919062001295565b61091480620012ab83390190565b80356001600160a01b038116811462000fa657600080fd5b919050565b60006020828403121562000fbe57600080fd5b62000e468262000f8e565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121562000ff357600080fd5b62000ffe8362000f8e565b9150602083013567ffffffffffffffff808211156200101c57600080fd5b818501915085601f8301126200103157600080fd5b81358181111562001046576200104662000fc9565b604051601f8201601f19908116603f0116810190838211818310171562001071576200107162000fc9565b816040528281528860208487010111156200108b57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600080600060608486031215620010c357600080fd5b620010ce8462000f8e565b9250620010de6020850162000f8e565b9150620010ee6040850162000f8e565b90509250925092565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b60005b83811015620011ac57818101518382015260200162001192565b83811115620009485750506000910152565b60008151808452620011d88160208601602086016200118f565b601f01601f19169290920160200192915050565b6001600160a01b038316815260406020820181905260009062000f4b90830184620011be565b6000602082840312156200122557600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600082516200128b8184602087016200118f565b9190910192915050565b60208152600062000e466020830184620011be56fe608060405260405161091438038061091483398101604081905261002291610463565b61002e82826000610035565b505061058d565b61003e83610100565b6040516001600160a01b038416907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a260008251118061007f5750805b156100fb576100f9836001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e99190610523565b836102a360201b6100291760201c565b505b505050565b610113816102cf60201b6100551760201c565b6101725760405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b60648201526084015b60405180910390fd5b6101e6816001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d79190610523565b6102cf60201b6100551760201c565b61024b5760405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b6064820152608401610169565b806102827fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5060001b6102de60201b6100641760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606102c883836040518060600160405280602781526020016108ed602791396102e1565b9392505050565b6001600160a01b03163b151590565b90565b6060600080856001600160a01b0316856040516102fe919061053e565b600060405180830381855af49150503d8060008114610339576040519150601f19603f3d011682016040523d82523d6000602084013e61033e565b606091505b5090925090506103508683838761035a565b9695505050505050565b606083156103c95782516000036103c2576001600160a01b0385163b6103c25760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610169565b50816103d3565b6103d383836103db565b949350505050565b8151156103eb5781518083602001fd5b8060405162461bcd60e51b8152600401610169919061055a565b80516001600160a01b038116811461041c57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561045257818101518382015260200161043a565b838111156100f95750506000910152565b6000806040838503121561047657600080fd5b61047f83610405565b60208401519092506001600160401b038082111561049c57600080fd5b818501915085601f8301126104b057600080fd5b8151818111156104c2576104c2610421565b604051601f8201601f19908116603f011681019083821181831017156104ea576104ea610421565b8160405282815288602084870101111561050357600080fd5b610514836020830160208801610437565b80955050505050509250929050565b60006020828403121561053557600080fd5b6102c882610405565b60008251610550818460208701610437565b9190910192915050565b6020815260008251806020840152610579816040850160208701610437565b601f01601f19169190910160400192915050565b6103518061059c6000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610067565b610100565b565b606061004e83836040518060600160405280602781526020016102f560279139610124565b9392505050565b6001600160a01b03163b151590565b90565b600061009a7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50546001600160a01b031690565b6001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fb919061024c565b905090565b3660008037600080366000845af43d6000803e80801561011f573d6000f35b3d6000fd5b6060600080856001600160a01b03168560405161014191906102a5565b600060405180830381855af49150503d806000811461017c576040519150601f19603f3d011682016040523d82523d6000602084013e610181565b606091505b50915091506101928683838761019c565b9695505050505050565b60608315610210578251600003610209576001600160a01b0385163b6102095760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064015b60405180910390fd5b508161021a565b61021a8383610222565b949350505050565b8151156102325781518083602001fd5b8060405162461bcd60e51b815260040161020091906102c1565b60006020828403121561025e57600080fd5b81516001600160a01b038116811461004e57600080fd5b60005b83811015610290578181015183820152602001610278565b8381111561029f576000848401525b50505050565b600082516102b7818460208701610275565b9190910192915050565b60208152600082518060208401526102e0816040850160208701610275565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122052aa7b706638253994753d44b5f7903e95850a17bddcd3f1d819a939a9d1023f64736f6c634300080f0033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220e6cefc572354504845e5ae156099a860849e330bc5689e77e583d75fe228f19f64736f6c634300080f0033",
    "sourceMap": "810:3862:110:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2548:248;;;;;;;;;;-1:-1:-1;2548:248:110;;;;;:::i;:::-;;:::i;:::-;;3387:195:46;;;;;;;;;;-1:-1:-1;3387:195:46;;;;;:::i;:::-;;:::i;3901:220::-;;;;;;:::i;:::-;;:::i;3006:131::-;;;;;;;;;;;;;:::i;:::-;;;1661:25:119;;;1649:2;1634:18;3006:131:46;;;;;;;;4580:90:110;;;;;;;;;;-1:-1:-1;4651:14:110;;-1:-1:-1;;;;;4651:14:110;4580:90;;;-1:-1:-1;;;;;1861:32:119;;;1843:51;;1831:2;1816:18;4580:90:110;1697:203:119;2064:101:39;;;;;;;;;;;;;:::i;3524:495:110:-;;;;;;;;;;-1:-1:-1;3524:495:110;;;;;:::i;:::-;;:::i;1441:85:39:-;;;;;;;;;;-1:-1:-1;1513:6:39;;-1:-1:-1;;;;;1513:6:39;1441:85;;4276:111:110;;;;;;;;;;-1:-1:-1;4366:15:110;;-1:-1:-1;;;;;4366:15:110;4276:111;;1429:487;;;;;;;;;;-1:-1:-1;1429:487:110;;;;;:::i;:::-;;:::i;2908:227::-;;;;;;;;;;-1:-1:-1;2908:227:110;;;;;:::i;:::-;;:::i;2314:198:39:-;;;;;;;;;;-1:-1:-1;2314:198:39;;;;;:::i;:::-;;:::i;2548:248:110:-;1334:13:39;:11;:13::i;:::-;-1:-1:-1;;;;;2635:30:110;::::1;2627:102;;;::::0;-1:-1:-1;;;2627:102:110;;2670:2:119;2627:102:110::1;::::0;::::1;2652:21:119::0;2709:2;2689:18;;;2682:30;2748:34;2728:18;;;2721:62;2819:29;2799:18;;;2792:57;2866:19;;2627:102:110::1;;;;;;;;;2735:15;:56:::0;;-1:-1:-1;;;;;;2735:56:110::1;-1:-1:-1::0;;;;;2735:56:110;;;::::1;::::0;;;::::1;::::0;;2548:248::o;3387:195:46:-;-1:-1:-1;;;;;1898:6:46;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:46;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:46;:20;-1:-1:-1;;;;;;;;;;;1536:65:43;-1:-1:-1;;;;;1536:65:43;;1457:151;1971:20:46;-1:-1:-1;;;;;1971:30:46;;1963:87;;;;-1:-1:-1;;;1963:87:46;;;;;;;:::i;:::-;3468:36:::1;3486:17;3468;:36::i;:::-;3555:12;::::0;;3565:1:::1;3555:12:::0;;;::::1;::::0;::::1;::::0;;;3514:61:::1;::::0;3536:17;;3555:12;3514:21:::1;:61::i;:::-;3387:195:::0;:::o;3901:220::-;-1:-1:-1;;;;;1898:6:46;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:46;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:46;:20;-1:-1:-1;;;;;;;;;;;1536:65:43;-1:-1:-1;;;;;1536:65:43;;1457:151;1971:20:46;-1:-1:-1;;;;;1971:30:46;;1963:87;;;;-1:-1:-1;;;1963:87:46;;;;;;;:::i;:::-;4016:36:::1;4034:17;4016;:36::i;:::-;4062:52;4084:17;4103:4;4109;4062:21;:52::i;:::-;3901:220:::0;;:::o;3006:131::-;3084:7;2324:4;-1:-1:-1;;;;;2333:6:46;2316:23;;2308:92;;;;-1:-1:-1;;;2308:92:46;;3924:2:119;2308:92:46;;;3906:21:119;3963:2;3943:18;;;3936:30;4002:34;3982:18;;;3975:62;4073:26;4053:18;;;4046:54;4117:19;;2308:92:46;3722:420:119;2308:92:46;-1:-1:-1;;;;;;;;;;;;3006:131:46;:::o;2064:101:39:-;1334:13;:11;:13::i;:::-;2128:30:::1;2155:1;2128:18;:30::i;:::-;2064:101::o:0;3524:495:110:-;3591:15;-1:-1:-1;;;;;3622:29:110;;3614:98;;;;-1:-1:-1;;;3614:98:110;;4349:2:119;3614:98:110;;;4331:21:119;4388:2;4368:18;;;4361:30;4427:34;4407:18;;;4400:62;4498:26;4478:18;;;4471:54;4542:19;;3614:98:110;4147:420:119;3614:98:110;3860:15;;3790:113;;;-1:-1:-1;;;;;3860:15:110;;;3790:113;;;4784:34:119;4854:15;;;4834:18;;;;4827:43;;;;3790:113:110;;;;;;;;;;4719:18:119;;;;3790:113:110;;;;;;;-1:-1:-1;;;;;3790:113:110;-1:-1:-1;;;3790:113:110;;;3746:163;-1:-1:-1;;3777:4:110;;3746:163;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3921:49:110;;3718:191;;-1:-1:-1;;;;;;3921:49:110;;;;;;;;3999:13;3524:495;-1:-1:-1;;3524:495:110:o;1429:487::-;3279:19:45;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:45;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:45;1713:19:57;:23;;;3387:66:45;;-1:-1:-1;3436:12:45;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:45;;5927:2:119;3325:201:45;;;5909:21:119;5966:2;5946:18;;;5939:30;6005:34;5985:18;;;5978:62;-1:-1:-1;;;6056:18:119;;;6049:44;6110:19;;3325:201:45;5725:410:119;3325:201:45;3536:12;:16;;-1:-1:-1;;3536:16:45;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:45;;;;;3562:65;-1:-1:-1;;;;;1570:30:110;::::1;1562:94;;;::::0;-1:-1:-1;;;1562:94:110;;6342:2:119;1562:94:110::1;::::0;::::1;6324:21:119::0;6381:2;6361:18;;;6354:30;6420:34;6400:18;;;6393:62;-1:-1:-1;;;6471:18:119;;;6464:49;6530:19;;1562:94:110::1;6140:415:119::0;1562:94:110::1;-1:-1:-1::0;;;;;1670:29:110;::::1;1662:92;;;::::0;-1:-1:-1;;;1662:92:110;;6762:2:119;1662:92:110::1;::::0;::::1;6744:21:119::0;6801:2;6781:18;;;6774:30;6840:34;6820:18;;;6813:62;-1:-1:-1;;;6891:18:119;;;6884:48;6949:19;;1662:92:110::1;6560:414:119::0;1662:92:110::1;1760:14;:32:::0;;-1:-1:-1;;;;;1760:32:110;;::::1;-1:-1:-1::0;;;;;;1760:32:110;;::::1;;::::0;;;1798:15:::1;:56:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;1860:16:::1;:14;:16::i;:::-;1882:29;1901:9;1882:18;:29::i;:::-;3651:14:45::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:45;;;3721:14;;-1:-1:-1;7131:36:119;;3721:14:45;;7119:2:119;7104:18;3721:14:45;;;;;;;3647:99;3269:483;1429:487:110;;;:::o;2908:227::-;1334:13:39;:11;:13::i;:::-;-1:-1:-1;;;;;2997:29:110;::::1;2989:103;;;::::0;-1:-1:-1;;;2989:103:110;;7380:2:119;2989:103:110::1;::::0;::::1;7362:21:119::0;7419:2;7399:18;;;7392:30;7458:34;7438:18;;;7431:62;7529:31;7509:18;;;7502:59;7578:19;;2989:103:110::1;7178:425:119::0;2989:103:110::1;3098:14;:32:::0;;-1:-1:-1;;;;;;3098:32:110::1;-1:-1:-1::0;;;;;3098:32:110;;;::::1;::::0;;;::::1;::::0;;2908:227::o;2314:198:39:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2402:22:39;::::1;2394:73;;;::::0;-1:-1:-1;;;2394:73:39;;7810:2:119;2394:73:39::1;::::0;::::1;7792:21:119::0;7849:2;7829:18;;;7822:30;7888:34;7868:18;;;7861:62;-1:-1:-1;;;7939:18:119;;;7932:36;7985:19;;2394:73:39::1;7608:402:119::0;2394:73:39::1;2477:28;2496:8;2477:18;:28::i;1599:130::-:0;1513:6;;-1:-1:-1;;;;;1513:6:39;929:10:59;1662:23:39;1654:68;;;;-1:-1:-1;;;1654:68:39;;8217:2:119;1654:68:39;;;8199:21:119;;;8236:18;;;8229:30;8295:34;8275:18;;;8268:62;8347:18;;1654:68:39;8015:356:119;2163:66:110;1334:13:39;:11;:13::i;2820:944:43:-;971:66;3236:59;;;3232:526;;;3311:37;3330:17;3311:18;:37::i;:::-;2820:944;;;:::o;3232:526::-;3412:17;-1:-1:-1;;;;;3383:61:43;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3383:63:43;;;;;;;;-1:-1:-1;;3383:63:43;;;;;;;;;;;;:::i;:::-;;;3379:302;;3610:56;;-1:-1:-1;;;3610:56:43;;8767:2:119;3610:56:43;;;8749:21:119;8806:2;8786:18;;;8779:30;8845:34;8825:18;;;8818:62;-1:-1:-1;;;8896:18:119;;;8889:44;8950:19;;3610:56:43;8565:410:119;3379:302:43;-1:-1:-1;;;;;;;;;;;3496:28:43;;3488:82;;;;-1:-1:-1;;;3488:82:43;;9182:2:119;3488:82:43;;;9164:21:119;9221:2;9201:18;;;9194:30;9260:34;9240:18;;;9233:62;-1:-1:-1;;;9311:18:119;;;9304:39;9360:19;;3488:82:43;8980:405:119;3488:82:43;3447:138;3694:53;3712:17;3731:4;3737:9;3694:17;:53::i;2666:187:39:-;2758:6;;;-1:-1:-1;;;;;2774:17:39;;;-1:-1:-1;;;;;;2774:17:39;;;;;;;2806:40;;2758:6;;;2774:17;2758:6;;2806:40;;2739:16;;2806:40;2729:124;2666:187;:::o;1003:95::-;5374:13:45;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:45;;;;;;;:::i;:::-;1065:26:39::1;:24;:26::i;1699:281:43:-:0;-1:-1:-1;;;;;1713:19:57;;;1772:106:43;;;;-1:-1:-1;;;1772:106:43;;10004:2:119;1772:106:43;;;9986:21:119;10043:2;10023:18;;;10016:30;10082:34;10062:18;;;10055:62;-1:-1:-1;;;10133:18:119;;;10126:43;10186:19;;1772:106:43;9802:409:119;1772:106:43;-1:-1:-1;;;;;;;;;;;1888:85:43;;-1:-1:-1;;;;;;1888:85:43;-1:-1:-1;;;;;1888:85:43;;;;;;;;;;1699:281::o;2372:276::-;2480:29;2491:17;2480:10;:29::i;:::-;2537:1;2523:4;:11;:15;:28;;;;2542:9;2523:28;2519:123;;;2567:64;2607:17;2626:4;2567:39;:64::i;1104:111:39:-;5374:13:45;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:45;;;;;;;:::i;:::-;1176:32:39::1;929:10:59::0;1176:18:39::1;:32::i;2086:152:43:-:0;2152:37;2171:17;2152:18;:37::i;:::-;2204:27;;-1:-1:-1;;;;;2204:27:43;;;;;;;;2086:152;:::o;6685:198:57:-;6768:12;6799:77;6820:6;6828:4;6799:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6792:84;6685:198;-1:-1:-1;;;6685:198:57:o;7069:325::-;7210:12;7235;7249:23;7276:6;-1:-1:-1;;;;;7276:19:57;7296:4;7276:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7234:67;;;;7318:69;7345:6;7353:7;7362:10;7374:12;7318:26;:69::i;:::-;7311:76;7069:325;-1:-1:-1;;;;;;7069:325:57:o;7682:628::-;7862:12;7890:7;7886:418;;;7917:10;:17;7938:1;7917:22;7913:286;;-1:-1:-1;;;;;1713:19:57;;;8124:60;;;;-1:-1:-1;;;8124:60:57;;10697:2:119;8124:60:57;;;10679:21:119;10736:2;10716:18;;;10709:30;10775:31;10755:18;;;10748:59;10824:18;;8124:60:57;10495:353:119;8124:60:57;-1:-1:-1;8219:10:57;8212:17;;7886:418;8260:33;8268:10;8280:12;8260:7;:33::i;:::-;7682:628;;;;;;:::o;8832:540::-;8991:17;;:21;8987:379;;9219:10;9213:17;9275:15;9262:10;9258:2;9254:19;9247:44;8987:379;9342:12;9335:20;;-1:-1:-1;;;9335:20:57;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;:::o;14:173:119:-;82:20;;-1:-1:-1;;;;;131:31:119;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;383:127::-;444:10;439:3;435:20;432:1;425:31;475:4;472:1;465:15;499:4;496:1;489:15;515:995;592:6;600;653:2;641:9;632:7;628:23;624:32;621:52;;;669:1;666;659:12;621:52;692:29;711:9;692:29;:::i;:::-;682:39;;772:2;761:9;757:18;744:32;795:18;836:2;828:6;825:14;822:34;;;852:1;849;842:12;822:34;890:6;879:9;875:22;865:32;;935:7;928:4;924:2;920:13;916:27;906:55;;957:1;954;947:12;906:55;993:2;980:16;1015:2;1011;1008:10;1005:36;;;1021:18;;:::i;:::-;1096:2;1090:9;1064:2;1150:13;;-1:-1:-1;;1146:22:119;;;1170:2;1142:31;1138:40;1126:53;;;1194:18;;;1214:22;;;1191:46;1188:72;;;1240:18;;:::i;:::-;1280:10;1276:2;1269:22;1315:2;1307:6;1300:18;1355:7;1350:2;1345;1341;1337:11;1333:20;1330:33;1327:53;;;1376:1;1373;1366:12;1327:53;1432:2;1427;1423;1419:11;1414:2;1406:6;1402:15;1389:46;1477:1;1472:2;1467;1459:6;1455:15;1451:24;1444:35;1498:6;1488:16;;;;;;;515:995;;;;;:::o;2129:334::-;2206:6;2214;2222;2275:2;2263:9;2254:7;2250:23;2246:32;2243:52;;;2291:1;2288;2281:12;2243:52;2314:29;2333:9;2314:29;:::i;:::-;2304:39;;2362:38;2396:2;2385:9;2381:18;2362:38;:::i;:::-;2352:48;;2419:38;2453:2;2442:9;2438:18;2419:38;:::i;:::-;2409:48;;2129:334;;;;;:::o;2896:408::-;3098:2;3080:21;;;3137:2;3117:18;;;3110:30;3176:34;3171:2;3156:18;;3149:62;-1:-1:-1;;;3242:2:119;3227:18;;3220:42;3294:3;3279:19;;2896:408::o;3309:::-;3511:2;3493:21;;;3550:2;3530:18;;;3523:30;3589:34;3584:2;3569:18;;3562:62;-1:-1:-1;;;3655:2:119;3640:18;;3633:42;3707:3;3692:19;;3309:408::o;4881:258::-;4953:1;4963:113;4977:6;4974:1;4971:13;4963:113;;;5053:11;;;5047:18;5034:11;;;5027:39;4999:2;4992:10;4963:113;;;5094:6;5091:1;5088:13;5085:48;;;-1:-1:-1;;5129:1:119;5111:16;;5104:27;4881:258::o;5144:257::-;5185:3;5223:5;5217:12;5250:6;5245:3;5238:19;5266:63;5322:6;5315:4;5310:3;5306:14;5299:4;5292:5;5288:16;5266:63;:::i;:::-;5383:2;5362:15;-1:-1:-1;;5358:29:119;5349:39;;;;5390:4;5345:50;;5144:257;-1:-1:-1;;5144:257:119:o;5406:314::-;-1:-1:-1;;;;;5581:32:119;;5563:51;;5650:2;5645;5630:18;;5623:30;;;-1:-1:-1;;5670:44:119;;5695:18;;5687:6;5670:44;:::i;8376:184::-;8446:6;8499:2;8487:9;8478:7;8474:23;8470:32;8467:52;;;8515:1;8512;8505:12;8467:52;-1:-1:-1;8538:16:119;;8376:184;-1:-1:-1;8376:184:119:o;9390:407::-;9592:2;9574:21;;;9631:2;9611:18;;;9604:30;9670:34;9665:2;9650:18;;9643:62;-1:-1:-1;;;9736:2:119;9721:18;;9714:41;9787:3;9772:19;;9390:407::o;10216:274::-;10345:3;10383:6;10377:13;10399:53;10445:6;10440:3;10433:4;10425:6;10421:17;10399:53;:::i;:::-;10468:16;;;;;10216:274;-1:-1:-1;;10216:274:119:o;10853:219::-;11002:2;10991:9;10984:21;10965:4;11022:44;11062:2;11051:9;11047:18;11039:6;11022:44;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "31813": [
        {
          "start": 829,
          "length": 32
        },
        {
          "start": 896,
          "length": 32
        },
        {
          "start": 1064,
          "length": 32
        },
        {
          "start": 1131,
          "length": 32
        },
        {
          "start": 1287,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "deployRewardSwap(address)": "733fd342",
    "getRewardSwapTemplateAddress()": "bc3ccf6d",
    "getStakingRegistryAddress()": "9f997eb0",
    "implementation()": "5c60da1b",
    "initialize(address,address,address)": "c0c53b8b",
    "owner()": "8da5cb5b",
    "proxiableUUID()": "52d1902d",
    "renounceOwnership()": "715018a6",
    "setRewardSwapTemplate(address)": "c0f11bf7",
    "setStakingRegistry(address)": "2c740844",
    "transferOwnership(address)": "f2fde38b",
    "upgradeTo(address)": "3659cfe6",
    "upgradeToAndCall(address,bytes)": "4f1ef286"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_stakingAddress\",\"type\":\"address\"}],\"name\":\"RewardSwapContractCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingAddress\",\"type\":\"address\"}],\"name\":\"deployRewardSwap\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardSwapTemplateAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakingRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingRegistry\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardTemplate\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardTemplate\",\"type\":\"address\"}],\"name\":\"setRewardSwapTemplate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingRegistry\",\"type\":\"address\"}],\"name\":\"setStakingRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"charlescrain\",\"kind\":\"dev\",\"methods\":{\"deployRewardSwap(address)\":{\"params\":{\"_stakingAddress\":\"Address of staking contract.\"},\"returns\":{\"_0\":\"address Address of the RewardAccumulator contract.\"}},\"getRewardSwapTemplateAddress()\":{\"returns\":{\"_0\":\"address Address of the template.\"}},\"getStakingRegistryAddress()\":{\"returns\":{\"_0\":\"address Address of the staking registry contract.\"}},\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setRewardSwapTemplate(address)\":{\"details\":\"Requires the caller to be the owner of the contract.\",\"params\":{\"_rewardTemplate\":\"Address of the RewardAccumulator template.\"}},\"setStakingRegistry(address)\":{\"details\":\"Requires the caller to be the owner of the contract.\",\"params\":{\"_stakingRegistry\":\"Address of the new staking registry contract.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"title\":\"RewardAccumulatorFactory\",\"version\":1},\"userdoc\":{\"events\":{\"RewardSwapContractCreated(address)\":{\"notice\":\"Emitted via {deployRewardSwap} when a new RewardAccumulator contract is deployed.\"}},\"kind\":\"user\",\"methods\":{\"deployRewardSwap(address)\":{\"notice\":\"Deploys a RewardAccumulator contract.\"},\"getRewardSwapTemplateAddress()\":{\"notice\":\"Retrieve the template contract\"},\"getStakingRegistryAddress()\":{\"notice\":\"Retrieve the currently used staking registry address.\"},\"setRewardSwapTemplate(address)\":{\"notice\":\"Set the RewardAccumulator template address to be used.\"},\"setStakingRegistry(address)\":{\"notice\":\"Set the staking registry address field to be used.\"}},\"notice\":\"The RewardAccumulator Factory that creates RewardAccumulator contracts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/staking/factory/RewardAccumulatorFactory.sol\":\"RewardAccumulatorFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/buffer/=lib/buffer/\",\":@ensdomains/ens-contracts/=lib/ens-contracts/contracts/\",\":@manifoldxyz/libraries-solidity/=lib/royalty-registry-solidity/lib/libraries-solidity/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/royalty-registry-solidity/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/royalty-registry-solidity/lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/contracts/\",\":@uniswap/v3-core/contracts/=lib/v3-core/contracts/\",\":@uniswap/v3-periphery/=lib/v3-periphery/contracts/\",\":arachnid/solidity-stringutils/=lib/solidity-stringutils/\",\":assets/=lib/assets/\",\":aux/=lib/aux/\",\":buffer/=lib/buffer/contracts/\",\":create2-helpers/=lib/royalty-registry-solidity/lib/create2-helpers/\",\":create2-scripts/=lib/royalty-registry-solidity/lib/create2-helpers/script/\",\":ds-test/=lib/ds-test/src/\",\":ens-contracts/=lib/ens-contracts/contracts/\",\":ensdomains/ens-contracts/=lib/ensdomains/ens-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":libraries-solidity/=lib/royalty-registry-solidity/lib/libraries-solidity/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":rareprotocol/assets/=lib/assets/src/\",\":rareprotocol/aux/=lib/aux/src/\",\":royalty-guard/=lib/aux/lib/royalty-guard/src/\",\":royalty-registry-solidity/=lib/royalty-registry-solidity/contracts/\",\":royalty-registry/=lib/royalty-registry-solidity/contracts/\",\":solidity-stringutils/=lib/solidity-stringutils/\",\":solmate/=lib/solmate/src/\",\":v3-core/=lib/v3-core/\",\":v3-periphery/=lib/v3-periphery/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC20Upgradeable.sol\":{\"keccak256\":\"0xe73087c5001a37cf7186b3709377c7ceb01a0d38fb908723d1464cea66b4958c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b835a1929ca2c7c978085e58f08f48855df8a82ef6a426ac71393cf032ea0fc5\",\"dweb:/ipfs/QmUMXRN9g8u9wm63wc7PMaSs7oG2nqnM1VVvktaWkvF68v\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9826c7edf276ff48b99ee217358393097c30448a71d345d287c2f6961bb1f159\",\"dweb:/ipfs/QmYXBTY9wDvffGU47yMRFJ1NFyKwpbj94VHzRzhsm6R7Gz\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33e8f8d863c6943ea046fcf4972b4e815c04ab06bad195dba1d93f8ebeb8420d\",\"dweb:/ipfs/QmTQzxQTuuzPDk3eqVmYy7hv2RCXM1yt1NtubXpRbzYjaj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xbe62cd20530654aaec3c79b0ac559072f873d75078476fa9d5d53b5056a82e98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15caa92e99e78a08d104db0b87199ee317ad7a9e6874393d89c2fabe793289c2\",\"dweb:/ipfs/QmbSio6ocLhJUaGEferLk82tr1RtJWvZMFLyRmDo7Y23jf\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45\",\"dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x0e7c9f782f550d78de6494455a48ef509ece00bed07d74051a27c588a7366803\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ac0362e73a0048bde4dcc1c6e2466fa9fb2bc931b76a28ee8b784407ca5c054\",\"dweb:/ipfs/QmcQuaJwykGpVgd11kZfz2WU5HmWD9rFG5meYR8ATR8mGA\"]},\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol\":{\"keccak256\":\"0x85439e74ab467b6a23d45d32bdc9506cbc3760320289afd605f11638c4138e95\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e18633c182e445895e5a70f9e79f2558d0f6eac86767fd1d90552177df2955c\",\"dweb:/ipfs/QmagUFUJbiNGRGGajg9CF5LPuopc44XSCtcCaYvQasBuX9\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x03a26b0ce85afee2c16f3232bd123286b849ca576778781cf6e8bbf51cb7570a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a4f5cec214760f14abaedfc0a1860d80c2267386fa62dc77e8eee51ec84d71\",\"dweb:/ipfs/QmWmEKeofHqLnNEeCivhzTepo1k5xZZqzMxyyyzNBYiYBW\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xa6dfb97ce947b7c846b054ee7d45d12383359778f4f3743654ae0a34fa421b26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b97e7e5a77ea47c08ba422291df887eba76c80982f52a6e94a30106e9377a94f\",\"dweb:/ipfs/Qme7N2XRC7mcDxB8wZxNWPk6T8S2qsnmhAqXeUj4CNvsGD\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x20ecf3c67cab5ec0a1d0cc7d980fa236ffdfd8579d8d8b6b89d29329bc6e78ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b52e4581ee6605732661d367845d2c551e0efcf81852f29248aef6d4be0a300b\",\"dweb:/ipfs/QmaLPj2TrVCTPH6D1BEjBVCb9N1dLJ6pTcoJwCmM3HWkfC\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]},\"lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"lib/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0xaa9d8894cfc7826e4d1abacb026b022ef4ff07569037b8796474d43257fb1f19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d4defb32c4331c11a78f235cc5a844c67036221eb9b7fdd5ef81ea024b1c05b\",\"dweb:/ipfs/QmRX1y6Wsg8eyAvTcDynRBvH65cFt7B2DH2Ux92C12m588\"]},\"lib/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0x681ad959f8a575271b01dbde85e2a61f41eddd3247da3f8bc59d948446975347\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2347b5b5258d7a8afc15d725ef2b2193751a073cf6180ec1359292729f454a97\",\"dweb:/ipfs/QmTvqAQpCQMZ6wNVAN4CWXaaqZv9zc2vNfXHsaLG5Mmdv2\"]},\"lib/v3-periphery/contracts/libraries/OracleLibrary.sol\":{\"keccak256\":\"0x7845d46168720f378aeb0178ff8198e2cbbedae7eb9aaf9cee6abaa80d0b618a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1a48a2a2e96a9ee41d73e17965926ae90f33a3219e6f98c065b3f65d7a404313\",\"dweb:/ipfs/QmY5WEYcNxPNLhcbAangLyqkuCEtQhT8dmuNBKouxBUXkR\"]},\"src/staking/factory/IRewardAccumulatorFactory.sol\":{\"keccak256\":\"0x60bf662b2559c105f66e98ee49a0bc313a8339631bd8b38ae1abcbb0193fb7a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84ec414a304dc9a378bac05327c35e0dc4d7ede9fe1d58c07aabb43c30ea94a0\",\"dweb:/ipfs/QmaXs4PxZQGctSWp3ZKJLjK7HoVxWvxyuDvGQEEDgJnNJH\"]},\"src/staking/factory/RewardAccumulatorFactory.sol\":{\"keccak256\":\"0xf8cdf9388f01c4451fdb76756a56a731a066a0f56ca0d12149ba2ddd8b207db8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://777303791c00b8c6e1c6c2651f36d14ddd52043d1cb3d8abed931671a6ed45fd\",\"dweb:/ipfs/QmaXjFkRmBU3GRimUe1DdVBkZ3J9hT1pR9adkyJi9CBVV2\"]},\"src/staking/registry/IRareStakingRegistry.sol\":{\"keccak256\":\"0xc77c14fe766b3a8d5fc985a6f3abdd9e338aa6b9671b22caf06c9664aefda981\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e470d3b77fbac141c826ed2cf9e4829642a282e55b50e8f6fb35be8a630a8fa5\",\"dweb:/ipfs/Qmd54NwkoeHyVxMTMmmJzo5PrjNeh8DuFRRjy4LXaDevAP\"]},\"src/staking/reward/IRewardAccumulator.sol\":{\"keccak256\":\"0x7f259a7d117d4657620a7302d7269a4083093ce81f15863804a9c12b84211d26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be2527ac82814e132ce20dd66c7573be5e57a6e58a446679d67ff933c5653820\",\"dweb:/ipfs/QmcUNbMvyvj59weD6qcw5kX74uHTUectiGJv6AjfbvbRwq\"]},\"src/staking/reward/RewardAccumulator.sol\":{\"keccak256\":\"0xfb9ad2b2c43f4b5486ee67c900f8f8441c3d6650a862707d42e01866ecc71c89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c662028267c95e3b62aa5478dc99f123f431229d5199aaa062a27db82d73e6a6\",\"dweb:/ipfs/Qmck5gfVJqyEz5hCMjrNsNnpBEFd5tQ56cAQw4fZwic3Zn\"]},\"src/staking/token/IRarityPool.sol\":{\"keccak256\":\"0xf08b96167873596abf9bb5cb377258fff453b11a8edbb89f466af0cbabfbd663\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df48bab3b28bb3b50a37548c1f241889a75f6e9e15f3b2c593b9e0babda7fe58\",\"dweb:/ipfs/QmXWgnfBC2B6MXegJYz5ZnPxyE557xQkpkXB2i4fhck9j4\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousAdmin",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newAdmin",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "beacon",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "BeaconUpgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_stakingAddress",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RewardSwapContractCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Upgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_stakingAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deployRewardSwap",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRewardSwapTemplateAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getStakingRegistryAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "implementation",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_stakingRegistry",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_rewardTemplate",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxiableUUID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_rewardTemplate",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRewardSwapTemplate"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_stakingRegistry",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setStakingRegistry"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "upgradeTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "upgradeToAndCall"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "deployRewardSwap(address)": {
            "params": {
              "_stakingAddress": "Address of staking contract."
            },
            "returns": {
              "_0": "address Address of the RewardAccumulator contract."
            }
          },
          "getRewardSwapTemplateAddress()": {
            "returns": {
              "_0": "address Address of the template."
            }
          },
          "getStakingRegistryAddress()": {
            "returns": {
              "_0": "address Address of the staking registry contract."
            }
          },
          "implementation()": {
            "details": "Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "proxiableUUID()": {
            "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "setRewardSwapTemplate(address)": {
            "details": "Requires the caller to be the owner of the contract.",
            "params": {
              "_rewardTemplate": "Address of the RewardAccumulator template."
            }
          },
          "setStakingRegistry(address)": {
            "details": "Requires the caller to be the owner of the contract.",
            "params": {
              "_stakingRegistry": "Address of the new staking registry contract."
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "upgradeTo(address)": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          },
          "upgradeToAndCall(address,bytes)": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "deployRewardSwap(address)": {
            "notice": "Deploys a RewardAccumulator contract."
          },
          "getRewardSwapTemplateAddress()": {
            "notice": "Retrieve the template contract"
          },
          "getStakingRegistryAddress()": {
            "notice": "Retrieve the currently used staking registry address."
          },
          "setRewardSwapTemplate(address)": {
            "notice": "Set the RewardAccumulator template address to be used."
          },
          "setStakingRegistry(address)": {
            "notice": "Set the staking registry address field to be used."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/buffer/=lib/buffer/",
        ":@ensdomains/ens-contracts/=lib/ens-contracts/contracts/",
        ":@manifoldxyz/libraries-solidity/=lib/royalty-registry-solidity/lib/libraries-solidity/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@openzeppelin/contracts-upgradeable/=lib/royalty-registry-solidity/lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/royalty-registry-solidity/lib/openzeppelin-contracts/contracts/",
        ":@uniswap/v3-core/=lib/v3-core/contracts/",
        ":@uniswap/v3-core/contracts/=lib/v3-core/contracts/",
        ":@uniswap/v3-periphery/=lib/v3-periphery/contracts/",
        ":arachnid/solidity-stringutils/=lib/solidity-stringutils/",
        ":assets/=lib/assets/",
        ":aux/=lib/aux/",
        ":buffer/=lib/buffer/contracts/",
        ":create2-helpers/=lib/royalty-registry-solidity/lib/create2-helpers/",
        ":create2-scripts/=lib/royalty-registry-solidity/lib/create2-helpers/script/",
        ":ds-test/=lib/ds-test/src/",
        ":ens-contracts/=lib/ens-contracts/contracts/",
        ":ensdomains/ens-contracts/=lib/ensdomains/ens-contracts/contracts/",
        ":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":libraries-solidity/=lib/royalty-registry-solidity/lib/libraries-solidity/contracts/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":rareprotocol/assets/=lib/assets/src/",
        ":rareprotocol/aux/=lib/aux/src/",
        ":royalty-guard/=lib/aux/lib/royalty-guard/src/",
        ":royalty-registry-solidity/=lib/royalty-registry-solidity/contracts/",
        ":royalty-registry/=lib/royalty-registry-solidity/contracts/",
        ":solidity-stringutils/=lib/solidity-stringutils/",
        ":solmate/=lib/solmate/src/",
        ":v3-core/=lib/v3-core/",
        ":v3-periphery/=lib/v3-periphery/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/staking/factory/RewardAccumulatorFactory.sol": "RewardAccumulatorFactory"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98",
        "urls": [
          "bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8",
          "dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC1967Upgradeable.sol": {
        "keccak256": "0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b",
        "urls": [
          "bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0",
          "dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC20Upgradeable.sol": {
        "keccak256": "0xe73087c5001a37cf7186b3709377c7ceb01a0d38fb908723d1464cea66b4958c",
        "urls": [
          "bzz-raw://b835a1929ca2c7c978085e58f08f48855df8a82ef6a426ac71393cf032ea0fc5",
          "dweb:/ipfs/QmUMXRN9g8u9wm63wc7PMaSs7oG2nqnM1VVvktaWkvF68v"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol": {
        "keccak256": "0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f",
        "urls": [
          "bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053",
          "dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
        "keccak256": "0x584ebdf9c1118a7c773f98788e3f3ede01982bdf8932aa06f5acc7d54876e161",
        "urls": [
          "bzz-raw://9826c7edf276ff48b99ee217358393097c30448a71d345d287c2f6961bb1f159",
          "dweb:/ipfs/QmYXBTY9wDvffGU47yMRFJ1NFyKwpbj94VHzRzhsm6R7Gz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol": {
        "keccak256": "0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908",
        "urls": [
          "bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1",
          "dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0xb607cb94c27e89750f5ae2ccebcb94e654e926f6125f4fd4c6262c89875118ad",
        "urls": [
          "bzz-raw://33e8f8d863c6943ea046fcf4972b4e815c04ab06bad195dba1d93f8ebeb8420d",
          "dweb:/ipfs/QmTQzxQTuuzPDk3eqVmYy7hv2RCXM1yt1NtubXpRbzYjaj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f",
        "urls": [
          "bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f",
          "dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol": {
        "keccak256": "0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908",
        "urls": [
          "bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685",
          "dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol": {
        "keccak256": "0xbe62cd20530654aaec3c79b0ac559072f873d75078476fa9d5d53b5056a82e98",
        "urls": [
          "bzz-raw://15caa92e99e78a08d104db0b87199ee317ad7a9e6874393d89c2fabe793289c2",
          "dweb:/ipfs/QmbSio6ocLhJUaGEferLk82tr1RtJWvZMFLyRmDo7Y23jf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol": {
        "keccak256": "0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45",
        "urls": [
          "bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45",
          "dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol": {
        "keccak256": "0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff",
        "urls": [
          "bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688",
          "dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
        "keccak256": "0x0e7c9f782f550d78de6494455a48ef509ece00bed07d74051a27c588a7366803",
        "urls": [
          "bzz-raw://4ac0362e73a0048bde4dcc1c6e2466fa9fb2bc931b76a28ee8b784407ca5c054",
          "dweb:/ipfs/QmcQuaJwykGpVgd11kZfz2WU5HmWD9rFG5meYR8ATR8mGA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol": {
        "keccak256": "0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27",
        "urls": [
          "bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472",
          "dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol": {
        "keccak256": "0x85439e74ab467b6a23d45d32bdc9506cbc3760320289afd605f11638c4138e95",
        "urls": [
          "bzz-raw://6e18633c182e445895e5a70f9e79f2558d0f6eac86767fd1d90552177df2955c",
          "dweb:/ipfs/QmagUFUJbiNGRGGajg9CF5LPuopc44XSCtcCaYvQasBuX9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
        "urls": [
          "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
          "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0x03a26b0ce85afee2c16f3232bd123286b849ca576778781cf6e8bbf51cb7570a",
        "urls": [
          "bzz-raw://13a4f5cec214760f14abaedfc0a1860d80c2267386fa62dc77e8eee51ec84d71",
          "dweb:/ipfs/QmWmEKeofHqLnNEeCivhzTepo1k5xZZqzMxyyyzNBYiYBW"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0",
        "urls": [
          "bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1",
          "dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xa6dfb97ce947b7c846b054ee7d45d12383359778f4f3743654ae0a34fa421b26",
        "urls": [
          "bzz-raw://b97e7e5a77ea47c08ba422291df887eba76c80982f52a6e94a30106e9377a94f",
          "dweb:/ipfs/Qme7N2XRC7mcDxB8wZxNWPk6T8S2qsnmhAqXeUj4CNvsGD"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0x20ecf3c67cab5ec0a1d0cc7d980fa236ffdfd8579d8d8b6b89d29329bc6e78ae",
        "urls": [
          "bzz-raw://b52e4581ee6605732661d367845d2c551e0efcf81852f29248aef6d4be0a300b",
          "dweb:/ipfs/QmaLPj2TrVCTPH6D1BEjBVCb9N1dLJ6pTcoJwCmM3HWkfC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/v3-core/contracts/interfaces/IUniswapV3Factory.sol": {
        "keccak256": "0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489",
        "urls": [
          "bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2",
          "dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
        "keccak256": "0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1",
        "urls": [
          "bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5",
          "dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
        "keccak256": "0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634",
        "urls": [
          "bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5",
          "dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
        "keccak256": "0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5",
        "urls": [
          "bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7",
          "dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
        "keccak256": "0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd",
        "urls": [
          "bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03",
          "dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
        "keccak256": "0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7",
        "urls": [
          "bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047",
          "dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
        "keccak256": "0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235",
        "urls": [
          "bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735",
          "dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
        "keccak256": "0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f",
        "urls": [
          "bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f",
          "dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/FullMath.sol": {
        "keccak256": "0xaa9d8894cfc7826e4d1abacb026b022ef4ff07569037b8796474d43257fb1f19",
        "urls": [
          "bzz-raw://3d4defb32c4331c11a78f235cc5a844c67036221eb9b7fdd5ef81ea024b1c05b",
          "dweb:/ipfs/QmRX1y6Wsg8eyAvTcDynRBvH65cFt7B2DH2Ux92C12m588"
        ],
        "license": "MIT"
      },
      "lib/v3-core/contracts/libraries/TickMath.sol": {
        "keccak256": "0x681ad959f8a575271b01dbde85e2a61f41eddd3247da3f8bc59d948446975347",
        "urls": [
          "bzz-raw://2347b5b5258d7a8afc15d725ef2b2193751a073cf6180ec1359292729f454a97",
          "dweb:/ipfs/QmTvqAQpCQMZ6wNVAN4CWXaaqZv9zc2vNfXHsaLG5Mmdv2"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/OracleLibrary.sol": {
        "keccak256": "0x7845d46168720f378aeb0178ff8198e2cbbedae7eb9aaf9cee6abaa80d0b618a",
        "urls": [
          "bzz-raw://1a48a2a2e96a9ee41d73e17965926ae90f33a3219e6f98c065b3f65d7a404313",
          "dweb:/ipfs/QmY5WEYcNxPNLhcbAangLyqkuCEtQhT8dmuNBKouxBUXkR"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/staking/factory/IRewardAccumulatorFactory.sol": {
        "keccak256": "0x60bf662b2559c105f66e98ee49a0bc313a8339631bd8b38ae1abcbb0193fb7a3",
        "urls": [
          "bzz-raw://84ec414a304dc9a378bac05327c35e0dc4d7ede9fe1d58c07aabb43c30ea94a0",
          "dweb:/ipfs/QmaXs4PxZQGctSWp3ZKJLjK7HoVxWvxyuDvGQEEDgJnNJH"
        ],
        "license": "MIT"
      },
      "src/staking/factory/RewardAccumulatorFactory.sol": {
        "keccak256": "0xf8cdf9388f01c4451fdb76756a56a731a066a0f56ca0d12149ba2ddd8b207db8",
        "urls": [
          "bzz-raw://777303791c00b8c6e1c6c2651f36d14ddd52043d1cb3d8abed931671a6ed45fd",
          "dweb:/ipfs/QmaXjFkRmBU3GRimUe1DdVBkZ3J9hT1pR9adkyJi9CBVV2"
        ],
        "license": "MIT"
      },
      "src/staking/registry/IRareStakingRegistry.sol": {
        "keccak256": "0xc77c14fe766b3a8d5fc985a6f3abdd9e338aa6b9671b22caf06c9664aefda981",
        "urls": [
          "bzz-raw://e470d3b77fbac141c826ed2cf9e4829642a282e55b50e8f6fb35be8a630a8fa5",
          "dweb:/ipfs/Qmd54NwkoeHyVxMTMmmJzo5PrjNeh8DuFRRjy4LXaDevAP"
        ],
        "license": "MIT"
      },
      "src/staking/reward/IRewardAccumulator.sol": {
        "keccak256": "0x7f259a7d117d4657620a7302d7269a4083093ce81f15863804a9c12b84211d26",
        "urls": [
          "bzz-raw://be2527ac82814e132ce20dd66c7573be5e57a6e58a446679d67ff933c5653820",
          "dweb:/ipfs/QmcUNbMvyvj59weD6qcw5kX74uHTUectiGJv6AjfbvbRwq"
        ],
        "license": "MIT"
      },
      "src/staking/reward/RewardAccumulator.sol": {
        "keccak256": "0xfb9ad2b2c43f4b5486ee67c900f8f8441c3d6650a862707d42e01866ecc71c89",
        "urls": [
          "bzz-raw://c662028267c95e3b62aa5478dc99f123f431229d5199aaa062a27db82d73e6a6",
          "dweb:/ipfs/Qmck5gfVJqyEz5hCMjrNsNnpBEFd5tQ56cAQw4fZwic3Zn"
        ],
        "license": "MIT"
      },
      "src/staking/token/IRarityPool.sol": {
        "keccak256": "0xf08b96167873596abf9bb5cb377258fff453b11a8edbb89f466af0cbabfbd663",
        "urls": [
          "bzz-raw://df48bab3b28bb3b50a37548c1f241889a75f6e9e15f3b2c593b9e0babda7fe58",
          "dweb:/ipfs/QmXWgnfBC2B6MXegJYz5ZnPxyE557xQkpkXB2i4fhck9j4"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/staking/factory/RewardAccumulatorFactory.sol",
    "id": 47044,
    "exportedSymbols": {
      "BeaconProxy": [
        38269
      ],
      "IBeaconUpgradeable": [
        31613
      ],
      "IRareStakingRegistry": [
        47376
      ],
      "IRewardAccumulatorFactory": [
        46497
      ],
      "OwnableUpgradeable": [
        31245
      ],
      "RewardAccumulator": [
        49346
      ],
      "RewardAccumulatorFactory": [
        47043
      ],
      "UUPSUpgradeable": [
        31918
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:4641:110",
    "nodes": [
      {
        "id": 46817,
        "nodeType": "PragmaDirective",
        "src": "32:23:110",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 46819,
        "nodeType": "ImportDirective",
        "src": "57:100:110",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/access/OwnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47044,
        "sourceUnit": 31246,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46818,
              "name": "OwnableUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31245,
              "src": "65:18:110",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46821,
        "nodeType": "ImportDirective",
        "src": "158:99:110",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47044,
        "sourceUnit": 31919,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46820,
              "name": "UUPSUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31918,
              "src": "166:15:110",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46823,
        "nodeType": "ImportDirective",
        "src": "258:106:110",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47044,
        "sourceUnit": 31614,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46822,
              "name": "IBeaconUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31613,
              "src": "266:18:110",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46825,
        "nodeType": "ImportDirective",
        "src": "365:80:110",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol",
        "file": "openzeppelin-contracts/proxy/beacon/BeaconProxy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47044,
        "sourceUnit": 38270,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46824,
              "name": "BeaconProxy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38269,
              "src": "373:11:110",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46827,
        "nodeType": "ImportDirective",
        "src": "447:74:110",
        "nodes": [],
        "absolutePath": "src/staking/factory/IRewardAccumulatorFactory.sol",
        "file": "./IRewardAccumulatorFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47044,
        "sourceUnit": 46498,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46826,
              "name": "IRewardAccumulatorFactory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46497,
              "src": "455:25:110",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46829,
        "nodeType": "ImportDirective",
        "src": "522:74:110",
        "nodes": [],
        "absolutePath": "src/staking/registry/IRareStakingRegistry.sol",
        "file": "../registry/IRareStakingRegistry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47044,
        "sourceUnit": 47377,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46828,
              "name": "IRareStakingRegistry",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47376,
              "src": "530:20:110",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46831,
        "nodeType": "ImportDirective",
        "src": "597:66:110",
        "nodes": [],
        "absolutePath": "src/staking/reward/RewardAccumulator.sol",
        "file": "../reward/RewardAccumulator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47044,
        "sourceUnit": 49347,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46830,
              "name": "RewardAccumulator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49346,
              "src": "605:17:110",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 47043,
        "nodeType": "ContractDefinition",
        "src": "810:3862:110",
        "nodes": [
          {
            "id": 46843,
            "nodeType": "VariableDeclaration",
            "src": "1144:44:110",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "stakingRegistry",
            "nameLocation": "1173:15:110",
            "scope": 47043,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IRareStakingRegistry_$47376",
              "typeString": "contract IRareStakingRegistry"
            },
            "typeName": {
              "id": 46842,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 46841,
                "name": "IRareStakingRegistry",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 47376,
                "src": "1144:20:110"
              },
              "referencedDeclaration": 47376,
              "src": "1144:20:110",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IRareStakingRegistry_$47376",
                "typeString": "contract IRareStakingRegistry"
              }
            },
            "visibility": "private"
          },
          {
            "id": 46845,
            "nodeType": "VariableDeclaration",
            "src": "1193:30:110",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "rewardTemplate",
            "nameLocation": "1209:14:110",
            "scope": 47043,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 46844,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1193:7:110",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 46894,
            "nodeType": "FunctionDefinition",
            "src": "1429:487:110",
            "nodes": [],
            "body": {
              "id": 46893,
              "nodeType": "Block",
              "src": "1556:360:110",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 46862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 46857,
                          "name": "_stakingRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46847,
                          "src": "1570:16:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 46860,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1598:1:110",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 46859,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1590:7:110",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 46858,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1590:7:110",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46861,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1590:10:110",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1570:30:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e697469616c697a653a3a5f7374616b696e6752656769737472792063616e6e6f74206265207a65726f2061646472657373",
                        "id": 46863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1602:53:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_db782c1b1c0514ee3267ee811c8f503d771b3e9d6f56f00206388ec261b695d9",
                          "typeString": "literal_string \"initialize::_stakingRegistry cannot be zero address\""
                        },
                        "value": "initialize::_stakingRegistry cannot be zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_db782c1b1c0514ee3267ee811c8f503d771b3e9d6f56f00206388ec261b695d9",
                          "typeString": "literal_string \"initialize::_stakingRegistry cannot be zero address\""
                        }
                      ],
                      "id": 46856,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1562:7:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 46864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1562:94:110",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46865,
                  "nodeType": "ExpressionStatement",
                  "src": "1562:94:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 46872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 46867,
                          "name": "_rewardTemplate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46849,
                          "src": "1670:15:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 46870,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1697:1:110",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 46869,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1689:7:110",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 46868,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1689:7:110",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1689:10:110",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1670:29:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e697469616c697a653a3a5f72657761726454656d706c6174652063616e6e6f74206265207a65726f2061646472657373",
                        "id": 46873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1701:52:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee4160493d7d4506ade7ec357f150adbac983e1d0bda99d56f6aabe4dfedd4b1",
                          "typeString": "literal_string \"initialize::_rewardTemplate cannot be zero address\""
                        },
                        "value": "initialize::_rewardTemplate cannot be zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee4160493d7d4506ade7ec357f150adbac983e1d0bda99d56f6aabe4dfedd4b1",
                          "typeString": "literal_string \"initialize::_rewardTemplate cannot be zero address\""
                        }
                      ],
                      "id": 46866,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1662:7:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 46874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1662:92:110",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46875,
                  "nodeType": "ExpressionStatement",
                  "src": "1662:92:110"
                },
                {
                  "expression": {
                    "id": 46878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46876,
                      "name": "rewardTemplate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46845,
                      "src": "1760:14:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 46877,
                      "name": "_rewardTemplate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46849,
                      "src": "1777:15:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1760:32:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 46879,
                  "nodeType": "ExpressionStatement",
                  "src": "1760:32:110"
                },
                {
                  "expression": {
                    "id": 46884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46880,
                      "name": "stakingRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46843,
                      "src": "1798:15:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRareStakingRegistry_$47376",
                        "typeString": "contract IRareStakingRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 46882,
                          "name": "_stakingRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46847,
                          "src": "1837:16:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 46881,
                        "name": "IRareStakingRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47376,
                        "src": "1816:20:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IRareStakingRegistry_$47376_$",
                          "typeString": "type(contract IRareStakingRegistry)"
                        }
                      },
                      "id": 46883,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1816:38:110",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRareStakingRegistry_$47376",
                        "typeString": "contract IRareStakingRegistry"
                      }
                    },
                    "src": "1798:56:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRareStakingRegistry_$47376",
                      "typeString": "contract IRareStakingRegistry"
                    }
                  },
                  "id": 46885,
                  "nodeType": "ExpressionStatement",
                  "src": "1798:56:110"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 46886,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31140,
                      "src": "1860:14:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 46887,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1860:16:110",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46888,
                  "nodeType": "ExpressionStatement",
                  "src": "1860:16:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46890,
                        "name": "_newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46851,
                        "src": "1901:9:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 46889,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31239,
                      "src": "1882:18:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 46891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1882:29:110",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46892,
                  "nodeType": "ExpressionStatement",
                  "src": "1882:29:110"
                }
              ]
            },
            "functionSelector": "c0c53b8b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 46854,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 46853,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31684,
                  "src": "1544:11:110"
                },
                "nodeType": "ModifierInvocation",
                "src": "1544:11:110"
              }
            ],
            "name": "initialize",
            "nameLocation": "1438:10:110",
            "parameters": {
              "id": 46852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46847,
                  "mutability": "mutable",
                  "name": "_stakingRegistry",
                  "nameLocation": "1462:16:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 46894,
                  "src": "1454:24:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46846,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1454:7:110",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46849,
                  "mutability": "mutable",
                  "name": "_rewardTemplate",
                  "nameLocation": "1492:15:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 46894,
                  "src": "1484:23:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46848,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1484:7:110",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46851,
                  "mutability": "mutable",
                  "name": "_newOwner",
                  "nameLocation": "1521:9:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 46894,
                  "src": "1513:17:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46850,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1513:7:110",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1448:86:110"
            },
            "returnParameters": {
              "id": 46855,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1556:0:110"
            },
            "scope": 47043,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46904,
            "nodeType": "FunctionDefinition",
            "src": "2163:66:110",
            "nodes": [],
            "body": {
              "id": 46903,
              "nodeType": "Block",
              "src": "2227:2:110",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              31912
            ],
            "documentation": {
              "id": 46895,
              "nodeType": "StructuredDocumentation",
              "src": "2129:31:110",
              "text": "@inheritdoc UUPSUpgradeable"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 46901,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 46900,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31159,
                  "src": "2217:9:110"
                },
                "nodeType": "ModifierInvocation",
                "src": "2217:9:110"
              }
            ],
            "name": "_authorizeUpgrade",
            "nameLocation": "2172:17:110",
            "overrides": {
              "id": 46899,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2208:8:110"
            },
            "parameters": {
              "id": 46898,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46897,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46904,
                  "src": "2190:7:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46896,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2190:7:110",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2189:9:110"
            },
            "returnParameters": {
              "id": 46902,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2227:0:110"
            },
            "scope": 47043,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 46929,
            "nodeType": "FunctionDefinition",
            "src": "2548:248:110",
            "nodes": [],
            "body": {
              "id": 46928,
              "nodeType": "Block",
              "src": "2621:175:110",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 46918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 46913,
                          "name": "_stakingRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46907,
                          "src": "2635:16:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 46916,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2663:1:110",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 46915,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2655:7:110",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 46914,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2655:7:110",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2655:10:110",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2635:30:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7365745374616b696e6752656769737472793a3a5f7374616b696e6752656769737472792063616e6e6f74206265207a65726f2061646472657373",
                        "id": 46919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2667:61:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_15b3f78dd59b7cf982ffb8145a483a0905f92c8a958acb89ded1af59e15906ba",
                          "typeString": "literal_string \"setStakingRegistry::_stakingRegistry cannot be zero address\""
                        },
                        "value": "setStakingRegistry::_stakingRegistry cannot be zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_15b3f78dd59b7cf982ffb8145a483a0905f92c8a958acb89ded1af59e15906ba",
                          "typeString": "literal_string \"setStakingRegistry::_stakingRegistry cannot be zero address\""
                        }
                      ],
                      "id": 46912,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2627:7:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 46920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2627:102:110",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46921,
                  "nodeType": "ExpressionStatement",
                  "src": "2627:102:110"
                },
                {
                  "expression": {
                    "id": 46926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46922,
                      "name": "stakingRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46843,
                      "src": "2735:15:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRareStakingRegistry_$47376",
                        "typeString": "contract IRareStakingRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 46924,
                          "name": "_stakingRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46907,
                          "src": "2774:16:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 46923,
                        "name": "IRareStakingRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47376,
                        "src": "2753:20:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IRareStakingRegistry_$47376_$",
                          "typeString": "type(contract IRareStakingRegistry)"
                        }
                      },
                      "id": 46925,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2753:38:110",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRareStakingRegistry_$47376",
                        "typeString": "contract IRareStakingRegistry"
                      }
                    },
                    "src": "2735:56:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRareStakingRegistry_$47376",
                      "typeString": "contract IRareStakingRegistry"
                    }
                  },
                  "id": 46927,
                  "nodeType": "ExpressionStatement",
                  "src": "2735:56:110"
                }
              ]
            },
            "baseFunctions": [
              46478
            ],
            "documentation": {
              "id": 46905,
              "nodeType": "StructuredDocumentation",
              "src": "2440:105:110",
              "text": "@inheritdoc IRewardAccumulatorFactory\n @dev Requires the caller to be the owner of the contract."
            },
            "functionSelector": "2c740844",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 46910,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 46909,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31159,
                  "src": "2611:9:110"
                },
                "nodeType": "ModifierInvocation",
                "src": "2611:9:110"
              }
            ],
            "name": "setStakingRegistry",
            "nameLocation": "2557:18:110",
            "parameters": {
              "id": 46908,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46907,
                  "mutability": "mutable",
                  "name": "_stakingRegistry",
                  "nameLocation": "2584:16:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 46929,
                  "src": "2576:24:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46906,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2576:7:110",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2575:26:110"
            },
            "returnParameters": {
              "id": 46911,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2621:0:110"
            },
            "scope": 47043,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46952,
            "nodeType": "FunctionDefinition",
            "src": "2908:227:110",
            "nodes": [],
            "body": {
              "id": 46951,
              "nodeType": "Block",
              "src": "2983:152:110",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 46943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 46938,
                          "name": "_rewardTemplate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46932,
                          "src": "2997:15:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 46941,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3024:1:110",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 46940,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3016:7:110",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 46939,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3016:7:110",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46942,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3016:10:110",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2997:29:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7365745265776172645377617054656d706c6174653a3a5f72657761726454656d706c6174652063616e6e6f74206265207a65726f2061646472657373",
                        "id": 46944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3028:63:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e522704217298efd8566264761a743dc1d76d1d3cc470634a20a73780c4f46d",
                          "typeString": "literal_string \"setRewardSwapTemplate::_rewardTemplate cannot be zero address\""
                        },
                        "value": "setRewardSwapTemplate::_rewardTemplate cannot be zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e522704217298efd8566264761a743dc1d76d1d3cc470634a20a73780c4f46d",
                          "typeString": "literal_string \"setRewardSwapTemplate::_rewardTemplate cannot be zero address\""
                        }
                      ],
                      "id": 46937,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2989:7:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 46945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2989:103:110",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46946,
                  "nodeType": "ExpressionStatement",
                  "src": "2989:103:110"
                },
                {
                  "expression": {
                    "id": 46949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46947,
                      "name": "rewardTemplate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46845,
                      "src": "3098:14:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 46948,
                      "name": "_rewardTemplate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46932,
                      "src": "3115:15:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3098:32:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 46950,
                  "nodeType": "ExpressionStatement",
                  "src": "3098:32:110"
                }
              ]
            },
            "baseFunctions": [
              46484
            ],
            "documentation": {
              "id": 46930,
              "nodeType": "StructuredDocumentation",
              "src": "2800:105:110",
              "text": "@inheritdoc IRewardAccumulatorFactory\n @dev Requires the caller to be the owner of the contract."
            },
            "functionSelector": "c0f11bf7",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 46935,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 46934,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31159,
                  "src": "2973:9:110"
                },
                "nodeType": "ModifierInvocation",
                "src": "2973:9:110"
              }
            ],
            "name": "setRewardSwapTemplate",
            "nameLocation": "2917:21:110",
            "parameters": {
              "id": 46933,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46932,
                  "mutability": "mutable",
                  "name": "_rewardTemplate",
                  "nameLocation": "2947:15:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 46952,
                  "src": "2939:23:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46931,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2939:7:110",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2938:25:110"
            },
            "returnParameters": {
              "id": 46936,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2983:0:110"
            },
            "scope": 47043,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47012,
            "nodeType": "FunctionDefinition",
            "src": "3524:495:110",
            "nodes": [],
            "body": {
              "id": 47011,
              "nodeType": "Block",
              "src": "3608:411:110",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 46966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 46961,
                          "name": "_stakingAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46955,
                          "src": "3622:15:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 46964,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3649:1:110",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 46963,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3641:7:110",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 46962,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3641:7:110",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46965,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3641:10:110",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3622:29:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6465706c6f79526577617264537761703a3a5f7374616b696e67416464726573732063616e6e6f74206265207a65726f2061646472657373",
                        "id": 46967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3653:58:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7ace1e85b46602fce2586b1e7fbd4486de557369bc06319bc2d8112f7ff7aa7",
                          "typeString": "literal_string \"deployRewardSwap::_stakingAddress cannot be zero address\""
                        },
                        "value": "deployRewardSwap::_stakingAddress cannot be zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f7ace1e85b46602fce2586b1e7fbd4486de557369bc06319bc2d8112f7ff7aa7",
                          "typeString": "literal_string \"deployRewardSwap::_stakingAddress cannot be zero address\""
                        }
                      ],
                      "id": 46960,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3614:7:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 46968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3614:98:110",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46969,
                  "nodeType": "ExpressionStatement",
                  "src": "3614:98:110"
                },
                {
                  "assignments": [
                    46972
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46972,
                      "mutability": "mutable",
                      "name": "newRewardSwap",
                      "nameLocation": "3730:13:110",
                      "nodeType": "VariableDeclaration",
                      "scope": 47011,
                      "src": "3718:25:110",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BeaconProxy_$38269",
                        "typeString": "contract BeaconProxy"
                      },
                      "typeName": {
                        "id": 46971,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 46970,
                          "name": "BeaconProxy",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 38269,
                          "src": "3718:11:110"
                        },
                        "referencedDeclaration": 38269,
                        "src": "3718:11:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BeaconProxy_$38269",
                          "typeString": "contract BeaconProxy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46995,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46978,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3777:4:110",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_RewardAccumulatorFactory_$47043",
                              "typeString": "contract RewardAccumulatorFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_RewardAccumulatorFactory_$47043",
                              "typeString": "contract RewardAccumulatorFactory"
                            }
                          ],
                          "id": 46977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3769:7:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46976,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3769:7:110",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46979,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3769:13:110",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 46982,
                                "name": "RewardAccumulator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49346,
                                "src": "3813:17:110",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_RewardAccumulator_$49346_$",
                                  "typeString": "type(contract RewardAccumulator)"
                                }
                              },
                              "id": 46983,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "initialize",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 48968,
                              "src": "3813:28:110",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$returns$__$",
                                "typeString": "function RewardAccumulator.initialize(address,address)"
                              }
                            },
                            "id": 46984,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "3813:37:110",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 46987,
                                "name": "stakingRegistry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46843,
                                "src": "3860:15:110",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IRareStakingRegistry_$47376",
                                  "typeString": "contract IRareStakingRegistry"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IRareStakingRegistry_$47376",
                                  "typeString": "contract IRareStakingRegistry"
                                }
                              ],
                              "id": 46986,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3852:7:110",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46985,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3852:7:110",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46988,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3852:24:110",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 46991,
                                "name": "_stakingAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46955,
                                "src": "3886:15:110",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 46990,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3878:7:110",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46989,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3878:7:110",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46992,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3878:24:110",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 46980,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3790:3:110",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 46981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "3790:22:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 46993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3790:113:110",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 46975,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3746:15:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_BeaconProxy_$38269_$",
                        "typeString": "function (address,bytes memory) payable returns (contract BeaconProxy)"
                      },
                      "typeName": {
                        "id": 46974,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 46973,
                          "name": "BeaconProxy",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 38269,
                          "src": "3750:11:110"
                        },
                        "referencedDeclaration": 38269,
                        "src": "3750:11:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BeaconProxy_$38269",
                          "typeString": "contract BeaconProxy"
                        }
                      }
                    },
                    "id": 46994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3746:163:110",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BeaconProxy_$38269",
                      "typeString": "contract BeaconProxy"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3718:191:110"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46999,
                            "name": "newRewardSwap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46972,
                            "src": "3955:13:110",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeaconProxy_$38269",
                              "typeString": "contract BeaconProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BeaconProxy_$38269",
                              "typeString": "contract BeaconProxy"
                            }
                          ],
                          "id": 46998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3947:7:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46997,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3947:7:110",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3947:22:110",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 46996,
                      "name": "RewardSwapContractCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46464,
                      "src": "3921:25:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 47001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3921:49:110",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47002,
                  "nodeType": "EmitStatement",
                  "src": "3916:54:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 47007,
                            "name": "newRewardSwap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46972,
                            "src": "3999:13:110",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BeaconProxy_$38269",
                              "typeString": "contract BeaconProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BeaconProxy_$38269",
                              "typeString": "contract BeaconProxy"
                            }
                          ],
                          "id": 47006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3991:7:110",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 47005,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3991:7:110",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3991:22:110",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 47004,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3983:8:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 47003,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3983:8:110",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 47009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3983:31:110",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "functionReturnParameters": 46959,
                  "id": 47010,
                  "nodeType": "Return",
                  "src": "3976:38:110"
                }
              ]
            },
            "baseFunctions": [
              46472
            ],
            "documentation": {
              "id": 46953,
              "nodeType": "StructuredDocumentation",
              "src": "3349:172:110",
              "text": "@notice Deploys a RewardAccumulator contract.\n @param _stakingAddress Address of staking contract.\n @return address Address of the RewardAccumulator contract."
            },
            "functionSelector": "733fd342",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deployRewardSwap",
            "nameLocation": "3533:16:110",
            "parameters": {
              "id": 46956,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46955,
                  "mutability": "mutable",
                  "name": "_stakingAddress",
                  "nameLocation": "3558:15:110",
                  "nodeType": "VariableDeclaration",
                  "scope": 47012,
                  "src": "3550:23:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46954,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3550:7:110",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3549:25:110"
            },
            "returnParameters": {
              "id": 46959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46958,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47012,
                  "src": "3591:15:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 46957,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3591:15:110",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3590:17:110"
            },
            "scope": 47043,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 47024,
            "nodeType": "FunctionDefinition",
            "src": "4276:111:110",
            "nodes": [],
            "body": {
              "id": 47023,
              "nodeType": "Block",
              "src": "4345:42:110",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 47020,
                        "name": "stakingRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46843,
                        "src": "4366:15:110",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRareStakingRegistry_$47376",
                          "typeString": "contract IRareStakingRegistry"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IRareStakingRegistry_$47376",
                          "typeString": "contract IRareStakingRegistry"
                        }
                      ],
                      "id": 47019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4358:7:110",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 47018,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4358:7:110",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 47021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4358:24:110",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 47017,
                  "id": 47022,
                  "nodeType": "Return",
                  "src": "4351:31:110"
                }
              ]
            },
            "baseFunctions": [
              46490
            ],
            "documentation": {
              "id": 47013,
              "nodeType": "StructuredDocumentation",
              "src": "4232:41:110",
              "text": "@inheritdoc IRewardAccumulatorFactory"
            },
            "functionSelector": "9f997eb0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStakingRegistryAddress",
            "nameLocation": "4285:25:110",
            "parameters": {
              "id": 47014,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4310:2:110"
            },
            "returnParameters": {
              "id": 47017,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47016,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47024,
                  "src": "4336:7:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47015,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4336:7:110",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4335:9:110"
            },
            "scope": 47043,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47033,
            "nodeType": "FunctionDefinition",
            "src": "4435:104:110",
            "nodes": [],
            "body": {
              "id": 47032,
              "nodeType": "Block",
              "src": "4507:32:110",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 47030,
                    "name": "rewardTemplate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 46845,
                    "src": "4520:14:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 47029,
                  "id": 47031,
                  "nodeType": "Return",
                  "src": "4513:21:110"
                }
              ]
            },
            "baseFunctions": [
              46496
            ],
            "documentation": {
              "id": 47025,
              "nodeType": "StructuredDocumentation",
              "src": "4391:41:110",
              "text": "@inheritdoc IRewardAccumulatorFactory"
            },
            "functionSelector": "bc3ccf6d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRewardSwapTemplateAddress",
            "nameLocation": "4444:28:110",
            "parameters": {
              "id": 47026,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4472:2:110"
            },
            "returnParameters": {
              "id": 47029,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47028,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47033,
                  "src": "4498:7:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47027,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4498:7:110",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4497:9:110"
            },
            "scope": 47043,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 47042,
            "nodeType": "FunctionDefinition",
            "src": "4580:90:110",
            "nodes": [],
            "body": {
              "id": 47041,
              "nodeType": "Block",
              "src": "4638:32:110",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 47039,
                    "name": "rewardTemplate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 46845,
                    "src": "4651:14:110",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 47038,
                  "id": 47040,
                  "nodeType": "Return",
                  "src": "4644:21:110"
                }
              ]
            },
            "baseFunctions": [
              31612
            ],
            "documentation": {
              "id": 47034,
              "nodeType": "StructuredDocumentation",
              "src": "4543:34:110",
              "text": "@inheritdoc IBeaconUpgradeable"
            },
            "functionSelector": "5c60da1b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "implementation",
            "nameLocation": "4589:14:110",
            "parameters": {
              "id": 47035,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4603:2:110"
            },
            "returnParameters": {
              "id": 47038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47037,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 47042,
                  "src": "4629:7:110",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47036,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4629:7:110",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4628:9:110"
            },
            "scope": 47043,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 46833,
              "name": "IRewardAccumulatorFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46497,
              "src": "847:25:110"
            },
            "id": 46834,
            "nodeType": "InheritanceSpecifier",
            "src": "847:25:110"
          },
          {
            "baseName": {
              "id": 46835,
              "name": "IBeaconUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31613,
              "src": "874:18:110"
            },
            "id": 46836,
            "nodeType": "InheritanceSpecifier",
            "src": "874:18:110"
          },
          {
            "baseName": {
              "id": 46837,
              "name": "OwnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31245,
              "src": "894:18:110"
            },
            "id": 46838,
            "nodeType": "InheritanceSpecifier",
            "src": "894:18:110"
          },
          {
            "baseName": {
              "id": 46839,
              "name": "UUPSUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31918,
              "src": "914:15:110"
            },
            "id": 46840,
            "nodeType": "InheritanceSpecifier",
            "src": "914:15:110"
          }
        ],
        "canonicalName": "RewardAccumulatorFactory",
        "contractDependencies": [
          38269
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 46832,
          "nodeType": "StructuredDocumentation",
          "src": "665:145:110",
          "text": "@author charlescrain\n @title RewardAccumulatorFactory\n @notice The RewardAccumulator Factory that creates RewardAccumulator contracts."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          47043,
          31918,
          31603,
          31266,
          31279,
          31245,
          34352,
          31782,
          31613,
          46497
        ],
        "name": "RewardAccumulatorFactory",
        "nameLocation": "819:24:110",
        "scope": 47044,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 110
}