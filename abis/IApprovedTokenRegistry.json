{"abi":[{"type":"function","name":"addApprovedToken","inputs":[{"name":"_tokenContract","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"isApprovedToken","inputs":[{"name":"_tokenContract","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"removeApprovedToken","inputs":[{"name":"_tokenContract","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setAllTokensApproved","inputs":[{"name":"_allTokensApproved","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"addApprovedToken(address)":"cd10534b","isApprovedToken(address)":"2d5ad3d5","removeApprovedToken(address)":"5705987a","setAllTokensApproved(bool)":"32a801a2"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"}],\"name\":\"addApprovedToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"}],\"name\":\"isApprovedToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"}],\"name\":\"removeApprovedToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_allTokensApproved\",\"type\":\"bool\"}],\"name\":\"setAllTokensApproved\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addApprovedToken(address)\":{\"params\":{\"_tokenContract\":\"Contract of token being approved.\"}},\"isApprovedToken(address)\":{\"params\":{\"_tokenContract\":\"Contract of token being checked.\"},\"returns\":{\"_0\":\"True if the token is allowed, false otherwise.\"}},\"removeApprovedToken(address)\":{\"params\":{\"_tokenContract\":\"Contract of token being approved.\"}},\"setAllTokensApproved(bool)\":{\"params\":{\"_allTokensApproved\":\"Bool denoting if all tokens should be approved.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addApprovedToken(address)\":{\"notice\":\"Adds a token to the list of approved tokens.\"},\"isApprovedToken(address)\":{\"notice\":\"Returns if a token has been approved or not.\"},\"removeApprovedToken(address)\":{\"notice\":\"Removes a token from the approved tokens list.\"},\"setAllTokensApproved(bool)\":{\"notice\":\"Sets whether all token contracts should be approved.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/registry/interfaces/IApprovedTokenRegistry.sol\":\"IApprovedTokenRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/buffer/=lib/buffer/\",\":@ensdomains/ens-contracts/=lib/ens-contracts/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/contracts/\",\":@uniswap/v3-core/contracts/=lib/v3-core/contracts/\",\":@uniswap/v3-periphery/=lib/v3-periphery/contracts/\",\":arachnid/solidity-stringutils/=lib/solidity-stringutils/\",\":ds-test/=lib/ds-test/src/\",\":ensdomains/ens-contracts/=lib/ensdomains/ens-contracts/contracts/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":rareprotocol/assets/=lib/assets/src/\",\":rareprotocol/aux/=src/\",\":royalty-guard/=lib/royalty-guard/src/royalty-guard/\",\":royalty-registry-solidity/=lib/royalty-registry-solidity/contracts/\",\":royalty-registry/=lib/royalty-registry-solidity/contracts/\",\":solmate/=lib/solmate/src/\"],\"viaIR\":true},\"sources\":{\"src/registry/interfaces/IApprovedTokenRegistry.sol\":{\"keccak256\":\"0xdb86d418bedb954ea79129631d734b42749d4a0ca00635ecdf3dfeb8e81fb60a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad677939c49f8a55f7a1c1e78b0abbe722744abc5c26b81eef5a20a578d415d2\",\"dweb:/ipfs/QmZL6aHq79B8TFPrc5Zrt7iLxuqkoJikhEJtq8hgk1aKMC\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.18+commit.87f61d96"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_tokenContract","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"addApprovedToken"},{"inputs":[{"internalType":"address","name":"_tokenContract","type":"address"}],"stateMutability":"view","type":"function","name":"isApprovedToken","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"_tokenContract","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"removeApprovedToken"},{"inputs":[{"internalType":"bool","name":"_allTokensApproved","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"setAllTokensApproved"}],"devdoc":{"kind":"dev","methods":{"addApprovedToken(address)":{"params":{"_tokenContract":"Contract of token being approved."}},"isApprovedToken(address)":{"params":{"_tokenContract":"Contract of token being checked."},"returns":{"_0":"True if the token is allowed, false otherwise."}},"removeApprovedToken(address)":{"params":{"_tokenContract":"Contract of token being approved."}},"setAllTokensApproved(bool)":{"params":{"_allTokensApproved":"Bool denoting if all tokens should be approved."}}},"version":1},"userdoc":{"kind":"user","methods":{"addApprovedToken(address)":{"notice":"Adds a token to the list of approved tokens."},"isApprovedToken(address)":{"notice":"Returns if a token has been approved or not."},"removeApprovedToken(address)":{"notice":"Removes a token from the approved tokens list."},"setAllTokensApproved(bool)":{"notice":"Sets whether all token contracts should be approved."}},"version":1}},"settings":{"remappings":["@ensdomains/buffer/=lib/buffer/","@ensdomains/ens-contracts/=lib/ens-contracts/contracts/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@uniswap/v3-core/=lib/v3-core/contracts/","@uniswap/v3-core/contracts/=lib/v3-core/contracts/","@uniswap/v3-periphery/=lib/v3-periphery/contracts/","arachnid/solidity-stringutils/=lib/solidity-stringutils/","ds-test/=lib/ds-test/src/","ensdomains/ens-contracts/=lib/ensdomains/ens-contracts/contracts/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/","rareprotocol/assets/=lib/assets/src/","rareprotocol/aux/=src/","royalty-guard/=lib/royalty-guard/src/royalty-guard/","royalty-registry-solidity/=lib/royalty-registry-solidity/contracts/","royalty-registry/=lib/royalty-registry-solidity/contracts/","solmate/=lib/solmate/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/registry/interfaces/IApprovedTokenRegistry.sol":"IApprovedTokenRegistry"},"evmVersion":"paris","libraries":{},"viaIR":true},"sources":{"src/registry/interfaces/IApprovedTokenRegistry.sol":{"keccak256":"0xdb86d418bedb954ea79129631d734b42749d4a0ca00635ecdf3dfeb8e81fb60a","urls":["bzz-raw://ad677939c49f8a55f7a1c1e78b0abbe722744abc5c26b81eef5a20a578d415d2","dweb:/ipfs/QmZL6aHq79B8TFPrc5Zrt7iLxuqkoJikhEJtq8hgk1aKMC"],"license":"MIT"}},"version":1},"id":36}