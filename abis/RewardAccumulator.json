{
  "abi": [
    {
      "inputs": [],
      "name": "CannotSwapRareForRare",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientFunds",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RarePriceTooLow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Unauthorized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnsupportedERC20Token",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_msgSender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_tokenOut",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_rareIn",
          "type": "uint256"
        }
      ],
      "name": "RewardAccumulator",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "_rareAmountIn",
          "type": "uint128"
        }
      ],
      "name": "estimateRarePrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakingRegistry",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_stakingPool",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_minAmountOut",
          "type": "uint256"
        },
        {
          "internalType": "uint128",
          "name": "_rareIn",
          "type": "uint128"
        }
      ],
      "name": "rewardSwap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b506001600055611a31806100256000396000f3fe6080604052600436106100385760003560e01c8063442471f014610044578063485cc9551461007657806394a5a29d1461009857600080fd5b3661003f57005b600080fd5b34801561005057600080fd5b5061006461005f366004611539565b6100b8565b60405190815260200160405180910390f35b34801561008257600080fd5b5061009661009136600461156e565b6106c1565b005b3480156100a457600080fd5b506100966100b33660046115a7565b61080c565b600080600160029054906101000a90046001600160a01b03166001600160a01b03166323a7b42a6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561010e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013291906115e5565b905060006001600160a01b0385161561014b578461014d565b815b6001546040516301cde7c760e11b81526001600160a01b038084166004830152929350600092620100009092049091169063039bcf8e90602401602060405180830381865afa1580156101a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c891906115e5565b90506001600160a01b0381161580156101f35750826001600160a01b0316826001600160a01b031614155b15610211576040516305d6109b60e31b815260040160405180910390fd5b604080516002808252606082018352610708926000929190602083019080368337019050509050818160008151811061024c5761024c611618565b602002602001019063ffffffff16908163ffffffff168152505060008160018151811061027b5761027b611618565b63ffffffff9290921660209283029190910182015260015460408051632210d52560e01b81529051600093620100009093046001600160a01b03169263039bcf8e928492632210d525926004808401939192918290030181865afa1580156102e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030b91906115e5565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801561034f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037391906115e5565b6001600160a01b031663883bdbfd836040518263ffffffff1660e01b815260040161039e919061162e565b600060405180830381865afa1580156103bb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103e39190810190611741565b5090506000816000815181106103fb576103fb611618565b60200260200101518260018151811061041657610416611618565b60200260200101516104289190611823565b9050600061043a600386900b83611889565b905060008260060b12801561045e5750610458600386900b836118c7565b60060b15155b15610471578061046d816118e9565b9150505b6000612710600160029054906101000a90046001600160a01b03166001600160a01b031663111029b96040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ed919061190c565b6104f990612710611925565b61058c8461050f8f6001600160801b0316610c72565b600160029054906101000a90046001600160a01b03166001600160a01b0316632210d5256040518163ffffffff1660e01b8152600401602060405180830381865afa158015610562573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058691906115e5565b8e610cdf565b610596919061193d565b6105a0919061195c565b9050886001600160a01b0316886001600160a01b0316036105cb5798506106bb975050505050505050565b60405163883bdbfd60e01b81526000906001600160a01b0389169063883bdbfd906105fa90899060040161162e565b600060405180830381865afa158015610617573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261063f9190810190611741565b50905060008160008151811061065757610657611618565b60200260200101518260018151811061067257610672611618565b60200260200101516106849190611823565b9050600061069660038a900b83611889565b90506106ac816106a586610c72565b8e8e610cdf565b9c505050505050505050505050505b92915050565b600154610100900460ff16158080156106de57506001805460ff16105b806106f75750303b1580156106f757506001805460ff16145b61075f5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6001805460ff1916811790558015610781576001805461ff0019166101001790555b6001805462010000600160b01b031916620100006001600160a01b038681169190910291909117909155600280546001600160a01b0319169184169190911790558015610807576001805461ff00191681556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b610814610ded565b6000600160029054906101000a90046001600160a01b03166001600160a01b0316632210d5256040518163ffffffff1660e01b8152600401602060405180830381865afa158015610869573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088d91906115e5565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038316906370a0823190602401602060405180830381865afa1580156108d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108fb919061190c565b11156109e9576002546040516370a0823160e01b81523060048201526001600160a01b038381169263a9059cbb9291169083906370a0823190602401602060405180830381865afa158015610954573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610978919061190c565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156109c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e79190611970565b505b6001600160a01b0384161580156109ff57508247105b15610a1d5760405163356680b760e01b815260040160405180910390fd5b6001600160a01b03841615801590610a9c57506040516370a0823160e01b815230600482015283906001600160a01b038616906370a0823190602401602060405180830381865afa158015610a76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9a919061190c565b105b15610aba5760405163356680b760e01b815260040160405180910390fd5b806001600160a01b0316846001600160a01b031603610aec57604051630cdece4960e21b815260040160405180910390fd5b6000610af885846100b8565b905083811015610b1b576040516390981e6d60e01b815260040160405180910390fd5b60025460405163a9fc507b60e01b81523360048201526001600160801b03851660248201526001600160a01b039091169063a9fc507b90604401600060405180830381600087803b158015610b6f57600080fd5b505af1158015610b83573d6000803e3d6000fd5b5050506001600160a01b0386169050610ba557610ba03382610e46565b610c18565b60405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0386169063a9059cbb906044016020604051808303816000875af1158015610bf2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c169190611970565b505b604080518281526001600160801b03851660208201526001600160a01b0387169133917ffde313859edf8a78b1e1c10c6dbe0584a219be6af8d4914fdb85486523103397910160405180910390a350506108076001600055565b60006001600160801b03821115610cdb5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b6064820152608401610756565b5090565b600080610ceb86610f5f565b90506001600160801b036001600160a01b03821611610d71576000610d196001600160a01b0383168061193d565b9050836001600160a01b0316856001600160a01b031610610d5157610d4c600160c01b876001600160801b03168361137f565b610d69565b610d6981876001600160801b0316600160c01b61137f565b925050610de4565b6000610d906001600160a01b038316806801000000000000000061137f565b9050836001600160a01b0316856001600160a01b031610610dc857610dc3600160801b876001600160801b03168361137f565b610de0565b610de081876001600160801b0316600160801b61137f565b9250505b50949350505050565b600260005403610e3f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610756565b6002600055565b80471015610e965760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610756565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610ee3576040519150601f19603f3d011682016040523d82523d6000602084013e610ee8565b606091505b50509050806108075760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610756565b60008060008360020b12610f76578260020b610f83565b8260020b610f8390611992565b9050610f92620d89e7196119ae565b60020b811115610fc85760405162461bcd60e51b81526020600482015260016024820152601560fa1b6044820152606401610756565b600081600116600003610fdf57600160801b610ff1565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff169050600282161561103057608061102b826ffff97272373d413259a46990580e213a61193d565b901c90505b600482161561105a576080611055826ffff2e50f5f656932ef12357cf3c7fdcc61193d565b901c90505b600882161561108457608061107f826fffe5caca7e10e4e61c3624eaa0941cd061193d565b901c90505b60108216156110ae5760806110a9826fffcb9843d60f6159c9db58835c92664461193d565b901c90505b60208216156110d85760806110d3826fff973b41fa98c081472e6896dfb254c061193d565b901c90505b60408216156111025760806110fd826fff2ea16466c96a3843ec78b326b5286161193d565b901c90505b608082161561112c576080611127826ffe5dee046a99a2a811c461f1969c305361193d565b901c90505b610100821615611157576080611152826ffcbe86c7900a88aedcffc83b479aa3a461193d565b901c90505b61020082161561118257608061117d826ff987a7253ac413176f2b074cf7815e5461193d565b901c90505b6104008216156111ad5760806111a8826ff3392b0822b70005940c7a398e4b70f361193d565b901c90505b6108008216156111d85760806111d3826fe7159475a2c29b7443b29c7fa6e889d961193d565b901c90505b6110008216156112035760806111fe826fd097f3bdfd2022b8845ad8f792aa582561193d565b901c90505b61200082161561122e576080611229826fa9f746462d870fdf8a65dc1f90e061e561193d565b901c90505b614000821615611259576080611254826f70d869a156d2a1b890bb3df62baf32f761193d565b901c90505b61800082161561128457608061127f826f31be135f97d08fd981231505542fcfa661193d565b901c90505b620100008216156112b05760806112ab826f09aa508b5b7a84e1c677de54f3e99bc961193d565b901c90505b620200008216156112db5760806112d6826e5d6af8dedb81196699c329225ee60461193d565b901c90505b62040000821615611305576080611300826d2216e584f5fa1ea926041bedfe9861193d565b901c90505b6208000082161561132d576080611328826b048a170391f7dc42444e8fa261193d565b901c90505b60008460020b1315611348576113458160001961195c565b90505b611357640100000000826119d0565b15611363576001611366565b60005b6113779060ff16602083901c611925565b949350505050565b60008080600019858709858702925082811083820303915050806000036113b857600084116113ad57600080fd5b5082900490506114fe565b8084116113c457600080fd5b6000848688098084039381119092039190506000856113e5816000196119e4565b6113f0906001611925565b16958690049593849004936000819003046001019050611410818461193d565b90931792600061142187600361193d565b6002189050611430818861193d565b61143b9060026119e4565b611445908261193d565b9050611451818861193d565b61145c9060026119e4565b611466908261193d565b9050611472818861193d565b61147d9060026119e4565b611487908261193d565b9050611493818861193d565b61149e9060026119e4565b6114a8908261193d565b90506114b4818861193d565b6114bf9060026119e4565b6114c9908261193d565b90506114d5818861193d565b6114e09060026119e4565b6114ea908261193d565b90506114f6818661193d565b955050505050505b9392505050565b6001600160a01b038116811461151a57600080fd5b50565b80356001600160801b038116811461153457600080fd5b919050565b6000806040838503121561154c57600080fd5b823561155781611505565b91506115656020840161151d565b90509250929050565b6000806040838503121561158157600080fd5b823561158c81611505565b9150602083013561159c81611505565b809150509250929050565b6000806000606084860312156115bc57600080fd5b83356115c781611505565b9250602084013591506115dc6040850161151d565b90509250925092565b6000602082840312156115f757600080fd5b81516114fe81611505565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6020808252825182820181905260009190848201906040850190845b8181101561166c57835163ffffffff168352928401929184019160010161164a565b50909695505050505050565b604051601f8201601f1916810167ffffffffffffffff811182821017156116a1576116a1611602565b604052919050565b600067ffffffffffffffff8211156116c3576116c3611602565b5060051b60200190565b600082601f8301126116de57600080fd5b815160206116f36116ee836116a9565b611678565b82815260059290921b8401810191818101908684111561171257600080fd5b8286015b8481101561173657805161172981611505565b8352918301918301611716565b509695505050505050565b6000806040838503121561175457600080fd5b825167ffffffffffffffff8082111561176c57600080fd5b818501915085601f83011261178057600080fd5b815160206117906116ee836116a9565b82815260059290921b840181019181810190898411156117af57600080fd5b948201945b838610156117dd5785518060060b81146117ce5760008081fd5b825294820194908201906117b4565b918801519196509093505050808211156117f657600080fd5b50611803858286016116cd565b9150509250929050565b634e487b7160e01b600052601160045260246000fd5b60008160060b8360060b6000811281667fffffffffffff190183128115161561184e5761184e61180d565b81667fffffffffffff0183138116156118695761186961180d565b5090039392505050565b634e487b7160e01b600052601260045260246000fd5b60008160060b8360060b806118a0576118a0611873565b667fffffffffffff198214600019821416156118be576118be61180d565b90059392505050565b60008260060b806118da576118da611873565b808360060b0791505092915050565b60008160020b627fffff1981036119025761190261180d565b6000190192915050565b60006020828403121561191e57600080fd5b5051919050565b600082198211156119385761193861180d565b500190565b60008160001904831182151516156119575761195761180d565b500290565b60008261196b5761196b611873565b500490565b60006020828403121561198257600080fd5b815180151581146114fe57600080fd5b6000600160ff1b82016119a7576119a761180d565b5060000390565b60008160020b627fffff1981036119c7576119c761180d565b60000392915050565b6000826119df576119df611873565b500690565b6000828210156119f6576119f661180d565b50039056fea2646970667358221220916e69106474dc3ee8bf78da28a98cf65d53769f9dfcdc8c2750791924290f5364736f6c634300080f0033",
    "sourceMap": "1092:5091:114:-:0;;;;;;;;;;;;-1:-1:-1;1716:1:78;1821:7;:22;1092:5091:114;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100385760003560e01c8063442471f014610044578063485cc9551461007657806394a5a29d1461009857600080fd5b3661003f57005b600080fd5b34801561005057600080fd5b5061006461005f366004611539565b6100b8565b60405190815260200160405180910390f35b34801561008257600080fd5b5061009661009136600461156e565b6106c1565b005b3480156100a457600080fd5b506100966100b33660046115a7565b61080c565b600080600160029054906101000a90046001600160a01b03166001600160a01b03166323a7b42a6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561010e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013291906115e5565b905060006001600160a01b0385161561014b578461014d565b815b6001546040516301cde7c760e11b81526001600160a01b038084166004830152929350600092620100009092049091169063039bcf8e90602401602060405180830381865afa1580156101a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c891906115e5565b90506001600160a01b0381161580156101f35750826001600160a01b0316826001600160a01b031614155b15610211576040516305d6109b60e31b815260040160405180910390fd5b604080516002808252606082018352610708926000929190602083019080368337019050509050818160008151811061024c5761024c611618565b602002602001019063ffffffff16908163ffffffff168152505060008160018151811061027b5761027b611618565b63ffffffff9290921660209283029190910182015260015460408051632210d52560e01b81529051600093620100009093046001600160a01b03169263039bcf8e928492632210d525926004808401939192918290030181865afa1580156102e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030b91906115e5565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801561034f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037391906115e5565b6001600160a01b031663883bdbfd836040518263ffffffff1660e01b815260040161039e919061162e565b600060405180830381865afa1580156103bb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103e39190810190611741565b5090506000816000815181106103fb576103fb611618565b60200260200101518260018151811061041657610416611618565b60200260200101516104289190611823565b9050600061043a600386900b83611889565b905060008260060b12801561045e5750610458600386900b836118c7565b60060b15155b15610471578061046d816118e9565b9150505b6000612710600160029054906101000a90046001600160a01b03166001600160a01b031663111029b96040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ed919061190c565b6104f990612710611925565b61058c8461050f8f6001600160801b0316610c72565b600160029054906101000a90046001600160a01b03166001600160a01b0316632210d5256040518163ffffffff1660e01b8152600401602060405180830381865afa158015610562573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058691906115e5565b8e610cdf565b610596919061193d565b6105a0919061195c565b9050886001600160a01b0316886001600160a01b0316036105cb5798506106bb975050505050505050565b60405163883bdbfd60e01b81526000906001600160a01b0389169063883bdbfd906105fa90899060040161162e565b600060405180830381865afa158015610617573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261063f9190810190611741565b50905060008160008151811061065757610657611618565b60200260200101518260018151811061067257610672611618565b60200260200101516106849190611823565b9050600061069660038a900b83611889565b90506106ac816106a586610c72565b8e8e610cdf565b9c505050505050505050505050505b92915050565b600154610100900460ff16158080156106de57506001805460ff16105b806106f75750303b1580156106f757506001805460ff16145b61075f5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6001805460ff1916811790558015610781576001805461ff0019166101001790555b6001805462010000600160b01b031916620100006001600160a01b038681169190910291909117909155600280546001600160a01b0319169184169190911790558015610807576001805461ff00191681556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b610814610ded565b6000600160029054906101000a90046001600160a01b03166001600160a01b0316632210d5256040518163ffffffff1660e01b8152600401602060405180830381865afa158015610869573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088d91906115e5565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038316906370a0823190602401602060405180830381865afa1580156108d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108fb919061190c565b11156109e9576002546040516370a0823160e01b81523060048201526001600160a01b038381169263a9059cbb9291169083906370a0823190602401602060405180830381865afa158015610954573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610978919061190c565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156109c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e79190611970565b505b6001600160a01b0384161580156109ff57508247105b15610a1d5760405163356680b760e01b815260040160405180910390fd5b6001600160a01b03841615801590610a9c57506040516370a0823160e01b815230600482015283906001600160a01b038616906370a0823190602401602060405180830381865afa158015610a76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9a919061190c565b105b15610aba5760405163356680b760e01b815260040160405180910390fd5b806001600160a01b0316846001600160a01b031603610aec57604051630cdece4960e21b815260040160405180910390fd5b6000610af885846100b8565b905083811015610b1b576040516390981e6d60e01b815260040160405180910390fd5b60025460405163a9fc507b60e01b81523360048201526001600160801b03851660248201526001600160a01b039091169063a9fc507b90604401600060405180830381600087803b158015610b6f57600080fd5b505af1158015610b83573d6000803e3d6000fd5b5050506001600160a01b0386169050610ba557610ba03382610e46565b610c18565b60405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0386169063a9059cbb906044016020604051808303816000875af1158015610bf2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c169190611970565b505b604080518281526001600160801b03851660208201526001600160a01b0387169133917ffde313859edf8a78b1e1c10c6dbe0584a219be6af8d4914fdb85486523103397910160405180910390a350506108076001600055565b60006001600160801b03821115610cdb5760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b6064820152608401610756565b5090565b600080610ceb86610f5f565b90506001600160801b036001600160a01b03821611610d71576000610d196001600160a01b0383168061193d565b9050836001600160a01b0316856001600160a01b031610610d5157610d4c600160c01b876001600160801b03168361137f565b610d69565b610d6981876001600160801b0316600160c01b61137f565b925050610de4565b6000610d906001600160a01b038316806801000000000000000061137f565b9050836001600160a01b0316856001600160a01b031610610dc857610dc3600160801b876001600160801b03168361137f565b610de0565b610de081876001600160801b0316600160801b61137f565b9250505b50949350505050565b600260005403610e3f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610756565b6002600055565b80471015610e965760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610756565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610ee3576040519150601f19603f3d011682016040523d82523d6000602084013e610ee8565b606091505b50509050806108075760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610756565b60008060008360020b12610f76578260020b610f83565b8260020b610f8390611992565b9050610f92620d89e7196119ae565b60020b811115610fc85760405162461bcd60e51b81526020600482015260016024820152601560fa1b6044820152606401610756565b600081600116600003610fdf57600160801b610ff1565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff169050600282161561103057608061102b826ffff97272373d413259a46990580e213a61193d565b901c90505b600482161561105a576080611055826ffff2e50f5f656932ef12357cf3c7fdcc61193d565b901c90505b600882161561108457608061107f826fffe5caca7e10e4e61c3624eaa0941cd061193d565b901c90505b60108216156110ae5760806110a9826fffcb9843d60f6159c9db58835c92664461193d565b901c90505b60208216156110d85760806110d3826fff973b41fa98c081472e6896dfb254c061193d565b901c90505b60408216156111025760806110fd826fff2ea16466c96a3843ec78b326b5286161193d565b901c90505b608082161561112c576080611127826ffe5dee046a99a2a811c461f1969c305361193d565b901c90505b610100821615611157576080611152826ffcbe86c7900a88aedcffc83b479aa3a461193d565b901c90505b61020082161561118257608061117d826ff987a7253ac413176f2b074cf7815e5461193d565b901c90505b6104008216156111ad5760806111a8826ff3392b0822b70005940c7a398e4b70f361193d565b901c90505b6108008216156111d85760806111d3826fe7159475a2c29b7443b29c7fa6e889d961193d565b901c90505b6110008216156112035760806111fe826fd097f3bdfd2022b8845ad8f792aa582561193d565b901c90505b61200082161561122e576080611229826fa9f746462d870fdf8a65dc1f90e061e561193d565b901c90505b614000821615611259576080611254826f70d869a156d2a1b890bb3df62baf32f761193d565b901c90505b61800082161561128457608061127f826f31be135f97d08fd981231505542fcfa661193d565b901c90505b620100008216156112b05760806112ab826f09aa508b5b7a84e1c677de54f3e99bc961193d565b901c90505b620200008216156112db5760806112d6826e5d6af8dedb81196699c329225ee60461193d565b901c90505b62040000821615611305576080611300826d2216e584f5fa1ea926041bedfe9861193d565b901c90505b6208000082161561132d576080611328826b048a170391f7dc42444e8fa261193d565b901c90505b60008460020b1315611348576113458160001961195c565b90505b611357640100000000826119d0565b15611363576001611366565b60005b6113779060ff16602083901c611925565b949350505050565b60008080600019858709858702925082811083820303915050806000036113b857600084116113ad57600080fd5b5082900490506114fe565b8084116113c457600080fd5b6000848688098084039381119092039190506000856113e5816000196119e4565b6113f0906001611925565b16958690049593849004936000819003046001019050611410818461193d565b90931792600061142187600361193d565b6002189050611430818861193d565b61143b9060026119e4565b611445908261193d565b9050611451818861193d565b61145c9060026119e4565b611466908261193d565b9050611472818861193d565b61147d9060026119e4565b611487908261193d565b9050611493818861193d565b61149e9060026119e4565b6114a8908261193d565b90506114b4818861193d565b6114bf9060026119e4565b6114c9908261193d565b90506114d5818861193d565b6114e09060026119e4565b6114ea908261193d565b90506114f6818661193d565b955050505050505b9392505050565b6001600160a01b038116811461151a57600080fd5b50565b80356001600160801b038116811461153457600080fd5b919050565b6000806040838503121561154c57600080fd5b823561155781611505565b91506115656020840161151d565b90509250929050565b6000806040838503121561158157600080fd5b823561158c81611505565b9150602083013561159c81611505565b809150509250929050565b6000806000606084860312156115bc57600080fd5b83356115c781611505565b9250602084013591506115dc6040850161151d565b90509250925092565b6000602082840312156115f757600080fd5b81516114fe81611505565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6020808252825182820181905260009190848201906040850190845b8181101561166c57835163ffffffff168352928401929184019160010161164a565b50909695505050505050565b604051601f8201601f1916810167ffffffffffffffff811182821017156116a1576116a1611602565b604052919050565b600067ffffffffffffffff8211156116c3576116c3611602565b5060051b60200190565b600082601f8301126116de57600080fd5b815160206116f36116ee836116a9565b611678565b82815260059290921b8401810191818101908684111561171257600080fd5b8286015b8481101561173657805161172981611505565b8352918301918301611716565b509695505050505050565b6000806040838503121561175457600080fd5b825167ffffffffffffffff8082111561176c57600080fd5b818501915085601f83011261178057600080fd5b815160206117906116ee836116a9565b82815260059290921b840181019181810190898411156117af57600080fd5b948201945b838610156117dd5785518060060b81146117ce5760008081fd5b825294820194908201906117b4565b918801519196509093505050808211156117f657600080fd5b50611803858286016116cd565b9150509250929050565b634e487b7160e01b600052601160045260246000fd5b60008160060b8360060b6000811281667fffffffffffff190183128115161561184e5761184e61180d565b81667fffffffffffff0183138116156118695761186961180d565b5090039392505050565b634e487b7160e01b600052601260045260246000fd5b60008160060b8360060b806118a0576118a0611873565b667fffffffffffff198214600019821416156118be576118be61180d565b90059392505050565b60008260060b806118da576118da611873565b808360060b0791505092915050565b60008160020b627fffff1981036119025761190261180d565b6000190192915050565b60006020828403121561191e57600080fd5b5051919050565b600082198211156119385761193861180d565b500190565b60008160001904831182151516156119575761195761180d565b500290565b60008261196b5761196b611873565b500490565b60006020828403121561198257600080fd5b815180151581146114fe57600080fd5b6000600160ff1b82016119a7576119a761180d565b5060000390565b60008160020b627fffff1981036119c7576119c761180d565b60000392915050565b6000826119df576119df611873565b500690565b6000828210156119f6576119f661180d565b50039056fea2646970667358221220916e69106474dc3ee8bf78da28a98cf65d53769f9dfcdc8c2750791924290f5364736f6c634300080f0033",
    "sourceMap": "1092:5091:114:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3947:2008;;;;;;;;;;-1:-1:-1;3947:2008:114;;;;;:::i;:::-;;:::i;:::-;;;815:25:119;;;803:2;788:18;3947:2008:114;;;;;;;1802:201;;;;;;;;;;-1:-1:-1;1802:201:114;;;;;:::i;:::-;;:::i;:::-;;2251:1440;;;;;;;;;;-1:-1:-1;2251:1440:114;;;;;:::i;:::-;;:::i;3947:2008::-;4037:7;4052:12;4067:15;;;;;;;;;-1:-1:-1;;;;;4067:15:114;-1:-1:-1;;;;;4067:30:114;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4052:47;-1:-1:-1;4137:16:114;-1:-1:-1;;;;;4156:23:114;;;:42;;4189:9;4156:42;;;4182:4;4156:42;4222:15;;:37;;-1:-1:-1;;;4222:37:114;;-1:-1:-1;;;;;2058:32:119;;;4222:37:114;;;2040:51:119;4137:61:114;;-1:-1:-1;4204:15:114;;4222;;;;;;;;:27;;2013:18:119;;4222:37:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4204:55;-1:-1:-1;;;;;;4366:21:114;;;:41;;;;;4403:4;-1:-1:-1;;;;;4391:16:114;:8;-1:-1:-1;;;;;4391:16:114;;;4366:41;4362:92;;;4424:23;;-1:-1:-1;;;4424:23:114;;;;;;;;;;;4362:92;4526:15;;;4539:1;4526:15;;;;;;;;4480:10;;4460:17;;4526:15;4539:1;4526:15;;;;;;;;;;-1:-1:-1;4526:15:114;4496:45;;4564:10;4547:11;4559:1;4547:14;;;;;;;;:::i;:::-;;;;;;:27;;;;;;;;;;;4597:1;4580:11;4592:1;4580:14;;;;;;;;:::i;:::-;:18;;;;;:14;;;;;;;;;;:18;4704:15;;4732:32;;;-1:-1:-1;;;4732:32:114;;;;4653:30;;4704:15;;;;-1:-1:-1;;;;;4704:15:114;;:27;;:15;;4732:30;;:32;;;;;4580:14;;4732:32;;;;;;4704:15;4732:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4704:61;;-1:-1:-1;;;;;;4704:61:114;;;;;;;-1:-1:-1;;;;;2058:32:119;;;4704:61:114;;;2040:51:119;2013:18;;4704:61:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4689:92:114;;4782:11;4689:105;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4689:105:114;;;;;;;;;;;;:::i;:::-;4652:142;;;4849:26;4899:15;4915:1;4899:18;;;;;;;;:::i;:::-;;;;;;;4878:15;4894:1;4878:18;;;;;;;;:::i;:::-;;;;;;;:39;;;;:::i;:::-;4849:68;-1:-1:-1;4923:10:114;4942:40;;;;;4849:68;4942:40;:::i;:::-;4923:60;;5057:1;5034:20;:24;;;:75;;;;-1:-1:-1;5063:40:114;;;;;:20;:40;:::i;:::-;:45;;;;5034:75;5030:102;;;5119:6;;;;:::i;:::-;;;;5030:102;5182:17;5375:6;5331:15;;;;;;;;;-1:-1:-1;;;;;5331:15:114;-1:-1:-1;;;;;5331:37:114;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5322:48;;:6;:48;:::i;:::-;5211:101;5240:4;5246:25;:13;-1:-1:-1;;;;;5246:23:114;;:25::i;:::-;5273:15;;;;;;;;;-1:-1:-1;;;;;5273:15:114;-1:-1:-1;;;;;5273:30:114;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5307:4;5211:28;:101::i;:::-;5203:168;;;;:::i;:::-;5202:179;;;;:::i;:::-;5182:199;;5478:4;-1:-1:-1;;;;;5466:16:114;:8;-1:-1:-1;;;;;5466:16:114;;5462:53;;5499:9;-1:-1:-1;5492:16:114;;-1:-1:-1;;;;;;;;5492:16:114;5462:53;5649:44;;-1:-1:-1;;;5649:44:114;;5608:35;;-1:-1:-1;;;;;5649:31:114;;;;;:44;;5681:11;;5649:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5649:44:114;;;;;;;;;;;;:::i;:::-;5607:86;;;5699:31;5759:20;5780:1;5759:23;;;;;;;;:::i;:::-;;;;;;;5733:20;5754:1;5733:23;;;;;;;;:::i;:::-;;;;;;;:49;;;;:::i;:::-;5699:83;-1:-1:-1;5788:15:114;5812:45;;;;;5699:83;5812:45;:::i;:::-;5788:70;;5872:78;5901:9;5912:21;:9;:19;:21::i;:::-;5935:4;5941:8;5872:28;:78::i;:::-;5865:85;;;;;;;;;;;;;;3947:2008;;;;;:::o;1802:201::-;3302:13:45;;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3380:1:45;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:45;1713:19:57;:23;;;3387:66:45;;-1:-1:-1;3436:12:45;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:45;;7636:2:119;3325:201:45;;;7618:21:119;7675:2;7655:18;;;7648:30;7714:34;7694:18;;;7687:62;-1:-1:-1;;;7765:18:119;;;7758:44;7819:19;;3325:201:45;;;;;;;;;3551:1;3536:16;;-1:-1:-1;;3536:16:45;;;;;3562:65;;;;3612:4;3596:20;;-1:-1:-1;;3596:20:45;;;;;3562:65;1897:15:114::1;:56:::0;;-1:-1:-1;;;;;;1897:56:114::1;::::0;-1:-1:-1;;;;;1897:56:114;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;;:15:::1;1959:39:::0;;-1:-1:-1;;;;;;1959:39:114::1;::::0;;::::1;::::0;;;::::1;::::0;;3647:99:45;;;;3681:13;:21;;-1:-1:-1;;3681:21:45;;;3721:14;;8001:36:119;;;3721:14:45;;7989:2:119;7974:18;3721:14:45;;;;;;;3647:99;3269:483;1802:201:114;;:::o;2251:1440::-;2261:21:78;:19;:21::i;:::-;2374:11:114::1;2395:15;;;;;;;;;-1:-1:-1::0;;;;;2395:15:114::1;-1:-1:-1::0;;;;;2395:30:114::1;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2489:29;::::0;-1:-1:-1;;;2489:29:114;;2512:4:::1;2489:29;::::0;::::1;2040:51:119::0;2374:54:114;;-1:-1:-1;2521:1:114::1;::::0;-1:-1:-1;;;;;2489:14:114;::::1;::::0;::::1;::::0;2013:18:119;;2489:29:114::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:33;2485:120;;;2554:11;::::0;2568:29:::1;::::0;-1:-1:-1;;;2568:29:114;;2591:4:::1;2568:29;::::0;::::1;2040:51:119::0;-1:-1:-1;;;;;2532:13:114;;::::1;::::0;::::1;::::0;2554:11;::::1;::::0;2532:13;;2568:14:::1;::::0;2013:18:119;;2568:29:114::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2532:66;::::0;-1:-1:-1;;;;;;2532:66:114::1;::::0;;;;;;-1:-1:-1;;;;;8240:32:119;;;2532:66:114::1;::::0;::::1;8222:51:119::0;8289:18;;;8282:34;8195:18;;2532:66:114::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2485:120;-1:-1:-1::0;;;;;2643:23:114;::::1;::::0;:64;::::1;;;;2694:13;2670:21;:37;2643:64;2639:111;;;2724:19;;-1:-1:-1::0;;;2724:19:114::1;;;;;;;;;;;2639:111;-1:-1:-1::0;;;;;2791:23:114;::::1;::::0;;::::1;::::0;:85:::1;;-1:-1:-1::0;2818:42:114::1;::::0;-1:-1:-1;;;2818:42:114;;2854:4:::1;2818:42;::::0;::::1;2040:51:119::0;2863:13:114;;-1:-1:-1;;;;;2818:27:114;::::1;::::0;::::1;::::0;2013:18:119;;2818:42:114::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:58;2791:85;2787:132;;;2893:19;;-1:-1:-1::0;;;2893:19:114::1;;;;;;;;;;;2787:132;2983:4;-1:-1:-1::0;;;;;2962:26:114::1;:9;-1:-1:-1::0;;;;;2962:26:114::1;::::0;2958:77:::1;;3005:23;;-1:-1:-1::0;;;3005:23:114::1;;;;;;;;;;;2958:77;3067:17;3087:37;3105:9;3116:7;3087:17;:37::i;:::-;3067:57;;3215:13;3203:9;:25;3199:70;;;3245:17;;-1:-1:-1::0;;;3245:17:114::1;;;;;;;;;;;3199:70;3327:11;::::0;:43:::1;::::0;-1:-1:-1;;;3327:43:114;;3350:10:::1;3327:43;::::0;::::1;8783:51:119::0;-1:-1:-1;;;;;8870:47:119;;8850:18;;;8843:75;-1:-1:-1;;;;;3327:11:114;;::::1;::::0;:22:::1;::::0;8756:18:119;;3327:43:114::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;;;;;;3417:23:114;::::1;::::0;-1:-1:-1;3413:202:114::1;;3450:49;3476:10;3489:9;3450:17;:49::i;:::-;3413:202;;;3559:49;::::0;-1:-1:-1;;;3559:49:114;;3586:10:::1;3559:49;::::0;::::1;8222:51:119::0;8289:18;;;8282:34;;;-1:-1:-1;;;;;3559:26:114;::::1;::::0;::::1;::::0;8195:18:119;;3559:49:114::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3413:202;3626:60;::::0;;9103:25:119;;;-1:-1:-1;;;;;9164:47:119;;9159:2;9144:18;;9137:75;-1:-1:-1;;;;;3626:60:114;::::1;::::0;3644:10:::1;::::0;3626:60:::1;::::0;9076:18:119;3626:60:114::1;;;;;;;2368:1323;;2303:20:78::0;1716:1;2809:7;:22;2629:209;9088:192:88;9145:7;-1:-1:-1;;;;;9172:26:88;;;9164:78;;;;-1:-1:-1;;;9164:78:88;;9425:2:119;9164:78:88;;;9407:21:119;9464:2;9444:18;;;9437:30;9503:34;9483:18;;;9476:62;-1:-1:-1;;;9554:18:119;;;9547:37;9601:19;;9164:78:88;9223:403:119;9164:78:88;-1:-1:-1;9267:5:88;9088:192::o;2623:955:104:-;2779:19;2810:20;2833:33;2861:4;2833:27;:33::i;:::-;2810:56;-1:-1:-1;;;;;;;;;;;2985:33:104;;;2981:591;;3034:17;3054:36;-1:-1:-1;;;;;3054:36:104;;;;:::i;:::-;3034:56;;3130:10;-1:-1:-1;;;;;3118:22:104;:9;-1:-1:-1;;;;;3118:22:104;;:156;;3226:48;-1:-1:-1;;;3252:10:104;-1:-1:-1;;;;;3226:48:104;3264:9;3226:15;:48::i;:::-;3118:156;;;3159:48;3175:9;3186:10;-1:-1:-1;;;;;3159:48:104;-1:-1:-1;;;3159:15:104;:48::i;:::-;3104:170;;3020:265;2981:591;;;3305:17;3325:52;-1:-1:-1;;;;;3325:52:104;;;3369:7;3325:15;:52::i;:::-;3305:72;;3417:10;-1:-1:-1;;;;;3405:22:104;:9;-1:-1:-1;;;;;3405:22:104;;:156;;3513:48;-1:-1:-1;;;3539:10:104;-1:-1:-1;;;;;3513:48:104;3551:9;3513:15;:48::i;:::-;3405:156;;;3446:48;3462:9;3473:10;-1:-1:-1;;;;;3446:48:104;-1:-1:-1;;;3446:15:104;:48::i;:::-;3391:170;;3291:281;2981:591;2800:778;2623:955;;;;;;:::o;2336:287:78:-;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:78;;9833:2:119;2460:63:78;;;9815:21:119;9872:2;9852:18;;;9845:30;9911:33;9891:18;;;9884:61;9962:18;;2460:63:78;9631:355:119;2460:63:78;1759:1;2598:7;:18;2336:287::o;2647:312:82:-;2761:6;2736:21;:31;;2728:73;;;;-1:-1:-1;;;2728:73:82;;10193:2:119;2728:73:82;;;10175:21:119;10232:2;10212:18;;;10205:30;10271:31;10251:18;;;10244:59;10320:18;;2728:73:82;9991:353:119;2728:73:82;2813:12;2831:9;-1:-1:-1;;;;;2831:14:82;2853:6;2831:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2812:52;;;2882:7;2874:78;;;;-1:-1:-1;;;2874:78:82;;10761:2:119;2874:78:82;;;10743:21:119;10800:2;10780:18;;;10773:30;10839:34;10819:18;;;10812:62;10910:28;10890:18;;;10883:56;10956:19;;2874:78:82;10559:422:119;1355:2588:103;1418:20;1450:15;1475:1;1468:4;:8;;;:57;;1519:4;1512:12;;1468:57;;;1495:4;1488:12;;1487:13;;;:::i;:::-;1450:75;-1:-1:-1;637:9:103;-1:-1:-1;;637:9:103;:::i;:::-;1562:16;;1543:7;:36;;1535:50;;;;-1:-1:-1;;;1535:50:103;;11518:2:119;1535:50:103;;;11500:21:119;11557:1;11537:18;;;11530:29;-1:-1:-1;;;11575:18:119;;;11568:31;11616:18;;1535:50:103;11316:324:119;1535:50:103;1596:13;1612:7;1622:3;1612:13;1629:1;1612:18;:93;;-1:-1:-1;;;1612:93:103;;;1633:34;1612:93;1596:109;;;-1:-1:-1;1729:3:103;1719:13;;:18;1715:83;;1795:3;1748:42;:5;1756:34;1748:42;:::i;:::-;1747:51;;1739:59;;1715:83;1822:3;1812:13;;:18;1808:83;;1888:3;1841:42;:5;1849:34;1841:42;:::i;:::-;1840:51;;1832:59;;1808:83;1915:3;1905:13;;:18;1901:83;;1981:3;1934:42;:5;1942:34;1934:42;:::i;:::-;1933:51;;1925:59;;1901:83;2008:4;1998:14;;:19;1994:84;;2075:3;2028:42;:5;2036:34;2028:42;:::i;:::-;2027:51;;2019:59;;1994:84;2102:4;2092:14;;:19;2088:84;;2169:3;2122:42;:5;2130:34;2122:42;:::i;:::-;2121:51;;2113:59;;2088:84;2196:4;2186:14;;:19;2182:84;;2263:3;2216:42;:5;2224:34;2216:42;:::i;:::-;2215:51;;2207:59;;2182:84;2290:4;2280:14;;:19;2276:84;;2357:3;2310:42;:5;2318:34;2310:42;:::i;:::-;2309:51;;2301:59;;2276:84;2384:5;2374:15;;:20;2370:85;;2452:3;2405:42;:5;2413:34;2405:42;:::i;:::-;2404:51;;2396:59;;2370:85;2479:5;2469:15;;:20;2465:85;;2547:3;2500:42;:5;2508:34;2500:42;:::i;:::-;2499:51;;2491:59;;2465:85;2574:5;2564:15;;:20;2560:85;;2642:3;2595:42;:5;2603:34;2595:42;:::i;:::-;2594:51;;2586:59;;2560:85;2669:5;2659:15;;:20;2655:85;;2737:3;2690:42;:5;2698:34;2690:42;:::i;:::-;2689:51;;2681:59;;2655:85;2764:6;2754:16;;:21;2750:86;;2833:3;2786:42;:5;2794:34;2786:42;:::i;:::-;2785:51;;2777:59;;2750:86;2860:6;2850:16;;:21;2846:86;;2929:3;2882:42;:5;2890:34;2882:42;:::i;:::-;2881:51;;2873:59;;2846:86;2956:6;2946:16;;:21;2942:86;;3025:3;2978:42;:5;2986:34;2978:42;:::i;:::-;2977:51;;2969:59;;2942:86;3052:6;3042:16;;:21;3038:86;;3121:3;3074:42;:5;3082:34;3074:42;:::i;:::-;3073:51;;3065:59;;3038:86;3148:7;3138:17;;:22;3134:86;;3217:3;3171:41;:5;3179:33;3171:41;:::i;:::-;3170:50;;3162:58;;3134:86;3244:7;3234:17;;:22;3230:85;;3312:3;3267:40;:5;3275:32;3267:40;:::i;:::-;3266:49;;3258:57;;3230:85;3339:7;3329:17;;:22;3325:83;;3405:3;3362:38;:5;3370:30;3362:38;:::i;:::-;3361:47;;3353:55;;3325:83;3432:7;3422:17;;:22;3418:78;;3493:3;3455:33;:5;3463:25;3455:33;:::i;:::-;3454:42;;3446:50;;3418:78;3518:1;3511:4;:8;;;3507:47;;;3529:25;3549:5;-1:-1:-1;;3529:25:103;:::i;:::-;3521:33;;3507:47;3904:17;3913:7;3904:5;:17;:::i;:::-;:22;:30;;3933:1;3904:30;;;3929:1;3904:30;3887:48;;;;3897:2;3888:11;;;3887:48;:::i;:::-;3864:72;1355:2588;-1:-1:-1;;;;1355:2588:103:o;742:3801:102:-;854:14;;;-1:-1:-1;;1361:1:102;1358;1351:20;1400:1;1397;1393:9;1384:18;;1451:5;1447:2;1444:13;1436:5;1432:2;1428:14;1424:34;1415:43;;;1540:5;1549:1;1540:10;1536:179;;1588:1;1574:11;:15;1566:24;;;;;;-1:-1:-1;1641:23:102;;;;-1:-1:-1;1691:13:102;;1536:179;1842:5;1828:11;:19;1820:28;;;;;;2125:17;2201:11;2198:1;2195;2188:25;2373:21;;;;2330:20;;2319:32;;;;2175:38;-1:-1:-1;2553:12:102;2608:11;2569:31;2608:11;-1:-1:-1;;2569:31:102;:::i;:::-;:35;;2603:1;2569:35;:::i;:::-;2568:51;2713:22;;;;;2841:16;;;;;3089:1;3085:12;;;3081:23;3106:1;3077:31;;-1:-1:-1;3136:12:102;3077:31;3136:5;:12;:::i;:::-;3127:21;;;;3482:11;3497:15;3501:11;3497:1;:15;:::i;:::-;3516:1;3496:21;;-1:-1:-1;3743:17:102;3496:21;3743:11;:17;:::i;:::-;3739:21;;:1;:21;:::i;:::-;3732:28;;;;:::i;:::-;;-1:-1:-1;3801:17:102;3732:28;3801:11;:17;:::i;:::-;3797:21;;:1;:21;:::i;:::-;3790:28;;;;:::i;:::-;;-1:-1:-1;3860:17:102;3790:28;3860:11;:17;:::i;:::-;3856:21;;:1;:21;:::i;:::-;3849:28;;;;:::i;:::-;;-1:-1:-1;3919:17:102;3849:28;3919:11;:17;:::i;:::-;3915:21;;:1;:21;:::i;:::-;3908:28;;;;:::i;:::-;;-1:-1:-1;3978:17:102;3908:28;3978:11;:17;:::i;:::-;3974:21;;:1;:21;:::i;:::-;3967:28;;;;:::i;:::-;;-1:-1:-1;4038:17:102;3967:28;4038:11;:17;:::i;:::-;4034:21;;:1;:21;:::i;:::-;4027:28;;;;:::i;:::-;;-1:-1:-1;4502:11:102;4027:28;4502:5;:11;:::i;:::-;4493:20;;4523:13;;;;;742:3801;;;;;;:::o;14:131:119:-;-1:-1:-1;;;;;89:31:119;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:188::-;218:20;;-1:-1:-1;;;;;267:46:119;;257:57;;247:85;;328:1;325;318:12;247:85;150:188;;;:::o;343:321::-;411:6;419;472:2;460:9;451:7;447:23;443:32;440:52;;;488:1;485;478:12;440:52;527:9;514:23;546:31;571:5;546:31;:::i;:::-;596:5;-1:-1:-1;620:38:119;654:2;639:18;;620:38;:::i;:::-;610:48;;343:321;;;;;:::o;851:388::-;919:6;927;980:2;968:9;959:7;955:23;951:32;948:52;;;996:1;993;986:12;948:52;1035:9;1022:23;1054:31;1079:5;1054:31;:::i;:::-;1104:5;-1:-1:-1;1161:2:119;1146:18;;1133:32;1174:33;1133:32;1174:33;:::i;:::-;1226:7;1216:17;;;851:388;;;;;:::o;1244:389::-;1321:6;1329;1337;1390:2;1378:9;1369:7;1365:23;1361:32;1358:52;;;1406:1;1403;1396:12;1358:52;1445:9;1432:23;1464:31;1489:5;1464:31;:::i;:::-;1514:5;-1:-1:-1;1566:2:119;1551:18;;1538:32;;-1:-1:-1;1589:38:119;1623:2;1608:18;;1589:38;:::i;:::-;1579:48;;1244:389;;;;;:::o;1638:251::-;1708:6;1761:2;1749:9;1740:7;1736:23;1732:32;1729:52;;;1777:1;1774;1767:12;1729:52;1809:9;1803:16;1828:31;1853:5;1828:31;:::i;2102:127::-;2163:10;2158:3;2154:20;2151:1;2144:31;2194:4;2191:1;2184:15;2218:4;2215:1;2208:15;2234:127;2295:10;2290:3;2286:20;2283:1;2276:31;2326:4;2323:1;2316:15;2350:4;2347:1;2340:15;2366:647;2535:2;2587:21;;;2657:13;;2560:18;;;2679:22;;;2506:4;;2535:2;2758:15;;;;2732:2;2717:18;;;2506:4;2801:186;2815:6;2812:1;2809:13;2801:186;;;2880:13;;2895:10;2876:30;2864:43;;2962:15;;;;2927:12;;;;2837:1;2830:9;2801:186;;;-1:-1:-1;3004:3:119;;2366:647;-1:-1:-1;;;;;;2366:647:119:o;3018:275::-;3089:2;3083:9;3154:2;3135:13;;-1:-1:-1;;3131:27:119;3119:40;;3189:18;3174:34;;3210:22;;;3171:62;3168:88;;;3236:18;;:::i;:::-;3272:2;3265:22;3018:275;;-1:-1:-1;3018:275:119:o;3298:181::-;3356:4;3389:18;3381:6;3378:30;3375:56;;;3411:18;;:::i;:::-;-1:-1:-1;3456:1:119;3452:14;3468:4;3448:25;;3298:181::o;3484:732::-;3549:5;3602:3;3595:4;3587:6;3583:17;3579:27;3569:55;;3620:1;3617;3610:12;3569:55;3649:6;3643:13;3675:4;3699:58;3715:41;3753:2;3715:41;:::i;:::-;3699:58;:::i;:::-;3791:15;;;3877:1;3873:10;;;;3861:23;;3857:32;;;3822:12;;;;3901:15;;;3898:35;;;3929:1;3926;3919:12;3898:35;3965:2;3957:6;3953:15;3977:210;3993:6;3988:3;3985:15;3977:210;;;4066:3;4060:10;4083:31;4108:5;4083:31;:::i;:::-;4127:18;;4165:12;;;;4010;;3977:210;;;-1:-1:-1;4205:5:119;3484:732;-1:-1:-1;;;;;;3484:732:119:o;4221:1303::-;4348:6;4356;4409:2;4397:9;4388:7;4384:23;4380:32;4377:52;;;4425:1;4422;4415:12;4377:52;4458:9;4452:16;4487:18;4528:2;4520:6;4517:14;4514:34;;;4544:1;4541;4534:12;4514:34;4582:6;4571:9;4567:22;4557:32;;4627:7;4620:4;4616:2;4612:13;4608:27;4598:55;;4649:1;4646;4639:12;4598:55;4678:2;4672:9;4700:4;4724:58;4740:41;4778:2;4740:41;:::i;4724:58::-;4816:15;;;4898:1;4894:10;;;;4886:19;;4882:28;;;4847:12;;;;4922:19;;;4919:39;;;4954:1;4951;4944:12;4919:39;4978:11;;;;4998:308;5014:6;5009:3;5006:15;4998:308;;;5087:3;5081:10;5138:5;5135:1;5124:20;5117:5;5114:31;5104:129;;5187:1;5216:2;5212;5205:14;5104:129;5246:18;;5031:12;;;;5284;;;;4998:308;;;5361:18;;;5355:25;5325:5;;-1:-1:-1;5355:25:119;;-1:-1:-1;;;5392:16:119;;;5389:36;;;5421:1;5418;5411:12;5389:36;;5444:74;5510:7;5499:8;5488:9;5484:24;5444:74;:::i;:::-;5434:84;;;4221:1303;;;;;:::o;5529:127::-;5590:10;5585:3;5581:20;5578:1;5571:31;5621:4;5618:1;5611:15;5645:4;5642:1;5635:15;5661:359;5699:4;5743:1;5740;5729:16;5779:1;5776;5765:16;5809:1;5804:3;5800:11;5875:3;5856:16;5852:21;5848:31;5843:3;5839:41;5834:2;5827:10;5823:58;5820:84;;;5884:18;;:::i;:::-;5955:3;5937:16;5933:26;5928:3;5924:36;5920:2;5916:45;5913:71;;;5964:18;;:::i;:::-;-1:-1:-1;6001:13:119;;;5661:359;-1:-1:-1;;;5661:359:119:o;6025:127::-;6086:10;6081:3;6077:20;6074:1;6067:31;6117:4;6114:1;6107:15;6141:4;6138:1;6131:15;6157:284;6195:1;6236;6233;6222:16;6272:1;6269;6258:16;6293:3;6283:37;;6300:18;;:::i;:::-;-1:-1:-1;;6336:30:119;;-1:-1:-1;;6368:15:119;;6332:52;6329:78;;;6387:18;;:::i;:::-;6421:14;;;6157:284;-1:-1:-1;;;6157:284:119:o;6446:166::-;6476:1;6517;6514;6503:16;6538:3;6528:37;;6545:18;;:::i;:::-;6602:3;6598:1;6595;6584:16;6579:27;6574:32;;;6446:166;;;;:::o;6617:192::-;6654:3;6701:5;6698:1;6687:20;6735:7;6731:12;6722:7;6719:25;6716:51;;6747:18;;:::i;:::-;-1:-1:-1;;6783:20:119;;6617:192;-1:-1:-1;;6617:192:119:o;6814:184::-;6884:6;6937:2;6925:9;6916:7;6912:23;6908:32;6905:52;;;6953:1;6950;6943:12;6905:52;-1:-1:-1;6976:16:119;;6814:184;-1:-1:-1;6814:184:119:o;7003:128::-;7043:3;7074:1;7070:6;7067:1;7064:13;7061:39;;;7080:18;;:::i;:::-;-1:-1:-1;7116:9:119;;7003:128::o;7136:168::-;7176:7;7242:1;7238;7234:6;7230:14;7227:1;7224:21;7219:1;7212:9;7205:17;7201:45;7198:71;;;7249:18;;:::i;:::-;-1:-1:-1;7289:9:119;;7136:168::o;7309:120::-;7349:1;7375;7365:35;;7380:18;;:::i;:::-;-1:-1:-1;7414:9:119;;7309:120::o;8327:277::-;8394:6;8447:2;8435:9;8426:7;8422:23;8418:32;8415:52;;;8463:1;8460;8453:12;8415:52;8495:9;8489:16;8548:5;8541:13;8534:21;8527:5;8524:32;8514:60;;8570:1;8567;8560:12;10986:136;11021:3;-1:-1:-1;;;11042:22:119;;11039:48;;11067:18;;:::i;:::-;-1:-1:-1;11107:1:119;11103:13;;10986:136::o;11127:184::-;11161:3;11208:5;11205:1;11194:20;11242:7;11238:12;11229:7;11226:25;11223:51;;11254:18;;:::i;:::-;11294:1;11290:15;;11127:184;-1:-1:-1;;11127:184:119:o;11645:112::-;11677:1;11703;11693:35;;11708:18;;:::i;:::-;-1:-1:-1;11742:9:119;;11645:112::o;11762:125::-;11802:4;11830:1;11827;11824:8;11821:34;;;11835:18;;:::i;:::-;-1:-1:-1;11872:9:119;;11762:125::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "estimateRarePrice(address,uint128)": "442471f0",
    "initialize(address,address)": "485cc955",
    "rewardSwap(address,uint256,uint128)": "94a5a29d"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CannotSwapRareForRare\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientFunds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RarePriceTooLow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsupportedERC20Token\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_msgSender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_rareIn\",\"type\":\"uint256\"}],\"name\":\"RewardAccumulator\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_rareAmountIn\",\"type\":\"uint128\"}],\"name\":\"estimateRarePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingRegistry\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_stakingPool\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"_rareIn\",\"type\":\"uint128\"}],\"name\":\"rewardSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"charlescrain\",\"details\":\"It is one base user per contract. This is the implementation contract for a beacon proxy.\",\"kind\":\"dev\",\"methods\":{\"estimateRarePrice(address,uint128)\":{\"params\":{\"_rareAmountIn\":\"uint128 amount of RARE to trade for the _tokenOut.\",\"_tokenOut\":\"Address of the ERC20 token to be swapped for.\"},\"returns\":{\"_0\":\"uint256 amount of _tokenOut for the _rareAmountIn.\"}},\"rewardSwap(address,uint256,uint128)\":{\"params\":{\"_minAmountOut\":\"Min amount one is willing to receive for the _rareIn.\",\"_rareIn\":\"The amount of RARE one is looking to trade.\",\"_tokenOut\":\"Address of the ERC20 to pay out with. If null address, then uses ETH.\"}}},\"title\":\"RewardAccumulator\",\"version\":1},\"userdoc\":{\"errors\":{\"CannotSwapRareForRare()\":[{\"notice\":\"Error emitted via {rewardSwap} if _tokenOut is the $RARE address.\"}],\"InsufficientFunds()\":[{\"notice\":\"Error emitted via {rewardSwap} if reward swap doesn't have enough funds to perform the swap.\"}],\"RarePriceTooLow()\":[{\"notice\":\"Error emitted via {rewardSwap} if the rare price is too low to handle the _minAmountOut requirement.\"}],\"Unauthorized()\":[{\"notice\":\"Error emitted when user doesnt meet the criteria for call.\"}],\"UnsupportedERC20Token()\":[{\"notice\":\"Emitted when an unsupported ERC20 token for reward swapping.\"}]},\"kind\":\"user\",\"methods\":{\"estimateRarePrice(address,uint128)\":{\"notice\":\"Estimate the discounted $RARE price for a given token.\"},\"rewardSwap(address,uint256,uint128)\":{\"notice\":\"Swap RARE for a discounted price on tokens stored\"}},\"notice\":\"The reward accumulator accumulates rewards and allows for swapping of ETH or ERC20 tokens in exchange for RARE.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/staking/reward/RewardAccumulator.sol\":\"RewardAccumulator\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/buffer/=lib/buffer/\",\":@ensdomains/ens-contracts/=lib/ens-contracts/contracts/\",\":@manifoldxyz/libraries-solidity/=lib/royalty-registry-solidity/lib/libraries-solidity/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/royalty-registry-solidity/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/royalty-registry-solidity/lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/contracts/\",\":@uniswap/v3-core/contracts/=lib/v3-core/contracts/\",\":@uniswap/v3-periphery/=lib/v3-periphery/contracts/\",\":arachnid/solidity-stringutils/=lib/solidity-stringutils/\",\":assets/=lib/assets/\",\":aux/=lib/aux/\",\":buffer/=lib/buffer/contracts/\",\":create2-helpers/=lib/royalty-registry-solidity/lib/create2-helpers/\",\":create2-scripts/=lib/royalty-registry-solidity/lib/create2-helpers/script/\",\":ds-test/=lib/ds-test/src/\",\":ens-contracts/=lib/ens-contracts/contracts/\",\":ensdomains/ens-contracts/=lib/ensdomains/ens-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":libraries-solidity/=lib/royalty-registry-solidity/lib/libraries-solidity/contracts/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":rareprotocol/assets/=lib/assets/src/\",\":rareprotocol/aux/=lib/aux/src/\",\":royalty-guard/=lib/aux/lib/royalty-guard/src/\",\":royalty-registry-solidity/=lib/royalty-registry-solidity/contracts/\",\":royalty-registry/=lib/royalty-registry-solidity/contracts/\",\":solidity-stringutils/=lib/solidity-stringutils/\",\":solmate/=lib/solmate/src/\",\":v3-core/=lib/v3-core/\",\":v3-periphery/=lib/v3-periphery/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC20Upgradeable.sol\":{\"keccak256\":\"0xe73087c5001a37cf7186b3709377c7ceb01a0d38fb908723d1464cea66b4958c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b835a1929ca2c7c978085e58f08f48855df8a82ef6a426ac71393cf032ea0fc5\",\"dweb:/ipfs/QmUMXRN9g8u9wm63wc7PMaSs7oG2nqnM1VVvktaWkvF68v\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45\",\"dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq\"]},\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x03a26b0ce85afee2c16f3232bd123286b849ca576778781cf6e8bbf51cb7570a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a4f5cec214760f14abaedfc0a1860d80c2267386fa62dc77e8eee51ec84d71\",\"dweb:/ipfs/QmWmEKeofHqLnNEeCivhzTepo1k5xZZqzMxyyyzNBYiYBW\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xa6dfb97ce947b7c846b054ee7d45d12383359778f4f3743654ae0a34fa421b26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b97e7e5a77ea47c08ba422291df887eba76c80982f52a6e94a30106e9377a94f\",\"dweb:/ipfs/Qme7N2XRC7mcDxB8wZxNWPk6T8S2qsnmhAqXeUj4CNvsGD\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]},\"lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"lib/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0xaa9d8894cfc7826e4d1abacb026b022ef4ff07569037b8796474d43257fb1f19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d4defb32c4331c11a78f235cc5a844c67036221eb9b7fdd5ef81ea024b1c05b\",\"dweb:/ipfs/QmRX1y6Wsg8eyAvTcDynRBvH65cFt7B2DH2Ux92C12m588\"]},\"lib/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0x681ad959f8a575271b01dbde85e2a61f41eddd3247da3f8bc59d948446975347\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2347b5b5258d7a8afc15d725ef2b2193751a073cf6180ec1359292729f454a97\",\"dweb:/ipfs/QmTvqAQpCQMZ6wNVAN4CWXaaqZv9zc2vNfXHsaLG5Mmdv2\"]},\"lib/v3-periphery/contracts/libraries/OracleLibrary.sol\":{\"keccak256\":\"0x7845d46168720f378aeb0178ff8198e2cbbedae7eb9aaf9cee6abaa80d0b618a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1a48a2a2e96a9ee41d73e17965926ae90f33a3219e6f98c065b3f65d7a404313\",\"dweb:/ipfs/QmY5WEYcNxPNLhcbAangLyqkuCEtQhT8dmuNBKouxBUXkR\"]},\"src/staking/registry/IRareStakingRegistry.sol\":{\"keccak256\":\"0xc77c14fe766b3a8d5fc985a6f3abdd9e338aa6b9671b22caf06c9664aefda981\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e470d3b77fbac141c826ed2cf9e4829642a282e55b50e8f6fb35be8a630a8fa5\",\"dweb:/ipfs/Qmd54NwkoeHyVxMTMmmJzo5PrjNeh8DuFRRjy4LXaDevAP\"]},\"src/staking/reward/IRewardAccumulator.sol\":{\"keccak256\":\"0x7f259a7d117d4657620a7302d7269a4083093ce81f15863804a9c12b84211d26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be2527ac82814e132ce20dd66c7573be5e57a6e58a446679d67ff933c5653820\",\"dweb:/ipfs/QmcUNbMvyvj59weD6qcw5kX74uHTUectiGJv6AjfbvbRwq\"]},\"src/staking/reward/RewardAccumulator.sol\":{\"keccak256\":\"0xfb9ad2b2c43f4b5486ee67c900f8f8441c3d6650a862707d42e01866ecc71c89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c662028267c95e3b62aa5478dc99f123f431229d5199aaa062a27db82d73e6a6\",\"dweb:/ipfs/Qmck5gfVJqyEz5hCMjrNsNnpBEFd5tQ56cAQw4fZwic3Zn\"]},\"src/staking/token/IRarityPool.sol\":{\"keccak256\":\"0xf08b96167873596abf9bb5cb377258fff453b11a8edbb89f466af0cbabfbd663\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df48bab3b28bb3b50a37548c1f241889a75f6e9e15f3b2c593b9e0babda7fe58\",\"dweb:/ipfs/QmXWgnfBC2B6MXegJYz5ZnPxyE557xQkpkXB2i4fhck9j4\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "CannotSwapRareForRare"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientFunds"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RarePriceTooLow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Unauthorized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnsupportedERC20Token"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_msgSender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_tokenOut",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_amountOut",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_rareIn",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardAccumulator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_tokenOut",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "_rareAmountIn",
              "type": "uint128"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "estimateRarePrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_stakingRegistry",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_stakingPool",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_tokenOut",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_minAmountOut",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "_rareIn",
              "type": "uint128"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "rewardSwap"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "estimateRarePrice(address,uint128)": {
            "params": {
              "_rareAmountIn": "uint128 amount of RARE to trade for the _tokenOut.",
              "_tokenOut": "Address of the ERC20 token to be swapped for."
            },
            "returns": {
              "_0": "uint256 amount of _tokenOut for the _rareAmountIn."
            }
          },
          "rewardSwap(address,uint256,uint128)": {
            "params": {
              "_minAmountOut": "Min amount one is willing to receive for the _rareIn.",
              "_rareIn": "The amount of RARE one is looking to trade.",
              "_tokenOut": "Address of the ERC20 to pay out with. If null address, then uses ETH."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "estimateRarePrice(address,uint128)": {
            "notice": "Estimate the discounted $RARE price for a given token."
          },
          "rewardSwap(address,uint256,uint128)": {
            "notice": "Swap RARE for a discounted price on tokens stored"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/buffer/=lib/buffer/",
        ":@ensdomains/ens-contracts/=lib/ens-contracts/contracts/",
        ":@manifoldxyz/libraries-solidity/=lib/royalty-registry-solidity/lib/libraries-solidity/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@openzeppelin/contracts-upgradeable/=lib/royalty-registry-solidity/lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/contracts/=lib/royalty-registry-solidity/lib/openzeppelin-contracts/contracts/",
        ":@uniswap/v3-core/=lib/v3-core/contracts/",
        ":@uniswap/v3-core/contracts/=lib/v3-core/contracts/",
        ":@uniswap/v3-periphery/=lib/v3-periphery/contracts/",
        ":arachnid/solidity-stringutils/=lib/solidity-stringutils/",
        ":assets/=lib/assets/",
        ":aux/=lib/aux/",
        ":buffer/=lib/buffer/contracts/",
        ":create2-helpers/=lib/royalty-registry-solidity/lib/create2-helpers/",
        ":create2-scripts/=lib/royalty-registry-solidity/lib/create2-helpers/script/",
        ":ds-test/=lib/ds-test/src/",
        ":ens-contracts/=lib/ens-contracts/contracts/",
        ":ensdomains/ens-contracts/=lib/ensdomains/ens-contracts/contracts/",
        ":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":libraries-solidity/=lib/royalty-registry-solidity/lib/libraries-solidity/contracts/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":rareprotocol/assets/=lib/assets/src/",
        ":rareprotocol/aux/=lib/aux/src/",
        ":royalty-guard/=lib/aux/lib/royalty-guard/src/",
        ":royalty-registry-solidity/=lib/royalty-registry-solidity/contracts/",
        ":royalty-registry/=lib/royalty-registry-solidity/contracts/",
        ":solidity-stringutils/=lib/solidity-stringutils/",
        ":solmate/=lib/solmate/src/",
        ":v3-core/=lib/v3-core/",
        ":v3-periphery/=lib/v3-periphery/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/staking/reward/RewardAccumulator.sol": "RewardAccumulator"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC20Upgradeable.sol": {
        "keccak256": "0xe73087c5001a37cf7186b3709377c7ceb01a0d38fb908723d1464cea66b4958c",
        "urls": [
          "bzz-raw://b835a1929ca2c7c978085e58f08f48855df8a82ef6a426ac71393cf032ea0fc5",
          "dweb:/ipfs/QmUMXRN9g8u9wm63wc7PMaSs7oG2nqnM1VVvktaWkvF68v"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f",
        "urls": [
          "bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f",
          "dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol": {
        "keccak256": "0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45",
        "urls": [
          "bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45",
          "dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0x03a26b0ce85afee2c16f3232bd123286b849ca576778781cf6e8bbf51cb7570a",
        "urls": [
          "bzz-raw://13a4f5cec214760f14abaedfc0a1860d80c2267386fa62dc77e8eee51ec84d71",
          "dweb:/ipfs/QmWmEKeofHqLnNEeCivhzTepo1k5xZZqzMxyyyzNBYiYBW"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0",
        "urls": [
          "bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1",
          "dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xa6dfb97ce947b7c846b054ee7d45d12383359778f4f3743654ae0a34fa421b26",
        "urls": [
          "bzz-raw://b97e7e5a77ea47c08ba422291df887eba76c80982f52a6e94a30106e9377a94f",
          "dweb:/ipfs/Qme7N2XRC7mcDxB8wZxNWPk6T8S2qsnmhAqXeUj4CNvsGD"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/v3-core/contracts/interfaces/IUniswapV3Factory.sol": {
        "keccak256": "0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489",
        "urls": [
          "bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2",
          "dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
        "keccak256": "0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1",
        "urls": [
          "bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5",
          "dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
        "keccak256": "0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634",
        "urls": [
          "bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5",
          "dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
        "keccak256": "0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5",
        "urls": [
          "bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7",
          "dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
        "keccak256": "0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd",
        "urls": [
          "bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03",
          "dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
        "keccak256": "0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7",
        "urls": [
          "bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047",
          "dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
        "keccak256": "0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235",
        "urls": [
          "bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735",
          "dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
        "keccak256": "0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f",
        "urls": [
          "bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f",
          "dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/FullMath.sol": {
        "keccak256": "0xaa9d8894cfc7826e4d1abacb026b022ef4ff07569037b8796474d43257fb1f19",
        "urls": [
          "bzz-raw://3d4defb32c4331c11a78f235cc5a844c67036221eb9b7fdd5ef81ea024b1c05b",
          "dweb:/ipfs/QmRX1y6Wsg8eyAvTcDynRBvH65cFt7B2DH2Ux92C12m588"
        ],
        "license": "MIT"
      },
      "lib/v3-core/contracts/libraries/TickMath.sol": {
        "keccak256": "0x681ad959f8a575271b01dbde85e2a61f41eddd3247da3f8bc59d948446975347",
        "urls": [
          "bzz-raw://2347b5b5258d7a8afc15d725ef2b2193751a073cf6180ec1359292729f454a97",
          "dweb:/ipfs/QmTvqAQpCQMZ6wNVAN4CWXaaqZv9zc2vNfXHsaLG5Mmdv2"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/OracleLibrary.sol": {
        "keccak256": "0x7845d46168720f378aeb0178ff8198e2cbbedae7eb9aaf9cee6abaa80d0b618a",
        "urls": [
          "bzz-raw://1a48a2a2e96a9ee41d73e17965926ae90f33a3219e6f98c065b3f65d7a404313",
          "dweb:/ipfs/QmY5WEYcNxPNLhcbAangLyqkuCEtQhT8dmuNBKouxBUXkR"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/staking/registry/IRareStakingRegistry.sol": {
        "keccak256": "0xc77c14fe766b3a8d5fc985a6f3abdd9e338aa6b9671b22caf06c9664aefda981",
        "urls": [
          "bzz-raw://e470d3b77fbac141c826ed2cf9e4829642a282e55b50e8f6fb35be8a630a8fa5",
          "dweb:/ipfs/Qmd54NwkoeHyVxMTMmmJzo5PrjNeh8DuFRRjy4LXaDevAP"
        ],
        "license": "MIT"
      },
      "src/staking/reward/IRewardAccumulator.sol": {
        "keccak256": "0x7f259a7d117d4657620a7302d7269a4083093ce81f15863804a9c12b84211d26",
        "urls": [
          "bzz-raw://be2527ac82814e132ce20dd66c7573be5e57a6e58a446679d67ff933c5653820",
          "dweb:/ipfs/QmcUNbMvyvj59weD6qcw5kX74uHTUectiGJv6AjfbvbRwq"
        ],
        "license": "MIT"
      },
      "src/staking/reward/RewardAccumulator.sol": {
        "keccak256": "0xfb9ad2b2c43f4b5486ee67c900f8f8441c3d6650a862707d42e01866ecc71c89",
        "urls": [
          "bzz-raw://c662028267c95e3b62aa5478dc99f123f431229d5199aaa062a27db82d73e6a6",
          "dweb:/ipfs/Qmck5gfVJqyEz5hCMjrNsNnpBEFd5tQ56cAQw4fZwic3Zn"
        ],
        "license": "MIT"
      },
      "src/staking/token/IRarityPool.sol": {
        "keccak256": "0xf08b96167873596abf9bb5cb377258fff453b11a8edbb89f466af0cbabfbd663",
        "urls": [
          "bzz-raw://df48bab3b28bb3b50a37548c1f241889a75f6e9e15f3b2c593b9e0babda7fe58",
          "dweb:/ipfs/QmXWgnfBC2B6MXegJYz5ZnPxyE557xQkpkXB2i4fhck9j4"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/staking/reward/RewardAccumulator.sol",
    "id": 49347,
    "exportedSymbols": {
      "Address": [
        39364
      ],
      "FullMath": [
        44786
      ],
      "IERC20": [
        39009
      ],
      "IRareStakingRegistry": [
        47376
      ],
      "IRarityPool": [
        49608
      ],
      "IRewardAccumulator": [
        48906
      ],
      "IUniswapV3Factory": [
        44163
      ],
      "IUniswapV3Pool": [
        44185
      ],
      "IUniswapV3PoolActions": [
        44281
      ],
      "IUniswapV3PoolDerivedState": [
        44312
      ],
      "IUniswapV3PoolEvents": [
        44431
      ],
      "IUniswapV3PoolImmutables": [
        44471
      ],
      "IUniswapV3PoolOwnerActions": [
        44497
      ],
      "IUniswapV3PoolState": [
        44605
      ],
      "Initializable": [
        31782
      ],
      "OracleLibrary": [
        45926
      ],
      "ReentrancyGuard": [
        38344
      ],
      "RewardAccumulator": [
        49346
      ],
      "SafeCast": [
        42144
      ],
      "TickMath": [
        45324
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:6152:114",
    "nodes": [
      {
        "id": 48908,
        "nodeType": "PragmaDirective",
        "src": "32:23:114",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 48910,
        "nodeType": "ImportDirective",
        "src": "57:84:114",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "file": "openzeppelin-contracts/security/ReentrancyGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49347,
        "sourceUnit": 38345,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48909,
              "name": "ReentrancyGuard",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38344,
              "src": "65:15:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48912,
        "nodeType": "ImportDirective",
        "src": "142:68:114",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol",
        "file": "openzeppelin-contracts/interfaces/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49347,
        "sourceUnit": 37801,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48911,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39009,
              "src": "150:6:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48914,
        "nodeType": "ImportDirective",
        "src": "211:65:114",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "file": "openzeppelin-contracts/utils/Address.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49347,
        "sourceUnit": 39365,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48913,
              "name": "Address",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39364,
              "src": "219:7:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48916,
        "nodeType": "ImportDirective",
        "src": "277:72:114",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol",
        "file": "openzeppelin-contracts/utils/math/SafeCast.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49347,
        "sourceUnit": 42145,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48915,
              "name": "SafeCast",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42144,
              "src": "285:8:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48918,
        "nodeType": "ImportDirective",
        "src": "350:95:114",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "file": "openzeppelin-contracts-upgradeable/proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49347,
        "sourceUnit": 31783,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48917,
              "name": "Initializable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31782,
              "src": "358:13:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48919,
        "nodeType": "ImportDirective",
        "src": "446:59:114",
        "nodes": [],
        "absolutePath": "lib/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
        "file": "@uniswap/v3-core/interfaces/IUniswapV3Factory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49347,
        "sourceUnit": 44164,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 48920,
        "nodeType": "ImportDirective",
        "src": "506:56:114",
        "nodes": [],
        "absolutePath": "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "file": "@uniswap/v3-core/interfaces/IUniswapV3Pool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49347,
        "sourceUnit": 44186,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 48921,
        "nodeType": "ImportDirective",
        "src": "563:59:114",
        "nodes": [],
        "absolutePath": "lib/v3-periphery/contracts/libraries/OracleLibrary.sol",
        "file": "@uniswap/v3-periphery/libraries/OracleLibrary.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49347,
        "sourceUnit": 45927,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 48923,
        "nodeType": "ImportDirective",
        "src": "624:60:114",
        "nodes": [],
        "absolutePath": "src/staking/reward/IRewardAccumulator.sol",
        "file": "./IRewardAccumulator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49347,
        "sourceUnit": 48907,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48922,
              "name": "IRewardAccumulator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48906,
              "src": "632:18:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48925,
        "nodeType": "ImportDirective",
        "src": "685:53:114",
        "nodes": [],
        "absolutePath": "src/staking/token/IRarityPool.sol",
        "file": "../token/IRarityPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49347,
        "sourceUnit": 49609,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48924,
              "name": "IRarityPool",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49608,
              "src": "693:11:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 48927,
        "nodeType": "ImportDirective",
        "src": "739:74:114",
        "nodes": [],
        "absolutePath": "src/staking/registry/IRareStakingRegistry.sol",
        "file": "../registry/IRareStakingRegistry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49347,
        "sourceUnit": 47377,
        "symbolAliases": [
          {
            "foreign": {
              "id": 48926,
              "name": "IRareStakingRegistry",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47376,
              "src": "747:20:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49346,
        "nodeType": "ContractDefinition",
        "src": "1092:5091:114",
        "nodes": [
          {
            "id": 48937,
            "nodeType": "UsingForDirective",
            "src": "1177:27:114",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 48935,
              "name": "SafeCast",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 42144,
              "src": "1183:8:114"
            },
            "typeName": {
              "id": 48936,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1196:7:114",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 48940,
            "nodeType": "UsingForDirective",
            "src": "1207:27:114",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 48938,
              "name": "SafeCast",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 42144,
              "src": "1213:8:114"
            },
            "typeName": {
              "id": 48939,
              "name": "uint128",
              "nodeType": "ElementaryTypeName",
              "src": "1226:7:114",
              "typeDescriptions": {
                "typeIdentifier": "t_uint128",
                "typeString": "uint128"
              }
            }
          },
          {
            "id": 48943,
            "nodeType": "VariableDeclaration",
            "src": "1484:44:114",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "stakingRegistry",
            "nameLocation": "1513:15:114",
            "scope": 49346,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IRareStakingRegistry_$47376",
              "typeString": "contract IRareStakingRegistry"
            },
            "typeName": {
              "id": 48942,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 48941,
                "name": "IRareStakingRegistry",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 47376,
                "src": "1484:20:114"
              },
              "referencedDeclaration": 47376,
              "src": "1484:20:114",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IRareStakingRegistry_$47376",
                "typeString": "contract IRareStakingRegistry"
              }
            },
            "visibility": "private"
          },
          {
            "id": 48946,
            "nodeType": "VariableDeclaration",
            "src": "1566:31:114",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "stakingPool",
            "nameLocation": "1586:11:114",
            "scope": 49346,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IRarityPool_$49608",
              "typeString": "contract IRarityPool"
            },
            "typeName": {
              "id": 48945,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 48944,
                "name": "IRarityPool",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 49608,
                "src": "1566:11:114"
              },
              "referencedDeclaration": 49608,
              "src": "1566:11:114",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IRarityPool_$49608",
                "typeString": "contract IRarityPool"
              }
            },
            "visibility": "private"
          },
          {
            "id": 48968,
            "nodeType": "FunctionDefinition",
            "src": "1802:201:114",
            "nodes": [],
            "body": {
              "id": 48967,
              "nodeType": "Block",
              "src": "1891:112:114",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 48959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48955,
                      "name": "stakingRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48943,
                      "src": "1897:15:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRareStakingRegistry_$47376",
                        "typeString": "contract IRareStakingRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 48957,
                          "name": "_stakingRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48948,
                          "src": "1936:16:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 48956,
                        "name": "IRareStakingRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47376,
                        "src": "1915:20:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IRareStakingRegistry_$47376_$",
                          "typeString": "type(contract IRareStakingRegistry)"
                        }
                      },
                      "id": 48958,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1915:38:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRareStakingRegistry_$47376",
                        "typeString": "contract IRareStakingRegistry"
                      }
                    },
                    "src": "1897:56:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRareStakingRegistry_$47376",
                      "typeString": "contract IRareStakingRegistry"
                    }
                  },
                  "id": 48960,
                  "nodeType": "ExpressionStatement",
                  "src": "1897:56:114"
                },
                {
                  "expression": {
                    "id": 48965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 48961,
                      "name": "stakingPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48946,
                      "src": "1959:11:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRarityPool_$49608",
                        "typeString": "contract IRarityPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 48963,
                          "name": "_stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48950,
                          "src": "1985:12:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 48962,
                        "name": "IRarityPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49608,
                        "src": "1973:11:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IRarityPool_$49608_$",
                          "typeString": "type(contract IRarityPool)"
                        }
                      },
                      "id": 48964,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1973:25:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRarityPool_$49608",
                        "typeString": "contract IRarityPool"
                      }
                    },
                    "src": "1959:39:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRarityPool_$49608",
                      "typeString": "contract IRarityPool"
                    }
                  },
                  "id": 48966,
                  "nodeType": "ExpressionStatement",
                  "src": "1959:39:114"
                }
              ]
            },
            "baseFunctions": [
              48885
            ],
            "functionSelector": "485cc955",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 48953,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 48952,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31684,
                  "src": "1879:11:114"
                },
                "nodeType": "ModifierInvocation",
                "src": "1879:11:114"
              }
            ],
            "name": "initialize",
            "nameLocation": "1811:10:114",
            "parameters": {
              "id": 48951,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48948,
                  "mutability": "mutable",
                  "name": "_stakingRegistry",
                  "nameLocation": "1830:16:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 48968,
                  "src": "1822:24:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48947,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1822:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48950,
                  "mutability": "mutable",
                  "name": "_stakingPool",
                  "nameLocation": "1856:12:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 48968,
                  "src": "1848:20:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48949,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1848:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1821:48:114"
            },
            "returnParameters": {
              "id": 48954,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1891:0:114"
            },
            "scope": 49346,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 49130,
            "nodeType": "FunctionDefinition",
            "src": "2251:1440:114",
            "nodes": [],
            "body": {
              "id": 49129,
              "nodeType": "Block",
              "src": "2368:1323:114",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    48982
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 48982,
                      "mutability": "mutable",
                      "name": "rare",
                      "nameLocation": "2381:4:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 49129,
                      "src": "2374:11:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$39009",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 48981,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48980,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 39009,
                          "src": "2374:6:114"
                        },
                        "referencedDeclaration": 39009,
                        "src": "2374:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$39009",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 48988,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 48984,
                            "name": "stakingRegistry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48943,
                            "src": "2395:15:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRareStakingRegistry_$47376",
                              "typeString": "contract IRareStakingRegistry"
                            }
                          },
                          "id": 48985,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getRareAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 47243,
                          "src": "2395:30:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 48986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2395:32:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 48983,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39009,
                      "src": "2388:6:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$39009_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 48987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2388:40:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$39009",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2374:54:114"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 48997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 48993,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2512:4:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RewardAccumulator_$49346",
                                "typeString": "contract RewardAccumulator"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_RewardAccumulator_$49346",
                                "typeString": "contract RewardAccumulator"
                              }
                            ],
                            "id": 48992,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2504:7:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 48991,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2504:7:114",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 48994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2504:13:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 48989,
                          "name": "rare",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48982,
                          "src": "2489:4:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$39009",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 48990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38966,
                        "src": "2489:14:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 48995,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2489:29:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 48996,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2521:1:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2489:33:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49015,
                  "nodeType": "IfStatement",
                  "src": "2485:120:114",
                  "trueBody": {
                    "id": 49014,
                    "nodeType": "Block",
                    "src": "2524:81:114",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 49003,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 48946,
                                  "src": "2554:11:114",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IRarityPool_$49608",
                                    "typeString": "contract IRarityPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IRarityPool_$49608",
                                    "typeString": "contract IRarityPool"
                                  }
                                ],
                                "id": 49002,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2546:7:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 49001,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2546:7:114",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 49004,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2546:20:114",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 49009,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "2591:4:114",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_RewardAccumulator_$49346",
                                        "typeString": "contract RewardAccumulator"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_RewardAccumulator_$49346",
                                        "typeString": "contract RewardAccumulator"
                                      }
                                    ],
                                    "id": 49008,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2583:7:114",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 49007,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2583:7:114",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 49010,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2583:13:114",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 49005,
                                  "name": "rare",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 48982,
                                  "src": "2568:4:114",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$39009",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 49006,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balanceOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 38966,
                                "src": "2568:14:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view external returns (uint256)"
                                }
                              },
                              "id": 49011,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2568:29:114",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 48998,
                              "name": "rare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48982,
                              "src": "2532:4:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$39009",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 49000,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 38976,
                            "src": "2532:13:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 49012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2532:66:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 49013,
                        "nodeType": "ExpressionStatement",
                        "src": "2532:66:114"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 49029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 49021,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 49016,
                        "name": "_tokenOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48971,
                        "src": "2643:9:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 49019,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2664:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 49018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2656:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 49017,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2656:7:114",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2656:10:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2643:23:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 49028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 49024,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2678:4:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RewardAccumulator_$49346",
                                "typeString": "contract RewardAccumulator"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_RewardAccumulator_$49346",
                                "typeString": "contract RewardAccumulator"
                              }
                            ],
                            "id": 49023,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2670:7:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 49022,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2670:7:114",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 49025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2670:13:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 49026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "2670:21:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 49027,
                        "name": "_minAmountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48973,
                        "src": "2694:13:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2670:37:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2643:64:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49034,
                  "nodeType": "IfStatement",
                  "src": "2639:111:114",
                  "trueBody": {
                    "id": 49033,
                    "nodeType": "Block",
                    "src": "2709:41:114",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 49030,
                            "name": "InsufficientFunds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48869,
                            "src": "2724:17:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 49031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2724:19:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 49032,
                        "nodeType": "RevertStatement",
                        "src": "2717:26:114"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 49052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 49040,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 49035,
                        "name": "_tokenOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48971,
                        "src": "2791:9:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 49038,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2812:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 49037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2804:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 49036,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2804:7:114",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2804:10:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2791:23:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 49051,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 49047,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2854:4:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_RewardAccumulator_$49346",
                                  "typeString": "contract RewardAccumulator"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_RewardAccumulator_$49346",
                                  "typeString": "contract RewardAccumulator"
                                }
                              ],
                              "id": 49046,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2846:7:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 49045,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2846:7:114",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 49048,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2846:13:114",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 49042,
                                "name": "_tokenOut",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48971,
                                "src": "2825:9:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 49041,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39009,
                              "src": "2818:6:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$39009_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 49043,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2818:17:114",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$39009",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 49044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 38966,
                          "src": "2818:27:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 49049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2818:42:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 49050,
                        "name": "_minAmountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48973,
                        "src": "2863:13:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2818:58:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2791:85:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49057,
                  "nodeType": "IfStatement",
                  "src": "2787:132:114",
                  "trueBody": {
                    "id": 49056,
                    "nodeType": "Block",
                    "src": "2878:41:114",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 49053,
                            "name": "InsufficientFunds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48869,
                            "src": "2893:17:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 49054,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2893:19:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 49055,
                        "nodeType": "RevertStatement",
                        "src": "2886:26:114"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 49063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 49058,
                      "name": "_tokenOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48971,
                      "src": "2962:9:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 49061,
                          "name": "rare",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48982,
                          "src": "2983:4:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$39009",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$39009",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 49060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2975:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 49059,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2975:7:114",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 49062,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2975:13:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2962:26:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49068,
                  "nodeType": "IfStatement",
                  "src": "2958:77:114",
                  "trueBody": {
                    "id": 49067,
                    "nodeType": "Block",
                    "src": "2990:45:114",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 49064,
                            "name": "CannotSwapRareForRare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48875,
                            "src": "3005:21:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 49065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3005:23:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 49066,
                        "nodeType": "RevertStatement",
                        "src": "2998:30:114"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    49070
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49070,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "3075:9:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 49129,
                      "src": "3067:17:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49069,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3067:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49075,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 49072,
                        "name": "_tokenOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48971,
                        "src": "3105:9:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49073,
                        "name": "_rareIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48975,
                        "src": "3116:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 49071,
                      "name": "estimateRarePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49341,
                      "src": "3087:17:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint128_$returns$_t_uint256_$",
                        "typeString": "function (address,uint128) view returns (uint256)"
                      }
                    },
                    "id": 49074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3087:37:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3067:57:114"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 49078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 49076,
                      "name": "amountOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49070,
                      "src": "3203:9:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 49077,
                      "name": "_minAmountOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48973,
                      "src": "3215:13:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3203:25:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49083,
                  "nodeType": "IfStatement",
                  "src": "3199:70:114",
                  "trueBody": {
                    "id": 49082,
                    "nodeType": "Block",
                    "src": "3230:39:114",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 49079,
                            "name": "RarePriceTooLow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48872,
                            "src": "3245:15:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 49080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3245:17:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 49081,
                        "nodeType": "RevertStatement",
                        "src": "3238:24:114"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 49087,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3350:3:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 49088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3350:10:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49089,
                        "name": "_rareIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48975,
                        "src": "3362:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 49084,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48946,
                        "src": "3327:11:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRarityPool_$49608",
                          "typeString": "contract IRarityPool"
                        }
                      },
                      "id": 49086,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addRewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49450,
                      "src": "3327:22:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 49090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3327:43:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49091,
                  "nodeType": "ExpressionStatement",
                  "src": "3327:43:114"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 49097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 49092,
                      "name": "_tokenOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48971,
                      "src": "3417:9:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 49095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3438:1:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 49094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3430:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 49093,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3430:7:114",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 49096,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3430:10:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3417:23:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 49119,
                    "nodeType": "Block",
                    "src": "3512:103:114",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 49114,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3586:3:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 49115,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3586:10:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 49116,
                              "name": "amountOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49070,
                              "src": "3598:9:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 49111,
                                  "name": "_tokenOut",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 48971,
                                  "src": "3566:9:114",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 49110,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39009,
                                "src": "3559:6:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$39009_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 49112,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3559:17:114",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$39009",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 49113,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 38976,
                            "src": "3559:26:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 49117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3559:49:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 49118,
                        "nodeType": "ExpressionStatement",
                        "src": "3559:49:114"
                      }
                    ]
                  },
                  "id": 49120,
                  "nodeType": "IfStatement",
                  "src": "3413:202:114",
                  "trueBody": {
                    "id": 49109,
                    "nodeType": "Block",
                    "src": "3442:64:114",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 49103,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "3476:3:114",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 49104,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "3476:10:114",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 49102,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3468:8:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 49101,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3468:8:114",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 49105,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3468:19:114",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 49106,
                              "name": "amountOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49070,
                              "src": "3489:9:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 49098,
                              "name": "Address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39364,
                              "src": "3450:7:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Address_$39364_$",
                                "typeString": "type(library Address)"
                              }
                            },
                            "id": 49100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sendValue",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 39086,
                            "src": "3450:17:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                              "typeString": "function (address payable,uint256)"
                            }
                          },
                          "id": 49107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3450:49:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 49108,
                        "nodeType": "ExpressionStatement",
                        "src": "3450:49:114"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 49122,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3644:3:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 49123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3644:10:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49124,
                        "name": "_tokenOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48971,
                        "src": "3656:9:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49125,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49070,
                        "src": "3667:9:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 49126,
                        "name": "_rareIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48975,
                        "src": "3678:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 49121,
                      "name": "RewardAccumulator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48863,
                      "src": "3626:17:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 49127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3626:60:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49128,
                  "nodeType": "EmitStatement",
                  "src": "3621:65:114"
                }
              ]
            },
            "baseFunctions": [
              48895
            ],
            "documentation": {
              "id": 48969,
              "nodeType": "StructuredDocumentation",
              "src": "2214:34:114",
              "text": "@inheritdoc IRewardAccumulator"
            },
            "functionSelector": "94a5a29d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 48978,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 48977,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 38309,
                  "src": "2355:12:114"
                },
                "nodeType": "ModifierInvocation",
                "src": "2355:12:114"
              }
            ],
            "name": "rewardSwap",
            "nameLocation": "2260:10:114",
            "parameters": {
              "id": 48976,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48971,
                  "mutability": "mutable",
                  "name": "_tokenOut",
                  "nameLocation": "2284:9:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 49130,
                  "src": "2276:17:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 48970,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2276:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48973,
                  "mutability": "mutable",
                  "name": "_minAmountOut",
                  "nameLocation": "2307:13:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 49130,
                  "src": "2299:21:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48972,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2299:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48975,
                  "mutability": "mutable",
                  "name": "_rareIn",
                  "nameLocation": "2334:7:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 49130,
                  "src": "2326:15:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 48974,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "2326:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2270:75:114"
            },
            "returnParameters": {
              "id": 48979,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2368:0:114"
            },
            "scope": 49346,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 49341,
            "nodeType": "FunctionDefinition",
            "src": "3947:2008:114",
            "nodes": [],
            "body": {
              "id": 49340,
              "nodeType": "Block",
              "src": "4046:1909:114",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    49141
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49141,
                      "mutability": "mutable",
                      "name": "weth",
                      "nameLocation": "4060:4:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 49340,
                      "src": "4052:12:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 49140,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4052:7:114",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49145,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 49142,
                        "name": "stakingRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48943,
                        "src": "4067:15:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRareStakingRegistry_$47376",
                          "typeString": "contract IRareStakingRegistry"
                        }
                      },
                      "id": 49143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getWethAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47249,
                      "src": "4067:30:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 49144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4067:32:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4052:47:114"
                },
                {
                  "assignments": [
                    49147
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49147,
                      "mutability": "mutable",
                      "name": "tokenOut",
                      "nameLocation": "4145:8:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 49340,
                      "src": "4137:16:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 49146,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4137:7:114",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49157,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 49153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 49148,
                        "name": "_tokenOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49133,
                        "src": "4156:9:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 49151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4177:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 49150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4169:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 49149,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4169:7:114",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4169:10:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "4156:23:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 49155,
                      "name": "_tokenOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49133,
                      "src": "4189:9:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 49156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "4156:42:114",
                    "trueExpression": {
                      "id": 49154,
                      "name": "weth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49141,
                      "src": "4182:4:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4137:61:114"
                },
                {
                  "assignments": [
                    49159
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49159,
                      "mutability": "mutable",
                      "name": "poolOut",
                      "nameLocation": "4212:7:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 49340,
                      "src": "4204:15:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 49158,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4204:7:114",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49164,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 49162,
                        "name": "tokenOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49147,
                        "src": "4250:8:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 49160,
                        "name": "stakingRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48943,
                        "src": "4222:15:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRareStakingRegistry_$47376",
                          "typeString": "contract IRareStakingRegistry"
                        }
                      },
                      "id": 49161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getSwapPool",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47237,
                      "src": "4222:27:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) view external returns (address)"
                      }
                    },
                    "id": 49163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4222:37:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4204:55:114"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 49174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 49170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 49165,
                        "name": "poolOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49159,
                        "src": "4366:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 49168,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4385:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 49167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4377:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 49166,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4377:7:114",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 49169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4377:10:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "4366:21:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 49173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 49171,
                        "name": "tokenOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49147,
                        "src": "4391:8:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 49172,
                        "name": "weth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49141,
                        "src": "4403:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "4391:16:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4366:41:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49179,
                  "nodeType": "IfStatement",
                  "src": "4362:92:114",
                  "trueBody": {
                    "id": 49178,
                    "nodeType": "Block",
                    "src": "4409:45:114",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 49175,
                            "name": "UnsupportedERC20Token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48878,
                            "src": "4424:21:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 49176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4424:23:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 49177,
                        "nodeType": "RevertStatement",
                        "src": "4417:30:114"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    49181
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49181,
                      "mutability": "mutable",
                      "name": "secondsAgo",
                      "nameLocation": "4467:10:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 49340,
                      "src": "4460:17:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 49180,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4460:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49183,
                  "initialValue": {
                    "hexValue": "3330",
                    "id": 49182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4480:10:114",
                    "subdenomination": "minutes",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1800_by_1",
                      "typeString": "int_const 1800"
                    },
                    "value": "30"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4460:30:114"
                },
                {
                  "assignments": [
                    49188
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49188,
                      "mutability": "mutable",
                      "name": "secondsAgos",
                      "nameLocation": "4512:11:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 49340,
                      "src": "4496:27:114",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                        "typeString": "uint32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 49186,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4496:6:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 49187,
                        "nodeType": "ArrayTypeName",
                        "src": "4496:8:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                          "typeString": "uint32[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49194,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 49192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4539:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 49191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "4526:12:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint32_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint32[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 49189,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4530:6:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 49190,
                        "nodeType": "ArrayTypeName",
                        "src": "4530:8:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                          "typeString": "uint32[]"
                        }
                      }
                    },
                    "id": 49193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4526:15:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                      "typeString": "uint32[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4496:45:114"
                },
                {
                  "expression": {
                    "id": 49199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 49195,
                        "name": "secondsAgos",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49188,
                        "src": "4547:11:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        }
                      },
                      "id": 49197,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 49196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4559:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4547:14:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 49198,
                      "name": "secondsAgo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49181,
                      "src": "4564:10:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "4547:27:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 49200,
                  "nodeType": "ExpressionStatement",
                  "src": "4547:27:114"
                },
                {
                  "expression": {
                    "id": 49205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 49201,
                        "name": "secondsAgos",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49188,
                        "src": "4580:11:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        }
                      },
                      "id": 49203,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 49202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4592:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4580:14:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 49204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4597:1:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4580:18:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 49206,
                  "nodeType": "ExpressionStatement",
                  "src": "4580:18:114"
                },
                {
                  "assignments": [
                    49211,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49211,
                      "mutability": "mutable",
                      "name": "tickCumulatives",
                      "nameLocation": "4668:15:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 49340,
                      "src": "4653:30:114",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
                        "typeString": "int56[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 49209,
                          "name": "int56",
                          "nodeType": "ElementaryTypeName",
                          "src": "4653:5:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int56",
                            "typeString": "int56"
                          }
                        },
                        "id": 49210,
                        "nodeType": "ArrayTypeName",
                        "src": "4653:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
                          "typeString": "int56[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 49223,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 49221,
                        "name": "secondsAgos",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49188,
                        "src": "4782:11:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 49215,
                                    "name": "stakingRegistry",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 48943,
                                    "src": "4732:15:114",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IRareStakingRegistry_$47376",
                                      "typeString": "contract IRareStakingRegistry"
                                    }
                                  },
                                  "id": 49216,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getRareAddress",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 47243,
                                  "src": "4732:30:114",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                    "typeString": "function () view external returns (address)"
                                  }
                                },
                                "id": 49217,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4732:32:114",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 49213,
                                "name": "stakingRegistry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 48943,
                                "src": "4704:15:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IRareStakingRegistry_$47376",
                                  "typeString": "contract IRareStakingRegistry"
                                }
                              },
                              "id": 49214,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getSwapPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 47237,
                              "src": "4704:27:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                                "typeString": "function (address) view external returns (address)"
                              }
                            },
                            "id": 49218,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4704:61:114",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 49212,
                          "name": "IUniswapV3Pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44185,
                          "src": "4689:14:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$44185_$",
                            "typeString": "type(contract IUniswapV3Pool)"
                          }
                        },
                        "id": 49219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4689:77:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$44185",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "id": 49220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "observe",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44297,
                      "src": "4689:92:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_array$_t_uint32_$dyn_memory_ptr_$returns$_t_array$_t_int56_$dyn_memory_ptr_$_t_array$_t_uint160_$dyn_memory_ptr_$",
                        "typeString": "function (uint32[] memory) view external returns (int56[] memory,uint160[] memory)"
                      }
                    },
                    "id": 49222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4689:105:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_int56_$dyn_memory_ptr_$_t_array$_t_uint160_$dyn_memory_ptr_$",
                      "typeString": "tuple(int56[] memory,uint160[] memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4652:142:114"
                },
                {
                  "assignments": [
                    49225
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49225,
                      "mutability": "mutable",
                      "name": "tickCumulativesDelta",
                      "nameLocation": "4855:20:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 49340,
                      "src": "4849:26:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int56",
                        "typeString": "int56"
                      },
                      "typeName": {
                        "id": 49224,
                        "name": "int56",
                        "nodeType": "ElementaryTypeName",
                        "src": "4849:5:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int56",
                          "typeString": "int56"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49233,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_int56",
                      "typeString": "int56"
                    },
                    "id": 49232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 49226,
                        "name": "tickCumulatives",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49211,
                        "src": "4878:15:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
                          "typeString": "int56[] memory"
                        }
                      },
                      "id": 49228,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 49227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4894:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4878:18:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int56",
                        "typeString": "int56"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 49229,
                        "name": "tickCumulatives",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49211,
                        "src": "4899:15:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
                          "typeString": "int56[] memory"
                        }
                      },
                      "id": 49231,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 49230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4915:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4899:18:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int56",
                        "typeString": "int56"
                      }
                    },
                    "src": "4878:39:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int56",
                      "typeString": "int56"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4849:68:114"
                },
                {
                  "assignments": [
                    49235
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49235,
                      "mutability": "mutable",
                      "name": "tick",
                      "nameLocation": "4929:4:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 49340,
                      "src": "4923:10:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 49234,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "4923:5:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49245,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int56",
                          "typeString": "int56"
                        },
                        "id": 49243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 49238,
                          "name": "tickCumulativesDelta",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49225,
                          "src": "4942:20:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int56",
                            "typeString": "int56"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 49241,
                              "name": "secondsAgo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49181,
                              "src": "4971:10:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 49240,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4965:5:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_int32_$",
                              "typeString": "type(int32)"
                            },
                            "typeName": {
                              "id": 49239,
                              "name": "int32",
                              "nodeType": "ElementaryTypeName",
                              "src": "4965:5:114",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 49242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4965:17:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int32",
                            "typeString": "int32"
                          }
                        },
                        "src": "4942:40:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int56",
                          "typeString": "int56"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int56",
                          "typeString": "int56"
                        }
                      ],
                      "id": 49237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4936:5:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_int24_$",
                        "typeString": "type(int24)"
                      },
                      "typeName": {
                        "id": 49236,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "4936:5:114",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 49244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4936:47:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4923:60:114"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 49258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_int56",
                        "typeString": "int56"
                      },
                      "id": 49248,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 49246,
                        "name": "tickCumulativesDelta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49225,
                        "src": "5034:20:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int56",
                          "typeString": "int56"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 49247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5057:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "5034:24:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_int56",
                            "typeString": "int56"
                          },
                          "id": 49256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_int56",
                              "typeString": "int56"
                            },
                            "id": 49254,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 49249,
                              "name": "tickCumulativesDelta",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49225,
                              "src": "5063:20:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int56",
                                "typeString": "int56"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "%",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "id": 49252,
                                  "name": "secondsAgo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 49181,
                                  "src": "5092:10:114",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                ],
                                "id": 49251,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5086:5:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_int32_$",
                                  "typeString": "type(int32)"
                                },
                                "typeName": {
                                  "id": 49250,
                                  "name": "int32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5086:5:114",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 49253,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5086:17:114",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_int32",
                                "typeString": "int32"
                              }
                            },
                            "src": "5063:40:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int56",
                              "typeString": "int56"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 49255,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5107:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5063:45:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 49257,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5062:47:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5034:75:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49263,
                  "nodeType": "IfStatement",
                  "src": "5030:102:114",
                  "trueBody": {
                    "id": 49262,
                    "nodeType": "Block",
                    "src": "5111:21:114",
                    "statements": [
                      {
                        "expression": {
                          "id": 49260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "--",
                          "prefix": false,
                          "src": "5119:6:114",
                          "subExpression": {
                            "id": 49259,
                            "name": "tick",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49235,
                            "src": "5119:4:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "id": 49261,
                        "nodeType": "ExpressionStatement",
                        "src": "5119:6:114"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    49265
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49265,
                      "mutability": "mutable",
                      "name": "ethAmount",
                      "nameLocation": "5190:9:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 49340,
                      "src": "5182:17:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 49264,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5182:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49288,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 49287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 49284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "arguments": [
                                  {
                                    "id": 49268,
                                    "name": "tick",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 49235,
                                    "src": "5240:4:114",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int24",
                                      "typeString": "int24"
                                    }
                                  },
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 49269,
                                        "name": "_rareAmountIn",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 49135,
                                        "src": "5246:13:114",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint128",
                                          "typeString": "uint128"
                                        }
                                      },
                                      "id": 49270,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "toUint128",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 41006,
                                      "src": "5246:23:114",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$bound_to$_t_uint256_$",
                                        "typeString": "function (uint256) pure returns (uint128)"
                                      }
                                    },
                                    "id": 49271,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5246:25:114",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  },
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 49272,
                                        "name": "stakingRegistry",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 48943,
                                        "src": "5273:15:114",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IRareStakingRegistry_$47376",
                                          "typeString": "contract IRareStakingRegistry"
                                        }
                                      },
                                      "id": 49273,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "getRareAddress",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 47243,
                                      "src": "5273:30:114",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                        "typeString": "function () view external returns (address)"
                                      }
                                    },
                                    "id": 49274,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5273:32:114",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 49275,
                                    "name": "weth",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 49141,
                                    "src": "5307:4:114",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_int24",
                                      "typeString": "int24"
                                    },
                                    {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 49266,
                                    "name": "OracleLibrary",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 45926,
                                    "src": "5211:13:114",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_OracleLibrary_$45926_$",
                                      "typeString": "type(library OracleLibrary)"
                                    }
                                  },
                                  "id": 49267,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "getQuoteAtTick",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 45563,
                                  "src": "5211:28:114",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_int24_$_t_uint128_$_t_address_$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (int24,uint128,address,address) pure returns (uint256)"
                                  }
                                },
                                "id": 49276,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5211:101:114",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 49277,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "5203:115:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 49282,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130305f3030",
                                  "id": 49278,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5322:6:114",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10000_by_1",
                                    "typeString": "int_const 10000"
                                  },
                                  "value": "100_00"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 49279,
                                      "name": "stakingRegistry",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 48943,
                                      "src": "5331:15:114",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IRareStakingRegistry_$47376",
                                        "typeString": "contract IRareStakingRegistry"
                                      }
                                    },
                                    "id": 49280,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "getDiscountPercentage",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 47255,
                                    "src": "5331:37:114",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view external returns (uint256)"
                                    }
                                  },
                                  "id": 49281,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5331:39:114",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5322:48:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 49283,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "5321:50:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5203:168:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 49285,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5202:170:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "3130305f3030",
                      "id": 49286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5375:6:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "100_00"
                    },
                    "src": "5202:179:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5182:199:114"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 49291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 49289,
                      "name": "tokenOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49147,
                      "src": "5466:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 49290,
                      "name": "weth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49141,
                      "src": "5478:4:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5466:16:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49295,
                  "nodeType": "IfStatement",
                  "src": "5462:53:114",
                  "trueBody": {
                    "id": 49294,
                    "nodeType": "Block",
                    "src": "5484:31:114",
                    "statements": [
                      {
                        "expression": {
                          "id": 49292,
                          "name": "ethAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49265,
                          "src": "5499:9:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 49139,
                        "id": 49293,
                        "nodeType": "Return",
                        "src": "5492:16:114"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    49300,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49300,
                      "mutability": "mutable",
                      "name": "otherTickCumulatives",
                      "nameLocation": "5623:20:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 49340,
                      "src": "5608:35:114",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
                        "typeString": "int56[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 49298,
                          "name": "int56",
                          "nodeType": "ElementaryTypeName",
                          "src": "5608:5:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int56",
                            "typeString": "int56"
                          }
                        },
                        "id": 49299,
                        "nodeType": "ArrayTypeName",
                        "src": "5608:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
                          "typeString": "int56[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 49307,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 49305,
                        "name": "secondsAgos",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49188,
                        "src": "5681:11:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 49302,
                            "name": "poolOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49159,
                            "src": "5664:7:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 49301,
                          "name": "IUniswapV3Pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44185,
                          "src": "5649:14:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$44185_$",
                            "typeString": "type(contract IUniswapV3Pool)"
                          }
                        },
                        "id": 49303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5649:23:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$44185",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "id": 49304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "observe",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44297,
                      "src": "5649:31:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_array$_t_uint32_$dyn_memory_ptr_$returns$_t_array$_t_int56_$dyn_memory_ptr_$_t_array$_t_uint160_$dyn_memory_ptr_$",
                        "typeString": "function (uint32[] memory) view external returns (int56[] memory,uint160[] memory)"
                      }
                    },
                    "id": 49306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5649:44:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_int56_$dyn_memory_ptr_$_t_array$_t_uint160_$dyn_memory_ptr_$",
                      "typeString": "tuple(int56[] memory,uint160[] memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5607:86:114"
                },
                {
                  "assignments": [
                    49309
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49309,
                      "mutability": "mutable",
                      "name": "otherTickCumulativesDelta",
                      "nameLocation": "5705:25:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 49340,
                      "src": "5699:31:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int56",
                        "typeString": "int56"
                      },
                      "typeName": {
                        "id": 49308,
                        "name": "int56",
                        "nodeType": "ElementaryTypeName",
                        "src": "5699:5:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int56",
                          "typeString": "int56"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49317,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_int56",
                      "typeString": "int56"
                    },
                    "id": 49316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 49310,
                        "name": "otherTickCumulatives",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49300,
                        "src": "5733:20:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
                          "typeString": "int56[] memory"
                        }
                      },
                      "id": 49312,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 49311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5754:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5733:23:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int56",
                        "typeString": "int56"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 49313,
                        "name": "otherTickCumulatives",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49300,
                        "src": "5759:20:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
                          "typeString": "int56[] memory"
                        }
                      },
                      "id": 49315,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 49314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5780:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5759:23:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int56",
                        "typeString": "int56"
                      }
                    },
                    "src": "5733:49:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int56",
                      "typeString": "int56"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5699:83:114"
                },
                {
                  "assignments": [
                    49319
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 49319,
                      "mutability": "mutable",
                      "name": "otherTick",
                      "nameLocation": "5794:9:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 49340,
                      "src": "5788:15:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 49318,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "5788:5:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 49329,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int56",
                          "typeString": "int56"
                        },
                        "id": 49327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 49322,
                          "name": "otherTickCumulativesDelta",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49309,
                          "src": "5812:25:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int56",
                            "typeString": "int56"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 49325,
                              "name": "secondsAgo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49181,
                              "src": "5846:10:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 49324,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5840:5:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_int32_$",
                              "typeString": "type(int32)"
                            },
                            "typeName": {
                              "id": 49323,
                              "name": "int32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5840:5:114",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 49326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5840:17:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int32",
                            "typeString": "int32"
                          }
                        },
                        "src": "5812:45:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int56",
                          "typeString": "int56"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int56",
                          "typeString": "int56"
                        }
                      ],
                      "id": 49321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5806:5:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_int24_$",
                        "typeString": "type(int24)"
                      },
                      "typeName": {
                        "id": 49320,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "5806:5:114",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 49328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5806:52:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5788:70:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 49332,
                        "name": "otherTick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49319,
                        "src": "5901:9:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 49333,
                            "name": "ethAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 49265,
                            "src": "5912:9:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 49334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "toUint128",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41006,
                          "src": "5912:19:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256) pure returns (uint128)"
                          }
                        },
                        "id": 49335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5912:21:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 49336,
                        "name": "weth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49141,
                        "src": "5935:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49337,
                        "name": "tokenOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49147,
                        "src": "5941:8:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 49330,
                        "name": "OracleLibrary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45926,
                        "src": "5872:13:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OracleLibrary_$45926_$",
                          "typeString": "type(library OracleLibrary)"
                        }
                      },
                      "id": 49331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getQuoteAtTick",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45563,
                      "src": "5872:28:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_int24_$_t_uint128_$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (int24,uint128,address,address) pure returns (uint256)"
                      }
                    },
                    "id": 49338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5872:78:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 49139,
                  "id": 49339,
                  "nodeType": "Return",
                  "src": "5865:85:114"
                }
              ]
            },
            "baseFunctions": [
              48905
            ],
            "documentation": {
              "id": 49131,
              "nodeType": "StructuredDocumentation",
              "src": "3910:34:114",
              "text": "@inheritdoc IRewardAccumulator"
            },
            "functionSelector": "442471f0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "estimateRarePrice",
            "nameLocation": "3956:17:114",
            "parameters": {
              "id": 49136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49133,
                  "mutability": "mutable",
                  "name": "_tokenOut",
                  "nameLocation": "3982:9:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 49341,
                  "src": "3974:17:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49132,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3974:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49135,
                  "mutability": "mutable",
                  "name": "_rareAmountIn",
                  "nameLocation": "4001:13:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 49341,
                  "src": "3993:21:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 49134,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3993:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3973:42:114"
            },
            "returnParameters": {
              "id": 49139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49138,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 49341,
                  "src": "4037:7:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49137,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4037:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4036:9:114"
            },
            "scope": 49346,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 49345,
            "nodeType": "FunctionDefinition",
            "src": "6152:29:114",
            "nodes": [],
            "body": {
              "id": 49344,
              "nodeType": "Block",
              "src": "6179:2:114",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 49342,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6159:2:114"
            },
            "returnParameters": {
              "id": 49343,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6179:0:114"
            },
            "scope": 49346,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 48929,
              "name": "IRewardAccumulator",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 48906,
              "src": "1122:18:114"
            },
            "id": 48930,
            "nodeType": "InheritanceSpecifier",
            "src": "1122:18:114"
          },
          {
            "baseName": {
              "id": 48931,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38344,
              "src": "1142:15:114"
            },
            "id": 48932,
            "nodeType": "InheritanceSpecifier",
            "src": "1142:15:114"
          },
          {
            "baseName": {
              "id": 48933,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31782,
              "src": "1159:13:114"
            },
            "id": 48934,
            "nodeType": "InheritanceSpecifier",
            "src": "1159:13:114"
          }
        ],
        "canonicalName": "RewardAccumulator",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 48928,
          "nodeType": "StructuredDocumentation",
          "src": "815:277:114",
          "text": "@author charlescrain\n @title RewardAccumulator\n @notice The reward accumulator accumulates rewards and allows for swapping of ETH or ERC20 tokens in exchange for RARE.\n @dev It is one base user per contract. This is the implementation contract for a beacon proxy."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          49346,
          31782,
          38344,
          48906
        ],
        "name": "RewardAccumulator",
        "nameLocation": "1101:17:114",
        "scope": 49347,
        "usedErrors": [
          48866,
          48869,
          48872,
          48875,
          48878
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 114
}