{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "CannotSwapRareForRare",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientFunds",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ParameterValueTooLow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "RarePriceTooLow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Unauthorized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnsupportedERC20Token",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_msgSender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_tokenOut",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amountOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_rareIn",
          "type": "uint256"
        }
      ],
      "name": "RewardAccumulator",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint128",
          "name": "_rareAmountIn",
          "type": "uint128"
        }
      ],
      "name": "estimateRarePrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stakingPool",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_minAmountOut",
          "type": "uint256"
        },
        {
          "internalType": "uint128",
          "name": "_rareIn",
          "type": "uint128"
        }
      ],
      "name": "rewardSwap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x608080604052346100c1576000549060ff8260081c1661006f575060ff80821603610034575b60405161198990816100c78239f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a138610025565b62461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fdfe60406080815260049081361015610020575b5050361561001e57600080fd5b005b600091823560e01c8063442471f01461066f57806394a5a29d146101895763c4d66de81461004e5750610011565b34610185576020366003190112610185576100676106b4565b835460ff8160081c161592838094610178575b8015610161575b15610107575060ff1981166001178555826100f6575b5060018060a01b03166bffffffffffffffffffffffff60a01b60335416176033556100c0575080f35b60207f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989161ff001984541684555160018152a180f35b61ffff191661010117845538610097565b608490602086519162461bcd60e51b8352820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152fd5b50303b1580156100815750600160ff831614610081565b50600160ff83161061007a565b8280fd5b50919034610467576060366003190112610467576101a56106b4565b906024803592604435956001600160801b0387169283880361066b57600260015414610629576002600155851561061a57831561061a57603354855163309a3bc160e11b8152979889986020956001600160a01b0393841693929187818881885afa9081156105f357849189918e916105fd575b50888c5180948193632210d52560e01b8352165afa9081156105f3579084918d916105c6575b50169a8b948a51898189816370a0823160e01b9a8b82528d30908301525afa9081156105bc578e8493928c928b969161058a575b50610526575b50505050508281169a8b159485809661051d575b61050d578d8d8a8d938a8a15958661049b575b50505050505061048b578b1461047b57906102ba91610b4f565b97881061046b57899060335416803b15610467578190604489518094819363a9fc507b60e01b8352338a8401528b898401525af1801561045d57610431575b50156103fb578547106103bb578780808089335af1610316610862565b5015610355575050907ffde313859edf8a78b1e1c10c6dbe0584a219be6af8d4914fdb8548652310339792915b82519485528401523392a36001805580f35b603a9060849386519362461bcd60e51b85528401528201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152fd5b601d9060649386519362461bcd60e51b85528401528201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152fd5b5050907ffde313859edf8a78b1e1c10c6dbe0584a219be6af8d4914fdb85486523103397929161042c853388610726565b610343565b67ffffffffffffffff819a929a1161044c57865297386102f9565b50634e487b7160e01b815260418352fd5b87513d8c823e3d90fd5b5080fd5b86516390981e6d60e01b81528490fd5b8851630cdece4960e21b81528690fd5b895163356680b760e01b81528790fd5b90919293949550518094819382528d30908301525afa91821561050257908d926104cd575b50108d8d8a388a8f6102a0565b8092508a8092503d83116104fb575b6104e681836106cf565b810103126104f7578b9051386104c0565b8d80fd5b503d6104dc565b8c51903d90823e3d90fd5b8a5163356680b760e01b81528890fd5b508b471061028d565b8d51948580928b82528d30908301525afa9182156105025791610559575b61054f92508d610726565b848c38898e610279565b90508882813d8311610583575b61057081836106cf565b810103126104f75761054f915190610544565b503d610566565b9550505083813d83116105b5575b6105a281836106cf565b8101031261046757898e89945138610273565b503d610598565b8c513d85823e3d90fd5b6105e69150893d8b116105ec575b6105de81836106cf565b810190610707565b3861023f565b503d6105d4565b8a513d8e823e3d90fd5b6106149150823d84116105ec576105de81836106cf565b38610219565b508351631d01a37160e01b8152fd5b90601f606492602087519362461bcd60e51b85528401528201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152fd5b8680fd5b5050346104675780600319360112610467576106896106b4565b602435926001600160801b03841684036106b157506020926106aa91610b4f565b9051908152f35b80fd5b600435906001600160a01b03821682036106ca57565b600080fd5b90601f8019910116810190811067ffffffffffffffff8211176106f157604052565b634e487b7160e01b600052604160045260246000fd5b908160209103126106ca57516001600160a01b03811681036106ca5790565b60405163a9059cbb60e01b602082019081526001600160a01b03938416602483015260448083019590955293815267ffffffffffffffff926080820192848411838510176106f157169060c0810193838510908511176106f1576107cb93604052602083527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656460a0820152600080958192519082855af16107c5610862565b916108a2565b90815191821592831561083b575b505050156107e357565b60405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608490fd5b81929350906020918101031261046757602001519081151582036106b157503880806107d9565b3d1561089d573d9067ffffffffffffffff82116106f15760405191610891601f8201601f1916602001846106cf565b82523d6000602084013e565b606090565b9192901561090457508151156108b6575090565b3b156108bf5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156109175750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b82851061095d575050604492506000838284010152601f80199101168101030190fd5b848101820151868601604401529381019385935061093a565b67ffffffffffffffff81116106f15760051b60200190565b80511561099b5760200190565b634e487b7160e01b600052603260045260246000fd5b80516001101561099b5760400190565b91906040838203126106ca57825167ffffffffffffffff908181116106ca5784019082601f830112156106ca578151916109fa83610976565b90610a0860405192836106cf565b838252602093848084019160051b830101918683116106ca578501905b828210610aa75750505094828101519182116106ca57019180601f840112156106ca578251610a5381610976565b93610a6160405195866106cf565b818552838086019260051b8201019283116106ca578301905b828210610a88575050505090565b81516001600160a01b03811681036106ca578152908301908301610a7a565b81518060060b81036106ca578152908501908501610a25565b6020908160408183019282815285518094520193019160005b828110610ae7575050505090565b835163ffffffff1685529381019392810192600101610ad9565b600691820b910b0390667fffffffffffff198212667fffffffffffff831317610b2657565b634e487b7160e01b600052601160045260246000fd5b81810292918115918404141715610b2657565b6033546040805163309a3bc160e11b815290949392916001600160a01b039160049160209190829082908590829088165afa801561103a57849160009161101d575b5016918751946311d3da1560e11b865282868381875afa95861561101257600096610ff3575b50808516610fed575084955b8851916301cde7c760e11b9586845280891693848382015285816024818a5afa8015610fe2578291600091610fc5575b50161580610fb9575b610faa578a51936060850185811067ffffffffffffffff821117610f95578c52600285528b3687870137610708610c328661098e565b526000610c3e866109b1565b528b5193632210d52560e01b8086528d888787818d5afa968715610f8a57600097610f69575b50518a81529584168587015287866024818c5afa958615610ec557600096610f4a575b508d5163883bdbfd60e01b808252968f9190818781610ca88d8c8301610ac0565b03921691815a93600094fa8015610f3f57610ce691600091610f25575b50610cd9610cd2826109b1565b519161098e565b5160060b9060060b610b01565b60060b92610708840560020b93600081129081610f14575b50610efa575b6001600160801b03610d169116611045565b9051918252888287818d5afa908115610eef57610d3d938d93600093610ed0575b506110ae565b8c5163111029b960e01b815290878286818c5afa918215610ec557600092610e96575b5061271091820190818311610e815790610d7991610b3c565b0497828a168214610e725790602487928e51998a9384928352878301525afa928315610e6757610dc1966000968795610e48575b50508b519687958694859384528301610ac0565b0392165afa958615610e3e5750610708610e06610e199697610e1393600091610e1c575b50610dfc610df2826109b1565b5160060b9161098e565b5160060b90610b01565b60060b0560020b91611045565b906110ae565b90565b610e37913d8091833e610e2f81836106cf565b8101906109c1565b5038610de5565b513d6000823e3d90fd5b610e5f929550803d106105ec576105de81836106cf565b923880610dad565b8b513d6000823e3d90fd5b50969a50505050505050505050565b601186634e487b7160e01b6000525260246000fd5b90918882813d8311610ebe575b610ead81836106cf565b810103126106b15750519038610d60565b503d610ea3565b8e513d6000823e3d90fd5b610ee89193508b3d8d116105ec576105de81836106cf565b9138610d37565b8f513d6000823e3d90fd5b929050627fffff198114610e815760001901918e90610d04565b61070891500760060b151538610cfe565b610f38913d8091833e610e2f81836106cf565b5038610cc5565b82513d6000823e3d90fd5b610f62919650883d8a116105ec576105de81836106cf565b9438610c87565b85919750610f83908a3d8c116105ec576105de81836106cf565b9690610c64565b50513d6000823e3d90fd5b604184634e487b7160e01b6000525260246000fd5b5089516305d6109b60e31b8152fd5b50808816841415610bfc565b610fdc9150873d89116105ec576105de81836106cf565b38610bf3565b8c513d6000823e3d90fd5b95610bc3565b61100b919650833d85116105ec576105de81836106cf565b9438610bb7565b89513d6000823e3d90fd5b6110349150833d85116105ec576105de81836106cf565b38610b91565b88513d6000823e3d90fd5b6001600160801b0390818111611059571690565b60405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b6064820152608490fd5b9291909260020b906000821260001461163557600160ff1b8214610b2657816000035b620d89e8811161160c5760018116156115fa576001600160881b036ffffcb933bd6fad37aa2d162d1a5940015b1692600282166115ce575b6004918281166115a2575b60088116611576575b6010811661154a575b6020811661151e575b604081166114f2575b6080908181166114c7575b610100811661149c575b6102008116611471575b6104008116611446575b610800811661141b575b61100081166113f0575b61200081166113c5575b614000811661139a575b618000811661136f575b620100008116611344575b62020000811661131a575b6204000081166112dc575b620800001661129d575b50600012611277575b63ffffffff8360201c93161560001461126e5760ff60005b16830180931161125957506001600160801b03916001600160a01b039081908116848111611230578061121191610b3c565b94169116101561122657610e199216906118e2565b610e199216611887565b8061123a9161163b565b94169116101561124f57610e19921690611818565b610e1992166116c4565b601190634e487b7160e01b6000525260246000fd5b60ff60016111df565b9180156112885760001904916111c7565b601283634e487b7160e01b6000525260246000fd5b6b048a170391f7dc42444e8fa2949194918281029281840414901517156112c7571c9260006111be565b601183634e487b7160e01b6000525260246000fd5b946d2216e584f5fa1ea926041bedfe989081810291818304149015171561130557811c946111b4565b601184634e487b7160e01b6000525260246000fd5b946e5d6af8dedb81196699c329225ee6049081810291818304149015171561130557811c946111a9565b946f09aa508b5b7a84e1c677de54f3e99bc99081810291818304149015171561130557811c9461119e565b946f31be135f97d08fd981231505542fcfa69081810291818304149015171561130557811c94611193565b946f70d869a156d2a1b890bb3df62baf32f79081810291818304149015171561130557811c94611189565b946fa9f746462d870fdf8a65dc1f90e061e59081810291818304149015171561130557811c9461117f565b946fd097f3bdfd2022b8845ad8f792aa58259081810291818304149015171561130557811c94611175565b946fe7159475a2c29b7443b29c7fa6e889d99081810291818304149015171561130557811c9461116b565b946ff3392b0822b70005940c7a398e4b70f39081810291818304149015171561130557811c94611161565b946ff987a7253ac413176f2b074cf7815e549081810291818304149015171561130557811c94611157565b946ffcbe86c7900a88aedcffc83b479aa3a49081810291818304149015171561130557811c9461114d565b946ffe5dee046a99a2a811c461f1969c30539081810291818304149015171561130557811c94611143565b936fff2ea16466c96a3843ec78b326b52861908181029181830414901517156112c75760801c93611138565b936fff973b41fa98c081472e6896dfb254c0908181029181830414901517156112c75760801c9361112f565b936fffcb9843d60f6159c9db58835c926644908181029181830414901517156112c75760801c93611126565b936fffe5caca7e10e4e61c3624eaa0941cd0908181029181830414901517156112c75760801c9361111d565b936ffff2e50f5f656932ef12357cf3c7fdcc908181029181830414901517156112c75760801c93611114565b926ffff97272373d413259a46990580e213a90818102918183041490151715610b265760801c92611109565b6001600160881b03600160801b6110fe565b60405162461bcd60e51b81526020600482015260016024820152601560fa1b6044820152606490fd5b816110d1565b60001982820990828102908180841093039383850393600095146116b957600160401b91848311156116b557099181831184818303956116a157508460c01b948504600160c01b1491141715610b26570360401c1780800460011481151715610b265790565b634e487b7160e01b81526011600452602490fd5b8580fd5b505060401c92915050565b600160801b9291600019828509938260801b9283808710960395808703961461180957858311156106ca5782910990801960018101809111610b265781168091049161171f600096600184808a030401908684119003610b3c565b9280600302966003880482036116a157600280981861173e8184610b3c565b8903908982116117f5579061175291610b3c565b61175c8184610b3c565b8903908982116117f5579061177091610b3c565b61177a8184610b3c565b8903908982116117f5579061178e91610b3c565b6117988184610b3c565b8903908982116117f557906117ac91610b3c565b6117b68184610b3c565b8903908982116117f5576117d4916117cd91610b3c565b8093610b3c565b88039788116116a15750610e1995966117ec91610b3c565b93030417610b3c565b634e487b7160e01b83526011600452602483fd5b505080929350156106ca570490565b6000198282098282029081808210910393818503916000951461187c57600160801b93828511156116b55790849109928284119085828403966116a157508560801b9586041491141715610b26570360801c1780800460011481151715610b265790565b505060801c92915050565b600160c01b9291600019828509938260c01b9283808710960395808703961461180957858311156106ca5782910990801960018101809111610b265781168091049161171f600096600184808a030401908684119003610b3c565b600019828209908281029081808410930393838503936000951461194857600160c01b91848311156116b557099181831184818303956116a157508460401b948504600160401b1491141715610b26570360c01c1780800460011481151715610b265790565b505060c01c9291505056fea26469706673582212204dd404c17485eb3b376bf4f9be193d1ec3ab6e3f9457a3d8c5604bb2f7eacb7d64736f6c63430008120033",
    "sourceMap": "1208:5453:186:-:0;;;;;;;6007:13:45;1208:5453:186;;;;;;;;;;;;;;6078:31:45;6074:139;;-1:-1:-1;1208:5453:186;;;;;;;;;6074:139:45;1208:5453:186;;;;;;6007:13:45;1208:5453:186;6174:28:45;1208:5453:186;;;;;;6174:28:45;6074:139;;;1208:5453:186;-1:-1:-1;;;1208:5453:186;;;;;;;;;;;;;;;;;-1:-1:-1;;;1208:5453:186;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60406080815260049081361015610020575b5050361561001e57600080fd5b005b600091823560e01c8063442471f01461066f57806394a5a29d146101895763c4d66de81461004e5750610011565b34610185576020366003190112610185576100676106b4565b835460ff8160081c161592838094610178575b8015610161575b15610107575060ff1981166001178555826100f6575b5060018060a01b03166bffffffffffffffffffffffff60a01b60335416176033556100c0575080f35b60207f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989161ff001984541684555160018152a180f35b61ffff191661010117845538610097565b608490602086519162461bcd60e51b8352820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152fd5b50303b1580156100815750600160ff831614610081565b50600160ff83161061007a565b8280fd5b50919034610467576060366003190112610467576101a56106b4565b906024803592604435956001600160801b0387169283880361066b57600260015414610629576002600155851561061a57831561061a57603354855163309a3bc160e11b8152979889986020956001600160a01b0393841693929187818881885afa9081156105f357849189918e916105fd575b50888c5180948193632210d52560e01b8352165afa9081156105f3579084918d916105c6575b50169a8b948a51898189816370a0823160e01b9a8b82528d30908301525afa9081156105bc578e8493928c928b969161058a575b50610526575b50505050508281169a8b159485809661051d575b61050d578d8d8a8d938a8a15958661049b575b50505050505061048b578b1461047b57906102ba91610b4f565b97881061046b57899060335416803b15610467578190604489518094819363a9fc507b60e01b8352338a8401528b898401525af1801561045d57610431575b50156103fb578547106103bb578780808089335af1610316610862565b5015610355575050907ffde313859edf8a78b1e1c10c6dbe0584a219be6af8d4914fdb8548652310339792915b82519485528401523392a36001805580f35b603a9060849386519362461bcd60e51b85528401528201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152fd5b601d9060649386519362461bcd60e51b85528401528201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152fd5b5050907ffde313859edf8a78b1e1c10c6dbe0584a219be6af8d4914fdb85486523103397929161042c853388610726565b610343565b67ffffffffffffffff819a929a1161044c57865297386102f9565b50634e487b7160e01b815260418352fd5b87513d8c823e3d90fd5b5080fd5b86516390981e6d60e01b81528490fd5b8851630cdece4960e21b81528690fd5b895163356680b760e01b81528790fd5b90919293949550518094819382528d30908301525afa91821561050257908d926104cd575b50108d8d8a388a8f6102a0565b8092508a8092503d83116104fb575b6104e681836106cf565b810103126104f7578b9051386104c0565b8d80fd5b503d6104dc565b8c51903d90823e3d90fd5b8a5163356680b760e01b81528890fd5b508b471061028d565b8d51948580928b82528d30908301525afa9182156105025791610559575b61054f92508d610726565b848c38898e610279565b90508882813d8311610583575b61057081836106cf565b810103126104f75761054f915190610544565b503d610566565b9550505083813d83116105b5575b6105a281836106cf565b8101031261046757898e89945138610273565b503d610598565b8c513d85823e3d90fd5b6105e69150893d8b116105ec575b6105de81836106cf565b810190610707565b3861023f565b503d6105d4565b8a513d8e823e3d90fd5b6106149150823d84116105ec576105de81836106cf565b38610219565b508351631d01a37160e01b8152fd5b90601f606492602087519362461bcd60e51b85528401528201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152fd5b8680fd5b5050346104675780600319360112610467576106896106b4565b602435926001600160801b03841684036106b157506020926106aa91610b4f565b9051908152f35b80fd5b600435906001600160a01b03821682036106ca57565b600080fd5b90601f8019910116810190811067ffffffffffffffff8211176106f157604052565b634e487b7160e01b600052604160045260246000fd5b908160209103126106ca57516001600160a01b03811681036106ca5790565b60405163a9059cbb60e01b602082019081526001600160a01b03938416602483015260448083019590955293815267ffffffffffffffff926080820192848411838510176106f157169060c0810193838510908511176106f1576107cb93604052602083527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656460a0820152600080958192519082855af16107c5610862565b916108a2565b90815191821592831561083b575b505050156107e357565b60405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608490fd5b81929350906020918101031261046757602001519081151582036106b157503880806107d9565b3d1561089d573d9067ffffffffffffffff82116106f15760405191610891601f8201601f1916602001846106cf565b82523d6000602084013e565b606090565b9192901561090457508151156108b6575090565b3b156108bf5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156109175750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b82851061095d575050604492506000838284010152601f80199101168101030190fd5b848101820151868601604401529381019385935061093a565b67ffffffffffffffff81116106f15760051b60200190565b80511561099b5760200190565b634e487b7160e01b600052603260045260246000fd5b80516001101561099b5760400190565b91906040838203126106ca57825167ffffffffffffffff908181116106ca5784019082601f830112156106ca578151916109fa83610976565b90610a0860405192836106cf565b838252602093848084019160051b830101918683116106ca578501905b828210610aa75750505094828101519182116106ca57019180601f840112156106ca578251610a5381610976565b93610a6160405195866106cf565b818552838086019260051b8201019283116106ca578301905b828210610a88575050505090565b81516001600160a01b03811681036106ca578152908301908301610a7a565b81518060060b81036106ca578152908501908501610a25565b6020908160408183019282815285518094520193019160005b828110610ae7575050505090565b835163ffffffff1685529381019392810192600101610ad9565b600691820b910b0390667fffffffffffff198212667fffffffffffff831317610b2657565b634e487b7160e01b600052601160045260246000fd5b81810292918115918404141715610b2657565b6033546040805163309a3bc160e11b815290949392916001600160a01b039160049160209190829082908590829088165afa801561103a57849160009161101d575b5016918751946311d3da1560e11b865282868381875afa95861561101257600096610ff3575b50808516610fed575084955b8851916301cde7c760e11b9586845280891693848382015285816024818a5afa8015610fe2578291600091610fc5575b50161580610fb9575b610faa578a51936060850185811067ffffffffffffffff821117610f95578c52600285528b3687870137610708610c328661098e565b526000610c3e866109b1565b528b5193632210d52560e01b8086528d888787818d5afa968715610f8a57600097610f69575b50518a81529584168587015287866024818c5afa958615610ec557600096610f4a575b508d5163883bdbfd60e01b808252968f9190818781610ca88d8c8301610ac0565b03921691815a93600094fa8015610f3f57610ce691600091610f25575b50610cd9610cd2826109b1565b519161098e565b5160060b9060060b610b01565b60060b92610708840560020b93600081129081610f14575b50610efa575b6001600160801b03610d169116611045565b9051918252888287818d5afa908115610eef57610d3d938d93600093610ed0575b506110ae565b8c5163111029b960e01b815290878286818c5afa918215610ec557600092610e96575b5061271091820190818311610e815790610d7991610b3c565b0497828a168214610e725790602487928e51998a9384928352878301525afa928315610e6757610dc1966000968795610e48575b50508b519687958694859384528301610ac0565b0392165afa958615610e3e5750610708610e06610e199697610e1393600091610e1c575b50610dfc610df2826109b1565b5160060b9161098e565b5160060b90610b01565b60060b0560020b91611045565b906110ae565b90565b610e37913d8091833e610e2f81836106cf565b8101906109c1565b5038610de5565b513d6000823e3d90fd5b610e5f929550803d106105ec576105de81836106cf565b923880610dad565b8b513d6000823e3d90fd5b50969a50505050505050505050565b601186634e487b7160e01b6000525260246000fd5b90918882813d8311610ebe575b610ead81836106cf565b810103126106b15750519038610d60565b503d610ea3565b8e513d6000823e3d90fd5b610ee89193508b3d8d116105ec576105de81836106cf565b9138610d37565b8f513d6000823e3d90fd5b929050627fffff198114610e815760001901918e90610d04565b61070891500760060b151538610cfe565b610f38913d8091833e610e2f81836106cf565b5038610cc5565b82513d6000823e3d90fd5b610f62919650883d8a116105ec576105de81836106cf565b9438610c87565b85919750610f83908a3d8c116105ec576105de81836106cf565b9690610c64565b50513d6000823e3d90fd5b604184634e487b7160e01b6000525260246000fd5b5089516305d6109b60e31b8152fd5b50808816841415610bfc565b610fdc9150873d89116105ec576105de81836106cf565b38610bf3565b8c513d6000823e3d90fd5b95610bc3565b61100b919650833d85116105ec576105de81836106cf565b9438610bb7565b89513d6000823e3d90fd5b6110349150833d85116105ec576105de81836106cf565b38610b91565b88513d6000823e3d90fd5b6001600160801b0390818111611059571690565b60405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b6064820152608490fd5b9291909260020b906000821260001461163557600160ff1b8214610b2657816000035b620d89e8811161160c5760018116156115fa576001600160881b036ffffcb933bd6fad37aa2d162d1a5940015b1692600282166115ce575b6004918281166115a2575b60088116611576575b6010811661154a575b6020811661151e575b604081166114f2575b6080908181166114c7575b610100811661149c575b6102008116611471575b6104008116611446575b610800811661141b575b61100081166113f0575b61200081166113c5575b614000811661139a575b618000811661136f575b620100008116611344575b62020000811661131a575b6204000081166112dc575b620800001661129d575b50600012611277575b63ffffffff8360201c93161560001461126e5760ff60005b16830180931161125957506001600160801b03916001600160a01b039081908116848111611230578061121191610b3c565b94169116101561122657610e199216906118e2565b610e199216611887565b8061123a9161163b565b94169116101561124f57610e19921690611818565b610e1992166116c4565b601190634e487b7160e01b6000525260246000fd5b60ff60016111df565b9180156112885760001904916111c7565b601283634e487b7160e01b6000525260246000fd5b6b048a170391f7dc42444e8fa2949194918281029281840414901517156112c7571c9260006111be565b601183634e487b7160e01b6000525260246000fd5b946d2216e584f5fa1ea926041bedfe989081810291818304149015171561130557811c946111b4565b601184634e487b7160e01b6000525260246000fd5b946e5d6af8dedb81196699c329225ee6049081810291818304149015171561130557811c946111a9565b946f09aa508b5b7a84e1c677de54f3e99bc99081810291818304149015171561130557811c9461119e565b946f31be135f97d08fd981231505542fcfa69081810291818304149015171561130557811c94611193565b946f70d869a156d2a1b890bb3df62baf32f79081810291818304149015171561130557811c94611189565b946fa9f746462d870fdf8a65dc1f90e061e59081810291818304149015171561130557811c9461117f565b946fd097f3bdfd2022b8845ad8f792aa58259081810291818304149015171561130557811c94611175565b946fe7159475a2c29b7443b29c7fa6e889d99081810291818304149015171561130557811c9461116b565b946ff3392b0822b70005940c7a398e4b70f39081810291818304149015171561130557811c94611161565b946ff987a7253ac413176f2b074cf7815e549081810291818304149015171561130557811c94611157565b946ffcbe86c7900a88aedcffc83b479aa3a49081810291818304149015171561130557811c9461114d565b946ffe5dee046a99a2a811c461f1969c30539081810291818304149015171561130557811c94611143565b936fff2ea16466c96a3843ec78b326b52861908181029181830414901517156112c75760801c93611138565b936fff973b41fa98c081472e6896dfb254c0908181029181830414901517156112c75760801c9361112f565b936fffcb9843d60f6159c9db58835c926644908181029181830414901517156112c75760801c93611126565b936fffe5caca7e10e4e61c3624eaa0941cd0908181029181830414901517156112c75760801c9361111d565b936ffff2e50f5f656932ef12357cf3c7fdcc908181029181830414901517156112c75760801c93611114565b926ffff97272373d413259a46990580e213a90818102918183041490151715610b265760801c92611109565b6001600160881b03600160801b6110fe565b60405162461bcd60e51b81526020600482015260016024820152601560fa1b6044820152606490fd5b816110d1565b60001982820990828102908180841093039383850393600095146116b957600160401b91848311156116b557099181831184818303956116a157508460c01b948504600160c01b1491141715610b26570360401c1780800460011481151715610b265790565b634e487b7160e01b81526011600452602490fd5b8580fd5b505060401c92915050565b600160801b9291600019828509938260801b9283808710960395808703961461180957858311156106ca5782910990801960018101809111610b265781168091049161171f600096600184808a030401908684119003610b3c565b9280600302966003880482036116a157600280981861173e8184610b3c565b8903908982116117f5579061175291610b3c565b61175c8184610b3c565b8903908982116117f5579061177091610b3c565b61177a8184610b3c565b8903908982116117f5579061178e91610b3c565b6117988184610b3c565b8903908982116117f557906117ac91610b3c565b6117b68184610b3c565b8903908982116117f5576117d4916117cd91610b3c565b8093610b3c565b88039788116116a15750610e1995966117ec91610b3c565b93030417610b3c565b634e487b7160e01b83526011600452602483fd5b505080929350156106ca570490565b6000198282098282029081808210910393818503916000951461187c57600160801b93828511156116b55790849109928284119085828403966116a157508560801b9586041491141715610b26570360801c1780800460011481151715610b265790565b505060801c92915050565b600160c01b9291600019828509938260c01b9283808710960395808703961461180957858311156106ca5782910990801960018101809111610b265781168091049161171f600096600184808a030401908684119003610b3c565b600019828209908281029081808410930393838503936000951461194857600160c01b91848311156116b557099181831184818303956116a157508460401b948504600160401b1491141715610b26570360c01c1780800460011481151715610b265790565b505060c01c9291505056fea26469706673582212204dd404c17485eb3b376bf4f9be193d1ec3ab6e3f9457a3d8c5604bb2f7eacb7d64736f6c63430008120033",
    "sourceMap": "1208:5453:186:-:0;;;;;;;;;;;;-1:-1:-1;1208:5453:186;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1208:5453:186;;;;;;:::i;:::-;;;;;;;;3301:14:45;3347:34;;;;;;1208:5453:186;3346:108:45;;;;1208:5453:186;;;;-1:-1:-1;;;1208:5453:186;;3551:1:45;1208:5453:186;;;;3562:65:45;;1208:5453:186;;;;;;;;;;;2148:39;1208:5453;;;2148:39;1208:5453;3647:99:45;;1208:5453:186;;;3647:99:45;1208:5453:186;3721:14:45;1208:5453:186;;;;;;;;;3551:1:45;1208:5453:186;;3721:14:45;1208:5453:186;;3562:65:45;-1:-1:-1;;1208:5453:186;;;;;3562:65:45;;;1208:5453:186;;;;;;1830:1:48;;;;1208:5453:186;;;;;;;;;;;;;;;-1:-1:-1;;;1208:5453:186;;;;;3346:108:45;3426:4;;1713:19:63;:23;3387:66:45;;3346:108;3387:66;1208:5453:186;3452:1:45;1208:5453:186;;;3436:17:45;3346:108;;3347:34;1208:5453:186;3380:1:45;1208:5453:186;;;3365:16:45;3347:34;;1208:5453:186;;;;;;;;;;;;;-1:-1:-1;;1208:5453:186;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;1208:5453:186;;;;;;;;1830:1:48;1208:5453:186;;2712:19:48;1830:1;;;1208:5453:186;1830:1:48;2567:18:186;;2563:54;;2627:12;;2623:48;;2720:11;1208:5453;;;-1:-1:-1;;;2720:32:186;;1208:5453;;;;;;-1:-1:-1;;;;;1208:5453:186;;;;;;;;2720:32;1208:5453;;2720:32;;;;;;;;;;;;;;;1208:5453;;;;;;;;;;;;2699:71;;1208:5453;2699:71;;;;;;;;;;;;;;1208:5453;;;;;;;;;;;;;;;2832:29;;;;2855:4;;2832:29;;;1208:5453;2832:29;;;;;;;;;;;;;;;;;;1208:5453;2832:33;2828:142;;1208:5453;;;;;;;;;3008:23;;;:64;;;;;;1208:5453;3004:111;;3156:23;;;;;;;;:85;;;;1208:5453;3152:132;;;;;;;;3327:26;;3323:77;;3452:37;;;;:::i;:::-;3568:25;;;3564:70;;1208:5453;;2720:11;1208:5453;;3692:43;;;;;1208:5453;;;;;;;;;;;;3692:43;;3715:10;3692:43;;;1208:5453;;;;;;3692:43;;;;;;;;1208:5453;-1:-1:-1;3778:217:186;;;2736:21:98;;:31;1208:5453:186;;3715:10;;;;;;2831:33:98;;;;:::i;:::-;;1208:5453:186;;;3778:217;;;4006:60;3778:217;;;1208:5453;;;;;;;;3715:10;4006:60;;1208:5453;1830:1:48;;1208:5453:186;;;;;;;;;1830:1:48;;;;1208:5453:186;;;;;;;;;;;;;;;;;;;;;;;;;;1830:1:48;;;;1208:5453:186;;;;;;;;;;;;;;3778:217;3715:10;;;4006:60;3715:10;;3978:9;3715:10;;3978:9;;:::i;:::-;3778:217;;3692:43;1208:5453;;;;;;;;;;3692:43;;;;1208:5453;-1:-1:-1;;;;1208:5453:186;;;;;;3692:43;1208:5453;;;;;;;;;3692:43;1208:5453;;;3564:70;1208:5453;;-1:-1:-1;;;3610:17:186;;1208:5453;;3610:17;3323:77;1208:5453;;-1:-1:-1;;;3370:23:186;;1208:5453;;3370:23;3152:132;1208:5453;;-1:-1:-1;;;3258:19:186;;1208:5453;;3258:19;3156:85;1208:5453;;;;;;;;3183:42;;;;;;2855:4;;3183:42;;;1208:5453;3183:42;;;;;;;;;;;;3156:85;3183:58;;3156:85;;;;;;;;3183:42;;;;;;;;;;;;;;;;;;:::i;:::-;;;1208:5453;;;;;;;3183:42;;;1208:5453;;;;3183:42;;;;;;1208:5453;;;;;;;;;;3004:111;1208:5453;;-1:-1:-1;;;3089:19:186;;1208:5453;;3089:19;3008:64;3035:21;;;:37;3008:64;;2828:142;1208:5453;;2933:29;;;;;;;2855:4;;2933:29;;;1208:5453;2933:29;;;;;;;;;;2828:142;2933:29;;;;;:::i;:::-;2828:142;;;;;;;2933:29;;;;;;;;;;;;;;;;:::i;:::-;;;1208:5453;;;;2933:29;1208:5453;;2933:29;;;;;;;;2832;;;;;;;;;;;;;;;;;:::i;:::-;;;1208:5453;;;;;;;;;2832:29;;;;;;;;;1208:5453;;;;;;;;;2699:71;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;1208:5453;;;;;;;;;2720:32;;;;;;;;;;;;;;:::i;:::-;;;;2623:48;-1:-1:-1;1208:5453:186;;-1:-1:-1;;;2648:23:186;;;1830:1:48;1208:5453:186;1830:1:48;;1208:5453:186;;;;1830:1:48;;;;;;;;;;;1208:5453:186;1830:1:48;1208:5453:186;;;1830:1:48;;1208:5453:186;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1208:5453:186;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;1208:5453:186;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1208:5453:186;;;;;;;:::o;941:175:93:-;1208:5453:186;;-1:-1:-1;;;1050:58:93;;;;;;-1:-1:-1;;;;;1208:5453:186;;;1050:58:93;;;1208:5453:186;;;;;;;;;1050:58:93;;;1208:5453:186;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5535:69:98;1208:5453:186;;;1050:58:93;1208:5453:186;;;;;;;-1:-1:-1;5487:31:98;;;;;;;;;;;;:::i;:::-;5535:69;;:::i;:::-;1208:5453:186;;;5705:22:93;;;:56;;;;;941:175;1208:5453:186;;;;;;941:175:93:o;1208:5453:186:-;;;-1:-1:-1;;;1208:5453:186;;1050:58:93;1208:5453:186;;;;;1050:58:93;1208:5453:186;;;;;;;;-1:-1:-1;;;1208:5453:186;;;;;;;5705:56:93;5731:30;;;;;1050:58;5731:30;;;1208:5453:186;;;;1050:58:93;5731:30;1208:5453:186;;;;;;;;;5705:56:93;;;;;;1208:5453:186;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1208:5453:186;;;;;:::i;:::-;;;;-1:-1:-1;1208:5453:186;;;;:::o;:::-;;;:::o;7671:628:98:-;;;;7875:418;;;1208:5453:186;;;7906:22:98;7902:286;;8201:17;;:::o;7902:286::-;1713:19:63;:23;1208:5453:186;;8201:17:98;:::o;1208:5453:186:-;;;-1:-1:-1;;;1208:5453:186;;;;;;;;;;;;;;;;;;;;7875:418:98;1208:5453:186;;;;-1:-1:-1;8980:21:98;:17;;9152:142;;;;;;;8976:379;1208:5453:186;;1830:1:48;;;;9324:20:98;;1208:5453:186;;9324:20:98;;;;1208:5453:186;;;;;;;;;9000:1:98;1208:5453:186;;;;;;;;;;;;9000:1:98;1208:5453:186;;;;;;;;;;;;;;9324:20:98;;;;1208:5453:186;;;;;;;;;;;;;;;;;;;-1:-1:-1;1208:5453:186;;;;;;;;;;;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;-1:-1:-1;1208:5453:186;;;;;-1:-1:-1;1208:5453:186;;;;5040:1;1208:5453;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;1208:5453:186;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1208:5453:186;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4327:2106::-;4492:11;1208:5453;;;;-1:-1:-1;;;4492:32:186;;1208:5453;;4327:2106;;;-1:-1:-1;;;;;1208:5453:186;4492:32;;;;1208:5453;4492:32;;1208:5453;;4492:32;;1208:5453;;;;4492:32;;;;;;;;-1:-1:-1;4492:32:186;;;4327:2106;1208:5453;;;;;;;;;4546:32;;;;;;;;;;;;;;-1:-1:-1;4546:32:186;;;4327:2106;-1:-1:-1;1208:5453:186;;;;;4635:42;;;;1208:5453;;;;;;4784:37;;;;1208:5453;;;4784:37;;;;;1208:5453;4784:37;;1208:5453;4784:37;;;;;;;;;;-1:-1:-1;4784:37:186;;;4635:42;1208:5453;;4784:51;:71;;;4635:42;4780:122;;1208:5453;;;;;;;;;;;;;;;;;4987:1;1208:5453;;;;;;;;4928:10;4995:27;;;:::i;:::-;1208:5453;-1:-1:-1;5028:18:186;;;:::i;:::-;1208:5453;;;;;;;5180:32;;;;;;;;;;;;;;;;-1:-1:-1;5180:32:186;;;4635:42;-1:-1:-1;1208:5453:186;5152:61;;;1208:5453;;;5152:61;;;1208:5453;5152:61;1208:5453;;;5152:61;;;;;;;;-1:-1:-1;5152:61:186;;;4635:42;-1:-1:-1;1208:5453:186;;-1:-1:-1;;;5137:105:186;;;1208:5453;;;;;5137:105;1208:5453;5137:105;;;;;;:::i;:::-;;1208:5453;;5137:105;;;;-1:-1:-1;5137:105:186;;;;;;5326:39;5137:105;-1:-1:-1;5137:105:186;;;4635:42;5326:18;5347;5326;;;:::i;:::-;1208:5453;5347:18;;:::i;:::-;1208:5453;;;;;;5326:39;:::i;:::-;1208:5453;;;4928:10;1208:5453;;4987:1;1208:5453;5482:24;-1:-1:-1;5482:24:186;;:75;;;;4635:42;5478:102;;;4635:42;-1:-1:-1;;;;;5694:25:186;1208:5453;;5694:25;:::i;:::-;1208:5453;;5721:32;;;;;;;;;;;;;;;5659:101;5721:32;;;-1:-1:-1;5721:32:186;;;4635:42;5659:101;;:::i;:::-;1208:5453;;-1:-1:-1;;;5779:39:186;;1208:5453;5779:39;1208:5453;5779:39;1208:5453;5779:39;;;;;;;;-1:-1:-1;5779:39:186;;;4635:42;5770:6;;1208:5453;;;;;;;;;5651:168;;;;:::i;:::-;1208:5453;;;;;5914:16;;5910:53;;1208:5453;;;;;;6112:37;;;;;;;;;;1208:5453;6112:37;;;;;;;6097:74;6112:37;-1:-1:-1;6112:37:186;;;;;4635:42;1208:5453;;;;6097:74;;;;;;;;;;;;:::i;:::-;;1208:5453;;6097:74;;;;;;;;4928:10;6211:49;6350:78;6097:74;;6390:21;6097:74;-1:-1:-1;6097:74:186;;;4635:42;6211:23;6237;6211;;;:::i;:::-;1208:5453;;;6237:23;;:::i;:::-;1208:5453;;;6211:49;;:::i;:::-;1208:5453;;;4987:1;1208:5453;6390:21;;:::i;:::-;6350:78;;:::i;:::-;4327:2106;:::o;6097:74::-;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;1208:5453;;-1:-1:-1;1208:5453:186;;;;;6112:37;;;;;;;-1:-1:-1;6112:37:186;;;;;;:::i;:::-;;;;;;;1208:5453;;;-1:-1:-1;1208:5453:186;;;;;5910:53;-1:-1:-1;5940:16:186;;-1:-1:-1;;;;;;;;;;5940:16:186:o;1208:5453::-;;;;;;-1:-1:-1;1208:5453:186;;;-1:-1:-1;1208:5453:186;5779:39;;;;;;;;;;;;;;;;:::i;:::-;;;1208:5453;;;;;;5779:39;;;;;;;;;;1208:5453;;;-1:-1:-1;1208:5453:186;;;;;5721:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;1208:5453;;;-1:-1:-1;1208:5453:186;;;;;5478:102;1208:5453;;-1:-1:-1;;;1208:5453:186;;;;-1:-1:-1;;1208:5453:186;;;;5478:102;;5482:75;4928:10;1208:5453;;;;;5511:45;;5482:75;;;5137:105;;;;;;;;;;;;:::i;:::-;;;;;;1208:5453;;;-1:-1:-1;1208:5453:186;;;;;5152:61;;;;;;;;;;;;;;;:::i;:::-;;;;;5180:32;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;1208:5453;;;-1:-1:-1;1208:5453:186;;;;;;;;;;;-1:-1:-1;1208:5453:186;;;-1:-1:-1;1208:5453:186;4780:122;-1:-1:-1;1208:5453:186;;-1:-1:-1;;;4872:23:186;;;4784:71;1208:5453;;;;4839:16;;;4784:71;;:37;;;;;;;;;;;;;;:::i;:::-;;;;;1208:5453;;;-1:-1:-1;1208:5453:186;;;;;4635:42;;;;4546:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;1208:5453;;;-1:-1:-1;1208:5453:186;;;;;4492:32;;;;;;;;;;;;;;:::i;:::-;;;;;1208:5453;;;-1:-1:-1;1208:5453:186;;;;;9088:192:107;-1:-1:-1;;;;;9172:26:107;;;;1208:5453:186;;;9088:192:107;:::o;1208:5453:186:-;;;-1:-1:-1;;;1208:5453:186;;;;;;;;;;;;;;;;;-1:-1:-1;;;1208:5453:186;;;;;;;2623:955:139;;;;;1208:5453:186;;1468:57:138;-1:-1:-1;1468:8:138;;:57;-1:-1:-1;;;;;;1208:5453:186;;;;;-1:-1:-1;1208:5453:186;1468:57:138;477:7;1543:36;;637:9;;1622:3;1612:13;;:18;1622:3;;-1:-1:-1;;;;;1633:34:138;1612:93;637:9;1719:13;1208:5453:186;1719:13:138;;1715:83;;1612:93;1822:3;1812:13;;;;1808:83;;1612:93;1915:3;1905:13;;1901:83;;1612:93;2008:4;1998:14;;1994:84;;1612:93;2102:4;2092:14;;2088:84;;1612:93;2196:4;2186:14;;2182:84;;1612:93;2290:4;2280:14;;;;2276:84;;1612:93;2384:5;2374:15;;2370:85;;1612:93;2479:5;2469:15;;2465:85;;1612:93;2574:5;2564:15;;2560:85;;1612:93;2669:5;2659:15;;2655:85;;1612:93;2764:6;2754:16;;2750:86;;1612:93;2860:6;2850:16;;2846:86;;1612:93;2956:6;2946:16;;2942:86;;1612:93;3052:6;3042:16;;3038:86;;1612:93;3148:7;3138:17;;3134:86;;1612:93;3244:7;3234:17;;3230:85;;1612:93;3339:7;3329:17;;3325:83;;1612:93;3432:7;3422:17;3418:78;;1612:93;3511:8;-1:-1:-1;;3507:47:138;;1612:93;637:9;;2102:4;637:9;3904:30;637:9;3904:22;:30;637:9;;;1208:5453:186;-1:-1:-1;3904:30:138;1208:5453:186;;;;;;;;-1:-1:-1;;;;;;1208:5453:186;-1:-1:-1;;;;;1208:5453:186;;;;;2985:33:139;;;1208:5453:186;;3054:36:139;;;;:::i;:::-;3118:156;1208:5453:186;;;3118:22:139;1208:5453:186;;;3159:48:139;1208:5453:186;;3159:48:139;;:::i;3118:156::-;3226:48;1208:5453:186;;3226:48:139;:::i;2981:591::-;3325:52;;;;:::i;:::-;3405:156;1208:5453:186;;;3405:22:139;1208:5453:186;;;3446:48:139;1208:5453:186;;3446:48:139;;:::i;3405:156::-;3513:48;1208:5453:186;;3513:48:139;:::i;1208:5453:186:-;;;;;;-1:-1:-1;1208:5453:186;;;-1:-1:-1;1208:5453:186;3904:30:138;1208:5453:186;1622:3:138;3904:30;;3507:47;1208:5453:186;;;;;-1:-1:-1;;1208:5453:186;;3507:47:138;;1208:5453:186;;;;;;-1:-1:-1;1208:5453:186;;;-1:-1:-1;1208:5453:186;3418:78:138;3463:25;;;;1208:5453:186;;;;;;;;;;;;;;;637:9:138;;-1:-1:-1;3418:78:138;;1208:5453:186;;;;;;-1:-1:-1;1208:5453:186;;;-1:-1:-1;1208:5453:186;3325:83:138;3370:30;;1208:5453:186;;;;;;;;;;;;;;;637:9:138;;;3325:83;;1208:5453:186;;;;;;-1:-1:-1;1208:5453:186;;;-1:-1:-1;1208:5453:186;3230:85:138;3275:32;;1208:5453:186;;;;;;;;;;;;;;;637:9:138;;3230:85;;;3134:86;3179:33;;1208:5453:186;;;;;;;;;;;;;;;637:9:138;;3134:86;;;3038;3082:34;;1208:5453:186;;;;;;;;;;;;;;;637:9:138;;3038:86;;;2942;2986:34;;1208:5453:186;;;;;;;;;;;;;;;637:9:138;;2942:86;;;2846;2890:34;;1208:5453:186;;;;;;;;;;;;;;;637:9:138;;2846:86;;;2750;2794:34;;1208:5453:186;;;;;;;;;;;;;;;637:9:138;;2750:86;;;2655:85;2698:34;;1208:5453:186;;;;;;;;;;;;;;;637:9:138;;2655:85;;;2560;2603:34;;1208:5453:186;;;;;;;;;;;;;;;637:9:138;;2560:85;;;2465;2508:34;;1208:5453:186;;;;;;;;;;;;;;;637:9:138;;2465:85;;;2370;2413:34;;1208:5453:186;;;;;;;;;;;;;;;637:9:138;;2370:85;;;2276:84;2318:34;;1208:5453:186;;;;;;;;;;;;;;;637:9:138;;2276:84;;;2182;2224:34;;1208:5453:186;;;;;;;;;;;;;;;2263:3:138;637:9;2182:84;;;2088;2130:34;;1208:5453:186;;;;;;;;;;;;;;;2169:3:138;637:9;2088:84;;;1994;2036:34;;1208:5453:186;;;;;;;;;;;;;;;2075:3:138;637:9;1994:84;;;1901:83;1942:34;;1208:5453:186;;;;;;;;;;;;;;;1981:3:138;637:9;1901:83;;;1808;1849:34;;1208:5453:186;;;;;;;;;;;;;;;1888:3:138;637:9;1808:83;;;1715;1756:34;;1208:5453:186;;;;;;;;;;;;;;;1795:3:138;637:9;1715:83;;;1612:93;-1:-1:-1;;;;;;;;1612:93:138;;637:9;1208:5453:186;;-1:-1:-1;;;637:9:138;;;;;;;;;;;1208:5453:186;-1:-1:-1;;;1208:5453:186;;;637:9:138;;;;1468:57;;;;742:3801:137;-1:-1:-1;;1318:150:137;;;;;;;;;;;;;;;;;;1540:10;1208:5453:186;1540:10:137;;1536:179;;-1:-1:-1;;;1828:19:137;;;;1208:5453:186;;;2152:71:137;2287:117;;;;;;;;1208:5453:186;;;;;;;;;;;3046:72:137;;1208:5453:186;;;;;;;2287:117:137;2809:58;;3127:21;1208:5453:186;;;;;;;;;;;742:3801:137;:::o;1208:5453:186:-;-1:-1:-1;;;1208:5453:186;;;;;;;;;;;;1536:179:137;-1:-1:-1;;1604:74:137;;;1691:13;-1:-1:-1;;1691:13:137:o;742:3801::-;-1:-1:-1;;;1670:35:138;742:3801:137;-1:-1:-1;;742:3801:137;1670:35:138;1318:150:137;;;1670:35:138;1318:150:137;;;;;;;;;;;;1540:10;;1536:179;;1828:19;;;1208:5453:186;;;2152:71:137;;;1208:5453:186;;;;;;;;;;;2568:51:137;;2675:70;;;1208:5453:186;3136:12:137;1208:5453:186;3046:72:137;1208:5453:186;3046:72:137;;;;;;2287:117;;;;;;3136:12;:::i;:::-;1208:5453:186;;3497:1:137;1208:5453:186;;3497:1:137;1208:5453:186;;;;;;3516:1:137;3496:21;;;3743:17;;;;:::i;:::-;1208:5453:186;;;;;;;;3732:28:137;;;;:::i;:::-;3801:17;;;;:::i;:::-;1208:5453:186;;;;;;;;3790:28:137;;;;:::i;:::-;3860:17;;;;:::i;:::-;1208:5453:186;;;;;;;;3849:28:137;;;;:::i;:::-;3919:17;;;;:::i;:::-;1208:5453:186;;;;;;;;3908:28:137;;;;:::i;:::-;3978:17;;;;:::i;:::-;1208:5453:186;;;;;;;;4038:17:137;3967:28;;;;:::i;:::-;4038:17;;;:::i;:::-;1208:5453:186;;;;;;;4027:28:137;4502:11;4027:28;;;;;:::i;:::-;2287:117;;2809:58;3127:21;4502:11;:::i;1208:5453:186:-;-1:-1:-1;;;1208:5453:186;;;;;;;;1536:179:137;1574:15;;;;;;;1208:5453:186;;1604:74:137;1691:13;:::o;742:3801::-;-1:-1:-1;;1318:150:137;;;;;;;;;;;;;;;;;1540:10;1208:5453:186;1540:10:137;;1536:179;;-1:-1:-1;;;1670:35:138;1828:19:137;;;1208:5453:186;;;2152:71:137;;;;2287:117;;;;;;;;;1208:5453:186;;;;;1670:35:138;1208:5453:186;;;;;;;;;;;2287:117:137;1670:35:138;2809:58:137;3127:21;1208:5453:186;;;;;;;;;;;742:3801:137;:::o;1536:179::-;-1:-1:-1;;1604:74:137;;;1691:13;-1:-1:-1;;1691:13:137:o;742:3801::-;-1:-1:-1;;;3046:72:137;742:3801;-1:-1:-1;;742:3801:137;3046:72;1318:150;;;3046:72;1318:150;;;;;;;;;;;;1540:10;;1536:179;;1828:19;;;1208:5453:186;;;2152:71:137;;;1208:5453:186;;;;;;;;;;;2568:51:137;;2675:70;;;1208:5453:186;3136:12:137;1208:5453:186;3046:72:137;1208:5453:186;3046:72:137;;;;;;2287:117;;;;;;3136:12;:::i;742:3801::-;-1:-1:-1;;1318:150:137;;;;;;;;;;;;;;;;;;1540:10;1208:5453:186;1540:10:137;;1536:179;;-1:-1:-1;;;3046:72:137;1828:19;;;1208:5453:186;;;2152:71:137;2287:117;;;;;;;;1208:5453:186;;;;;;;;;;-1:-1:-1;;;1208:5453:186;;;;;;;2287:117:137;3046:72;2809:58;3127:21;1208:5453:186;;;;;;;;;;;742:3801:137;:::o;1536:179::-;-1:-1:-1;;1604:74:137;;;1691:13;-1:-1:-1;;1691:13:137:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "estimateRarePrice(address,uint128)": "442471f0",
    "initialize(address)": "c4d66de8",
    "rewardSwap(address,uint256,uint128)": "94a5a29d"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CannotSwapRareForRare\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientFunds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ParameterValueTooLow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RarePriceTooLow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsupportedERC20Token\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_msgSender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_rareIn\",\"type\":\"uint256\"}],\"name\":\"RewardAccumulator\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"_rareAmountIn\",\"type\":\"uint128\"}],\"name\":\"estimateRarePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingPool\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"_rareIn\",\"type\":\"uint128\"}],\"name\":\"rewardSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"charlescrain\",\"details\":\"It is one base user per contract. This is the implementation contract for a beacon proxy.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"estimateRarePrice(address,uint128)\":{\"params\":{\"_rareAmountIn\":\"uint128 amount of RARE to trade for the _tokenOut.\",\"_tokenOut\":\"Address of the ERC20 token to be swapped for.\"},\"returns\":{\"_0\":\"uint256 amount of _tokenOut for the _rareAmountIn.\"}},\"rewardSwap(address,uint256,uint128)\":{\"params\":{\"_minAmountOut\":\"Min amount one is willing to receive for the _rareIn.\",\"_rareIn\":\"The amount of RARE one is looking to trade.\",\"_tokenOut\":\"Address of the ERC20 to pay out with. If null address, then uses ETH.\"}}},\"title\":\"RewardAccumulator\",\"version\":1},\"userdoc\":{\"errors\":{\"CannotSwapRareForRare()\":[{\"notice\":\"Error emitted via {rewardSwap} if _tokenOut is the $RARE address.\"}],\"InsufficientFunds()\":[{\"notice\":\"Error emitted via {rewardSwap} if reward swap doesn't have enough funds to perform the swap.\"}],\"ParameterValueTooLow()\":[{\"notice\":\"Error emitted when a parameter is too low.\"}],\"RarePriceTooLow()\":[{\"notice\":\"Error emitted via {rewardSwap} if the rare price is too low to handle the _minAmountOut requirement.\"}],\"Unauthorized()\":[{\"notice\":\"Error emitted when user doesnt meet the criteria for call.\"}],\"UnsupportedERC20Token()\":[{\"notice\":\"Emitted when an unsupported ERC20 token for reward swapping.\"}]},\"kind\":\"user\",\"methods\":{\"estimateRarePrice(address,uint128)\":{\"notice\":\"Estimate the discounted $RARE price for a given token.\"},\"rewardSwap(address,uint256,uint128)\":{\"notice\":\"Swap RARE for a discounted price on tokens stored\"}},\"notice\":\"The reward accumulator accumulates rewards and allows for swapping of ETH or ERC20 tokens in exchange for RARE.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/staking/reward/RewardAccumulator.sol\":\"RewardAccumulator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/buffer/=lib/buffer/\",\":@ensdomains/ens-contracts/=lib/ens-contracts/contracts/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@uniswap/v3-core/=lib/v3-core/contracts/\",\":@uniswap/v3-core/contracts/=lib/v3-core/contracts/\",\":@uniswap/v3-periphery/=lib/v3-periphery/contracts/\",\":arachnid/solidity-stringutils/=lib/solidity-stringutils/\",\":ds-test/=lib/ds-test/src/\",\":ensdomains/ens-contracts/=lib/ensdomains/ens-contracts/contracts/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":rareprotocol/assets/=lib/assets/src/\",\":rareprotocol/aux/=src/\",\":royalty-guard/=lib/royalty-guard/src/royalty-guard/\",\":royalty-registry-solidity/=lib/royalty-registry-solidity/contracts/\",\":royalty-registry/=lib/royalty-registry-solidity/contracts/\",\":solmate/=lib/solmate/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC20Upgradeable.sol\":{\"keccak256\":\"0xe73087c5001a37cf7186b3709377c7ceb01a0d38fb908723d1464cea66b4958c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b835a1929ca2c7c978085e58f08f48855df8a82ef6a426ac71393cf032ea0fc5\",\"dweb:/ipfs/QmUMXRN9g8u9wm63wc7PMaSs7oG2nqnM1VVvktaWkvF68v\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025\",\"dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45\",\"dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0\",\"dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x8a63ea9ec07788740e51046ca14c61f411aedb901e89749c9d55fa56ed43086a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3035ae3f172ed9e172e1ba4d83bdc70279f63be51ce9218c530132def66ff577\",\"dweb:/ipfs/QmTQ3zfC3YUNeY3KUVFiHgTWDuxfmcEMgpGC6HMoTpgZJL\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xa6dfb97ce947b7c846b054ee7d45d12383359778f4f3743654ae0a34fa421b26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b97e7e5a77ea47c08ba422291df887eba76c80982f52a6e94a30106e9377a94f\",\"dweb:/ipfs/Qme7N2XRC7mcDxB8wZxNWPk6T8S2qsnmhAqXeUj4CNvsGD\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]},\"lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"lib/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0xaa9d8894cfc7826e4d1abacb026b022ef4ff07569037b8796474d43257fb1f19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d4defb32c4331c11a78f235cc5a844c67036221eb9b7fdd5ef81ea024b1c05b\",\"dweb:/ipfs/QmRX1y6Wsg8eyAvTcDynRBvH65cFt7B2DH2Ux92C12m588\"]},\"lib/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0x681ad959f8a575271b01dbde85e2a61f41eddd3247da3f8bc59d948446975347\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://2347b5b5258d7a8afc15d725ef2b2193751a073cf6180ec1359292729f454a97\",\"dweb:/ipfs/QmTvqAQpCQMZ6wNVAN4CWXaaqZv9zc2vNfXHsaLG5Mmdv2\"]},\"lib/v3-periphery/contracts/libraries/OracleLibrary.sol\":{\"keccak256\":\"0x7845d46168720f378aeb0178ff8198e2cbbedae7eb9aaf9cee6abaa80d0b618a\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1a48a2a2e96a9ee41d73e17965926ae90f33a3219e6f98c065b3f65d7a404313\",\"dweb:/ipfs/QmY5WEYcNxPNLhcbAangLyqkuCEtQhT8dmuNBKouxBUXkR\"]},\"src/staking/registry/IRareStakingRegistry.sol\":{\"keccak256\":\"0x26458c277ad3b3280dbedd7dbfdfbaa8d2af5f6180959ef732cbcec78b6c2924\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5ba0ab87bedec5547531b79c123233dfcbdf9062a860845d242ae518e6ff8d6\",\"dweb:/ipfs/QmT4kZV7MjKwevN2ABFRD7tNnXRkUxJqNKyrXxthfWC5mR\"]},\"src/staking/reward/IRewardAccumulator.sol\":{\"keccak256\":\"0xd045a4bade6d3034e6b59d4219c04a9b15cb4be6d1c7ae71c7a9a9c9a3300f42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76f423cea72076f7646123d43a6b8b580e7a0b4909fa1d9327fd93e691f0aa6d\",\"dweb:/ipfs/QmcoLTHrNrAQfuL3JtEiuceYvhYb9T9w3EqT9XKmRneTrD\"]},\"src/staking/reward/RewardAccumulator.sol\":{\"keccak256\":\"0x72839958118a7e91bb64718e2ee73f8a104d9b37f071f6660605dbeeb3ee703c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be08ec06eab8d632a70cea1d4d5ab52faf29b5d76f81a5d139202b64a6b1c474\",\"dweb:/ipfs/QmZNz9pNGGGLydVMqh2vH1F3JRUpfWg37W9Aba2pBya41H\"]},\"src/staking/token/IRarityPool.sol\":{\"keccak256\":\"0x8a1c433510ef5db8f4a8b2b298c6618a91e974f1ea6c280967c1d3c710e3794b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ade4d1308318773489621961a1b6e2ed76a0c8ed0686225e75100f73df91f14\",\"dweb:/ipfs/Qma1AxmUyfM8CbRN6MnWW6BVpYE9iByWQygCDvG3RunbqS\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.18+commit.87f61d96"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CannotSwapRareForRare"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientFunds"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ParameterValueTooLow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "RarePriceTooLow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Unauthorized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnsupportedERC20Token"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_msgSender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_tokenOut",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_amountOut",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_rareIn",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardAccumulator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_tokenOut",
              "type": "address"
            },
            {
              "internalType": "uint128",
              "name": "_rareAmountIn",
              "type": "uint128"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "estimateRarePrice",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_stakingPool",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_tokenOut",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_minAmountOut",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "_rareIn",
              "type": "uint128"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "rewardSwap"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "estimateRarePrice(address,uint128)": {
            "params": {
              "_rareAmountIn": "uint128 amount of RARE to trade for the _tokenOut.",
              "_tokenOut": "Address of the ERC20 token to be swapped for."
            },
            "returns": {
              "_0": "uint256 amount of _tokenOut for the _rareAmountIn."
            }
          },
          "rewardSwap(address,uint256,uint128)": {
            "params": {
              "_minAmountOut": "Min amount one is willing to receive for the _rareIn.",
              "_rareIn": "The amount of RARE one is looking to trade.",
              "_tokenOut": "Address of the ERC20 to pay out with. If null address, then uses ETH."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "estimateRarePrice(address,uint128)": {
            "notice": "Estimate the discounted $RARE price for a given token."
          },
          "rewardSwap(address,uint256,uint128)": {
            "notice": "Swap RARE for a discounted price on tokens stored"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ensdomains/buffer/=lib/buffer/",
        "@ensdomains/ens-contracts/=lib/ens-contracts/contracts/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@uniswap/v3-core/=lib/v3-core/contracts/",
        "@uniswap/v3-core/contracts/=lib/v3-core/contracts/",
        "@uniswap/v3-periphery/=lib/v3-periphery/contracts/",
        "arachnid/solidity-stringutils/=lib/solidity-stringutils/",
        "ds-test/=lib/ds-test/src/",
        "ensdomains/ens-contracts/=lib/ensdomains/ens-contracts/contracts/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        "rareprotocol/assets/=lib/assets/src/",
        "rareprotocol/aux/=src/",
        "royalty-guard/=lib/royalty-guard/src/royalty-guard/",
        "royalty-registry-solidity/=lib/royalty-registry-solidity/contracts/",
        "royalty-registry/=lib/royalty-registry-solidity/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/staking/reward/RewardAccumulator.sol": "RewardAccumulator"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC20Upgradeable.sol": {
        "keccak256": "0xe73087c5001a37cf7186b3709377c7ceb01a0d38fb908723d1464cea66b4958c",
        "urls": [
          "bzz-raw://b835a1929ca2c7c978085e58f08f48855df8a82ef6a426ac71393cf032ea0fc5",
          "dweb:/ipfs/QmUMXRN9g8u9wm63wc7PMaSs7oG2nqnM1VVvktaWkvF68v"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0",
        "urls": [
          "bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025",
          "dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f",
        "urls": [
          "bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f",
          "dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol": {
        "keccak256": "0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45",
        "urls": [
          "bzz-raw://2900536cdadec954ced8789a9d1ed4b5e640029e1424e91fd5b88026486f4d45",
          "dweb:/ipfs/QmUMUX7CuYoiHvFkhifqtXGaciw2wnm4t9sAoPzETZ3Gbq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0",
        "urls": [
          "bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1",
          "dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x35e258421ae206f3db37281cea70871b4c3553914734aa76139a41af60ac1abb",
        "urls": [
          "bzz-raw://2ef94b6bc4ee356db612a1849c615f7dd4b15542d6c8584c86bb9243a7913cf0",
          "dweb:/ipfs/QmaxFj5NFpAjjitZtHPNS9PPtCuBATaRz9ktDDRCQCQ83y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x8a63ea9ec07788740e51046ca14c61f411aedb901e89749c9d55fa56ed43086a",
        "urls": [
          "bzz-raw://3035ae3f172ed9e172e1ba4d83bdc70279f63be51ce9218c530132def66ff577",
          "dweb:/ipfs/QmTQ3zfC3YUNeY3KUVFiHgTWDuxfmcEMgpGC6HMoTpgZJL"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xa6dfb97ce947b7c846b054ee7d45d12383359778f4f3743654ae0a34fa421b26",
        "urls": [
          "bzz-raw://b97e7e5a77ea47c08ba422291df887eba76c80982f52a6e94a30106e9377a94f",
          "dweb:/ipfs/Qme7N2XRC7mcDxB8wZxNWPk6T8S2qsnmhAqXeUj4CNvsGD"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/v3-core/contracts/interfaces/IUniswapV3Factory.sol": {
        "keccak256": "0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489",
        "urls": [
          "bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2",
          "dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
        "keccak256": "0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1",
        "urls": [
          "bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5",
          "dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
        "keccak256": "0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634",
        "urls": [
          "bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5",
          "dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
        "keccak256": "0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5",
        "urls": [
          "bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7",
          "dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
        "keccak256": "0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd",
        "urls": [
          "bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03",
          "dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
        "keccak256": "0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7",
        "urls": [
          "bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047",
          "dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
        "keccak256": "0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235",
        "urls": [
          "bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735",
          "dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
        "keccak256": "0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f",
        "urls": [
          "bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f",
          "dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-core/contracts/libraries/FullMath.sol": {
        "keccak256": "0xaa9d8894cfc7826e4d1abacb026b022ef4ff07569037b8796474d43257fb1f19",
        "urls": [
          "bzz-raw://3d4defb32c4331c11a78f235cc5a844c67036221eb9b7fdd5ef81ea024b1c05b",
          "dweb:/ipfs/QmRX1y6Wsg8eyAvTcDynRBvH65cFt7B2DH2Ux92C12m588"
        ],
        "license": "MIT"
      },
      "lib/v3-core/contracts/libraries/TickMath.sol": {
        "keccak256": "0x681ad959f8a575271b01dbde85e2a61f41eddd3247da3f8bc59d948446975347",
        "urls": [
          "bzz-raw://2347b5b5258d7a8afc15d725ef2b2193751a073cf6180ec1359292729f454a97",
          "dweb:/ipfs/QmTvqAQpCQMZ6wNVAN4CWXaaqZv9zc2vNfXHsaLG5Mmdv2"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v3-periphery/contracts/libraries/OracleLibrary.sol": {
        "keccak256": "0x7845d46168720f378aeb0178ff8198e2cbbedae7eb9aaf9cee6abaa80d0b618a",
        "urls": [
          "bzz-raw://1a48a2a2e96a9ee41d73e17965926ae90f33a3219e6f98c065b3f65d7a404313",
          "dweb:/ipfs/QmY5WEYcNxPNLhcbAangLyqkuCEtQhT8dmuNBKouxBUXkR"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/staking/registry/IRareStakingRegistry.sol": {
        "keccak256": "0x26458c277ad3b3280dbedd7dbfdfbaa8d2af5f6180959ef732cbcec78b6c2924",
        "urls": [
          "bzz-raw://e5ba0ab87bedec5547531b79c123233dfcbdf9062a860845d242ae518e6ff8d6",
          "dweb:/ipfs/QmT4kZV7MjKwevN2ABFRD7tNnXRkUxJqNKyrXxthfWC5mR"
        ],
        "license": "MIT"
      },
      "src/staking/reward/IRewardAccumulator.sol": {
        "keccak256": "0xd045a4bade6d3034e6b59d4219c04a9b15cb4be6d1c7ae71c7a9a9c9a3300f42",
        "urls": [
          "bzz-raw://76f423cea72076f7646123d43a6b8b580e7a0b4909fa1d9327fd93e691f0aa6d",
          "dweb:/ipfs/QmcoLTHrNrAQfuL3JtEiuceYvhYb9T9w3EqT9XKmRneTrD"
        ],
        "license": "MIT"
      },
      "src/staking/reward/RewardAccumulator.sol": {
        "keccak256": "0x72839958118a7e91bb64718e2ee73f8a104d9b37f071f6660605dbeeb3ee703c",
        "urls": [
          "bzz-raw://be08ec06eab8d632a70cea1d4d5ab52faf29b5d76f81a5d139202b64a6b1c474",
          "dweb:/ipfs/QmZNz9pNGGGLydVMqh2vH1F3JRUpfWg37W9Aba2pBya41H"
        ],
        "license": "MIT"
      },
      "src/staking/token/IRarityPool.sol": {
        "keccak256": "0x8a1c433510ef5db8f4a8b2b298c6618a91e974f1ea6c280967c1d3c710e3794b",
        "urls": [
          "bzz-raw://8ade4d1308318773489621961a1b6e2ed76a0c8ed0686225e75100f73df91f14",
          "dweb:/ipfs/Qma1AxmUyfM8CbRN6MnWW6BVpYE9iByWQygCDvG3RunbqS"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/staking/reward/RewardAccumulator.sol",
    "id": 67088,
    "exportedSymbols": {
      "Address": [
        42817
      ],
      "FullMath": [
        51995
      ],
      "IERC20": [
        40962
      ],
      "IRareStakingRegistry": [
        65219
      ],
      "IRarityPool": [
        67326
      ],
      "IRewardAccumulator": [
        66620
      ],
      "IUniswapV3Factory": [
        51372
      ],
      "IUniswapV3Pool": [
        51394
      ],
      "IUniswapV3PoolActions": [
        51490
      ],
      "IUniswapV3PoolDerivedState": [
        51521
      ],
      "IUniswapV3PoolEvents": [
        51640
      ],
      "IUniswapV3PoolImmutables": [
        51680
      ],
      "IUniswapV3PoolOwnerActions": [
        51706
      ],
      "IUniswapV3PoolState": [
        51814
      ],
      "Initializable": [
        31709
      ],
      "OracleLibrary": [
        53135
      ],
      "ReentrancyGuardUpgradeable": [
        32056
      ],
      "RewardAccumulator": [
        67087
      ],
      "SafeCast": [
        45911
      ],
      "SafeERC20": [
        41399
      ],
      "TickMath": [
        52533
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:6630:186",
    "nodes": [
      {
        "id": 66622,
        "nodeType": "PragmaDirective",
        "src": "32:23:186",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".18"
        ]
      },
      {
        "id": 66624,
        "nodeType": "ImportDirective",
        "src": "57:81:186",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "openzeppelin-contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 67088,
        "sourceUnit": 41400,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66623,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41399,
              "src": "65:9:186",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66626,
        "nodeType": "ImportDirective",
        "src": "139:118:186",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "file": "openzeppelin-contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 67088,
        "sourceUnit": 32057,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66625,
              "name": "ReentrancyGuardUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32056,
              "src": "147:26:186",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66628,
        "nodeType": "ImportDirective",
        "src": "258:68:186",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol",
        "file": "openzeppelin-contracts/interfaces/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 67088,
        "sourceUnit": 39676,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66627,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40962,
              "src": "266:6:186",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66630,
        "nodeType": "ImportDirective",
        "src": "327:65:186",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "file": "openzeppelin-contracts/utils/Address.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 67088,
        "sourceUnit": 42818,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66629,
              "name": "Address",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42817,
              "src": "335:7:186",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66632,
        "nodeType": "ImportDirective",
        "src": "393:72:186",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol",
        "file": "openzeppelin-contracts/utils/math/SafeCast.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 67088,
        "sourceUnit": 45912,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66631,
              "name": "SafeCast",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45911,
              "src": "401:8:186",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66634,
        "nodeType": "ImportDirective",
        "src": "466:95:186",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "file": "openzeppelin-contracts-upgradeable/proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 67088,
        "sourceUnit": 31710,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66633,
              "name": "Initializable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31709,
              "src": "474:13:186",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66635,
        "nodeType": "ImportDirective",
        "src": "562:59:186",
        "nodes": [],
        "absolutePath": "lib/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
        "file": "@uniswap/v3-core/interfaces/IUniswapV3Factory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 67088,
        "sourceUnit": 51373,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 66636,
        "nodeType": "ImportDirective",
        "src": "622:56:186",
        "nodes": [],
        "absolutePath": "lib/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
        "file": "@uniswap/v3-core/interfaces/IUniswapV3Pool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 67088,
        "sourceUnit": 51395,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 66637,
        "nodeType": "ImportDirective",
        "src": "679:59:186",
        "nodes": [],
        "absolutePath": "lib/v3-periphery/contracts/libraries/OracleLibrary.sol",
        "file": "@uniswap/v3-periphery/libraries/OracleLibrary.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 67088,
        "sourceUnit": 53136,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 66639,
        "nodeType": "ImportDirective",
        "src": "740:60:186",
        "nodes": [],
        "absolutePath": "src/staking/reward/IRewardAccumulator.sol",
        "file": "./IRewardAccumulator.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 67088,
        "sourceUnit": 66621,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66638,
              "name": "IRewardAccumulator",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66620,
              "src": "748:18:186",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66641,
        "nodeType": "ImportDirective",
        "src": "801:53:186",
        "nodes": [],
        "absolutePath": "src/staking/token/IRarityPool.sol",
        "file": "../token/IRarityPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 67088,
        "sourceUnit": 67327,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66640,
              "name": "IRarityPool",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 67326,
              "src": "809:11:186",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66643,
        "nodeType": "ImportDirective",
        "src": "855:74:186",
        "nodes": [],
        "absolutePath": "src/staking/registry/IRareStakingRegistry.sol",
        "file": "../registry/IRareStakingRegistry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 67088,
        "sourceUnit": 65220,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66642,
              "name": "IRareStakingRegistry",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 65219,
              "src": "863:20:186",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 67087,
        "nodeType": "ContractDefinition",
        "src": "1208:5453:186",
        "nodes": [
          {
            "id": 66651,
            "nodeType": "UsingForDirective",
            "src": "1289:27:186",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 66649,
              "name": "SafeCast",
              "nameLocations": [
                "1295:8:186"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45911,
              "src": "1295:8:186"
            },
            "typeName": {
              "id": 66650,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1308:7:186",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 66654,
            "nodeType": "UsingForDirective",
            "src": "1319:27:186",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 66652,
              "name": "SafeCast",
              "nameLocations": [
                "1325:8:186"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45911,
              "src": "1325:8:186"
            },
            "typeName": {
              "id": 66653,
              "name": "uint128",
              "nodeType": "ElementaryTypeName",
              "src": "1338:7:186",
              "typeDescriptions": {
                "typeIdentifier": "t_uint128",
                "typeString": "uint128"
              }
            }
          },
          {
            "id": 66657,
            "nodeType": "VariableDeclaration",
            "src": "1592:31:186",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "stakingPool",
            "nameLocation": "1612:11:186",
            "scope": 67087,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IRarityPool_$67326",
              "typeString": "contract IRarityPool"
            },
            "typeName": {
              "id": 66656,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 66655,
                "name": "IRarityPool",
                "nameLocations": [
                  "1592:11:186"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 67326,
                "src": "1592:11:186"
              },
              "referencedDeclaration": 67326,
              "src": "1592:11:186",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IRarityPool_$67326",
                "typeString": "contract IRarityPool"
              }
            },
            "visibility": "private"
          },
          {
            "id": 66664,
            "nodeType": "FunctionDefinition",
            "src": "1828:47:186",
            "nodes": [],
            "body": {
              "id": 66663,
              "nodeType": "Block",
              "src": "1842:33:186",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 66660,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31690,
                      "src": "1848:20:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 66661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1848:22:186",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66662,
                  "nodeType": "ExpressionStatement",
                  "src": "1848:22:186"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 66658,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1839:2:186"
            },
            "returnParameters": {
              "id": 66659,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1842:0:186"
            },
            "scope": 67087,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 66678,
            "nodeType": "FunctionDefinition",
            "src": "2079:113:186",
            "nodes": [],
            "body": {
              "id": 66677,
              "nodeType": "Block",
              "src": "2142:50:186",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 66675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 66671,
                      "name": "stakingPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66657,
                      "src": "2148:11:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRarityPool_$67326",
                        "typeString": "contract IRarityPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 66673,
                          "name": "_stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66666,
                          "src": "2174:12:186",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 66672,
                        "name": "IRarityPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67326,
                        "src": "2162:11:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IRarityPool_$67326_$",
                          "typeString": "type(contract IRarityPool)"
                        }
                      },
                      "id": 66674,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2162:25:186",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRarityPool_$67326",
                        "typeString": "contract IRarityPool"
                      }
                    },
                    "src": "2148:39:186",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRarityPool_$67326",
                      "typeString": "contract IRarityPool"
                    }
                  },
                  "id": 66676,
                  "nodeType": "ExpressionStatement",
                  "src": "2148:39:186"
                }
              ]
            },
            "baseFunctions": [
              66599
            ],
            "functionSelector": "c4d66de8",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 66669,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 66668,
                  "name": "initializer",
                  "nameLocations": [
                    "2130:11:186"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31611,
                  "src": "2130:11:186"
                },
                "nodeType": "ModifierInvocation",
                "src": "2130:11:186"
              }
            ],
            "name": "initialize",
            "nameLocation": "2088:10:186",
            "parameters": {
              "id": 66667,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66666,
                  "mutability": "mutable",
                  "name": "_stakingPool",
                  "nameLocation": "2107:12:186",
                  "nodeType": "VariableDeclaration",
                  "scope": 66678,
                  "src": "2099:20:186",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66665,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2099:7:186",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2098:22:186"
            },
            "returnParameters": {
              "id": 66670,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2142:0:186"
            },
            "scope": 67087,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66863,
            "nodeType": "FunctionDefinition",
            "src": "2440:1631:186",
            "nodes": [],
            "body": {
              "id": 66862,
              "nodeType": "Block",
              "src": "2557:1514:186",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 66692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 66690,
                      "name": "_minAmountOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66683,
                      "src": "2567:13:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 66691,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2584:1:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2567:18:186",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 66696,
                  "nodeType": "IfStatement",
                  "src": "2563:54:186",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 66693,
                        "name": "ParameterValueTooLow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66579,
                        "src": "2594:20:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 66694,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2594:23:186",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 66695,
                    "nodeType": "RevertStatement",
                    "src": "2587:30:186"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    },
                    "id": 66699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 66697,
                      "name": "_rareIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66685,
                      "src": "2627:7:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 66698,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2638:1:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2627:12:186",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 66703,
                  "nodeType": "IfStatement",
                  "src": "2623:48:186",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 66700,
                        "name": "ParameterValueTooLow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66579,
                        "src": "2648:20:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 66701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2648:23:186",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 66702,
                    "nodeType": "RevertStatement",
                    "src": "2641:30:186"
                  }
                },
                {
                  "assignments": [
                    66706
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66706,
                      "mutability": "mutable",
                      "name": "rare",
                      "nameLocation": "2685:4:186",
                      "nodeType": "VariableDeclaration",
                      "scope": 66862,
                      "src": "2678:11:186",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$40962",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 66705,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 66704,
                          "name": "IERC20",
                          "nameLocations": [
                            "2678:6:186"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 40962,
                          "src": "2678:6:186"
                        },
                        "referencedDeclaration": 40962,
                        "src": "2678:6:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$40962",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66716,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 66709,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 66657,
                                    "src": "2720:11:186",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IRarityPool_$67326",
                                      "typeString": "contract IRarityPool"
                                    }
                                  },
                                  "id": 66710,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2732:18:186",
                                  "memberName": "getStakingRegistry",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 67325,
                                  "src": "2720:30:186",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                    "typeString": "function () view external returns (address)"
                                  }
                                },
                                "id": 66711,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2720:32:186",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 66708,
                              "name": "IRareStakingRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65219,
                              "src": "2699:20:186",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IRareStakingRegistry_$65219_$",
                                "typeString": "type(contract IRareStakingRegistry)"
                              }
                            },
                            "id": 66712,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2699:54:186",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRareStakingRegistry_$65219",
                              "typeString": "contract IRareStakingRegistry"
                            }
                          },
                          "id": 66713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2754:14:186",
                          "memberName": "getRareAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 65107,
                          "src": "2699:69:186",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 66714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2699:71:186",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 66707,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40962,
                      "src": "2692:6:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$40962_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 66715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2692:79:186",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$40962",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2678:93:186"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 66725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 66721,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2855:4:186",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RewardAccumulator_$67087",
                                "typeString": "contract RewardAccumulator"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_RewardAccumulator_$67087",
                                "typeString": "contract RewardAccumulator"
                              }
                            ],
                            "id": 66720,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2847:7:186",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 66719,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2847:7:186",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 66722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2847:13:186",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 66717,
                          "name": "rare",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66706,
                          "src": "2832:4:186",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$40962",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 66718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2837:9:186",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40919,
                        "src": "2832:14:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 66723,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2832:29:186",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 66724,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2864:1:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2832:33:186",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 66746,
                  "nodeType": "IfStatement",
                  "src": "2828:142:186",
                  "trueBody": {
                    "id": 66745,
                    "nodeType": "Block",
                    "src": "2867:103:186",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 66730,
                                  "name": "rare",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 66706,
                                  "src": "2905:4:186",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$40962",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$40962",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 66729,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40962,
                                "src": "2898:6:186",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$40962_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 66731,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2898:12:186",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$40962",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 66734,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 66657,
                                  "src": "2919:11:186",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IRarityPool_$67326",
                                    "typeString": "contract IRarityPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IRarityPool_$67326",
                                    "typeString": "contract IRarityPool"
                                  }
                                ],
                                "id": 66733,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2911:7:186",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 66732,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2911:7:186",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 66735,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2911:20:186",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 66740,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "2956:4:186",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_RewardAccumulator_$67087",
                                        "typeString": "contract RewardAccumulator"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_RewardAccumulator_$67087",
                                        "typeString": "contract RewardAccumulator"
                                      }
                                    ],
                                    "id": 66739,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2948:7:186",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 66738,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2948:7:186",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 66741,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2948:13:186",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 66736,
                                  "name": "rare",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 66706,
                                  "src": "2933:4:186",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$40962",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 66737,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2938:9:186",
                                "memberName": "balanceOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 40919,
                                "src": "2933:14:186",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view external returns (uint256)"
                                }
                              },
                              "id": 66742,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2933:29:186",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$40962",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 66726,
                              "name": "SafeERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41399,
                              "src": "2875:9:186",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SafeERC20_$41399_$",
                                "typeString": "type(library SafeERC20)"
                              }
                            },
                            "id": 66728,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2885:12:186",
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41056,
                            "src": "2875:22:186",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$40962_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 66743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2875:88:186",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 66744,
                        "nodeType": "ExpressionStatement",
                        "src": "2875:88:186"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 66760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 66752,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 66747,
                        "name": "_tokenOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66681,
                        "src": "3008:9:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 66750,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3029:1:186",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 66749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3021:7:186",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 66748,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3021:7:186",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 66751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3021:10:186",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3008:23:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 66759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 66755,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "3043:4:186",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_RewardAccumulator_$67087",
                                "typeString": "contract RewardAccumulator"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_RewardAccumulator_$67087",
                                "typeString": "contract RewardAccumulator"
                              }
                            ],
                            "id": 66754,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3035:7:186",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 66753,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3035:7:186",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 66756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3035:13:186",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 66757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3049:7:186",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "3035:21:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 66758,
                        "name": "_minAmountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66683,
                        "src": "3059:13:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3035:37:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3008:64:186",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 66765,
                  "nodeType": "IfStatement",
                  "src": "3004:111:186",
                  "trueBody": {
                    "id": 66764,
                    "nodeType": "Block",
                    "src": "3074:41:186",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 66761,
                            "name": "InsufficientFunds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66585,
                            "src": "3089:17:186",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 66762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3089:19:186",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 66763,
                        "nodeType": "RevertStatement",
                        "src": "3082:26:186"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 66783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 66771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 66766,
                        "name": "_tokenOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66681,
                        "src": "3156:9:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 66769,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3177:1:186",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 66768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3169:7:186",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 66767,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3169:7:186",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 66770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3169:10:186",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "3156:23:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 66782,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 66778,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3219:4:186",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_RewardAccumulator_$67087",
                                  "typeString": "contract RewardAccumulator"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_RewardAccumulator_$67087",
                                  "typeString": "contract RewardAccumulator"
                                }
                              ],
                              "id": 66777,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3211:7:186",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 66776,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3211:7:186",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 66779,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3211:13:186",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 66773,
                                "name": "_tokenOut",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 66681,
                                "src": "3190:9:186",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 66772,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40962,
                              "src": "3183:6:186",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$40962_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 66774,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3183:17:186",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$40962",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 66775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3201:9:186",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40919,
                          "src": "3183:27:186",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 66780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3183:42:186",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 66781,
                        "name": "_minAmountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66683,
                        "src": "3228:13:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3183:58:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3156:85:186",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 66788,
                  "nodeType": "IfStatement",
                  "src": "3152:132:186",
                  "trueBody": {
                    "id": 66787,
                    "nodeType": "Block",
                    "src": "3243:41:186",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 66784,
                            "name": "InsufficientFunds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66585,
                            "src": "3258:17:186",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 66785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3258:19:186",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 66786,
                        "nodeType": "RevertStatement",
                        "src": "3251:26:186"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 66794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 66789,
                      "name": "_tokenOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66681,
                      "src": "3327:9:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 66792,
                          "name": "rare",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66706,
                          "src": "3348:4:186",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$40962",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$40962",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 66791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3340:7:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 66790,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3340:7:186",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 66793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3340:13:186",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3327:26:186",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 66799,
                  "nodeType": "IfStatement",
                  "src": "3323:77:186",
                  "trueBody": {
                    "id": 66798,
                    "nodeType": "Block",
                    "src": "3355:45:186",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 66795,
                            "name": "CannotSwapRareForRare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66591,
                            "src": "3370:21:186",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 66796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3370:23:186",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 66797,
                        "nodeType": "RevertStatement",
                        "src": "3363:30:186"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    66801
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66801,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "3440:9:186",
                      "nodeType": "VariableDeclaration",
                      "scope": 66862,
                      "src": "3432:17:186",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66800,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3432:7:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66806,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 66803,
                        "name": "_tokenOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66681,
                        "src": "3470:9:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 66804,
                        "name": "_rareIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66685,
                        "src": "3481:7:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 66802,
                      "name": "estimateRarePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67082,
                      "src": "3452:17:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint128_$returns$_t_uint256_$",
                        "typeString": "function (address,uint128) view returns (uint256)"
                      }
                    },
                    "id": 66805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3452:37:186",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3432:57:186"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 66809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 66807,
                      "name": "amountOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66801,
                      "src": "3568:9:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 66808,
                      "name": "_minAmountOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66683,
                      "src": "3580:13:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3568:25:186",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 66814,
                  "nodeType": "IfStatement",
                  "src": "3564:70:186",
                  "trueBody": {
                    "id": 66813,
                    "nodeType": "Block",
                    "src": "3595:39:186",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 66810,
                            "name": "RarePriceTooLow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66588,
                            "src": "3610:15:186",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 66811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3610:17:186",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 66812,
                        "nodeType": "RevertStatement",
                        "src": "3603:24:186"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 66818,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3715:3:186",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 66819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3719:6:186",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3715:10:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 66820,
                        "name": "_rareIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66685,
                        "src": "3727:7:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 66815,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66657,
                        "src": "3692:11:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRarityPool_$67326",
                          "typeString": "contract IRarityPool"
                        }
                      },
                      "id": 66817,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3704:10:186",
                      "memberName": "addRewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 67188,
                      "src": "3692:22:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 66821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3692:43:186",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66822,
                  "nodeType": "ExpressionStatement",
                  "src": "3692:43:186"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 66828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 66823,
                      "name": "_tokenOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66681,
                      "src": "3782:9:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 66826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3803:1:186",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 66825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3795:7:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 66824,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3795:7:186",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 66827,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3795:10:186",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3782:23:186",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 66852,
                    "nodeType": "Block",
                    "src": "3877:118:186",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 66845,
                                  "name": "_tokenOut",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 66681,
                                  "src": "3954:9:186",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 66844,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40962,
                                "src": "3947:6:186",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$40962_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 66846,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3947:17:186",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$40962",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "expression": {
                                "id": 66847,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3966:3:186",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 66848,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3970:6:186",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3966:10:186",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 66849,
                              "name": "amountOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66801,
                              "src": "3978:9:186",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$40962",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 66841,
                              "name": "SafeERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41399,
                              "src": "3924:9:186",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SafeERC20_$41399_$",
                                "typeString": "type(library SafeERC20)"
                              }
                            },
                            "id": 66843,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3934:12:186",
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41056,
                            "src": "3924:22:186",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$40962_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 66850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3924:64:186",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 66851,
                        "nodeType": "ExpressionStatement",
                        "src": "3924:64:186"
                      }
                    ]
                  },
                  "id": 66853,
                  "nodeType": "IfStatement",
                  "src": "3778:217:186",
                  "trueBody": {
                    "id": 66840,
                    "nodeType": "Block",
                    "src": "3807:64:186",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 66834,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "3841:3:186",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 66835,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3845:6:186",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "3841:10:186",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 66833,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3833:8:186",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 66832,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3833:8:186",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 66836,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3833:19:186",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 66837,
                              "name": "amountOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66801,
                              "src": "3854:9:186",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 66829,
                              "name": "Address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42817,
                              "src": "3815:7:186",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Address_$42817_$",
                                "typeString": "type(library Address)"
                              }
                            },
                            "id": 66831,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3823:9:186",
                            "memberName": "sendValue",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 42539,
                            "src": "3815:17:186",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                              "typeString": "function (address payable,uint256)"
                            }
                          },
                          "id": 66838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3815:49:186",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 66839,
                        "nodeType": "ExpressionStatement",
                        "src": "3815:49:186"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 66855,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4024:3:186",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 66856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4028:6:186",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4024:10:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 66857,
                        "name": "_tokenOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66681,
                        "src": "4036:9:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 66858,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66801,
                        "src": "4047:9:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 66859,
                        "name": "_rareIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66685,
                        "src": "4058:7:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 66854,
                      "name": "RewardAccumulator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66576,
                      "src": "4006:17:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 66860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4006:60:186",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66861,
                  "nodeType": "EmitStatement",
                  "src": "4001:65:186"
                }
              ]
            },
            "baseFunctions": [
              66609
            ],
            "documentation": {
              "id": 66679,
              "nodeType": "StructuredDocumentation",
              "src": "2403:34:186",
              "text": "@inheritdoc IRewardAccumulator"
            },
            "functionSelector": "94a5a29d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 66688,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 66687,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "2544:12:186"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32016,
                  "src": "2544:12:186"
                },
                "nodeType": "ModifierInvocation",
                "src": "2544:12:186"
              }
            ],
            "name": "rewardSwap",
            "nameLocation": "2449:10:186",
            "parameters": {
              "id": 66686,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66681,
                  "mutability": "mutable",
                  "name": "_tokenOut",
                  "nameLocation": "2473:9:186",
                  "nodeType": "VariableDeclaration",
                  "scope": 66863,
                  "src": "2465:17:186",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66680,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2465:7:186",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66683,
                  "mutability": "mutable",
                  "name": "_minAmountOut",
                  "nameLocation": "2496:13:186",
                  "nodeType": "VariableDeclaration",
                  "scope": 66863,
                  "src": "2488:21:186",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66682,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2488:7:186",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66685,
                  "mutability": "mutable",
                  "name": "_rareIn",
                  "nameLocation": "2523:7:186",
                  "nodeType": "VariableDeclaration",
                  "scope": 66863,
                  "src": "2515:15:186",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 66684,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "2515:7:186",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2459:75:186"
            },
            "returnParameters": {
              "id": 66689,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2557:0:186"
            },
            "scope": 67087,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67082,
            "nodeType": "FunctionDefinition",
            "src": "4327:2106:186",
            "nodes": [],
            "body": {
              "id": 67081,
              "nodeType": "Block",
              "src": "4426:2007:186",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    66875
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66875,
                      "mutability": "mutable",
                      "name": "stakingRegistry",
                      "nameLocation": "4453:15:186",
                      "nodeType": "VariableDeclaration",
                      "scope": 67081,
                      "src": "4432:36:186",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IRareStakingRegistry_$65219",
                        "typeString": "contract IRareStakingRegistry"
                      },
                      "typeName": {
                        "id": 66874,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 66873,
                          "name": "IRareStakingRegistry",
                          "nameLocations": [
                            "4432:20:186"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 65219,
                          "src": "4432:20:186"
                        },
                        "referencedDeclaration": 65219,
                        "src": "4432:20:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRareStakingRegistry_$65219",
                          "typeString": "contract IRareStakingRegistry"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66881,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 66877,
                            "name": "stakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66657,
                            "src": "4492:11:186",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRarityPool_$67326",
                              "typeString": "contract IRarityPool"
                            }
                          },
                          "id": 66878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4504:18:186",
                          "memberName": "getStakingRegistry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 67325,
                          "src": "4492:30:186",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 66879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4492:32:186",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 66876,
                      "name": "IRareStakingRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65219,
                      "src": "4471:20:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IRareStakingRegistry_$65219_$",
                        "typeString": "type(contract IRareStakingRegistry)"
                      }
                    },
                    "id": 66880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4471:54:186",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRareStakingRegistry_$65219",
                      "typeString": "contract IRareStakingRegistry"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4432:93:186"
                },
                {
                  "assignments": [
                    66883
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66883,
                      "mutability": "mutable",
                      "name": "weth",
                      "nameLocation": "4539:4:186",
                      "nodeType": "VariableDeclaration",
                      "scope": 67081,
                      "src": "4531:12:186",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 66882,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4531:7:186",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66887,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 66884,
                        "name": "stakingRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66875,
                        "src": "4546:15:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRareStakingRegistry_$65219",
                          "typeString": "contract IRareStakingRegistry"
                        }
                      },
                      "id": 66885,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4562:14:186",
                      "memberName": "getWethAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 65113,
                      "src": "4546:30:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 66886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4546:32:186",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4531:47:186"
                },
                {
                  "assignments": [
                    66889
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66889,
                      "mutability": "mutable",
                      "name": "tokenOut",
                      "nameLocation": "4624:8:186",
                      "nodeType": "VariableDeclaration",
                      "scope": 67081,
                      "src": "4616:16:186",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 66888,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4616:7:186",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66899,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 66895,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 66890,
                        "name": "_tokenOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66866,
                        "src": "4635:9:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 66893,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4656:1:186",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 66892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4648:7:186",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 66891,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4648:7:186",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 66894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4648:10:186",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "4635:23:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "id": 66897,
                      "name": "_tokenOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66866,
                      "src": "4668:9:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 66898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "4635:42:186",
                    "trueExpression": {
                      "id": 66896,
                      "name": "weth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66883,
                      "src": "4661:4:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4616:61:186"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 66912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 66908,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 66902,
                            "name": "tokenOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66889,
                            "src": "4812:8:186",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 66900,
                            "name": "stakingRegistry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66875,
                            "src": "4784:15:186",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRareStakingRegistry_$65219",
                              "typeString": "contract IRareStakingRegistry"
                            }
                          },
                          "id": 66901,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4800:11:186",
                          "memberName": "getSwapPool",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 65101,
                          "src": "4784:27:186",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                            "typeString": "function (address) view external returns (address)"
                          }
                        },
                        "id": 66903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4784:37:186",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 66906,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4833:1:186",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 66905,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4825:7:186",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 66904,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4825:7:186",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 66907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4825:10:186",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "4784:51:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 66911,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 66909,
                        "name": "tokenOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66889,
                        "src": "4839:8:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 66910,
                        "name": "weth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66883,
                        "src": "4851:4:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "4839:16:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4784:71:186",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 66917,
                  "nodeType": "IfStatement",
                  "src": "4780:122:186",
                  "trueBody": {
                    "id": 66916,
                    "nodeType": "Block",
                    "src": "4857:45:186",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 66913,
                            "name": "UnsupportedERC20Token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66594,
                            "src": "4872:21:186",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 66914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4872:23:186",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 66915,
                        "nodeType": "RevertStatement",
                        "src": "4865:30:186"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    66919
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66919,
                      "mutability": "mutable",
                      "name": "secondsAgo",
                      "nameLocation": "4915:10:186",
                      "nodeType": "VariableDeclaration",
                      "scope": 67081,
                      "src": "4908:17:186",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 66918,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4908:6:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66921,
                  "initialValue": {
                    "hexValue": "3330",
                    "id": 66920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4928:10:186",
                    "subdenomination": "minutes",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1800_by_1",
                      "typeString": "int_const 1800"
                    },
                    "value": "30"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4908:30:186"
                },
                {
                  "assignments": [
                    66926
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66926,
                      "mutability": "mutable",
                      "name": "secondsAgos",
                      "nameLocation": "4960:11:186",
                      "nodeType": "VariableDeclaration",
                      "scope": 67081,
                      "src": "4944:27:186",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                        "typeString": "uint32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 66924,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4944:6:186",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 66925,
                        "nodeType": "ArrayTypeName",
                        "src": "4944:8:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                          "typeString": "uint32[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66932,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 66930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4987:1:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 66929,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "4974:12:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint32_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint32[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 66927,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4978:6:186",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 66928,
                        "nodeType": "ArrayTypeName",
                        "src": "4978:8:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                          "typeString": "uint32[]"
                        }
                      }
                    },
                    "id": 66931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4974:15:186",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                      "typeString": "uint32[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4944:45:186"
                },
                {
                  "expression": {
                    "id": 66937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 66933,
                        "name": "secondsAgos",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66926,
                        "src": "4995:11:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        }
                      },
                      "id": 66935,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 66934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5007:1:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4995:14:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 66936,
                      "name": "secondsAgo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66919,
                      "src": "5012:10:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "4995:27:186",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 66938,
                  "nodeType": "ExpressionStatement",
                  "src": "4995:27:186"
                },
                {
                  "expression": {
                    "id": 66943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 66939,
                        "name": "secondsAgos",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66926,
                        "src": "5028:11:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        }
                      },
                      "id": 66941,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 66940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5040:1:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5028:14:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 66942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5045:1:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5028:18:186",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 66944,
                  "nodeType": "ExpressionStatement",
                  "src": "5028:18:186"
                },
                {
                  "assignments": [
                    66949,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66949,
                      "mutability": "mutable",
                      "name": "tickCumulatives",
                      "nameLocation": "5116:15:186",
                      "nodeType": "VariableDeclaration",
                      "scope": 67081,
                      "src": "5101:30:186",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
                        "typeString": "int56[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 66947,
                          "name": "int56",
                          "nodeType": "ElementaryTypeName",
                          "src": "5101:5:186",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int56",
                            "typeString": "int56"
                          }
                        },
                        "id": 66948,
                        "nodeType": "ArrayTypeName",
                        "src": "5101:7:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
                          "typeString": "int56[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 66961,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 66959,
                        "name": "secondsAgos",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66926,
                        "src": "5230:11:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 66953,
                                    "name": "stakingRegistry",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 66875,
                                    "src": "5180:15:186",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IRareStakingRegistry_$65219",
                                      "typeString": "contract IRareStakingRegistry"
                                    }
                                  },
                                  "id": 66954,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5196:14:186",
                                  "memberName": "getRareAddress",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 65107,
                                  "src": "5180:30:186",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                    "typeString": "function () view external returns (address)"
                                  }
                                },
                                "id": 66955,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5180:32:186",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 66951,
                                "name": "stakingRegistry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 66875,
                                "src": "5152:15:186",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IRareStakingRegistry_$65219",
                                  "typeString": "contract IRareStakingRegistry"
                                }
                              },
                              "id": 66952,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5168:11:186",
                              "memberName": "getSwapPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 65101,
                              "src": "5152:27:186",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                                "typeString": "function (address) view external returns (address)"
                              }
                            },
                            "id": 66956,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5152:61:186",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 66950,
                          "name": "IUniswapV3Pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51394,
                          "src": "5137:14:186",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$51394_$",
                            "typeString": "type(contract IUniswapV3Pool)"
                          }
                        },
                        "id": 66957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5137:77:186",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$51394",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "id": 66958,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5222:7:186",
                      "memberName": "observe",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51506,
                      "src": "5137:92:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_array$_t_uint32_$dyn_memory_ptr_$returns$_t_array$_t_int56_$dyn_memory_ptr_$_t_array$_t_uint160_$dyn_memory_ptr_$",
                        "typeString": "function (uint32[] memory) view external returns (int56[] memory,uint160[] memory)"
                      }
                    },
                    "id": 66960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5137:105:186",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_int56_$dyn_memory_ptr_$_t_array$_t_uint160_$dyn_memory_ptr_$",
                      "typeString": "tuple(int56[] memory,uint160[] memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5100:142:186"
                },
                {
                  "assignments": [
                    66963
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66963,
                      "mutability": "mutable",
                      "name": "tickCumulativesDelta",
                      "nameLocation": "5303:20:186",
                      "nodeType": "VariableDeclaration",
                      "scope": 67081,
                      "src": "5297:26:186",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int56",
                        "typeString": "int56"
                      },
                      "typeName": {
                        "id": 66962,
                        "name": "int56",
                        "nodeType": "ElementaryTypeName",
                        "src": "5297:5:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int56",
                          "typeString": "int56"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66971,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_int56",
                      "typeString": "int56"
                    },
                    "id": 66970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 66964,
                        "name": "tickCumulatives",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66949,
                        "src": "5326:15:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
                          "typeString": "int56[] memory"
                        }
                      },
                      "id": 66966,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 66965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5342:1:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5326:18:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int56",
                        "typeString": "int56"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 66967,
                        "name": "tickCumulatives",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66949,
                        "src": "5347:15:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
                          "typeString": "int56[] memory"
                        }
                      },
                      "id": 66969,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 66968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5363:1:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5347:18:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int56",
                        "typeString": "int56"
                      }
                    },
                    "src": "5326:39:186",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int56",
                      "typeString": "int56"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5297:68:186"
                },
                {
                  "assignments": [
                    66973
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 66973,
                      "mutability": "mutable",
                      "name": "tick",
                      "nameLocation": "5377:4:186",
                      "nodeType": "VariableDeclaration",
                      "scope": 67081,
                      "src": "5371:10:186",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 66972,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "5371:5:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 66983,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int56",
                          "typeString": "int56"
                        },
                        "id": 66981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 66976,
                          "name": "tickCumulativesDelta",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66963,
                          "src": "5390:20:186",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int56",
                            "typeString": "int56"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 66979,
                              "name": "secondsAgo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66919,
                              "src": "5419:10:186",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 66978,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5413:5:186",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_int32_$",
                              "typeString": "type(int32)"
                            },
                            "typeName": {
                              "id": 66977,
                              "name": "int32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5413:5:186",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 66980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5413:17:186",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int32",
                            "typeString": "int32"
                          }
                        },
                        "src": "5390:40:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int56",
                          "typeString": "int56"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int56",
                          "typeString": "int56"
                        }
                      ],
                      "id": 66975,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5384:5:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_int24_$",
                        "typeString": "type(int24)"
                      },
                      "typeName": {
                        "id": 66974,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "5384:5:186",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 66982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5384:47:186",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5371:60:186"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 66996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_int56",
                        "typeString": "int56"
                      },
                      "id": 66986,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 66984,
                        "name": "tickCumulativesDelta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66963,
                        "src": "5482:20:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int56",
                          "typeString": "int56"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 66985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5505:1:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "5482:24:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_int56",
                            "typeString": "int56"
                          },
                          "id": 66994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_int56",
                              "typeString": "int56"
                            },
                            "id": 66992,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 66987,
                              "name": "tickCumulativesDelta",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66963,
                              "src": "5511:20:186",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int56",
                                "typeString": "int56"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "%",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "id": 66990,
                                  "name": "secondsAgo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 66919,
                                  "src": "5540:10:186",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                ],
                                "id": 66989,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5534:5:186",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_int32_$",
                                  "typeString": "type(int32)"
                                },
                                "typeName": {
                                  "id": 66988,
                                  "name": "int32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5534:5:186",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 66991,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5534:17:186",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_int32",
                                "typeString": "int32"
                              }
                            },
                            "src": "5511:40:186",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int56",
                              "typeString": "int56"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 66993,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5555:1:186",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5511:45:186",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 66995,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5510:47:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5482:75:186",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67001,
                  "nodeType": "IfStatement",
                  "src": "5478:102:186",
                  "trueBody": {
                    "id": 67000,
                    "nodeType": "Block",
                    "src": "5559:21:186",
                    "statements": [
                      {
                        "expression": {
                          "id": 66998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "--",
                          "prefix": false,
                          "src": "5567:6:186",
                          "subExpression": {
                            "id": 66997,
                            "name": "tick",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66973,
                            "src": "5567:4:186",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int24",
                              "typeString": "int24"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_int24",
                            "typeString": "int24"
                          }
                        },
                        "id": 66999,
                        "nodeType": "ExpressionStatement",
                        "src": "5567:6:186"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    67003
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67003,
                      "mutability": "mutable",
                      "name": "ethAmount",
                      "nameLocation": "5638:9:186",
                      "nodeType": "VariableDeclaration",
                      "scope": 67081,
                      "src": "5630:17:186",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 67002,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5630:7:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 67026,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 67025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 67022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "arguments": [
                                  {
                                    "id": 67006,
                                    "name": "tick",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 66973,
                                    "src": "5688:4:186",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int24",
                                      "typeString": "int24"
                                    }
                                  },
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 67007,
                                        "name": "_rareAmountIn",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 66868,
                                        "src": "5694:13:186",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint128",
                                          "typeString": "uint128"
                                        }
                                      },
                                      "id": 67008,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "5708:9:186",
                                      "memberName": "toUint128",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 44773,
                                      "src": "5694:23:186",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$attached_to$_t_uint256_$",
                                        "typeString": "function (uint256) pure returns (uint128)"
                                      }
                                    },
                                    "id": 67009,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5694:25:186",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  },
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 67010,
                                        "name": "stakingRegistry",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 66875,
                                        "src": "5721:15:186",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IRareStakingRegistry_$65219",
                                          "typeString": "contract IRareStakingRegistry"
                                        }
                                      },
                                      "id": 67011,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "5737:14:186",
                                      "memberName": "getRareAddress",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 65107,
                                      "src": "5721:30:186",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                        "typeString": "function () view external returns (address)"
                                      }
                                    },
                                    "id": 67012,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5721:32:186",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 67013,
                                    "name": "weth",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 66883,
                                    "src": "5755:4:186",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_int24",
                                      "typeString": "int24"
                                    },
                                    {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 67004,
                                    "name": "OracleLibrary",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 53135,
                                    "src": "5659:13:186",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_OracleLibrary_$53135_$",
                                      "typeString": "type(library OracleLibrary)"
                                    }
                                  },
                                  "id": 67005,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5673:14:186",
                                  "memberName": "getQuoteAtTick",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 52772,
                                  "src": "5659:28:186",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_int24_$_t_uint128_$_t_address_$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (int24,uint128,address,address) pure returns (uint256)"
                                  }
                                },
                                "id": 67014,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5659:101:186",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 67015,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "5651:115:186",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 67020,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130305f3030",
                                  "id": 67016,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5770:6:186",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10000_by_1",
                                    "typeString": "int_const 10000"
                                  },
                                  "value": "100_00"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 67017,
                                      "name": "stakingRegistry",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 66875,
                                      "src": "5779:15:186",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IRareStakingRegistry_$65219",
                                        "typeString": "contract IRareStakingRegistry"
                                      }
                                    },
                                    "id": 67018,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5795:21:186",
                                    "memberName": "getDiscountPercentage",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 65119,
                                    "src": "5779:37:186",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view external returns (uint256)"
                                    }
                                  },
                                  "id": 67019,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5779:39:186",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5770:48:186",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 67021,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "5769:50:186",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5651:168:186",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 67023,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5650:170:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "3130305f3030",
                      "id": 67024,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5823:6:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "100_00"
                    },
                    "src": "5650:179:186",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5630:199:186"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 67029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 67027,
                      "name": "tokenOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66889,
                      "src": "5914:8:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 67028,
                      "name": "weth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66883,
                      "src": "5926:4:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5914:16:186",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 67033,
                  "nodeType": "IfStatement",
                  "src": "5910:53:186",
                  "trueBody": {
                    "id": 67032,
                    "nodeType": "Block",
                    "src": "5932:31:186",
                    "statements": [
                      {
                        "expression": {
                          "id": 67030,
                          "name": "ethAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67003,
                          "src": "5947:9:186",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 66872,
                        "id": 67031,
                        "nodeType": "Return",
                        "src": "5940:16:186"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    67038,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67038,
                      "mutability": "mutable",
                      "name": "otherTickCumulatives",
                      "nameLocation": "6071:20:186",
                      "nodeType": "VariableDeclaration",
                      "scope": 67081,
                      "src": "6056:35:186",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
                        "typeString": "int56[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 67036,
                          "name": "int56",
                          "nodeType": "ElementaryTypeName",
                          "src": "6056:5:186",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int56",
                            "typeString": "int56"
                          }
                        },
                        "id": 67037,
                        "nodeType": "ArrayTypeName",
                        "src": "6056:7:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
                          "typeString": "int56[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 67048,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 67046,
                        "name": "secondsAgos",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66926,
                        "src": "6159:11:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[] memory"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 67042,
                                "name": "tokenOut",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 66889,
                                "src": "6140:8:186",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 67040,
                                "name": "stakingRegistry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 66875,
                                "src": "6112:15:186",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IRareStakingRegistry_$65219",
                                  "typeString": "contract IRareStakingRegistry"
                                }
                              },
                              "id": 67041,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6128:11:186",
                              "memberName": "getSwapPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 65101,
                              "src": "6112:27:186",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                                "typeString": "function (address) view external returns (address)"
                              }
                            },
                            "id": 67043,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6112:37:186",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 67039,
                          "name": "IUniswapV3Pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51394,
                          "src": "6097:14:186",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$51394_$",
                            "typeString": "type(contract IUniswapV3Pool)"
                          }
                        },
                        "id": 67044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6097:53:186",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV3Pool_$51394",
                          "typeString": "contract IUniswapV3Pool"
                        }
                      },
                      "id": 67045,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6151:7:186",
                      "memberName": "observe",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51506,
                      "src": "6097:61:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_array$_t_uint32_$dyn_memory_ptr_$returns$_t_array$_t_int56_$dyn_memory_ptr_$_t_array$_t_uint160_$dyn_memory_ptr_$",
                        "typeString": "function (uint32[] memory) view external returns (int56[] memory,uint160[] memory)"
                      }
                    },
                    "id": 67047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6097:74:186",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_int56_$dyn_memory_ptr_$_t_array$_t_uint160_$dyn_memory_ptr_$",
                      "typeString": "tuple(int56[] memory,uint160[] memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6055:116:186"
                },
                {
                  "assignments": [
                    67050
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67050,
                      "mutability": "mutable",
                      "name": "otherTickCumulativesDelta",
                      "nameLocation": "6183:25:186",
                      "nodeType": "VariableDeclaration",
                      "scope": 67081,
                      "src": "6177:31:186",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int56",
                        "typeString": "int56"
                      },
                      "typeName": {
                        "id": 67049,
                        "name": "int56",
                        "nodeType": "ElementaryTypeName",
                        "src": "6177:5:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int56",
                          "typeString": "int56"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 67058,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_int56",
                      "typeString": "int56"
                    },
                    "id": 67057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 67051,
                        "name": "otherTickCumulatives",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67038,
                        "src": "6211:20:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
                          "typeString": "int56[] memory"
                        }
                      },
                      "id": 67053,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 67052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6232:1:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6211:23:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int56",
                        "typeString": "int56"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 67054,
                        "name": "otherTickCumulatives",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67038,
                        "src": "6237:20:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
                          "typeString": "int56[] memory"
                        }
                      },
                      "id": 67056,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 67055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6258:1:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6237:23:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int56",
                        "typeString": "int56"
                      }
                    },
                    "src": "6211:49:186",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int56",
                      "typeString": "int56"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6177:83:186"
                },
                {
                  "assignments": [
                    67060
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67060,
                      "mutability": "mutable",
                      "name": "otherTick",
                      "nameLocation": "6272:9:186",
                      "nodeType": "VariableDeclaration",
                      "scope": 67081,
                      "src": "6266:15:186",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int24",
                        "typeString": "int24"
                      },
                      "typeName": {
                        "id": 67059,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "6266:5:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 67070,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int56",
                          "typeString": "int56"
                        },
                        "id": 67068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 67063,
                          "name": "otherTickCumulativesDelta",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67050,
                          "src": "6290:25:186",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int56",
                            "typeString": "int56"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 67066,
                              "name": "secondsAgo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66919,
                              "src": "6324:10:186",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 67065,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6318:5:186",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_int32_$",
                              "typeString": "type(int32)"
                            },
                            "typeName": {
                              "id": 67064,
                              "name": "int32",
                              "nodeType": "ElementaryTypeName",
                              "src": "6318:5:186",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 67067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6318:17:186",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int32",
                            "typeString": "int32"
                          }
                        },
                        "src": "6290:45:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int56",
                          "typeString": "int56"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int56",
                          "typeString": "int56"
                        }
                      ],
                      "id": 67062,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6284:5:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_int24_$",
                        "typeString": "type(int24)"
                      },
                      "typeName": {
                        "id": 67061,
                        "name": "int24",
                        "nodeType": "ElementaryTypeName",
                        "src": "6284:5:186",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 67069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6284:52:186",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int24",
                      "typeString": "int24"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6266:70:186"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 67073,
                        "name": "otherTick",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67060,
                        "src": "6379:9:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 67074,
                            "name": "ethAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67003,
                            "src": "6390:9:186",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 67075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6400:9:186",
                          "memberName": "toUint128",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44773,
                          "src": "6390:19:186",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint128_$attached_to$_t_uint256_$",
                            "typeString": "function (uint256) pure returns (uint128)"
                          }
                        },
                        "id": 67076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6390:21:186",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 67077,
                        "name": "weth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66883,
                        "src": "6413:4:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 67078,
                        "name": "tokenOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66889,
                        "src": "6419:8:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int24",
                          "typeString": "int24"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 67071,
                        "name": "OracleLibrary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53135,
                        "src": "6350:13:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OracleLibrary_$53135_$",
                          "typeString": "type(library OracleLibrary)"
                        }
                      },
                      "id": 67072,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6364:14:186",
                      "memberName": "getQuoteAtTick",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52772,
                      "src": "6350:28:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_int24_$_t_uint128_$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (int24,uint128,address,address) pure returns (uint256)"
                      }
                    },
                    "id": 67079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6350:78:186",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 66872,
                  "id": 67080,
                  "nodeType": "Return",
                  "src": "6343:85:186"
                }
              ]
            },
            "baseFunctions": [
              66619
            ],
            "documentation": {
              "id": 66864,
              "nodeType": "StructuredDocumentation",
              "src": "4290:34:186",
              "text": "@inheritdoc IRewardAccumulator"
            },
            "functionSelector": "442471f0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "estimateRarePrice",
            "nameLocation": "4336:17:186",
            "parameters": {
              "id": 66869,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66866,
                  "mutability": "mutable",
                  "name": "_tokenOut",
                  "nameLocation": "4362:9:186",
                  "nodeType": "VariableDeclaration",
                  "scope": 67082,
                  "src": "4354:17:186",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66865,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4354:7:186",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66868,
                  "mutability": "mutable",
                  "name": "_rareAmountIn",
                  "nameLocation": "4381:13:186",
                  "nodeType": "VariableDeclaration",
                  "scope": 67082,
                  "src": "4373:21:186",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 66867,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "4373:7:186",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4353:42:186"
            },
            "returnParameters": {
              "id": 66872,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66871,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 67082,
                  "src": "4417:7:186",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66870,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4417:7:186",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4416:9:186"
            },
            "scope": 67087,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 67086,
            "nodeType": "FunctionDefinition",
            "src": "6630:29:186",
            "nodes": [],
            "body": {
              "id": 67085,
              "nodeType": "Block",
              "src": "6657:2:186",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 67083,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6637:2:186"
            },
            "returnParameters": {
              "id": 67084,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6657:0:186"
            },
            "scope": 67087,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 66645,
              "name": "IRewardAccumulator",
              "nameLocations": [
                "1238:18:186"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 66620,
              "src": "1238:18:186"
            },
            "id": 66646,
            "nodeType": "InheritanceSpecifier",
            "src": "1238:18:186"
          },
          {
            "baseName": {
              "id": 66647,
              "name": "ReentrancyGuardUpgradeable",
              "nameLocations": [
                "1258:26:186"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 32056,
              "src": "1258:26:186"
            },
            "id": 66648,
            "nodeType": "InheritanceSpecifier",
            "src": "1258:26:186"
          }
        ],
        "canonicalName": "RewardAccumulator",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 66644,
          "nodeType": "StructuredDocumentation",
          "src": "931:277:186",
          "text": "@author charlescrain\n @title RewardAccumulator\n @notice The reward accumulator accumulates rewards and allows for swapping of ETH or ERC20 tokens in exchange for RARE.\n @dev It is one base user per contract. This is the implementation contract for a beacon proxy."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          67087,
          32056,
          31709,
          66620
        ],
        "name": "RewardAccumulator",
        "nameLocation": "1217:17:186",
        "scope": 67088,
        "usedErrors": [
          66579,
          66582,
          66585,
          66588,
          66591,
          66594
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 186
}